{"mappings":"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U,OAAO,KACnB,OAAO,IAAI,OAAO,OAAO,OAAO,CAAC,GAAG;IAEtC,IAAI,UAAU,OAAO,OAAO,OAAO,IAAI,kBAAkB,QACvD,OAAO,IAAI,kBAAkB,QAAQ,SAAU,EAAE;QAC/C,GAAG,OAAO,OAAO,CAAC,GAAG;IACvB;IAEF,OAAO,OAAO,KAAK,CAAC,GAAG;AACzB;AACA,SAAS,UAAU,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ;IAChD,sBAAsB;IACtB,OAAO;IAEP,6DAA6D;IAC7D,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,IAAI,UAAU,OAAO,OAAO,OAAO,IAAI,iBAAiB,QACtD,OAAO,IAAI,iBAAiB,QAAQ,SAAU,EAAE;QAC9C,IAAI,qBAAqB,GAAG;YAC1B,OAAO,WAAW,OAAO,OAAO,MAAM;QACxC;QACA,IAAI,sBAAsB,eAAe,QAAQ;YAC/C,mBAAmB,QAAQ,SAAU,CAAC;gBACpC,WAAW,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;YACvB;YAEA,+BAA+B;YAC/B,eAAe,KAAK,MAAM,gBAAgB;QAC5C;IACF;AAEJ;;;;;A,6C,S;;;;;;;;;;;;;;;;;A;A,kD;A,qD;A,+C;A,mD;A,gD;A,gD;A,4C;A,8C;A,iD;A,yD;A,gD;A,kD;A,kD;A,2D;A,wD;A,qD;A,wD;A,oD;A,0D;A,iD;A,mD;A,mD;A,mE;A,+D;A,uD;A,wD;A,iD;A,yD;A,iD;A,4C;A,6C;A,kD;A,gD;A,+C;A,0C;A,uD;A,iD;A,kD;A,8C;A,gD;A,gD;A,4C;A,iD;A,mD;A,kD;A,kD;A,kD;A,2C;A,4D;A,0C;A,gD;A,2C;A,2C;A,qD;A,0C;A,qD;A,8C;A,sD;A,wC;A,0C;A,uD;A,wD;A,8C;A,2D;A,0D;A,2C;A,gD;A,kD;A,0D;A,mD;A,oD;A,oD;A,uD;A,kD;A,gD;A,8C;A,6C;A,oD;A,kD;A,8C;A,8C;A,6C;A,2C;A,+C;A,8C;A,6C;A,qD;A,2C;A,+C;A,6C;A,kD;A,4C;A,kD;A,kD;A,qD;A,iD;A,mD;A,mD;A,oD;A,2C;A,kD;A,sD;A,kD;A,qD;A,0C;A,kD;A,oD;A,kD;A,oD;A,wD;A,4C;A,qD;A,8C;A,wD;A,6C;A,qD;A,yC;A,yC;A,2C;A,6C;A,6C;A,6C;A,mD;A,iD;A,2C;A,qD;A,qD;A,mD;A,iD;A,0D;A,6C;A,sD;A,wD;A,+C;A,iD;A,kD;A,qD;A,mD;A,mD;A,oD;A,sD;A,oD;A,oD;A,oD;A,+C;A,oD;A,sD;A,iD;A,gD;A,sD;A,sD;A,qD;A,wD;A,qD;A,kD;A,oD;A,mD;A,gD;A,oD;A,sD;A,kD;A,+C;A,iD;A,8C;A,mD;A,+C;A,2C;A,2D;A,sD;A,qD;A,uD;A,oD;A,qD;A,yD;A,qD;A,4C;A,4C;A,8C;A,mD;A,+C;A,qD;A,+C;A,+C;A,gD;A,iD;A,kD;A,wD;A,mD;A,qD;A,mD;A,2D;A,oD;A,wD;A,2D;A,oD;A,oD;A,sD;A,sD;A,sD;A,mD;A,mD;A,yD;A,gD;A,8C;A,sD;A,kD;A,uD;A,oD;A,iD;A,mD;A,2C;A,+C;A,kD;A,wD;A,oD;A,mD;A,uD;A,oD;A,yD;A,qD;A,gD;A,qD;A,gD;A,qD;A,qD;A,kD;A,kD;A,0D;A,+C;A,sD;A,4C;A,kD;A,gD;A,8C;A,0C;A,8C;A,8C;A,0C;A,4C;A,6C;A,+C;A,6C;A,uD;A,mD;A,+C;A,uD;A,uD;A,+C;A,gD;A,sD;A,2C;A,yD;A,uD;A,6D;A,6D;A,2D;A,oD;A,sD;A,oD;A,uD;A,oD;A,qE;A,gD;A,qD;A,kD;A,2C;A,oD;A,wD;A,yC;A,wC;A,sD;A,8C;A,6C;A,4C;A,4C;A,mD;A,kD;A,qD;A,mD;A,kD;A,sD;A,yD;A,sD;A,iD;A,sD;A,sD;A,wD;A,wD;A,mD;A,qD;A,qD;A,0C;A,iD;A,0C;A,+C;A,uD;A,kD;A,0C;A,kD;A,iD;A,sD;A,oD;A,mD;A,gD;A,8C;A,uD;A,qD;A,8C;A,gD;A,+C;A,6C;A,6C;A,2C;A,4C;A,+C;A,iD;A,+C;A,iD;A,+C;A,sD;A,oD;A,gD;A,gD;A,iD;A,kD;A,6C;A,yC;A,gD;A,kD;A,mD;A,iD;A,mD;A,iD;A,6C;A,2D;A,6C;A,2C;A,6C;A,6C;A,4C;A,4C;A,iD;A,oD;A,8C;A,4C;A,6D;A,mD;A,w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Y,MAAM,SAAC,GAAA;YAAQ,OAAA,WAAW,MAAM;QAAjB;IACpD;AACF;AAEM,SAAU,uBAA0B,cAAA;IACxC,OAAO,kBAAkB,mCAAmC;AAC9D;AAEA,SAAe,QAAW,aAAA,EAAiC,UAAA;I,I,iB;I,I,K;I,O,U,I,E,K,G,K,G;Q,I,O;Q,O,Y,I,E,S,E;Y,O,G;gB,K;oB,G,K,K;wB;wB;wB;wB;qB;oBAC/B,kBAAA,cAAA;oB,G,Q;gB,K;oB,O;wB;wB,gB;qB;gB,K;oB,I,C,C,oB,G,Q,C,kB,I,G,O;wB;wB;qB;oBAAT,QAAK,kBAAA;oBACpB,WAAW,KAAK;oBAGhB,IAAI,WAAW,QACb,OAAA;wBAAA;qBAAA;oB,G,Q;gB,K;oB,O;wB;wB;qB;gB,K;oB,O;wB;wB;qB;gB,K;oB,Q,G;oB,M;wB,O;oB;oB,O;wB;wB;qB;gB,K;oB,G,K,K;wB;;wB;wB;qB;oB,I,C,C,qB,C,kB,Q,C,K,gB,M,C,G,O;wB;wB;qB;oB,O;wB;wB,G,K;qB;gB,K;oB,G;oB,G,Q;gB,K;oB,O;wB;wB;qB;gB,K;oB,I,K,M,I;oB,O;wB;qB;gB,K;oB,O;wB;qB;gB,K;oBAGJ,WAAW;oB,O;wB;qB;Y;Q;I;A;A,+D;AChHP,SAAU,gBACd,kBAAA,EACA,SAAA,EACA,IAAA,EACAJ,MAAAA,EACAK,OAAAA;IADA,IAAAL,WAAA,KAAA,GAAAA,SAAA;IACA,IAAAK,YAAA,KAAA,GAAAA,UAAA;IAEA,IAAM,uBAAuB,UAAU,SAAS;QAC9C;QACA,IAAIA,SACF,mBAAmB,IAAI,IAAA,CAAK,SAAS,MAAML;aAE3C,IAAA,CAAK;IAET,GAAGA;IAEH,mBAAmB,IAAI;IAEvB,IAAI,CAACK,SAKH,OAAO;AAEX;A,wD;ACIM,SAAUpO,KAAUqO,QAAAA,EAAyC,OAAA;IACjE,OAAO,QAAQ,SAAC,MAAA,EAAQ,UAAA;QAEtB,IAAI,QAAQ;QAGZ,OAAO,UACL,yBAAyB,YAAY,SAAC,KAAA;YAGpC,WAAW,KAAKA,SAAQ,KAAK,SAAS,OAAO;QAC/C;IAEJ;AACF;A,gE;AC1DQ,IAAA,UAAY,MAAK;AAEzB,SAAS,YAAkB,EAAA,EAA6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IACF,OACEA,SAAQ,OAAO,OAAO;IAG1B,IAAI5C,SAAQ,OAAO,QAEjB,OAAO,KAAK;QAAE,MAAA4C;QAAM,OAAA5C;QAAO;QAAO,KAAK,OAAO;IAAO;IAEvD,OAAO;AACT;AAeO,IAAM,sBAAsB,CACjC,QAAA,GACG;IAGH,IAAI,UAAU;IAEd,IAAA,IAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,IAAK;QACtC,IAAI,MAAM,SAAS,OAAO,OAAO,KAC/B;aAEA;IAEJ;IACA,OAAO;AACT;AAgBO,IAAM,aAAa,CACxB,QACAA,QACA,MAAcA,MAAAA,GACF,OAAO,WAAWA,WAAU,OAAO,SAAS;AAGnD,IAAM,eAAe,CAAC,SAC3B,OAAO,QAAQ,wBAAwB,CAAC,IAAM,CAAA,EAAA,EAAK,EAAE,WAAW,GAAE,CAAA,CAAG;;;;;A,gD;A,8C;A,6C;A,qD;A,mD;A,oD;A,+C;A,mD;A,kD;A,6C;A,I,W,O;A,I,Y,O;A,I,mB,O;A,I,oB,O;A,I,e,O;A,I,e,O,U;A,I,kB,C,K,K,Q,O,M,U,K,K;Q,Y;Q,c;Q,U;Q;I,K,G,C,I,G;A,I,a,C,I,M,S;Q,O,O,A,C,G,E,C,kB,G,C,E,C,A,E,A,C,M;Y,S,C;Q,C,E,S,M,I;I;A,I,W,C,Q;I,I,I,Q,I,U,Q,M;Q,K,G,C,K;Q,Y;I;A;A,I,c,C,I,M,Q;I,I,Q,O,S,Y,O,S,Y;Q,K,I,O,kB,M,I,C,a,K,I,Q,Q,Q,U,I,K;Y,K,I,I,C,I;Y,Y,C,C,O,iB,M,I,K,K;Q;I;I,O;A;A,I,U,C,K,Y,S,C,S,O,O,S,a,Q,C,G,Y,sE;I,iE;I,sE;I,qE;I,c,C,O,C,I,a,U,Q,W;Q,O;Q,Y;I,K,Q,I;A,I,kB,C,Y,Q,K;I,I,S,O,I,K,I,O,iB,Q,O;I,I,I,I,W,S,G,W,K,G,I,I,Y,U,C,E,E,S,A,C,O,U,Q,K,U,U,O,K;I,I,Q,Q,U,Q,K;I,O;A;A,I,gB,C,K,K;I,gB,K,O,Q,W,M,K,K;I,O;A;A,iC;AuN5avE,IAAA,gBAAA,CAAA;AAAA,SAAA,eAAA;IAAA,WAAA,IAAA;IAAA,SAAA,IAAA;AAAA;A,oC;ACOO,IAAM,YAAY,CACvB,MACA,OACA;IAEA,MAA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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-51199b43a0483307.js","node_modules/ixfx/dist/chunk-G5YZ6YRD.js","node_modules/ixfx/node_modules/fp-ts/lib/function.js","node_modules/ixfx/node_modules/fp-ts/lib/internal.js","node_modules/ixfx/node_modules/fp-ts/lib/Apply.js","node_modules/ixfx/node_modules/fp-ts/lib/Chain.js","node_modules/ixfx/node_modules/fp-ts/lib/FromEither.js","node_modules/ixfx/node_modules/fp-ts/lib/Functor.js","node_modules/ixfx/node_modules/fp-ts/lib/Eq.js","node_modules/ixfx/node_modules/fp-ts/lib/Ord.js","node_modules/ixfx/node_modules/fp-ts/lib/Magma.js","node_modules/ixfx/node_modules/fp-ts/lib/Semigroup.js","node_modules/ixfx/node_modules/fp-ts/lib/ReadonlyNonEmptyArray.js","node_modules/ixfx/node_modules/fp-ts/lib/NonEmptyArray.js","node_modules/ixfx/node_modules/fp-ts/lib/number.js","node_modules/ixfx/node_modules/fp-ts/lib/Separated.js","node_modules/ixfx/node_modules/fp-ts/lib/Witherable.js","node_modules/ixfx/node_modules/fp-ts/lib/Zero.js","node_modules/ixfx/node_modules/fp-ts/lib/ReadonlyArray.js","node_modules/ixfx/node_modules/fp-ts/lib/Array.js","node_modules/ixfx/node_modules/fp-ts/lib/string.js","node_modules/ixfx/node_modules/json5/dist/index.js","node_modules/ixfx/src/Text.ts","node_modules/ixfx/src/Guards.ts","node_modules/ixfx/src/Random.ts","node_modules/ixfx/src/collections/Arrays.ts","node_modules/ixfx/src/Util.ts","node_modules/ixfx/src/IterableAsync.ts","node_modules/ixfx/src/Debug.ts","node_modules/ixfx/src/collections/Map/index.ts","node_modules/ixfx/src/Events.ts","node_modules/ixfx/src/collections/map/MapMultiFns.ts","node_modules/ixfx/src/collections/map/MapOfSimpleBase.ts","node_modules/ixfx/src/collections/map/MapOfSimpleMutable.ts","node_modules/ixfx/src/collections/map/MapFns.ts","node_modules/ixfx/src/collections/Map/ExpiringMap.ts","node_modules/ixfx/src/collections/index.ts","node_modules/ixfx/src/collections/CircularArray.ts","node_modules/ixfx/src/collections/Trees.ts","node_modules/ixfx/src/collections/stack/StackFns.ts","node_modules/ixfx/src/collections/stack/StackMutable.ts","node_modules/ixfx/src/geometry/QuadTree.ts","node_modules/ixfx/src/geometry/index.ts","node_modules/ixfx/src/geometry/Arc.ts","node_modules/ixfx/src/geometry/Point.ts","node_modules/ixfx/src/geometry/Line.ts","node_modules/ixfx/src/modulation/Easing.ts","node_modules/ixfx/src/data/index.ts","node_modules/ixfx/src/data/Normalise.ts","node_modules/ixfx/src/data/Clamp.ts","node_modules/ixfx/src/data/Scale.ts","node_modules/ixfx/src/KeyValue.ts","node_modules/ixfx/src/Numbers.ts","node_modules/ixfx/src/flow/index.ts","node_modules/ixfx/src/flow/Sleep.ts","node_modules/ixfx/src/flow/StateMachine.ts","node_modules/ixfx/src/flow/StateMachineWithEvents.ts","node_modules/ixfx/src/flow/Execute.ts","node_modules/ixfx/src/flow/StateMachineDriver.ts","node_modules/ixfx/src/flow/Timer.ts","node_modules/ixfx/src/flow/Interval.ts","node_modules/ixfx/src/flow/Timeout.ts","node_modules/ixfx/src/flow/UpdateOutdated.ts","node_modules/ixfx/src/flow/Continuously.ts","node_modules/ixfx/src/flow/Debounce.ts","node_modules/ixfx/src/flow/Throttle.ts","node_modules/ixfx/src/flow/WaitFor.ts","node_modules/ixfx/src/flow/Delay.ts","node_modules/ixfx/src/flow/Every.ts","node_modules/ixfx/src/flow/RunOnce.ts","node_modules/ixfx/src/flow/Elapsed.ts","node_modules/ixfx/src/flow/Retry.ts","node_modules/ixfx/src/flow/TaskQueue.ts","node_modules/ixfx/src/data/TrackedValue.ts","node_modules/ixfx/src/data/TrackerBase.ts","node_modules/ixfx/src/data/PrimitiveTracker.ts","node_modules/ixfx/src/data/NumberTracker.ts","node_modules/ixfx/src/modulation/index.ts","node_modules/ixfx/src/modulation/Envelope.ts","node_modules/ixfx/src/geometry/Path.ts","node_modules/ixfx/src/geometry/Bezier.ts","node_modules/ixfx/node_modules/bezier-js/src/utils.js","node_modules/ixfx/node_modules/bezier-js/src/poly-bezier.js","node_modules/ixfx/node_modules/bezier-js/src/bezier.js","node_modules/ixfx/src/modulation/Forces.ts","node_modules/ixfx/src/geometry/Rect.ts","node_modules/ixfx/src/geometry/Circle.ts","node_modules/ixfx/src/geometry/Intersects.ts","node_modules/ixfx/src/modulation/Oscillator.ts","node_modules/ixfx/src/modulation/Jitter.ts","node_modules/ixfx/src/modulation/PingPong.ts","node_modules/ixfx/src/io/index.ts","node_modules/ixfx/src/io/NordicBleDevice.ts","node_modules/ixfx/src/io/Codec.ts","node_modules/ixfx/src/io/StringReceiveBuffer.ts","node_modules/ixfx/src/io/StringWriteBuffer.ts","node_modules/ixfx/src/io/BleDevice.ts","node_modules/ixfx/src/io/AudioAnalyser.ts","node_modules/ixfx/src/io/AudioVisualiser.ts","node_modules/ixfx/src/io/Espruino.ts","node_modules/ixfx/src/io/EspruinoBleDevice.ts","node_modules/ixfx/src/io/Serial.ts","node_modules/ixfx/src/io/JsonDevice.ts","node_modules/ixfx/src/io/EspruinoSerialDevice.ts","node_modules/ixfx/src/io/Camera.ts","node_modules/ixfx/src/io/VideoFile.ts","node_modules/ixfx/src/visual/Video.ts","node_modules/ixfx/src/io/FrameProcessor.ts","node_modules/ixfx/src/Generators.ts","node_modules/ixfx/src/IterableSync.ts","node_modules/ixfx/src/visual/index.ts","node_modules/ixfx/src/visual/Drawing.ts","node_modules/ixfx/src/geometry/Triangle.ts","node_modules/ixfx/src/geometry/TriangleEquilateral.ts","node_modules/ixfx/src/geometry/TriangleRight.ts","node_modules/ixfx/src/geometry/TriangleIsosceles.ts","node_modules/ixfx/src/geometry/Ellipse.ts","node_modules/ixfx/src/visual/Colour.ts","node_modules/ixfx/node_modules/d3-color/src/define.js","node_modules/ixfx/node_modules/d3-color/src/color.js","node_modules/ixfx/node_modules/d3-color/src/math.js","node_modules/ixfx/node_modules/d3-color/src/lab.js","node_modules/ixfx/node_modules/d3-color/src/cubehelix.js","node_modules/ixfx/node_modules/d3-interpolate/src/basis.js","node_modules/ixfx/node_modules/d3-interpolate/src/basisClosed.js","node_modules/ixfx/node_modules/d3-interpolate/src/constant.js","node_modules/ixfx/node_modules/d3-interpolate/src/color.js","node_modules/ixfx/node_modules/d3-interpolate/src/rgb.js","node_modules/ixfx/node_modules/d3-interpolate/src/numberArray.js","node_modules/ixfx/node_modules/d3-interpolate/src/array.js","node_modules/ixfx/node_modules/d3-interpolate/src/date.js","node_modules/ixfx/node_modules/d3-interpolate/src/number.js","node_modules/ixfx/node_modules/d3-interpolate/src/object.js","node_modules/ixfx/node_modules/d3-interpolate/src/string.js","node_modules/ixfx/node_modules/d3-interpolate/src/value.js","node_modules/ixfx/node_modules/d3-interpolate/src/hsl.js","node_modules/ixfx/node_modules/d3-interpolate/src/lab.js","node_modules/ixfx/node_modules/d3-interpolate/src/hcl.js","node_modules/ixfx/node_modules/d3-interpolate/src/cubehelix.js","node_modules/ixfx/node_modules/d3-interpolate/src/piecewise.js","node_modules/ixfx/node_modules/rxjs/node_modules/tslib/tslib.es6.js","node_modules/ixfx/node_modules/rxjs/src/internal/util/isFunction.ts","node_modules/ixfx/node_modules/rxjs/src/internal/util/createErrorClass.ts","node_modules/ixfx/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","node_modules/ixfx/node_modules/rxjs/src/internal/util/arrRemove.ts","node_modules/ixfx/node_modules/rxjs/src/internal/Subscription.ts","node_modules/ixfx/node_modules/rxjs/src/internal/config.ts","node_modules/ixfx/node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts","node_modules/ixfx/node_modules/rxjs/src/internal/util/reportUnhandledError.ts","node_modules/ixfx/node_modules/rxjs/src/internal/util/noop.ts","node_modules/ixfx/node_modules/rxjs/src/internal/NotificationFactories.ts","node_modules/ixfx/node_modules/rxjs/src/internal/util/errorContext.ts","node_modules/ixfx/node_modules/rxjs/src/internal/Subscriber.ts","node_modules/ixfx/node_modules/rxjs/src/internal/symbol/observable.ts","node_modules/ixfx/node_modules/rxjs/src/internal/util/identity.ts","node_modules/ixfx/node_modules/rxjs/src/internal/util/pipe.ts","node_modules/ixfx/node_modules/rxjs/src/internal/Observable.ts","node_modules/ixfx/node_modules/rxjs/src/internal/util/lift.ts","node_modules/ixfx/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts","node_modules/ixfx/node_modules/rxjs/src/internal/scheduler/dateTimestampProvider.ts","node_modules/ixfx/node_modules/rxjs/src/internal/scheduler/Action.ts","node_modules/ixfx/node_modules/rxjs/src/internal/scheduler/intervalProvider.ts","node_modules/ixfx/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","node_modules/ixfx/node_modules/rxjs/src/internal/Scheduler.ts","node_modules/ixfx/node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","node_modules/ixfx/node_modules/rxjs/src/internal/scheduler/async.ts","node_modules/ixfx/node_modules/rxjs/src/internal/util/isArrayLike.ts","node_modules/ixfx/node_modules/rxjs/src/internal/util/isPromise.ts","node_modules/ixfx/node_modules/rxjs/src/internal/util/isInteropObservable.ts","node_modules/ixfx/node_modules/rxjs/src/internal/util/isAsyncIterable.ts","node_modules/ixfx/node_modules/rxjs/src/internal/util/throwUnobservableError.ts","node_modules/ixfx/node_modules/rxjs/src/internal/symbol/iterator.ts","node_modules/ixfx/node_modules/rxjs/src/internal/util/isIterable.ts","node_modules/ixfx/node_modules/rxjs/src/internal/util/isReadableStreamLike.ts","node_modules/ixfx/node_modules/rxjs/src/internal/observable/innerFrom.ts","node_modules/ixfx/node_modules/rxjs/src/internal/util/executeSchedule.ts","node_modules/ixfx/node_modules/rxjs/src/internal/operators/map.ts","node_modules/ixfx/node_modules/rxjs/src/internal/util/mapOneOrManyArgs.ts","node_modules/ixfx/node_modules/rxjs/src/internal/operators/mergeInternals.ts","node_modules/ixfx/node_modules/rxjs/src/internal/operators/mergeMap.ts","node_modules/ixfx/node_modules/rxjs/src/internal/observable/fromEvent.ts","node_modules/ixfx/node_modules/rxjs/src/internal/operators/debounceTime.ts","node_modules/ixfx/src/dom/Util.ts","node_modules/ixfx/src/collections/stack/StackImmutable.ts","node_modules/ixfx/src/visual/Svg.ts","node_modules/ixfx/src/visual/SvgMarkers.ts","node_modules/ixfx/src/visual/SvgElements.ts","node_modules/ixfx/src/visual/Plot.ts","node_modules/ixfx/src/visual/Plot2.ts","node_modules/ixfx/src/visual/SceneGraph.ts","node_modules/ixfx/src/visual/Palette.ts","node_modules/ixfx/src/visual/ImageDataGrid.ts","node_modules/ixfx/src/geometry/Grid.ts","node_modules/ixfx/src/collections/set/index.ts","node_modules/ixfx/src/collections/set/SetMutable.ts","node_modules/ixfx/src/collections/set/SetImmutable.ts","node_modules/ixfx/src/dom/index.ts","node_modules/ixfx/src/dom/ShadowDom.ts","node_modules/ixfx/src/dom/Log.ts","node_modules/ixfx/src/dom/DomRx.ts","node_modules/ixfx/src/dom/Forms.ts","node_modules/ixfx/src/data/ObjectTracker.ts","node_modules/ixfx/src/data/PointTracker.ts","node_modules/ixfx/src/dom/PointerVisualise.ts","node_modules/ixfx/src/dom/ErrorHandler.ts","node_modules/ixfx/src/dom/DragDrop.ts","node_modules/ixfx/src/data/FrequencyMutable.ts","node_modules/ixfx/src/data/MovingAverage.ts","node_modules/ixfx/src/data/IntervalTracker.ts","node_modules/ixfx/src/data/Flip.ts","node_modules/ixfx/src/data/Wrap.ts","node_modules/ixfx/src/data/Correlate.ts","node_modules/ixfx/src/data/Pool.ts","node_modules/ixfx/src/data/Interpolate.ts","node_modules/ixfx/src/collections/MinMaxAvg.ts","node_modules/ixfx/src/collections/NumericArrays.ts","node_modules/ixfx/src/geometry/CompoundPath.ts","node_modules/ixfx/src/geometry/Shape.ts","node_modules/ixfx/src/geometry/Polar.ts","node_modules/ixfx/src/geometry/Vector.ts","node_modules/ixfx/src/geometry/Waypoint.ts","node_modules/ixfx/src/geometry/Sphere.ts","node_modules/ixfx/src/geometry/Layout.ts","node_modules/ixfx/src/geometry/CirclePacking.ts","node_modules/ixfx/src/geometry/Scaler.ts","node_modules/ixfx/src/geometry/Convolve2d.ts","node_modules/ixfx/src/geometry/SurfacePoints.ts","node_modules/ixfx/src/collections/TreeNodeMutable.ts","node_modules/ixfx/src/collections/stack/index.ts","node_modules/ixfx/src/collections/Map/MapImmutableFns.ts","node_modules/ixfx/src/collections/Map/Map.ts","node_modules/ixfx/src/collections/Map/MapMutable.ts","node_modules/ixfx/src/collections/Map/MapOfMultiImpl.ts","node_modules/ixfx/src/collections/Map/MapOfSetMutable.ts","node_modules/ixfx/src/collections/Map/MapOfCircularMutable.ts","node_modules/ixfx/src/collections/Map/MapOfArrayMutable.ts","node_modules/ixfx/dist/chunk-4DC2CRSB.js","node_modules/ixfx/src/collections/queue/index.ts","node_modules/ixfx/src/collections/queue/QueueFns.ts","node_modules/ixfx/src/collections/queue/QueueImmutable.ts","node_modules/ixfx/src/collections/queue/QueueMutable.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"3b6ea5b79660f304\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n\n  // Web extension context\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}",null,"\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dual = exports.getEndomorphismMonoid = exports.not = exports.SK = exports.hole = exports.pipe = exports.untupled = exports.tupled = exports.absurd = exports.decrement = exports.increment = exports.tuple = exports.flow = exports.flip = exports.constVoid = exports.constUndefined = exports.constNull = exports.constFalse = exports.constTrue = exports.constant = exports.unsafeCoerce = exports.identity = exports.apply = exports.getRing = exports.getSemiring = exports.getMonoid = exports.getSemigroup = exports.getBooleanAlgebra = void 0;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getBooleanAlgebra = function (B) {\n    return function () { return ({\n        meet: function (x, y) { return function (a) { return B.meet(x(a), y(a)); }; },\n        join: function (x, y) { return function (a) { return B.join(x(a), y(a)); }; },\n        zero: function () { return B.zero; },\n        one: function () { return B.one; },\n        implies: function (x, y) { return function (a) { return B.implies(x(a), y(a)); }; },\n        not: function (x) { return function (a) { return B.not(x(a)); }; }\n    }); };\n};\nexports.getBooleanAlgebra = getBooleanAlgebra;\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate, getSemigroup } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = getSemigroup(B.SemigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = getSemigroup(B.SemigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function (S) {\n    return function () { return ({\n        concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }\n    }); };\n};\nexports.getSemigroup = getSemigroup;\n/**\n * Unary functions form a monoid as long as you can provide a monoid for the codomain.\n *\n * @example\n * import { Predicate } from 'fp-ts/Predicate'\n * import { getMonoid } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const M1 = getMonoid(B.MonoidAll)<number>()\n *\n * assert.deepStrictEqual(M1.concat(f, g)(1), true)\n * assert.deepStrictEqual(M1.concat(f, g)(3), false)\n *\n * const M2 = getMonoid(B.MonoidAny)<number>()\n *\n * assert.deepStrictEqual(M2.concat(f, g)(1), true)\n * assert.deepStrictEqual(M2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getMonoid = function (M) {\n    var getSemigroupM = (0, exports.getSemigroup)(M);\n    return function () { return ({\n        concat: getSemigroupM().concat,\n        empty: function () { return M.empty; }\n    }); };\n};\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getSemiring = function (S) { return ({\n    add: function (f, g) { return function (x) { return S.add(f(x), g(x)); }; },\n    zero: function () { return S.zero; },\n    mul: function (f, g) { return function (x) { return S.mul(f(x), g(x)); }; },\n    one: function () { return S.one; }\n}); };\nexports.getSemiring = getSemiring;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getRing = function (R) {\n    var S = (0, exports.getSemiring)(R);\n    return {\n        add: S.add,\n        mul: S.mul,\n        one: S.one,\n        zero: S.zero,\n        sub: function (f, g) { return function (x) { return R.sub(f(x), g(x)); }; }\n    };\n};\nexports.getRing = getRing;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nvar apply = function (a) {\n    return function (f) {\n        return f(a);\n    };\n};\nexports.apply = apply;\n/**\n * @since 2.0.0\n */\nfunction identity(a) {\n    return a;\n}\nexports.identity = identity;\n/**\n * @since 2.0.0\n */\nexports.unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nfunction constant(a) {\n    return function () { return a; };\n}\nexports.constant = constant;\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\nexports.constTrue = constant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\nexports.constFalse = constant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\nexports.constNull = constant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\nexports.constUndefined = constant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\nexports.constVoid = exports.constUndefined;\nfunction flip(f) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (args.length > 1) {\n            return f(args[1], args[0]);\n        }\n        return function (a) { return f(a)(args[0]); };\n    };\n}\nexports.flip = flip;\nfunction flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\nexports.flow = flow;\n/**\n * @since 2.0.0\n */\nfunction tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\nexports.tuple = tuple;\n/**\n * @since 2.0.0\n */\nfunction increment(n) {\n    return n + 1;\n}\nexports.increment = increment;\n/**\n * @since 2.0.0\n */\nfunction decrement(n) {\n    return n - 1;\n}\nexports.decrement = decrement;\n/**\n * @since 2.0.0\n */\nfunction absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\nexports.absurd = absurd;\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nfunction tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\nexports.tupled = tupled;\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nfunction untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nexports.untupled = untupled;\nfunction pipe(a, ab, bc, cd, de, ef, fg, gh, hi) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        default: {\n            var ret = arguments[0];\n            for (var i = 1; i < arguments.length; i++) {\n                ret = arguments[i](ret);\n            }\n            return ret;\n        }\n    }\n}\nexports.pipe = pipe;\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexports.hole = absurd;\n/**\n * @since 2.11.0\n */\nvar SK = function (_, b) { return b; };\nexports.SK = SK;\n/**\n * Use `Predicate` module instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nfunction not(predicate) {\n    return function (a) { return !predicate(a); };\n}\nexports.not = not;\n/**\n * Use `Endomorphism` module instead.\n *\n * @category zone of death\n * @since 2.10.0\n * @deprecated\n */\nvar getEndomorphismMonoid = function () { return ({\n    concat: function (first, second) { return flow(first, second); },\n    empty: identity\n}); };\nexports.getEndomorphismMonoid = getEndomorphismMonoid;\n/** @internal */\nvar dual = function (arity, body) {\n    var isDataFirst = typeof arity === 'number' ? function (args) { return args.length >= arity; } : arity;\n    return function () {\n        var args = Array.from(arguments);\n        if (isDataFirst(arguments)) {\n            return body.apply(this, args);\n        }\n        return function (self) { return body.apply(void 0, __spreadArray([self], args, false)); };\n    };\n};\nexports.dual = dual;\n","\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.flatMapReader = exports.flatMapTask = exports.flatMapIO = exports.flatMapEither = exports.flatMapOption = exports.flatMapNullable = exports.liftOption = exports.liftNullable = exports.fromReadonlyNonEmptyArray = exports.has = exports.emptyRecord = exports.emptyReadonlyArray = exports.tail = exports.head = exports.isNonEmpty = exports.singleton = exports.right = exports.left = exports.isRight = exports.isLeft = exports.some = exports.none = exports.isSome = exports.isNone = void 0;\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// Option\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isNone = function (fa) { return fa._tag === 'None'; };\nexports.isNone = isNone;\n/** @internal */\nvar isSome = function (fa) { return fa._tag === 'Some'; };\nexports.isSome = isSome;\n/** @internal */\nexports.none = { _tag: 'None' };\n/** @internal */\nvar some = function (a) { return ({ _tag: 'Some', value: a }); };\nexports.some = some;\n// -------------------------------------------------------------------------------------\n// Either\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isLeft = function (ma) { return ma._tag === 'Left'; };\nexports.isLeft = isLeft;\n/** @internal */\nvar isRight = function (ma) { return ma._tag === 'Right'; };\nexports.isRight = isRight;\n/** @internal */\nvar left = function (e) { return ({ _tag: 'Left', left: e }); };\nexports.left = left;\n/** @internal */\nvar right = function (a) { return ({ _tag: 'Right', right: a }); };\nexports.right = right;\n// -------------------------------------------------------------------------------------\n// ReadonlyNonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar singleton = function (a) { return [a]; };\nexports.singleton = singleton;\n/** @internal */\nvar isNonEmpty = function (as) { return as.length > 0; };\nexports.isNonEmpty = isNonEmpty;\n/** @internal */\nvar head = function (as) { return as[0]; };\nexports.head = head;\n/** @internal */\nvar tail = function (as) { return as.slice(1); };\nexports.tail = tail;\n// -------------------------------------------------------------------------------------\n// empty\n// -------------------------------------------------------------------------------------\n/** @internal */\nexports.emptyReadonlyArray = [];\n/** @internal */\nexports.emptyRecord = {};\n// -------------------------------------------------------------------------------------\n// Record\n// -------------------------------------------------------------------------------------\n/** @internal */\nexports.has = Object.prototype.hasOwnProperty;\n// -------------------------------------------------------------------------------------\n// NonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar fromReadonlyNonEmptyArray = function (as) { return __spreadArray([as[0]], as.slice(1), true); };\nexports.fromReadonlyNonEmptyArray = fromReadonlyNonEmptyArray;\n/** @internal */\nvar liftNullable = function (F) {\n    return function (f, onNullable) {\n        return function () {\n            var a = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                a[_i] = arguments[_i];\n            }\n            var o = f.apply(void 0, a);\n            return F.fromEither(o == null ? (0, exports.left)(onNullable.apply(void 0, a)) : (0, exports.right)(o));\n        };\n    };\n};\nexports.liftNullable = liftNullable;\n/** @internal */\nvar liftOption = function (F) {\n    return function (f, onNone) {\n        return function () {\n            var a = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                a[_i] = arguments[_i];\n            }\n            var o = f.apply(void 0, a);\n            return F.fromEither((0, exports.isNone)(o) ? (0, exports.left)(onNone.apply(void 0, a)) : (0, exports.right)(o.value));\n        };\n    };\n};\nexports.liftOption = liftOption;\n/** @internal */\nvar flatMapNullable = function (F, M) {\n    /*#__PURE__*/ return (0, function_1.dual)(3, function (self, f, onNullable) {\n        return M.flatMap(self, (0, exports.liftNullable)(F)(f, onNullable));\n    });\n};\nexports.flatMapNullable = flatMapNullable;\n/** @internal */\nvar flatMapOption = function (F, M) {\n    /*#__PURE__*/ return (0, function_1.dual)(3, function (self, f, onNone) { return M.flatMap(self, (0, exports.liftOption)(F)(f, onNone)); });\n};\nexports.flatMapOption = flatMapOption;\n/** @internal */\nvar flatMapEither = function (F, M) {\n    /*#__PURE__*/ return (0, function_1.dual)(2, function (self, f) {\n        return M.flatMap(self, function (a) { return F.fromEither(f(a)); });\n    });\n};\nexports.flatMapEither = flatMapEither;\n/** @internal */\nvar flatMapIO = function (F, M) {\n    /*#__PURE__*/ return (0, function_1.dual)(2, function (self, f) {\n        return M.flatMap(self, function (a) { return F.fromIO(f(a)); });\n    });\n};\nexports.flatMapIO = flatMapIO;\n/** @internal */\nvar flatMapTask = function (F, M) {\n    /*#__PURE__*/ return (0, function_1.dual)(2, function (self, f) {\n        return M.flatMap(self, function (a) { return F.fromTask(f(a)); });\n    });\n};\nexports.flatMapTask = flatMapTask;\n/** @internal */\nvar flatMapReader = function (F, M) {\n    /*#__PURE__*/ return (0, function_1.dual)(2, function (self, f) {\n        return M.flatMap(self, function (a) { return F.fromReader(f(a)); });\n    });\n};\nexports.flatMapReader = flatMapReader;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sequenceS = exports.sequenceT = exports.getApplySemigroup = exports.apS = exports.apSecond = exports.apFirst = exports.ap = void 0;\n/**\n * The `Apply` class provides the `ap` which is used to apply a function to an argument under a type constructor.\n *\n * `Apply` can be used to lift functions of two or more arguments to work on values wrapped with the type constructor\n * `f`.\n *\n * Instances must satisfy the following law in addition to the `Functor` laws:\n *\n * 1. Associative composition: `F.ap(F.ap(F.map(fbc, bc => ab => a => bc(ab(a))), fab), fa) <-> F.ap(fbc, F.ap(fab, fa))`\n *\n * Formally, `Apply` represents a strong lax semi-monoidal endofunctor.\n *\n * @example\n * import * as O from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (a: string) => (b: number) => (c: boolean) => a + String(b) + String(c)\n * const fa: O.Option<string> = O.some('s')\n * const fb: O.Option<number> = O.some(1)\n * const fc: O.Option<boolean> = O.some(true)\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     // lift a function\n *     O.some(f),\n *     // apply the first argument\n *     O.ap(fa),\n *     // apply the second argument\n *     O.ap(fb),\n *     // apply the third argument\n *     O.ap(fc)\n *   ),\n *   O.some('s1true')\n * )\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nfunction ap(F, G) {\n    return function (fa) {\n        return function (fab) {\n            return F.ap(F.map(fab, function (gab) { return function (ga) { return G.ap(gab, ga); }; }), fa);\n        };\n    };\n}\nexports.ap = ap;\nfunction apFirst(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function (a) { return function () { return a; }; }), second);\n    }; };\n}\nexports.apFirst = apFirst;\nfunction apSecond(A) {\n    return function (second) {\n        return function (first) {\n            return A.ap(A.map(first, function () { return function (b) { return b; }; }), second);\n        };\n    };\n}\nexports.apSecond = apSecond;\nfunction apS(F) {\n    return function (name, fb) {\n        return function (fa) {\n            return F.ap(F.map(fa, function (a) { return function (b) {\n                var _a;\n                return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n            }; }), fb);\n        };\n    };\n}\nexports.apS = apS;\nfunction getApplySemigroup(F) {\n    return function (S) { return ({\n        concat: function (first, second) {\n            return F.ap(F.map(first, function (x) { return function (y) { return S.concat(x, y); }; }), second);\n        }\n    }); };\n}\nexports.getApplySemigroup = getApplySemigroup;\nfunction curried(f, n, acc) {\n    return function (x) {\n        var combined = Array(acc.length + 1);\n        for (var i = 0; i < acc.length; i++) {\n            combined[i] = acc[i];\n        }\n        combined[acc.length] = x;\n        return n === 0 ? f.apply(null, combined) : curried(f, n - 1, combined);\n    };\n}\nvar tupleConstructors = {\n    1: function (a) { return [a]; },\n    2: function (a) { return function (b) { return [a, b]; }; },\n    3: function (a) { return function (b) { return function (c) { return [a, b, c]; }; }; },\n    4: function (a) { return function (b) { return function (c) { return function (d) { return [a, b, c, d]; }; }; }; },\n    5: function (a) { return function (b) { return function (c) { return function (d) { return function (e) { return [a, b, c, d, e]; }; }; }; }; }\n};\nfunction getTupleConstructor(len) {\n    if (!_.has.call(tupleConstructors, len)) {\n        tupleConstructors[len] = curried(function_1.tuple, len - 1, []);\n    }\n    return tupleConstructors[len];\n}\nfunction sequenceT(F) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var len = args.length;\n        var f = getTupleConstructor(len);\n        var fas = F.map(args[0], f);\n        for (var i = 1; i < len; i++) {\n            fas = F.ap(fas, args[i]);\n        }\n        return fas;\n    };\n}\nexports.sequenceT = sequenceT;\nfunction getRecordConstructor(keys) {\n    var len = keys.length;\n    switch (len) {\n        case 1:\n            return function (a) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a);\n            };\n        case 2:\n            return function (a) { return function (b) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a);\n            }; };\n        case 3:\n            return function (a) { return function (b) { return function (c) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a[keys[2]] = c, _a);\n            }; }; };\n        case 4:\n            return function (a) { return function (b) { return function (c) { return function (d) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a);\n            }; }; }; };\n        case 5:\n            return function (a) { return function (b) { return function (c) { return function (d) { return function (e) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a[keys[4]] = e,\n                    _a);\n            }; }; }; }; };\n        default:\n            return curried(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var r = {};\n                for (var i = 0; i < len; i++) {\n                    r[keys[i]] = args[i];\n                }\n                return r;\n            }, len - 1, []);\n    }\n}\nfunction sequenceS(F) {\n    return function (r) {\n        var keys = Object.keys(r);\n        var len = keys.length;\n        var f = getRecordConstructor(keys);\n        var fr = F.map(r[keys[0]], f);\n        for (var i = 1; i < len; i++) {\n            fr = F.ap(fr, r[keys[i]]);\n        }\n        return fr;\n    };\n}\nexports.sequenceS = sequenceS;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bind = exports.tap = exports.chainFirst = void 0;\nfunction chainFirst(M) {\n    var tapM = tap(M);\n    return function (f) { return function (first) { return tapM(first, f); }; };\n}\nexports.chainFirst = chainFirst;\n/** @internal */\nfunction tap(M) {\n    return function (first, f) { return M.chain(first, function (a) { return M.map(f(a), function () { return a; }); }); };\n}\nexports.tap = tap;\nfunction bind(M) {\n    return function (name, f) { return function (ma) { return M.chain(ma, function (a) { return M.map(f(a), function (b) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n    }); }); }; };\n}\nexports.bind = bind;\n","\"use strict\";\n/**\n * The `FromEither` type class represents those data types which support errors.\n *\n * @since 2.10.0\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tapEither = exports.filterOrElse = exports.chainFirstEitherK = exports.chainEitherK = exports.fromEitherK = exports.chainOptionK = exports.fromOptionK = exports.fromPredicate = exports.fromOption = void 0;\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nfunction fromOption(F) {\n    return function (onNone) { return function (ma) { return F.fromEither(_.isNone(ma) ? _.left(onNone()) : _.right(ma.value)); }; };\n}\nexports.fromOption = fromOption;\nfunction fromPredicate(F) {\n    return function (predicate, onFalse) {\n        return function (a) {\n            return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a)));\n        };\n    };\n}\nexports.fromPredicate = fromPredicate;\nfunction fromOptionK(F) {\n    var fromOptionF = fromOption(F);\n    return function (onNone) {\n        var from = fromOptionF(onNone);\n        return function (f) { return (0, function_1.flow)(f, from); };\n    };\n}\nexports.fromOptionK = fromOptionK;\nfunction chainOptionK(F, M) {\n    var fromOptionKF = fromOptionK(F);\n    return function (onNone) {\n        var from = fromOptionKF(onNone);\n        return function (f) { return function (ma) { return M.chain(ma, from(f)); }; };\n    };\n}\nexports.chainOptionK = chainOptionK;\nfunction fromEitherK(F) {\n    return function (f) { return (0, function_1.flow)(f, F.fromEither); };\n}\nexports.fromEitherK = fromEitherK;\nfunction chainEitherK(F, M) {\n    var fromEitherKF = fromEitherK(F);\n    return function (f) { return function (ma) { return M.chain(ma, fromEitherKF(f)); }; };\n}\nexports.chainEitherK = chainEitherK;\nfunction chainFirstEitherK(F, M) {\n    var tapEitherM = tapEither(F, M);\n    return function (f) { return function (ma) { return tapEitherM(ma, f); }; };\n}\nexports.chainFirstEitherK = chainFirstEitherK;\nfunction filterOrElse(F, M) {\n    return function (predicate, onFalse) {\n        return function (ma) {\n            return M.chain(ma, function (a) { return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a))); });\n        };\n    };\n}\nexports.filterOrElse = filterOrElse;\n/** @internal */\nfunction tapEither(F, M) {\n    var fromEither = fromEitherK(F);\n    var tapM = (0, Chain_1.tap)(M);\n    return function (self, f) { return tapM(self, fromEither(f)); };\n}\nexports.tapEither = tapEither;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.asUnit = exports.as = exports.getFunctorComposition = exports.let = exports.bindTo = exports.flap = exports.map = void 0;\n/**\n * A `Functor` is a type constructor which supports a mapping operation `map`.\n *\n * `map` can be used to turn functions `a -> b` into functions `f a -> f b` whose argument and return types use the type\n * constructor `f` to represent some computational context.\n *\n * Instances must satisfy the following laws:\n *\n * 1. Identity: `F.map(fa, a => a) <-> fa`\n * 2. Composition: `F.map(fa, a => bc(ab(a))) <-> F.map(F.map(fa, ab), bc)`\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nfunction map(F, G) {\n    return function (f) { return function (fa) { return F.map(fa, function (ga) { return G.map(ga, f); }); }; };\n}\nexports.map = map;\nfunction flap(F) {\n    return function (a) { return function (fab) { return F.map(fab, function (f) { return f(a); }); }; };\n}\nexports.flap = flap;\nfunction bindTo(F) {\n    return function (name) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return (_a = {}, _a[name] = a, _a);\n    }); }; };\n}\nexports.bindTo = bindTo;\nfunction let_(F) {\n    return function (name, f) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = f(a), _a));\n    }); }; };\n}\nexports.let = let_;\n/** @deprecated */\nfunction getFunctorComposition(F, G) {\n    var _map = map(F, G);\n    return {\n        map: function (fga, f) { return (0, function_1.pipe)(fga, _map(f)); }\n    };\n}\nexports.getFunctorComposition = getFunctorComposition;\n/** @internal */\nfunction as(F) {\n    return function (self, b) { return F.map(self, function () { return b; }); };\n}\nexports.as = as;\n/** @internal */\nfunction asUnit(F) {\n    var asM = as(F);\n    return function (self) { return asM(self, undefined); };\n}\nexports.asUnit = asUnit;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.eqDate = exports.eqNumber = exports.eqString = exports.eqBoolean = exports.eq = exports.strictEqual = exports.getStructEq = exports.getTupleEq = exports.Contravariant = exports.getMonoid = exports.getSemigroup = exports.eqStrict = exports.URI = exports.contramap = exports.tuple = exports.struct = exports.fromEquals = void 0;\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar fromEquals = function (equals) { return ({\n    equals: function (x, y) { return x === y || equals(x, y); }\n}); };\nexports.fromEquals = fromEquals;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nvar struct = function (eqs) {\n    return (0, exports.fromEquals)(function (first, second) {\n        for (var key in eqs) {\n            if (!eqs[key].equals(first[key], second[key])) {\n                return false;\n            }\n        }\n        return true;\n    });\n};\nexports.struct = struct;\n/**\n * Given a tuple of `Eq`s returns a `Eq` for the tuple\n *\n * @example\n * import { tuple } from 'fp-ts/Eq'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import * as B from 'fp-ts/boolean'\n *\n * const E = tuple(S.Eq, N.Eq, B.Eq)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, true]), true)\n * assert.strictEqual(E.equals(['a', 1, true], ['b', 1, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 2, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, false]), false)\n *\n * @since 2.10.0\n */\nvar tuple = function () {\n    var eqs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        eqs[_i] = arguments[_i];\n    }\n    return (0, exports.fromEquals)(function (first, second) { return eqs.every(function (E, i) { return E.equals(first[i], second[i]); }); });\n};\nexports.tuple = tuple;\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.contramap)(f)); };\n/**\n * A typical use case for `contramap` would be like, given some `User` type, to construct an `Eq<User>`.\n *\n * We can do so with a function from `User -> X` where `X` is some value that we know how to compare\n * for equality (meaning we have an `Eq<X>`)\n *\n * For example, given the following `User` type, we want to construct an `Eq<User>` that just looks at the `key` field\n * for each user (since it's known to be unique).\n *\n * If we have a way of comparing `UUID`s for equality (`eqUUID: Eq<UUID>`) and we know how to go from `User -> UUID`,\n * using `contramap` we can do this\n *\n * @example\n * import { contramap, Eq } from 'fp-ts/Eq'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/string'\n *\n * type UUID = string\n *\n * interface User {\n *   readonly key: UUID\n *   readonly firstName: string\n *   readonly lastName: string\n * }\n *\n * const eqUUID: Eq<UUID> = S.Eq\n *\n * const eqUserByKey: Eq<User> = pipe(\n *   eqUUID,\n *   contramap((user) => user.key)\n * )\n *\n * assert.deepStrictEqual(\n *   eqUserByKey.equals(\n *     { key: 'k1', firstName: 'a1', lastName: 'b1' },\n *     { key: 'k2', firstName: 'a1', lastName: 'b1' }\n *   ),\n *   false\n * )\n * assert.deepStrictEqual(\n *   eqUserByKey.equals(\n *     { key: 'k1', firstName: 'a1', lastName: 'b1' },\n *     { key: 'k1', firstName: 'a2', lastName: 'b1' }\n *   ),\n *   true\n * )\n *\n * @since 2.0.0\n */\nvar contramap = function (f) { return function (fa) {\n    return (0, exports.fromEquals)(function (x, y) { return fa.equals(f(x), f(y)); });\n}; };\nexports.contramap = contramap;\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexports.URI = 'Eq';\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.eqStrict = {\n    equals: function (a, b) { return a === b; }\n};\nvar empty = {\n    equals: function () { return true; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (x, y) { return (0, exports.fromEquals)(function (a, b) { return x.equals(a, b) && y.equals(a, b); }); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * @category instances\n * @since 2.6.0\n */\nvar getMonoid = function () { return ({\n    concat: (0, exports.getSemigroup)().concat,\n    empty: empty\n}); };\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleEq = exports.tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getStructEq = exports.struct;\n/**\n * Use [`eqStrict`](#eqstrict) instead\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.strictEqual = exports.eqStrict.equals;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Contravariant` instance, pass `E.Contravariant` instead of `E.eq`\n * (where `E` is from `import E from 'fp-ts/Eq'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.eq = exports.Contravariant;\n/**\n * Use [`Eq`](./boolean.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.eqBoolean = exports.eqStrict;\n/**\n * Use [`Eq`](./string.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.eqString = exports.eqStrict;\n/**\n * Use [`Eq`](./number.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.eqNumber = exports.eqStrict;\n/**\n * Use [`Eq`](./Date.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.eqDate = {\n    equals: function (first, second) { return first.valueOf() === second.valueOf(); }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ordDate = exports.ordNumber = exports.ordString = exports.ordBoolean = exports.ord = exports.getDualOrd = exports.getTupleOrd = exports.between = exports.clamp = exports.max = exports.min = exports.geq = exports.leq = exports.gt = exports.lt = exports.equals = exports.trivial = exports.Contravariant = exports.getMonoid = exports.getSemigroup = exports.URI = exports.contramap = exports.reverse = exports.tuple = exports.fromCompare = exports.equalsDefault = void 0;\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// defaults\n// -------------------------------------------------------------------------------------\n/**\n * @category defaults\n * @since 2.10.0\n */\nvar equalsDefault = function (compare) {\n    return function (first, second) {\n        return first === second || compare(first, second) === 0;\n    };\n};\nexports.equalsDefault = equalsDefault;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar fromCompare = function (compare) { return ({\n    equals: (0, exports.equalsDefault)(compare),\n    compare: function (first, second) { return (first === second ? 0 : compare(first, second)); }\n}); };\nexports.fromCompare = fromCompare;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Given a tuple of `Ord`s returns an `Ord` for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Ord'\n * import * as B from 'fp-ts/boolean'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n *\n * const O = tuple(S.Ord, N.Ord, B.Ord)\n * assert.strictEqual(O.compare(['a', 1, true], ['b', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 1, false]), 1)\n *\n * @since 2.10.0\n */\nvar tuple = function () {\n    var ords = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        ords[_i] = arguments[_i];\n    }\n    return (0, exports.fromCompare)(function (first, second) {\n        var i = 0;\n        for (; i < ords.length - 1; i++) {\n            var r = ords[i].compare(first[i], second[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return ords[i].compare(first[i], second[i]);\n    });\n};\nexports.tuple = tuple;\n/**\n * @since 2.10.0\n */\nvar reverse = function (O) { return (0, exports.fromCompare)(function (first, second) { return O.compare(second, first); }); };\nexports.reverse = reverse;\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.contramap)(f)); };\n/**\n * A typical use case for `contramap` would be like, given some `User` type, to construct an `Ord<User>`.\n *\n * We can do so with a function from `User -> X` where `X` is some value that we know how to compare\n * for ordering (meaning we have an `Ord<X>`)\n *\n * For example, given the following `User` type, there are lots of possible choices for `X`,\n * but let's say we want to sort a list of users by `lastName`.\n *\n * If we have a way of comparing `lastName`s for ordering (`ordLastName: Ord<string>`) and we know how to go from `User -> string`,\n * using `contramap` we can do this\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import { contramap, Ord } from 'fp-ts/Ord'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * interface User {\n *   readonly firstName: string\n *   readonly lastName: string\n * }\n *\n * const ordLastName: Ord<string> = S.Ord\n *\n * const ordByLastName: Ord<User> = pipe(\n *   ordLastName,\n *   contramap((user) => user.lastName)\n * )\n *\n * assert.deepStrictEqual(\n *   RA.sort(ordByLastName)([\n *     { firstName: 'a', lastName: 'd' },\n *     { firstName: 'c', lastName: 'b' }\n *   ]),\n *   [\n *     { firstName: 'c', lastName: 'b' },\n *     { firstName: 'a', lastName: 'd' }\n *   ]\n * )\n *\n * @since 2.0.0\n */\nvar contramap = function (f) { return function (fa) {\n    return (0, exports.fromCompare)(function (first, second) { return fa.compare(f(first), f(second)); });\n}; };\nexports.contramap = contramap;\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexports.URI = 'Ord';\n/**\n * A typical use case for the `Semigroup` instance of `Ord` is merging two or more orderings.\n *\n * For example the following snippet builds an `Ord` for a type `User` which\n * sorts by `created` date descending, and **then** `lastName`\n *\n * @example\n * import * as D from 'fp-ts/Date'\n * import { pipe } from 'fp-ts/function'\n * import { contramap, getSemigroup, Ord, reverse } from 'fp-ts/Ord'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * interface User {\n *   readonly id: string\n *   readonly lastName: string\n *   readonly created: Date\n * }\n *\n * const ordByLastName: Ord<User> = pipe(\n *   S.Ord,\n *   contramap((user) => user.lastName)\n * )\n *\n * const ordByCreated: Ord<User> = pipe(\n *   D.Ord,\n *   contramap((user) => user.created)\n * )\n *\n * const ordUserByCreatedDescThenLastName = getSemigroup<User>().concat(\n *   reverse(ordByCreated),\n *   ordByLastName\n * )\n *\n * assert.deepStrictEqual(\n *   RA.sort(ordUserByCreatedDescThenLastName)([\n *     { id: 'c', lastName: 'd', created: new Date(1973, 10, 30) },\n *     { id: 'a', lastName: 'b', created: new Date(1973, 10, 30) },\n *     { id: 'e', lastName: 'f', created: new Date(1980, 10, 30) }\n *   ]),\n *   [\n *     { id: 'e', lastName: 'f', created: new Date(1980, 10, 30) },\n *     { id: 'a', lastName: 'b', created: new Date(1973, 10, 30) },\n *     { id: 'c', lastName: 'd', created: new Date(1973, 10, 30) }\n *   ]\n * )\n *\n * @category instances\n * @since 2.0.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) {\n        return (0, exports.fromCompare)(function (a, b) {\n            var ox = first.compare(a, b);\n            return ox !== 0 ? ox : second.compare(a, b);\n        });\n    }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` such that:\n *\n * - its `concat(ord1, ord2)` operation will order first by `ord1`, and then by `ord2`\n * - its `empty` value is an `Ord` that always considers compared elements equal\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { contramap, reverse, getMonoid } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as B from 'fp-ts/boolean'\n * import { pipe } from 'fp-ts/function'\n * import { concatAll } from 'fp-ts/Monoid'\n * import * as N from 'fp-ts/number'\n *\n * interface User {\n *   readonly id: number\n *   readonly name: string\n *   readonly age: number\n *   readonly rememberMe: boolean\n * }\n *\n * const byName = pipe(\n *   S.Ord,\n *   contramap((p: User) => p.name)\n * )\n *\n * const byAge = pipe(\n *   N.Ord,\n *   contramap((p: User) => p.age)\n * )\n *\n * const byRememberMe = pipe(\n *   B.Ord,\n *   contramap((p: User) => p.rememberMe)\n * )\n *\n * const M = getMonoid<User>()\n *\n * const users: Array<User> = [\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true }\n * ]\n *\n * // sort by name, then by age, then by `rememberMe`\n * const O1 = concatAll(M)([byName, byAge, byRememberMe])\n * assert.deepStrictEqual(sort(O1)(users), [\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * // now `rememberMe = true` first, then by name, then by age\n * const O2 = concatAll(M)([reverse(byRememberMe), byName, byAge])\n * assert.deepStrictEqual(sort(O2)(users), [\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * @category instances\n * @since 2.4.0\n */\nvar getMonoid = function () { return ({\n    concat: (0, exports.getSemigroup)().concat,\n    empty: (0, exports.fromCompare)(function () { return 0; })\n}); };\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexports.trivial = {\n    equals: function_1.constTrue,\n    compare: /*#__PURE__*/ (0, function_1.constant)(0)\n};\n/**\n * @since 2.11.0\n */\nvar equals = function (O) {\n    return function (second) {\n        return function (first) {\n            return first === second || O.compare(first, second) === 0;\n        };\n    };\n};\nexports.equals = equals;\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly less than_ another\n *\n * @since 2.0.0\n */\nvar lt = function (O) {\n    return function (first, second) {\n        return O.compare(first, second) === -1;\n    };\n};\nexports.lt = lt;\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly greater than_ another\n *\n * @since 2.0.0\n */\nvar gt = function (O) {\n    return function (first, second) {\n        return O.compare(first, second) === 1;\n    };\n};\nexports.gt = gt;\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly less than_ another\n *\n * @since 2.0.0\n */\nvar leq = function (O) {\n    return function (first, second) {\n        return O.compare(first, second) !== 1;\n    };\n};\nexports.leq = leq;\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly greater than_ another\n *\n * @since 2.0.0\n */\nvar geq = function (O) {\n    return function (first, second) {\n        return O.compare(first, second) !== -1;\n    };\n};\nexports.geq = geq;\n// TODO: curry in v3\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nvar min = function (O) {\n    return function (first, second) {\n        return first === second || O.compare(first, second) < 1 ? first : second;\n    };\n};\nexports.min = min;\n// TODO: curry in v3\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nvar max = function (O) {\n    return function (first, second) {\n        return first === second || O.compare(first, second) > -1 ? first : second;\n    };\n};\nexports.max = max;\n/**\n * Clamp a value between a minimum and a maximum\n *\n * @since 2.0.0\n */\nvar clamp = function (O) {\n    var minO = (0, exports.min)(O);\n    var maxO = (0, exports.max)(O);\n    return function (low, hi) { return function (a) { return maxO(minO(a, hi), low); }; };\n};\nexports.clamp = clamp;\n/**\n * Test whether a value is between a minimum and a maximum (inclusive)\n *\n * @since 2.0.0\n */\nvar between = function (O) {\n    var ltO = (0, exports.lt)(O);\n    var gtO = (0, exports.gt)(O);\n    return function (low, hi) { return function (a) { return ltO(a, low) || gtO(a, hi) ? false : true; }; };\n};\nexports.between = between;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleOrd = exports.tuple;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getDualOrd = exports.reverse;\n/**\n * Use [`Contravariant`](#contravariant) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.ord = exports.Contravariant;\n// default compare for primitive types\nfunction compare(first, second) {\n    return first < second ? -1 : first > second ? 1 : 0;\n}\nvar strictOrd = {\n    equals: Eq_1.eqStrict.equals,\n    compare: compare\n};\n/**\n * Use [`Ord`](./boolean.ts.html#ord) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.ordBoolean = strictOrd;\n/**\n * Use [`Ord`](./string.ts.html#ord) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.ordString = strictOrd;\n/**\n * Use [`Ord`](./number.ts.html#ord) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.ordNumber = strictOrd;\n/**\n * Use [`Ord`](./Date.ts.html#ord) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.ordDate = (0, function_1.pipe)(exports.ordNumber, \n/*#__PURE__*/\n(0, exports.contramap)(function (date) { return date.valueOf(); }));\n","\"use strict\";\n/**\n * A `Magma` is a pair `(A, concat)` in which `A` is a non-empty set and `concat` is a binary operation on `A`\n *\n * See [Semigroup](https://gcanti.github.io/fp-ts/modules/Semigroup.ts.html) for some instances.\n *\n * @since 2.0.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.concatAll = exports.endo = exports.filterSecond = exports.filterFirst = exports.reverse = void 0;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Magma`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse, concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(reverse(N.MagmaSub))(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), 2)\n *\n * @since 2.11.0\n */\nvar reverse = function (M) { return ({\n    concat: function (first, second) { return M.concat(second, first); }\n}); };\nexports.reverse = reverse;\n/**\n * @since 2.11.0\n */\nvar filterFirst = function (predicate) {\n    return function (M) { return ({\n        concat: function (first, second) { return (predicate(first) ? M.concat(first, second) : second); }\n    }); };\n};\nexports.filterFirst = filterFirst;\n/**\n * @since 2.11.0\n */\nvar filterSecond = function (predicate) {\n    return function (M) { return ({\n        concat: function (first, second) { return (predicate(second) ? M.concat(first, second) : first); }\n    }); };\n};\nexports.filterSecond = filterSecond;\n/**\n * @since 2.11.0\n */\nvar endo = function (f) {\n    return function (M) { return ({\n        concat: function (first, second) { return M.concat(f(first), f(second)); }\n    }); };\n};\nexports.endo = endo;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(N.MagmaSub)(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), -6)\n *\n * @since 2.11.0\n */\nvar concatAll = function (M) {\n    return function (startWith) {\n        return function (as) {\n            return as.reduce(function (a, acc) { return M.concat(a, acc); }, startWith);\n        };\n    };\n};\nexports.concatAll = concatAll;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.semigroupProduct = exports.semigroupSum = exports.semigroupString = exports.getFunctionSemigroup = exports.semigroupAny = exports.semigroupAll = exports.fold = exports.getIntercalateSemigroup = exports.getMeetSemigroup = exports.getJoinSemigroup = exports.getDualSemigroup = exports.getStructSemigroup = exports.getTupleSemigroup = exports.getFirstSemigroup = exports.getLastSemigroup = exports.getObjectSemigroup = exports.semigroupVoid = exports.concatAll = exports.last = exports.first = exports.intercalate = exports.tuple = exports.struct = exports.reverse = exports.constant = exports.max = exports.min = void 0;\n/**\n * If a type `A` can form a `Semigroup` it has an **associative** binary operation.\n *\n * ```ts\n * interface Semigroup<A> {\n *   readonly concat: (x: A, y: A) => A\n * }\n * ```\n *\n * Associativity means the following equality must hold for any choice of `x`, `y`, and `z`.\n *\n * ```ts\n * concat(x, concat(y, z)) = concat(concat(x, y), z)\n * ```\n *\n * A common example of a semigroup is the type `string` with the operation `+`.\n *\n * ```ts\n * import { Semigroup } from 'fp-ts/Semigroup'\n *\n * const semigroupString: Semigroup<string> = {\n *   concat: (x, y) => x + y\n * }\n *\n * const x = 'x'\n * const y = 'y'\n * const z = 'z'\n *\n * semigroupString.concat(x, y) // 'xy'\n *\n * semigroupString.concat(x, semigroupString.concat(y, z)) // 'xyz'\n *\n * semigroupString.concat(semigroupString.concat(x, y), z) // 'xyz'\n * ```\n *\n * *Adapted from https://typelevel.org/cats*\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nvar M = __importStar(require(\"./Magma\"));\nvar Or = __importStar(require(\"./Ord\"));\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Get a semigroup where `concat` will return the minimum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.min(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 1)\n *\n * @category constructors\n * @since 2.10.0\n */\nvar min = function (O) { return ({\n    concat: Or.min(O)\n}); };\nexports.min = min;\n/**\n * Get a semigroup where `concat` will return the maximum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.max(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 2)\n *\n * @category constructors\n * @since 2.10.0\n */\nvar max = function (O) { return ({\n    concat: Or.max(O)\n}); };\nexports.max = max;\n/**\n * @category constructors\n * @since 2.10.0\n */\nvar constant = function (a) { return ({\n    concat: function () { return a; }\n}); };\nexports.constant = constant;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Semigroup`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(reverse(S.Semigroup).concat('a', 'b'), 'ba')\n *\n * @since 2.10.0\n */\nexports.reverse = M.reverse;\n/**\n * Given a struct of semigroups returns a semigroup for the struct.\n *\n * @example\n * import { struct } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * interface Point {\n *   readonly x: number\n *   readonly y: number\n * }\n *\n * const S = struct<Point>({\n *   x: N.SemigroupSum,\n *   y: N.SemigroupSum\n * })\n *\n * assert.deepStrictEqual(S.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })\n *\n * @since 2.10.0\n */\nvar struct = function (semigroups) { return ({\n    concat: function (first, second) {\n        var r = {};\n        for (var k in semigroups) {\n            if (_.has.call(semigroups, k)) {\n                r[k] = semigroups[k].concat(first[k], second[k]);\n            }\n        }\n        return r;\n    }\n}); };\nexports.struct = struct;\n/**\n * Given a tuple of semigroups returns a semigroup for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Semigroup'\n * import * as B from 'fp-ts/boolean'\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/string'\n *\n * const S1 = tuple(S.Semigroup, N.SemigroupSum)\n * assert.deepStrictEqual(S1.concat(['a', 1], ['b', 2]), ['ab', 3])\n *\n * const S2 = tuple(S.Semigroup, N.SemigroupSum, B.SemigroupAll)\n * assert.deepStrictEqual(S2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])\n *\n * @since 2.10.0\n */\nvar tuple = function () {\n    var semigroups = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        semigroups[_i] = arguments[_i];\n    }\n    return ({\n        concat: function (first, second) { return semigroups.map(function (s, i) { return s.concat(first[i], second[i]); }); }\n    });\n};\nexports.tuple = tuple;\n/**\n * Between each pair of elements insert `middle`.\n *\n * @example\n * import { intercalate } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * const S1 = pipe(S.Semigroup, intercalate(' + '))\n *\n * assert.strictEqual(S1.concat('a', 'b'), 'a + b')\n *\n * @since 2.10.0\n */\nvar intercalate = function (middle) {\n    return function (S) { return ({\n        concat: function (x, y) { return S.concat(x, S.concat(middle, y)); }\n    }); };\n};\nexports.intercalate = intercalate;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * Always return the first argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.first<number>().concat(1, 2), 1)\n *\n * @category instances\n * @since 2.10.0\n */\nvar first = function () { return ({ concat: function_1.identity }); };\nexports.first = first;\n/**\n * Always return the last argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.last<number>().concat(1, 2), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nvar last = function () { return ({ concat: function (_, y) { return y; } }); };\nexports.last = last;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * const sum = concatAll(N.SemigroupSum)(0)\n *\n * assert.deepStrictEqual(sum([1, 2, 3]), 6)\n * assert.deepStrictEqual(sum([]), 0)\n *\n * @since 2.10.0\n */\nexports.concatAll = M.concatAll;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `void` module instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupVoid = (0, exports.constant)(undefined);\n/**\n * Use [`getAssignSemigroup`](./struct.ts.html#getAssignSemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar getObjectSemigroup = function () { return ({\n    concat: function (first, second) { return Object.assign({}, first, second); }\n}); };\nexports.getObjectSemigroup = getObjectSemigroup;\n/**\n * Use [`last`](#last) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getLastSemigroup = exports.last;\n/**\n * Use [`first`](#first) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getFirstSemigroup = exports.first;\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleSemigroup = exports.tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getStructSemigroup = exports.struct;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getDualSemigroup = exports.reverse;\n/**\n * Use [`max`](#max) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getJoinSemigroup = exports.max;\n/**\n * Use [`min`](#min) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getMeetSemigroup = exports.min;\n/**\n * Use [`intercalate`](#intercalate) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexports.getIntercalateSemigroup = exports.intercalate;\nfunction fold(S) {\n    var concatAllS = (0, exports.concatAll)(S);\n    return function (startWith, as) { return (as === undefined ? concatAllS(startWith) : concatAllS(startWith)(as)); };\n}\nexports.fold = fold;\n/**\n * Use [`SemigroupAll`](./boolean.ts.html#SemigroupAll) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupAll = {\n    concat: function (x, y) { return x && y; }\n};\n/**\n * Use [`SemigroupAny`](./boolean.ts.html#SemigroupAny) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupAny = {\n    concat: function (x, y) { return x || y; }\n};\n/**\n * Use [`getSemigroup`](./function.ts.html#getSemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getFunctionSemigroup = function_1.getSemigroup;\n/**\n * Use [`Semigroup`](./string.ts.html#Semigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupString = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupSum`](./number.ts.html#SemigroupSum) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupSum = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupProduct`](./number.ts.html#SemigroupProduct) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupProduct = {\n    concat: function (x, y) { return x * y; }\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reduceRight = exports.foldMap = exports.reduce = exports.mapWithIndex = exports.map = exports.flatten = exports.duplicate = exports.extend = exports.flatMap = exports.ap = exports.alt = exports.altW = exports.of = exports.chunksOf = exports.splitAt = exports.chop = exports.chainWithIndex = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.modifyAt = exports.updateAt = exports.sort = exports.groupBy = exports.group = exports.reverse = exports.concat = exports.concatW = exports.fromArray = exports.unappend = exports.unprepend = exports.range = exports.replicate = exports.makeBy = exports.fromReadonlyArray = exports.rotate = exports.union = exports.sortBy = exports.uniq = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.append = exports.appendW = exports.prepend = exports.prependW = exports.isOutOfBound = exports.isNonEmpty = exports.empty = void 0;\nexports.groupSort = exports.chain = exports.intercalate = exports.updateLast = exports.modifyLast = exports.updateHead = exports.modifyHead = exports.matchRight = exports.matchLeft = exports.concatAll = exports.max = exports.min = exports.init = exports.last = exports.tail = exports.head = exports.apS = exports.bind = exports.let = exports.bindTo = exports.Do = exports.Comonad = exports.Alt = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getUnionSemigroup = exports.getEq = exports.getSemigroup = exports.getShow = exports.URI = exports.extract = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.foldMapWithIndex = exports.reduceWithIndex = void 0;\nexports.readonlyNonEmptyArray = exports.fold = exports.prependToAll = exports.insertAt = exports.snoc = exports.cons = exports.unsnoc = exports.uncons = exports.filterWithIndex = exports.filter = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Ord_1 = require(\"./Ord\");\nvar Se = __importStar(require(\"./Semigroup\"));\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nexports.empty = _.emptyReadonlyArray;\n/**\n * @internal\n */\nexports.isNonEmpty = _.isNonEmpty;\n/**\n * @internal\n */\nvar isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\nexports.isOutOfBound = isOutOfBound;\n/**\n * @internal\n */\nvar prependW = function (head) {\n    return function (tail) {\n        return __spreadArray([head], tail, true);\n    };\n};\nexports.prependW = prependW;\n/**\n * @internal\n */\nexports.prepend = exports.prependW;\n/**\n * @internal\n */\nvar appendW = function (end) {\n    return function (init) {\n        return __spreadArray(__spreadArray([], init, true), [end], false);\n    };\n};\nexports.appendW = appendW;\n/**\n * @internal\n */\nexports.append = exports.appendW;\n/**\n * @internal\n */\nvar unsafeInsertAt = function (i, a, as) {\n    if ((0, exports.isNonEmpty)(as)) {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\nexports.unsafeInsertAt = unsafeInsertAt;\n/**\n * @internal\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    if (as[i] === a) {\n        return as;\n    }\n    else {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs[i] = a;\n        return xs;\n    }\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * Remove duplicates from a `ReadonlyNonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.11.0\n */\nvar uniq = function (E) {\n    return function (as) {\n        if (as.length === 1) {\n            return as;\n        }\n        var out = [(0, exports.head)(as)];\n        var rest = (0, exports.tail)(as);\n        var _loop_1 = function (a) {\n            if (out.every(function (o) { return !E.equals(o, a); })) {\n                out.push(a);\n            }\n        };\n        for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n            var a = rest_1[_i];\n            _loop_1(a);\n        }\n        return out;\n    };\n};\nexports.uniq = uniq;\n/**\n * Sort the elements of a `ReadonlyNonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = RNEA.sortBy([byName, byAge])\n *\n * const persons: RNEA.ReadonlyNonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.11.0\n */\nvar sortBy = function (ords) {\n    if ((0, exports.isNonEmpty)(ords)) {\n        var M = (0, Ord_1.getMonoid)();\n        return (0, exports.sort)(ords.reduce(M.concat, M.empty));\n    }\n    return function_1.identity;\n};\nexports.sortBy = sortBy;\n/**\n * @since 2.11.0\n */\nvar union = function (E) {\n    var uniqE = (0, exports.uniq)(E);\n    return function (second) { return function (first) { return uniqE((0, function_1.pipe)(first, concat(second))); }; };\n};\nexports.union = union;\n/**\n * Rotate a `ReadonlyNonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @since 2.11.0\n */\nvar rotate = function (n) {\n    return function (as) {\n        var len = as.length;\n        var m = Math.round(n) % len;\n        if ((0, exports.isOutOfBound)(Math.abs(m), as) || m === 0) {\n            return as;\n        }\n        if (m < 0) {\n            var _a = (0, exports.splitAt)(-m)(as), f = _a[0], s = _a[1];\n            return (0, function_1.pipe)(s, concat(f));\n        }\n        else {\n            return (0, exports.rotate)(m - len)(as);\n        }\n    };\n};\nexports.rotate = rotate;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Return a `ReadonlyNonEmptyArray` from a `ReadonlyArray` returning `none` if the input is empty.\n *\n * @category conversions\n * @since 2.5.0\n */\nvar fromReadonlyArray = function (as) {\n    return (0, exports.isNonEmpty)(as) ? _.some(as) : _.none;\n};\nexports.fromReadonlyArray = fromReadonlyArray;\n/**\n * Return a `ReadonlyNonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar makeBy = function (f) {\n    return function (n) {\n        var j = Math.max(0, Math.floor(n));\n        var out = [f(0)];\n        for (var i = 1; i < j; i++) {\n            out.push(f(i));\n        }\n        return out;\n    };\n};\nexports.makeBy = makeBy;\n/**\n * Create a `ReadonlyNonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar replicate = function (a) { return (0, exports.makeBy)(function () { return a; }); };\nexports.replicate = replicate;\n/**\n * Create a `ReadonlyNonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar range = function (start, end) {\n    return start <= end ? (0, exports.makeBy)(function (i) { return start + i; })(end - start + 1) : [start];\n};\nexports.range = range;\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3, 4]), [1, [2, 3, 4]])\n *\n * @since 2.9.0\n */\nvar unprepend = function (as) { return [(0, exports.head)(as), (0, exports.tail)(as)]; };\nexports.unprepend = unprepend;\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @since 2.9.0\n */\nvar unappend = function (as) { return [(0, exports.init)(as), (0, exports.last)(as)]; };\nexports.unappend = unappend;\n/**\n * @category conversions\n * @since 2.5.0\n */\nvar fromArray = function (as) { return (0, exports.fromReadonlyArray)(as.slice()); };\nexports.fromArray = fromArray;\nfunction concatW(second) {\n    return function (first) { return first.concat(second); };\n}\nexports.concatW = concatW;\nfunction concat(x, y) {\n    return y ? x.concat(y) : function (y) { return y.concat(x); };\n}\nexports.concat = concat;\n/**\n * @since 2.5.0\n */\nvar reverse = function (as) {\n    return as.length === 1 ? as : __spreadArray([(0, exports.last)(as)], as.slice(0, -1).reverse(), true);\n};\nexports.reverse = reverse;\nfunction group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return exports.empty;\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\nexports.group = group;\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @since 2.5.0\n */\nvar groupBy = function (f) {\n    return function (as) {\n        var out = {};\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            var k = f(a);\n            if (_.has.call(out, k)) {\n                out[k].push(a);\n            }\n            else {\n                out[k] = [a];\n            }\n        }\n        return out;\n    };\n};\nexports.groupBy = groupBy;\n/**\n * @since 2.5.0\n */\nvar sort = function (O) {\n    return function (as) {\n        return as.length === 1 ? as : as.slice().sort(O.compare);\n    };\n};\nexports.sort = sort;\n/**\n * @since 2.5.0\n */\nvar updateAt = function (i, a) {\n    return (0, exports.modifyAt)(i, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * @since 2.5.0\n */\nvar modifyAt = function (i, f) {\n    return function (as) {\n        return (0, exports.isOutOfBound)(i, as) ? _.none : _.some((0, exports.unsafeUpdateAt)(i, f(as[i]), as));\n    };\n};\nexports.modifyAt = modifyAt;\n/**\n * @since 2.5.1\n */\nvar zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return (0, exports.zipWith)(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * @since 2.5.1\n */\nvar unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nvar prependAll = function (middle) {\n    return function (as) {\n        var out = [middle, as[0]];\n        for (var i = 1; i < as.length; i++) {\n            out.push(middle, as[i]);\n        }\n        return out;\n    };\n};\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nvar intersperse = function (middle) {\n    return function (as) {\n        var rest = (0, exports.tail)(as);\n        return (0, exports.isNonEmpty)(rest) ? (0, function_1.pipe)(rest, (0, exports.prependAll)(middle), (0, exports.prepend)((0, exports.head)(as))) : as;\n    };\n};\nexports.intersperse = intersperse;\n/**\n * @category sequencing\n * @since 2.10.0\n */\nvar chainWithIndex = function (f) {\n    return function (as) {\n        var out = _.fromReadonlyNonEmptyArray(f(0, (0, exports.head)(as)));\n        for (var i = 1; i < as.length; i++) {\n            out.push.apply(out, f(i, as[i]));\n        }\n        return out;\n    };\n};\nexports.chainWithIndex = chainWithIndex;\n/**\n * A useful recursion pattern for processing a `ReadonlyNonEmptyArray` to produce a new `ReadonlyNonEmptyArray`, often used for \"chopping\" up the input\n * `ReadonlyNonEmptyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyNonEmptyArray` and produce a\n * value and the tail of the `ReadonlyNonEmptyArray`.\n *\n * @since 2.10.0\n */\nvar chop = function (f) {\n    return function (as) {\n        var _a = f(as), b = _a[0], rest = _a[1];\n        var out = [b];\n        var next = rest;\n        while ((0, exports.isNonEmpty)(next)) {\n            var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n            out.push(b_1);\n            next = rest_2;\n        }\n        return out;\n    };\n};\nexports.chop = chop;\n/**\n * Splits a `ReadonlyNonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @since 2.10.0\n */\nvar splitAt = function (n) {\n    return function (as) {\n        var m = Math.max(1, n);\n        return m >= as.length ? [as, exports.empty] : [(0, function_1.pipe)(as.slice(1, m), (0, exports.prepend)((0, exports.head)(as))), as.slice(m)];\n    };\n};\nexports.splitAt = splitAt;\n/**\n * Splits a `ReadonlyNonEmptyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyNonEmptyArray`.\n *\n * @since 2.10.0\n */\nvar chunksOf = function (n) { return (0, exports.chop)((0, exports.splitAt)(n)); };\nexports.chunksOf = chunksOf;\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.mapWithIndex)(f)); };\nvar _ap = function (fab, fa) { return (0, function_1.pipe)(fab, (0, exports.ap)(fa)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return (0, function_1.pipe)(wa, (0, exports.extend)(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduce)(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = (0, exports.foldMap)(M);\n    return function (fa, f) { return (0, function_1.pipe)(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduceRight)(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = (0, exports.traverse)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return (0, function_1.pipe)(fa, (0, exports.alt)(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return (0, function_1.pipe)(fa, (0, exports.reduceWithIndex)(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = (0, exports.foldMapWithIndex)(M);\n    return function (fa, f) { return (0, function_1.pipe)(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return (0, function_1.pipe)(fa, (0, exports.reduceRightWithIndex)(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = (0, exports.traverseWithIndex)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseWithIndexF(f)); };\n};\n/**\n * @category constructors\n * @since 2.5.0\n */\nexports.of = _.singleton;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3] as RNEA.ReadonlyNonEmptyArray<number>,\n *     RNEA.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nvar altW = function (that) {\n    return function (as) {\n        return (0, function_1.pipe)(as, concatW(that()));\n    };\n};\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `ReadonlyNonEmptyArray` concatenates the inputs into a single array.\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RNEA.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.6.2\n */\nexports.alt = exports.altW;\n/**\n * @since 2.5.0\n */\nvar ap = function (as) { return (0, exports.flatMap)(function (f) { return (0, function_1.pipe)(as, (0, exports.map)(f)); }); };\nexports.ap = ap;\n/**\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RNEA.flatMap((n) => [`a${n}`, `b${n}`])\n *   ),\n *   ['a1', 'b1', 'a2', 'b2', 'a3', 'b3']\n * )\n *\n * @category sequencing\n * @since 2.14.0\n */\nexports.flatMap = (0, function_1.dual)(2, function (ma, f) {\n    return (0, function_1.pipe)(ma, (0, exports.chainWithIndex)(function (i, a) { return f(a, i); }));\n});\n/**\n * @since 2.5.0\n */\nvar extend = function (f) {\n    return function (as) {\n        var next = (0, exports.tail)(as);\n        var out = [f(as)];\n        while ((0, exports.isNonEmpty)(next)) {\n            out.push(f(next));\n            next = (0, exports.tail)(next);\n        }\n        return out;\n    };\n};\nexports.extend = extend;\n/**\n * @since 2.5.0\n */\nexports.duplicate = \n/*#__PURE__*/ (0, exports.extend)(function_1.identity);\n/**\n * @category sequencing\n * @since 2.5.0\n */\nexports.flatten = \n/*#__PURE__*/ (0, exports.flatMap)(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.5.0\n */\nvar map = function (f) {\n    return (0, exports.mapWithIndex)(function (_, a) { return f(a); });\n};\nexports.map = map;\n/**\n * @category mapping\n * @since 2.5.0\n */\nvar mapWithIndex = function (f) {\n    return function (as) {\n        var out = [f(0, (0, exports.head)(as))];\n        for (var i = 1; i < as.length; i++) {\n            out.push(f(i, as[i]));\n        }\n        return out;\n    };\n};\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category folding\n * @since 2.5.0\n */\nvar reduce = function (b, f) {\n    return (0, exports.reduceWithIndex)(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduce = reduce;\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category folding\n * @since 2.5.0\n */\nvar foldMap = function (S) {\n    return function (f) {\n        return function (as) {\n            return as.slice(1).reduce(function (s, a) { return S.concat(s, f(a)); }, f(as[0]));\n        };\n    };\n};\nexports.foldMap = foldMap;\n/**\n * @category folding\n * @since 2.5.0\n */\nvar reduceRight = function (b, f) {\n    return (0, exports.reduceRightWithIndex)(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduceRight = reduceRight;\n/**\n * @category folding\n * @since 2.5.0\n */\nvar reduceWithIndex = function (b, f) {\n    return function (as) {\n        return as.reduce(function (b, a, i) { return f(i, b, a); }, b);\n    };\n};\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category folding\n * @since 2.5.0\n */\nvar foldMapWithIndex = function (S) {\n    return function (f) {\n        return function (as) {\n            return as.slice(1).reduce(function (s, a, i) { return S.concat(s, f(i + 1, a)); }, f(0, as[0]));\n        };\n    };\n};\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category folding\n * @since 2.5.0\n */\nvar reduceRightWithIndex = function (b, f) {\n    return function (as) {\n        return as.reduceRight(function (b, a, i) { return f(i, a, b); }, b);\n    };\n};\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * @category traversing\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = (0, exports.traverseWithIndex)(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @category traversing\n * @since 2.6.3\n */\nvar sequence = function (F) { return (0, exports.traverseWithIndex)(F)(function_1.SK); };\nexports.sequence = sequence;\n/**\n * @category sequencing\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) {\n    return function (f) {\n        return function (as) {\n            var out = F.map(f(0, (0, exports.head)(as)), exports.of);\n            for (var i = 1; i < as.length; i++) {\n                out = F.ap(F.map(out, function (bs) { return function (b) { return (0, function_1.pipe)(bs, (0, exports.append)(b)); }; }), f(i, as[i]));\n            }\n            return out;\n        };\n    };\n};\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Comonad\n * @since 2.6.3\n */\nexports.extract = _.head;\n/**\n * @category type lambdas\n * @since 2.5.0\n */\nexports.URI = 'ReadonlyNonEmptyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nvar getShow = function (S) { return ({\n    show: function (as) { return \"[\".concat(as.map(S.show).join(', '), \"]\"); }\n}); };\nexports.getShow = getShow;\n/**\n * Builds a `Semigroup` instance for `ReadonlyNonEmptyArray`\n *\n * @category instances\n * @since 2.5.0\n */\nvar getSemigroup = function () { return ({\n    concat: concat\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * @example\n * import { getEq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.5.0\n */\nvar getEq = function (E) {\n    return (0, Eq_1.fromEquals)(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\nexports.getEq = getEq;\n/**\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (E) {\n    var unionE = (0, exports.union)(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexports.apFirst = (0, Apply_1.apFirst)(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexports.apSecond = (0, Apply_1.apSecond)(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chainFirst(() => ['a', 'b'])\n *   ),\n *   [1, 1, 2, 2, 3, 3]\n * )\n *\n * @category sequencing\n * @since 2.5.0\n */\nexports.chainFirst = (0, Chain_1.chainFirst)(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: exports.flatMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Comonad = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend,\n    extract: exports.extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexports.Do = (0, exports.of)(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bindTo = (0, Functor_1.bindTo)(exports.Functor);\nvar let_ = /*#__PURE__*/ (0, Functor_1.let)(exports.Functor);\nexports.let = let_;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bind = (0, Chain_1.bind)(exports.Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.apS = (0, Apply_1.apS)(exports.Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.5.0\n */\nexports.head = exports.extract;\n/**\n * @since 2.5.0\n */\nexports.tail = _.tail;\n/**\n * @since 2.5.0\n */\nvar last = function (as) { return as[as.length - 1]; };\nexports.last = last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.5.0\n */\nvar init = function (as) { return as.slice(0, -1); };\nexports.init = init;\n/**\n * @since 2.5.0\n */\nvar min = function (O) {\n    var S = Se.min(O);\n    return function (as) { return as.reduce(S.concat); };\n};\nexports.min = min;\n/**\n * @since 2.5.0\n */\nvar max = function (O) {\n    var S = Se.max(O);\n    return function (as) { return as.reduce(S.concat); };\n};\nexports.max = max;\n/**\n * @since 2.10.0\n */\nvar concatAll = function (S) {\n    return function (as) {\n        return as.reduce(S.concat);\n    };\n};\nexports.concatAll = concatAll;\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nvar matchLeft = function (f) {\n    return function (as) {\n        return f((0, exports.head)(as), (0, exports.tail)(as));\n    };\n};\nexports.matchLeft = matchLeft;\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nvar matchRight = function (f) {\n    return function (as) {\n        return f((0, exports.init)(as), (0, exports.last)(as));\n    };\n};\nexports.matchRight = matchRight;\n/**\n * Apply a function to the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyHead = function (f) {\n    return function (as) {\n        return __spreadArray([f((0, exports.head)(as))], (0, exports.tail)(as), true);\n    };\n};\nexports.modifyHead = modifyHead;\n/**\n * Change the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar updateHead = function (a) { return (0, exports.modifyHead)(function () { return a; }); };\nexports.updateHead = updateHead;\n/**\n * Apply a function to the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyLast = function (f) {\n    return function (as) {\n        return (0, function_1.pipe)((0, exports.init)(as), (0, exports.append)(f((0, exports.last)(as))));\n    };\n};\nexports.modifyLast = modifyLast;\n/**\n * Change the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar updateLast = function (a) { return (0, exports.modifyLast)(function () { return a; }); };\nexports.updateLast = updateLast;\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`, then folds the results using the provided `Semigroup`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Semigroup)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nvar intercalate = function (S) {\n    var concatAllS = (0, exports.concatAll)(S);\n    return function (middle) { return (0, function_1.flow)((0, exports.intersperse)(middle), concatAllS); };\n};\nexports.intercalate = intercalate;\n// -------------------------------------------------------------------------------------\n// legacy\n// -------------------------------------------------------------------------------------\n/**\n * Alias of `flatMap`.\n *\n * @category legacy\n * @since 2.5.0\n */\nexports.chain = exports.flatMap;\nfunction groupSort(O) {\n    var sortO = (0, exports.sort)(O);\n    var groupO = group(O);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? groupO(sortO(as)) : exports.empty); };\n}\nexports.groupSort = groupSort;\nfunction filter(predicate) {\n    return (0, exports.filterWithIndex)(function (_, a) { return predicate(a); });\n}\nexports.filter = filter;\n/**\n * Use [`filterWithIndex`](./ReadonlyArray.ts.html#filterwithindex) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nvar filterWithIndex = function (predicate) {\n    return function (as) {\n        return (0, exports.fromReadonlyArray)(as.filter(function (a, i) { return predicate(i, a); }));\n    };\n};\nexports.filterWithIndex = filterWithIndex;\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category zone of death\n * @since 2.10.0\n * @deprecated\n */\nexports.uncons = exports.unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category zone of death\n * @since 2.10.0\n * @deprecated\n */\nexports.unsnoc = exports.unappend;\nfunction cons(head, tail) {\n    return tail === undefined ? (0, exports.prepend)(head) : (0, function_1.pipe)(tail, (0, exports.prepend)(head));\n}\nexports.cons = cons;\n/**\n * Use [`append`](./ReadonlyArray.ts.html#append) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nvar snoc = function (init, end) { return (0, function_1.pipe)(init, concat([end])); };\nexports.snoc = snoc;\n/**\n * Use [`insertAt`](./ReadonlyArray.ts.html#insertat) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nvar insertAt = function (i, a) {\n    return function (as) {\n        return i < 0 || i > as.length ? _.none : _.some((0, exports.unsafeInsertAt)(i, a, as));\n    };\n};\nexports.insertAt = insertAt;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexports.fold = exports.concatAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `RNEA.Functor` instead of `RNEA.readonlyNonEmptyArray`\n * (where `RNEA` is from `import RNEA from 'fp-ts/ReadonlyNonEmptyArray'`)\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexports.readonlyNonEmptyArray = {\n    URI: exports.URI,\n    of: exports.of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: exports.flatMap,\n    extend: _extend,\n    extract: exports.extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mapWithIndex = exports.map = exports.flatten = exports.duplicate = exports.extend = exports.flatMap = exports.ap = exports.alt = exports.altW = exports.chunksOf = exports.splitAt = exports.chop = exports.chainWithIndex = exports.foldMap = exports.foldMapWithIndex = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.of = exports.copy = exports.modifyAt = exports.updateAt = exports.insertAt = exports.sort = exports.groupBy = exports.group = exports.reverse = exports.concat = exports.concatW = exports.unappend = exports.unprepend = exports.range = exports.replicate = exports.makeBy = exports.fromArray = exports.fromReadonlyNonEmptyArray = exports.rotate = exports.union = exports.sortBy = exports.uniq = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.append = exports.appendW = exports.prepend = exports.prependW = exports.isOutOfBound = exports.isNonEmpty = void 0;\nexports.chain = exports.intercalate = exports.updateLast = exports.modifyLast = exports.updateHead = exports.modifyHead = exports.matchRight = exports.matchLeft = exports.concatAll = exports.max = exports.min = exports.init = exports.last = exports.tail = exports.head = exports.apS = exports.bind = exports.let = exports.bindTo = exports.Do = exports.Comonad = exports.Alt = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getUnionSemigroup = exports.getEq = exports.getSemigroup = exports.getShow = exports.URI = exports.extract = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.reduce = void 0;\nexports.nonEmptyArray = exports.fold = exports.prependToAll = exports.snoc = exports.cons = exports.unsnoc = exports.uncons = exports.filterWithIndex = exports.filter = exports.groupSort = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Ord_1 = require(\"./Ord\");\nvar RNEA = __importStar(require(\"./ReadonlyNonEmptyArray\"));\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nvar isNonEmpty = function (as) { return as.length > 0; };\nexports.isNonEmpty = isNonEmpty;\n/**\n * @internal\n */\nvar isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\nexports.isOutOfBound = isOutOfBound;\n/**\n * @internal\n */\nvar prependW = function (head) {\n    return function (tail) {\n        return __spreadArray([head], tail, true);\n    };\n};\nexports.prependW = prependW;\n/**\n * @internal\n */\nexports.prepend = exports.prependW;\n/**\n * @internal\n */\nvar appendW = function (end) {\n    return function (init) {\n        return __spreadArray(__spreadArray([], init, true), [end], false);\n    };\n};\nexports.appendW = appendW;\n/**\n * @internal\n */\nexports.append = exports.appendW;\n/**\n * @internal\n */\nvar unsafeInsertAt = function (i, a, as) {\n    if ((0, exports.isNonEmpty)(as)) {\n        var xs = (0, exports.fromReadonlyNonEmptyArray)(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\nexports.unsafeInsertAt = unsafeInsertAt;\n/**\n * @internal\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    var xs = (0, exports.fromReadonlyNonEmptyArray)(as);\n    xs[i] = a;\n    return xs;\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * Remove duplicates from a `NonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.11.0\n */\nvar uniq = function (E) {\n    return function (as) {\n        if (as.length === 1) {\n            return (0, exports.copy)(as);\n        }\n        var out = [(0, exports.head)(as)];\n        var rest = (0, exports.tail)(as);\n        var _loop_1 = function (a) {\n            if (out.every(function (o) { return !E.equals(o, a); })) {\n                out.push(a);\n            }\n        };\n        for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n            var a = rest_1[_i];\n            _loop_1(a);\n        }\n        return out;\n    };\n};\nexports.uniq = uniq;\n/**\n * Sort the elements of a `NonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = NEA.sortBy([byName, byAge])\n *\n * const persons: NEA.NonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.11.0\n */\nvar sortBy = function (ords) {\n    if ((0, exports.isNonEmpty)(ords)) {\n        var M = (0, Ord_1.getMonoid)();\n        return (0, exports.sort)(ords.reduce(M.concat, M.empty));\n    }\n    return exports.copy;\n};\nexports.sortBy = sortBy;\n/**\n * @since 2.11.0\n */\nvar union = function (E) {\n    var uniqE = (0, exports.uniq)(E);\n    return function (second) { return function (first) { return uniqE((0, function_1.pipe)(first, concat(second))); }; };\n};\nexports.union = union;\n/**\n * Rotate a `NonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @since 2.11.0\n */\nvar rotate = function (n) {\n    return function (as) {\n        var len = as.length;\n        var m = Math.round(n) % len;\n        if ((0, exports.isOutOfBound)(Math.abs(m), as) || m === 0) {\n            return (0, exports.copy)(as);\n        }\n        if (m < 0) {\n            var _a = (0, exports.splitAt)(-m)(as), f = _a[0], s = _a[1];\n            return (0, function_1.pipe)(s, concat(f));\n        }\n        else {\n            return (0, exports.rotate)(m - len)(as);\n        }\n    };\n};\nexports.rotate = rotate;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category conversions\n * @since 2.10.0\n */\nexports.fromReadonlyNonEmptyArray = _.fromReadonlyNonEmptyArray;\n/**\n * Builds a `NonEmptyArray` from an `Array` returning `none` if `as` is an empty array\n *\n * @category conversions\n * @since 2.0.0\n */\nvar fromArray = function (as) { return ((0, exports.isNonEmpty)(as) ? _.some(as) : _.none); };\nexports.fromArray = fromArray;\n/**\n * Return a `NonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar makeBy = function (f) {\n    return function (n) {\n        var j = Math.max(0, Math.floor(n));\n        var out = [f(0)];\n        for (var i = 1; i < j; i++) {\n            out.push(f(i));\n        }\n        return out;\n    };\n};\nexports.makeBy = makeBy;\n/**\n * Create a `NonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar replicate = function (a) { return (0, exports.makeBy)(function () { return a; }); };\nexports.replicate = replicate;\n/**\n * Create a `NonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar range = function (start, end) {\n    return start <= end ? (0, exports.makeBy)(function (i) { return start + i; })(end - start + 1) : [start];\n};\nexports.range = range;\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3]), [1, [2, 3]])\n *\n * @since 2.9.0\n */\nvar unprepend = function (as) { return [(0, exports.head)(as), (0, exports.tail)(as)]; };\nexports.unprepend = unprepend;\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @since 2.9.0\n */\nvar unappend = function (as) { return [(0, exports.init)(as), (0, exports.last)(as)]; };\nexports.unappend = unappend;\nfunction concatW(second) {\n    return function (first) { return first.concat(second); };\n}\nexports.concatW = concatW;\nfunction concat(x, y) {\n    return y ? x.concat(y) : function (y) { return y.concat(x); };\n}\nexports.concat = concat;\n/**\n * @since 2.0.0\n */\nvar reverse = function (as) { return __spreadArray([(0, exports.last)(as)], as.slice(0, -1).reverse(), true); };\nexports.reverse = reverse;\nfunction group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return [];\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\nexports.group = group;\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @since 2.0.0\n */\nvar groupBy = function (f) {\n    return function (as) {\n        var out = {};\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            var k = f(a);\n            if (_.has.call(out, k)) {\n                out[k].push(a);\n            }\n            else {\n                out[k] = [a];\n            }\n        }\n        return out;\n    };\n};\nexports.groupBy = groupBy;\n/**\n * @since 2.0.0\n */\nvar sort = function (O) {\n    return function (as) {\n        return as.slice().sort(O.compare);\n    };\n};\nexports.sort = sort;\n/**\n * @since 2.0.0\n */\nvar insertAt = function (i, a) {\n    return function (as) {\n        return i < 0 || i > as.length ? _.none : _.some((0, exports.unsafeInsertAt)(i, a, as));\n    };\n};\nexports.insertAt = insertAt;\n/**\n * @since 2.0.0\n */\nvar updateAt = function (i, a) {\n    return (0, exports.modifyAt)(i, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * @since 2.0.0\n */\nvar modifyAt = function (i, f) {\n    return function (as) {\n        return (0, exports.isOutOfBound)(i, as) ? _.none : _.some((0, exports.unsafeUpdateAt)(i, f(as[i]), as));\n    };\n};\nexports.modifyAt = modifyAt;\n/**\n * @since 2.0.0\n */\nexports.copy = exports.fromReadonlyNonEmptyArray;\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar of = function (a) { return [a]; };\nexports.of = of;\n/**\n * @since 2.5.1\n */\nvar zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return (0, exports.zipWith)(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * @since 2.5.1\n */\nvar unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nvar prependAll = function (middle) {\n    return function (as) {\n        var out = [middle, as[0]];\n        for (var i = 1; i < as.length; i++) {\n            out.push(middle, as[i]);\n        }\n        return out;\n    };\n};\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nvar intersperse = function (middle) {\n    return function (as) {\n        var rest = (0, exports.tail)(as);\n        return (0, exports.isNonEmpty)(rest) ? (0, function_1.pipe)(rest, (0, exports.prependAll)(middle), (0, exports.prepend)((0, exports.head)(as))) : (0, exports.copy)(as);\n    };\n};\nexports.intersperse = intersperse;\n/**\n * @category folding\n * @since 2.0.0\n */\nexports.foldMapWithIndex = RNEA.foldMapWithIndex;\n/**\n * @category folding\n * @since 2.0.0\n */\nexports.foldMap = RNEA.foldMap;\n/**\n * @category sequencing\n * @since 2.10.0\n */\nvar chainWithIndex = function (f) {\n    return function (as) {\n        var out = (0, exports.fromReadonlyNonEmptyArray)(f(0, (0, exports.head)(as)));\n        for (var i = 1; i < as.length; i++) {\n            out.push.apply(out, f(i, as[i]));\n        }\n        return out;\n    };\n};\nexports.chainWithIndex = chainWithIndex;\n/**\n * @since 2.10.0\n */\nvar chop = function (f) {\n    return function (as) {\n        var _a = f(as), b = _a[0], rest = _a[1];\n        var out = [b];\n        var next = rest;\n        while ((0, exports.isNonEmpty)(next)) {\n            var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n            out.push(b_1);\n            next = rest_2;\n        }\n        return out;\n    };\n};\nexports.chop = chop;\n/**\n * Splits a `NonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @since 2.10.0\n */\nvar splitAt = function (n) {\n    return function (as) {\n        var m = Math.max(1, n);\n        return m >= as.length ? [(0, exports.copy)(as), []] : [(0, function_1.pipe)(as.slice(1, m), (0, exports.prepend)((0, exports.head)(as))), as.slice(m)];\n    };\n};\nexports.splitAt = splitAt;\n/**\n * @since 2.10.0\n */\nvar chunksOf = function (n) { return (0, exports.chop)((0, exports.splitAt)(n)); };\nexports.chunksOf = chunksOf;\n/* istanbul ignore next */\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.mapWithIndex)(f)); };\n/* istanbul ignore next */\nvar _ap = function (fab, fa) { return (0, function_1.pipe)(fab, (0, exports.ap)(fa)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return (0, function_1.pipe)(wa, (0, exports.extend)(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduce)(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = (0, exports.foldMap)(M);\n    return function (fa, f) { return (0, function_1.pipe)(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduceRight)(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = (0, exports.traverse)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return (0, function_1.pipe)(fa, (0, exports.alt)(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return (0, function_1.pipe)(fa, (0, exports.reduceWithIndex)(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = (0, exports.foldMapWithIndex)(M);\n    return function (fa, f) { return (0, function_1.pipe)(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return (0, function_1.pipe)(fa, (0, exports.reduceRightWithIndex)(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = (0, exports.traverseWithIndex)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseWithIndexF(f)); };\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3] as NEA.NonEmptyArray<number>,\n *     NEA.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nvar altW = function (that) {\n    return function (as) {\n        return (0, function_1.pipe)(as, concatW(that()));\n    };\n};\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `NonEmptyArray` concatenates the inputs into a single array.\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     NEA.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.6.2\n */\nexports.alt = exports.altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @since 2.0.0\n */\nvar ap = function (as) {\n    return (0, exports.flatMap)(function (f) { return (0, function_1.pipe)(as, (0, exports.map)(f)); });\n};\nexports.ap = ap;\n/**\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     NEA.flatMap((n) => [`a${n}`, `b${n}`])\n *   ),\n *   ['a1', 'b1', 'a2', 'b2', 'a3', 'b3']\n * )\n *\n * @category sequencing\n * @since 2.14.0\n */\nexports.flatMap = (0, function_1.dual)(2, function (ma, f) {\n    return (0, function_1.pipe)(ma, (0, exports.chainWithIndex)(function (i, a) { return f(a, i); }));\n});\n/**\n * @since 2.0.0\n */\nvar extend = function (f) {\n    return function (as) {\n        var next = (0, exports.tail)(as);\n        var out = [f(as)];\n        while ((0, exports.isNonEmpty)(next)) {\n            out.push(f(next));\n            next = (0, exports.tail)(next);\n        }\n        return out;\n    };\n};\nexports.extend = extend;\n/**\n * @since 2.5.0\n */\nexports.duplicate = (0, exports.extend)(function_1.identity);\n/**\n * @category sequencing\n * @since 2.5.0\n */\nexports.flatten = (0, exports.flatMap)(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.0.0\n */\nvar map = function (f) { return (0, exports.mapWithIndex)(function (_, a) { return f(a); }); };\nexports.map = map;\n/**\n * @category mapping\n * @since 2.0.0\n */\nvar mapWithIndex = function (f) {\n    return function (as) {\n        var out = [f(0, (0, exports.head)(as))];\n        for (var i = 1; i < as.length; i++) {\n            out.push(f(i, as[i]));\n        }\n        return out;\n    };\n};\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category folding\n * @since 2.0.0\n */\nexports.reduce = RNEA.reduce;\n/**\n * @category folding\n * @since 2.0.0\n */\nexports.reduceWithIndex = RNEA.reduceWithIndex;\n/**\n * @category folding\n * @since 2.0.0\n */\nexports.reduceRight = RNEA.reduceRight;\n/**\n * @category folding\n * @since 2.0.0\n */\nexports.reduceRightWithIndex = RNEA.reduceRightWithIndex;\n/**\n * @category traversing\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = (0, exports.traverseWithIndex)(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @category traversing\n * @since 2.6.3\n */\nvar sequence = function (F) { return (0, exports.traverseWithIndex)(F)(function (_, a) { return a; }); };\nexports.sequence = sequence;\n/**\n * @category sequencing\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) {\n    return function (f) {\n        return function (as) {\n            var out = F.map(f(0, (0, exports.head)(as)), exports.of);\n            for (var i = 1; i < as.length; i++) {\n                out = F.ap(F.map(out, function (bs) { return function (b) { return (0, function_1.pipe)(bs, (0, exports.append)(b)); }; }), f(i, as[i]));\n            }\n            return out;\n        };\n    };\n};\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @since 2.7.0\n */\nexports.extract = RNEA.head;\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexports.URI = 'NonEmptyArray';\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.getShow = RNEA.getShow;\n/**\n * Builds a `Semigroup` instance for `NonEmptyArray`\n *\n * @category instances\n * @since 2.0.0\n */\nvar getSemigroup = function () { return ({\n    concat: concat\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * @example\n * import { getEq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getEq = RNEA.getEq;\n/**\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (E) {\n    var unionE = (0, exports.union)(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexports.apFirst = (0, Apply_1.apFirst)(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexports.apSecond = (0, Apply_1.apSecond)(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category sequencing\n * @since 2.5.0\n */\nexports.chainFirst = \n/*#__PURE__*/ (0, Chain_1.chainFirst)(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: exports.flatMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Comonad = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend,\n    extract: exports.extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexports.Do = (0, exports.of)(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bindTo = (0, Functor_1.bindTo)(exports.Functor);\nvar let_ = /*#__PURE__*/ (0, Functor_1.let)(exports.Functor);\nexports.let = let_;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bind = (0, Chain_1.bind)(exports.Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.apS = (0, Apply_1.apS)(exports.Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.0.0\n */\nexports.head = RNEA.head;\n/**\n * @since 2.0.0\n */\nvar tail = function (as) { return as.slice(1); };\nexports.tail = tail;\n/**\n * @since 2.0.0\n */\nexports.last = RNEA.last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.2.0\n */\nvar init = function (as) { return as.slice(0, -1); };\nexports.init = init;\n/**\n * @since 2.0.0\n */\nexports.min = RNEA.min;\n/**\n * @since 2.0.0\n */\nexports.max = RNEA.max;\n/**\n * @since 2.10.0\n */\nvar concatAll = function (S) {\n    return function (as) {\n        return as.reduce(S.concat);\n    };\n};\nexports.concatAll = concatAll;\n/**\n * Break an `Array` into its first element and remaining elements.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nvar matchLeft = function (f) {\n    return function (as) {\n        return f((0, exports.head)(as), (0, exports.tail)(as));\n    };\n};\nexports.matchLeft = matchLeft;\n/**\n * Break an `Array` into its initial elements and the last element.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nvar matchRight = function (f) {\n    return function (as) {\n        return f((0, exports.init)(as), (0, exports.last)(as));\n    };\n};\nexports.matchRight = matchRight;\n/**\n * Apply a function to the head, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyHead = function (f) {\n    return function (as) {\n        return __spreadArray([f((0, exports.head)(as))], (0, exports.tail)(as), true);\n    };\n};\nexports.modifyHead = modifyHead;\n/**\n * Change the head, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar updateHead = function (a) { return (0, exports.modifyHead)(function () { return a; }); };\nexports.updateHead = updateHead;\n/**\n * Apply a function to the last element, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyLast = function (f) {\n    return function (as) {\n        return (0, function_1.pipe)((0, exports.init)(as), (0, exports.append)(f((0, exports.last)(as))));\n    };\n};\nexports.modifyLast = modifyLast;\n/**\n * Change the last element, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar updateLast = function (a) { return (0, exports.modifyLast)(function () { return a; }); };\nexports.updateLast = updateLast;\n/**\n * Places an element in between members of a `NonEmptyArray`, then folds the results using the provided `Semigroup`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Semigroup)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexports.intercalate = RNEA.intercalate;\n// -------------------------------------------------------------------------------------\n// legacy\n// -------------------------------------------------------------------------------------\n/**\n * Alias of `flatMap`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexports.chain = exports.flatMap;\nfunction groupSort(O) {\n    var sortO = (0, exports.sort)(O);\n    var groupO = group(O);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? groupO(sortO(as)) : []); };\n}\nexports.groupSort = groupSort;\nfunction filter(predicate) {\n    return (0, exports.filterWithIndex)(function (_, a) { return predicate(a); });\n}\nexports.filter = filter;\n/**\n * Use [`filterWithIndex`](./Array.ts.html#filterwithindex) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar filterWithIndex = function (predicate) {\n    return function (as) {\n        return (0, exports.fromArray)(as.filter(function (a, i) { return predicate(i, a); }));\n    };\n};\nexports.filterWithIndex = filterWithIndex;\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexports.uncons = exports.unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexports.unsnoc = exports.unappend;\nfunction cons(head, tail) {\n    return tail === undefined ? (0, exports.prepend)(head) : (0, function_1.pipe)(tail, (0, exports.prepend)(head));\n}\nexports.cons = cons;\n/**\n * Use [`append`](./Array.ts.html#append) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar snoc = function (init, end) { return (0, function_1.pipe)(init, (0, exports.append)(end)); };\nexports.snoc = snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexports.fold = RNEA.concatAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `NEA.Functor` instead of `NEA.nonEmptyArray`\n * (where `NEA` is from `import NEA from 'fp-ts/NonEmptyArray'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.nonEmptyArray = {\n    URI: exports.URI,\n    of: exports.of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: exports.flatMap,\n    extend: _extend,\n    extract: exports.extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Field = exports.MonoidProduct = exports.MonoidSum = exports.SemigroupProduct = exports.SemigroupSum = exports.MagmaSub = exports.Show = exports.Bounded = exports.Ord = exports.Eq = exports.isNumber = void 0;\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * @category refinements\n * @since 2.11.0\n */\nvar isNumber = function (u) { return typeof u === 'number'; };\nexports.isNumber = isNumber;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Eq = {\n    equals: function (first, second) { return first === second; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Ord = {\n    equals: exports.Eq.equals,\n    compare: function (first, second) { return (first < second ? -1 : first > second ? 1 : 0); }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Bounded = {\n    equals: exports.Eq.equals,\n    compare: exports.Ord.compare,\n    top: Infinity,\n    bottom: -Infinity\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Show = {\n    show: function (n) { return JSON.stringify(n); }\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.MagmaSub = {\n    concat: function (first, second) { return first - second; }\n};\n/**\n * `number` semigroup under addition.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupSum.concat(2, 3), 5)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.SemigroupSum = {\n    concat: function (first, second) { return first + second; }\n};\n/**\n * `number` semigroup under multiplication.\n *\n * @example\n * import { SemigroupProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupProduct.concat(2, 3), 6)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.SemigroupProduct = {\n    concat: function (first, second) { return first * second; }\n};\n/**\n * `number` monoid under addition.\n *\n * The `empty` value is `0`.\n *\n * @example\n * import { MonoidSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidSum.concat(2, MonoidSum.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.MonoidSum = {\n    concat: exports.SemigroupSum.concat,\n    empty: 0\n};\n/**\n * `number` monoid under multiplication.\n *\n * The `empty` value is `1`.\n *\n * @example\n * import { MonoidProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidProduct.concat(2, MonoidProduct.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.MonoidProduct = {\n    concat: exports.SemigroupProduct.concat,\n    empty: 1\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Field = {\n    add: exports.SemigroupSum.concat,\n    zero: 0,\n    mul: exports.SemigroupProduct.concat,\n    one: 1,\n    sub: exports.MagmaSub.concat,\n    degree: function (_) { return 1; },\n    div: function (first, second) { return first / second; },\n    mod: function (first, second) { return first % second; }\n};\n","\"use strict\";\n/**\n * ```ts\n * interface Separated<E, A> {\n *    readonly left: E\n *    readonly right: A\n * }\n * ```\n *\n * Represents a result of separating a whole into two parts.\n *\n * @since 2.10.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.right = exports.left = exports.flap = exports.Functor = exports.Bifunctor = exports.URI = exports.bimap = exports.mapLeft = exports.map = exports.separated = void 0;\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.10.0\n */\nvar separated = function (left, right) { return ({ left: left, right: right }); };\nexports.separated = separated;\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\nvar _mapLeft = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.mapLeft)(f)); };\nvar _bimap = function (fa, g, f) { return (0, function_1.pipe)(fa, (0, exports.bimap)(g, f)); };\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.10.0\n */\nvar map = function (f) {\n    return function (fa) {\n        return (0, exports.separated)((0, exports.left)(fa), f((0, exports.right)(fa)));\n    };\n};\nexports.map = map;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category error handling\n * @since 2.10.0\n */\nvar mapLeft = function (f) {\n    return function (fa) {\n        return (0, exports.separated)(f((0, exports.left)(fa)), (0, exports.right)(fa));\n    };\n};\nexports.mapLeft = mapLeft;\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category mapping\n * @since 2.10.0\n */\nvar bimap = function (f, g) {\n    return function (fa) {\n        return (0, exports.separated)(f((0, exports.left)(fa)), g((0, exports.right)(fa)));\n    };\n};\nexports.bimap = bimap;\n/**\n * @category type lambdas\n * @since 2.10.0\n */\nexports.URI = 'Separated';\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    mapLeft: _mapLeft,\n    bimap: _bimap\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nvar left = function (s) { return s.left; };\nexports.left = left;\n/**\n * @since 2.10.0\n */\nvar right = function (s) { return s.right; };\nexports.right = right;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterE = exports.witherDefault = exports.wiltDefault = void 0;\nvar _ = __importStar(require(\"./internal\"));\nfunction wiltDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.separate); };\n    };\n}\nexports.wiltDefault = wiltDefault;\nfunction witherDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.compact); };\n    };\n}\nexports.witherDefault = witherDefault;\nfunction filterE(W) {\n    return function (F) {\n        var witherF = W.wither(F);\n        return function (predicate) { return function (ga) { return witherF(ga, function (a) { return F.map(predicate(a), function (b) { return (b ? _.some(a) : _.none); }); }); }; };\n    };\n}\nexports.filterE = filterE;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.guard = void 0;\nfunction guard(F, P) {\n    return function (b) { return (b ? P.of(undefined) : F.zero()); };\n}\nexports.guard = guard;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sort = exports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.lookup = exports.isOutOfBound = exports.size = exports.scanRight = exports.scanLeft = exports.chainWithIndex = exports.foldRight = exports.matchRight = exports.matchRightW = exports.foldLeft = exports.matchLeft = exports.matchLeftW = exports.match = exports.matchW = exports.fromEither = exports.fromOption = exports.fromPredicate = exports.replicate = exports.makeBy = exports.appendW = exports.append = exports.prependW = exports.prepend = exports.isNonEmpty = exports.isEmpty = void 0;\nexports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.foldMap = exports.reduce = exports.foldMapWithIndex = exports.duplicate = exports.extend = exports.filterWithIndex = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.filter = exports.separate = exports.mapWithIndex = exports.map = exports.flatten = exports.flatMap = exports.ap = exports.alt = exports.altW = exports.zero = exports.of = exports._chainRecBreadthFirst = exports._chainRecDepthFirst = exports.difference = exports.intersection = exports.union = exports.concat = exports.concatW = exports.comprehension = exports.fromOptionK = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = exports.uniq = exports.elem = exports.rotate = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = void 0;\nexports.toArray = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.fromEitherK = exports.FromEither = exports.filterE = exports.Witherable = exports.ChainRecBreadthFirst = exports.chainRecBreadthFirst = exports.ChainRecDepthFirst = exports.chainRecDepthFirst = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.guard = exports.Zero = exports.Alt = exports.Unfoldable = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getDifferenceMagma = exports.getIntersectionSemigroup = exports.getUnionMonoid = exports.getUnionSemigroup = exports.getOrd = exports.getEq = exports.getMonoid = exports.getSemigroup = exports.getShow = exports.URI = exports.unfold = exports.wilt = exports.wither = exports.traverseWithIndex = void 0;\nexports.readonlyArray = exports.prependToAll = exports.snoc = exports.cons = exports.range = exports.chain = exports.apS = exports.bind = exports.let = exports.bindTo = exports.Do = exports.intercalate = exports.exists = exports.some = exports.every = exports.empty = exports.fromArray = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar Eq_1 = require(\"./Eq\");\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar N = __importStar(require(\"./number\"));\nvar Ord_1 = require(\"./Ord\");\nvar RNEA = __importStar(require(\"./ReadonlyNonEmptyArray\"));\nvar Separated_1 = require(\"./Separated\");\nvar Witherable_1 = require(\"./Witherable\");\nvar Zero_1 = require(\"./Zero\");\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Test whether a `ReadonlyArray` is empty.\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @category refinements\n * @since 2.5.0\n */\nvar isEmpty = function (as) { return as.length === 0; };\nexports.isEmpty = isEmpty;\n/**\n * Test whether a `ReadonlyArray` is non empty.\n *\n * @category refinements\n * @since 2.5.0\n */\nexports.isNonEmpty = RNEA.isNonEmpty;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @since 2.10.0\n */\nexports.prepend = RNEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @since 2.11.0\n */\nexports.prependW = RNEA.prependW;\n/**\n * Append an element to the end of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @since 2.10.0\n */\nexports.append = RNEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @since 2.11.0\n */\nexports.appendW = RNEA.appendW;\n/**\n * Return a `ReadonlyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\nvar makeBy = function (n, f) { return (n <= 0 ? exports.empty : RNEA.makeBy(f)(n)); };\nexports.makeBy = makeBy;\n/**\n * Create a `ReadonlyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\nvar replicate = function (n, a) { return (0, exports.makeBy)(n, function () { return a; }); };\nexports.replicate = replicate;\nfunction fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? [a] : exports.empty); };\n}\nexports.fromPredicate = fromPredicate;\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n/**\n * @category conversions\n * @since 2.11.0\n */\nvar fromOption = function (ma) { return (_.isNone(ma) ? exports.empty : [ma.value]); };\nexports.fromOption = fromOption;\n/**\n * Transforms an `Either` to a `ReadonlyArray`.\n *\n * @category conversions\n * @since 2.11.0\n */\nvar fromEither = function (e) { return (_.isLeft(e) ? exports.empty : [e.right]); };\nexports.fromEither = fromEither;\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nvar matchW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return (0, exports.isNonEmpty)(as) ? onNonEmpty(as) : onEmpty();\n    };\n};\nexports.matchW = matchW;\n/**\n * @category pattern matching\n * @since 2.11.0\n */\nexports.match = exports.matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft).\n *\n * @category pattern matching\n * @since 2.11.0\n */\nvar matchLeftW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return (0, exports.isNonEmpty)(as) ? onNonEmpty(RNEA.head(as), RNEA.tail(as)) : onEmpty();\n    };\n};\nexports.matchLeftW = matchLeftW;\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.matchLeft = exports.matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category pattern matching\n * @since 2.5.0\n */\nexports.foldLeft = exports.matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright).\n *\n * @category pattern matching\n * @since 2.11.0\n */\nvar matchRightW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return (0, exports.isNonEmpty)(as) ? onNonEmpty(RNEA.init(as), RNEA.last(as)) : onEmpty();\n    };\n};\nexports.matchRightW = matchRightW;\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.matchRight = exports.matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category pattern matching\n * @since 2.5.0\n */\nexports.foldRight = exports.matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category sequencing\n * @since 2.7.0\n */\nvar chainWithIndex = function (f) {\n    return function (as) {\n        if ((0, exports.isEmpty)(as)) {\n            return exports.empty;\n        }\n        var out = [];\n        for (var i = 0; i < as.length; i++) {\n            out.push.apply(out, f(i, as[i]));\n        }\n        return out;\n    };\n};\nexports.chainWithIndex = chainWithIndex;\n/**\n * Same as `reduce` but it carries over the intermediate steps.\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @since 2.5.0\n */\nvar scanLeft = function (b, f) {\n    return function (as) {\n        var len = as.length;\n        var out = new Array(len + 1);\n        out[0] = b;\n        for (var i = 0; i < len; i++) {\n            out[i + 1] = f(out[i], as[i]);\n        }\n        return out;\n    };\n};\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @since 2.5.0\n */\nvar scanRight = function (b, f) {\n    return function (as) {\n        var len = as.length;\n        var out = new Array(len + 1);\n        out[len] = b;\n        for (var i = len - 1; i >= 0; i--) {\n            out[i] = f(as[i], out[i + 1]);\n        }\n        return out;\n    };\n};\nexports.scanRight = scanRight;\n/**\n * Calculate the number of elements in a `ReadonlyArray`.\n *\n * @since 2.10.0\n */\nvar size = function (as) { return as.length; };\nexports.size = size;\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\nexports.isOutOfBound = RNEA.isOutOfBound;\nfunction lookup(i, as) {\n    return as === undefined ? function (as) { return lookup(i, as); } : (0, exports.isOutOfBound)(i, as) ? _.none : _.some(as[i]);\n}\nexports.lookup = lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\nvar head = function (as) { return ((0, exports.isNonEmpty)(as) ? _.some(RNEA.head(as)) : _.none); };\nexports.head = head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\nvar last = function (as) { return ((0, exports.isNonEmpty)(as) ? _.some(RNEA.last(as)) : _.none); };\nexports.last = last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\nvar tail = function (as) {\n    return (0, exports.isNonEmpty)(as) ? _.some(RNEA.tail(as)) : _.none;\n};\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\nvar init = function (as) {\n    return (0, exports.isNonEmpty)(as) ? _.some(RNEA.init(as)) : _.none;\n};\nexports.init = init;\n/**\n * Keep only a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeLeft(2)), [1, 2])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeLeft(4)), input)\n * assert.strictEqual(pipe(input, RA.takeLeft(-1)), input)\n *\n * @since 2.5.0\n */\nvar takeLeft = function (n) {\n    return function (as) {\n        return (0, exports.isOutOfBound)(n, as) ? as : n === 0 ? exports.empty : as.slice(0, n);\n    };\n};\nexports.takeLeft = takeLeft;\n/**\n * Keep only a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeRight(2)), [2, 3])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeRight(4)), input)\n * assert.strictEqual(pipe(input, RA.takeRight(-1)), input)\n *\n * @since 2.5.0\n */\nvar takeRight = function (n) {\n    return function (as) {\n        return (0, exports.isOutOfBound)(n, as) ? as : n === 0 ? exports.empty : as.slice(-n);\n    };\n};\nexports.takeRight = takeRight;\nfunction takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        var len = out.length;\n        return len === as.length ? as : len === 0 ? exports.empty : out;\n    };\n}\nexports.takeLeftWhile = takeLeftWhile;\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nfunction spanLeft(predicate) {\n    return function (as) {\n        var _a = (0, exports.splitAt)(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\nexports.spanLeft = spanLeft;\n/**\n * Drop a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropLeft(2)), [3])\n * assert.strictEqual(pipe(input, RA.dropLeft(0)), input)\n * assert.strictEqual(pipe(input, RA.dropLeft(-1)), input)\n *\n * @since 2.5.0\n */\nvar dropLeft = function (n) {\n    return function (as) {\n        return n <= 0 || (0, exports.isEmpty)(as) ? as : n >= as.length ? exports.empty : as.slice(n, as.length);\n    };\n};\nexports.dropLeft = dropLeft;\n/**\n * Drop a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropRight(2)), [1])\n * assert.strictEqual(pipe(input, RA.dropRight(0)), input)\n * assert.strictEqual(pipe(input, RA.dropRight(-1)), input)\n *\n * @since 2.5.0\n */\nvar dropRight = function (n) {\n    return function (as) {\n        return n <= 0 || (0, exports.isEmpty)(as) ? as : n >= as.length ? exports.empty : as.slice(0, as.length - n);\n    };\n};\nexports.dropRight = dropRight;\nfunction dropLeftWhile(predicate) {\n    return function (as) {\n        var i = spanLeftIndex(as, predicate);\n        return i === 0 ? as : i === as.length ? exports.empty : as.slice(i);\n    };\n}\nexports.dropLeftWhile = dropLeftWhile;\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\nvar findIndex = function (predicate) {\n    return function (as) {\n        for (var i = 0; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return _.some(i);\n            }\n        }\n        return _.none;\n    };\n};\nexports.findIndex = findIndex;\nfunction findFirst(predicate) {\n    return function (as) {\n        for (var i = 0; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return _.some(as[i]);\n            }\n        }\n        return _.none;\n    };\n}\nexports.findFirst = findFirst;\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\nvar findFirstMap = function (f) {\n    return function (as) {\n        for (var i = 0; i < as.length; i++) {\n            var out = f(as[i]);\n            if (_.isSome(out)) {\n                return out;\n            }\n        }\n        return _.none;\n    };\n};\nexports.findFirstMap = findFirstMap;\nfunction findLast(predicate) {\n    return function (as) {\n        for (var i = as.length - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return _.some(as[i]);\n            }\n        }\n        return _.none;\n    };\n}\nexports.findLast = findLast;\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\nvar findLastMap = function (f) {\n    return function (as) {\n        for (var i = as.length - 1; i >= 0; i--) {\n            var out = f(as[i]);\n            if (_.isSome(out)) {\n                return out;\n            }\n        }\n        return _.none;\n    };\n};\nexports.findLastMap = findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\nvar findLastIndex = function (predicate) {\n    return function (as) {\n        for (var i = as.length - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return _.some(i);\n            }\n        }\n        return _.none;\n    };\n};\nexports.findLastIndex = findLastIndex;\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\nvar insertAt = function (i, a) {\n    return function (as) {\n        return i < 0 || i > as.length ? _.none : _.some(RNEA.unsafeInsertAt(i, a, as));\n    };\n};\nexports.insertAt = insertAt;\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\nvar updateAt = function (i, a) {\n    return (0, exports.modifyAt)(i, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\nvar deleteAt = function (i) {\n    return function (as) {\n        return (0, exports.isOutOfBound)(i, as) ? _.none : _.some((0, exports.unsafeDeleteAt)(i, as));\n    };\n};\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\nvar modifyAt = function (i, f) {\n    return function (as) {\n        return (0, exports.isOutOfBound)(i, as) ? _.none : _.some((0, exports.unsafeUpdateAt)(i, f(as[i]), as));\n    };\n};\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @since 2.5.0\n */\nvar reverse = function (as) { return (as.length <= 1 ? as : as.slice().reverse()); };\nexports.reverse = reverse;\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @since 2.5.0\n */\nvar rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\nexports.rights = rights;\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @since 2.5.0\n */\nvar lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @since 2.5.0\n */\nvar sort = function (O) {\n    return function (as) {\n        return as.length <= 1 ? as : as.slice().sort(O.compare);\n    };\n};\nexports.sort = sort;\n// TODO: curry and make data-last in v3\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @since 2.5.0\n */\nvar zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return (0, exports.zipWith)(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.5.0\n */\nvar unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nvar prependAll = function (middle) {\n    var f = RNEA.prependAll(middle);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : as); };\n};\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nvar intersperse = function (middle) {\n    var f = RNEA.intersperse(middle);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : as); };\n};\nexports.intersperse = intersperse;\n/**\n * Rotate a `ReadonlyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @since 2.5.0\n */\nvar rotate = function (n) {\n    var f = RNEA.rotate(n);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : as); };\n};\nexports.rotate = rotate;\nfunction elem(E) {\n    return function (a, as) {\n        if (as === undefined) {\n            var elemE_1 = elem(E);\n            return function (as) { return elemE_1(a, as); };\n        }\n        var predicate = function (element) { return E.equals(element, a); };\n        var i = 0;\n        for (; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\nexports.elem = elem;\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.5.0\n */\nvar uniq = function (E) {\n    var f = RNEA.uniq(E);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : as); };\n};\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.5.0\n */\nvar sortBy = function (ords) {\n    var f = RNEA.sortBy(ords);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : as); };\n};\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing a `ReadonlyArray` to produce a new `ReadonlyArray`, often used for \"chopping\" up the input\n * `ReadonlyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyArray` and produce a\n * value and the tail of the `ReadonlyArray`.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return RA.chop(as => {\n *     const { init, rest } = pipe(as, RA.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @since 2.5.0\n */\nvar chop = function (f) {\n    var g = RNEA.chop(f);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? g(as) : exports.empty); };\n};\nexports.chop = chop;\n/**\n * Splits a `ReadonlyArray` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.5.0\n */\nvar splitAt = function (n) {\n    return function (as) {\n        return n >= 1 && (0, exports.isNonEmpty)(as) ? RNEA.splitAt(n)(as) : (0, exports.isEmpty)(as) ? [as, exports.empty] : [exports.empty, as];\n    };\n};\nexports.splitAt = splitAt;\n/**\n * Splits a `ReadonlyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyArray`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that:\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `as`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @since 2.5.0\n */\nvar chunksOf = function (n) {\n    var f = RNEA.chunksOf(n);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : exports.empty); };\n};\nexports.chunksOf = chunksOf;\n/**\n * @category lifting\n * @since 2.11.0\n */\nvar fromOptionK = function (f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return (0, exports.fromOption)(f.apply(void 0, a));\n    };\n};\nexports.fromOptionK = fromOptionK;\nfunction comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return (0, exports.isNonEmpty)(input)\n            ? (0, exports.flatMap)(RNEA.head(input), function (a) { return go((0, function_1.pipe)(scope, (0, exports.append)(a)), RNEA.tail(input)); })\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : exports.empty;\n    };\n    return go(exports.empty, input);\n}\nexports.comprehension = comprehension;\n/**\n * @since 2.11.0\n */\nvar concatW = function (second) {\n    return function (first) {\n        return (0, exports.isEmpty)(first) ? second : (0, exports.isEmpty)(second) ? first : first.concat(second);\n    };\n};\nexports.concatW = concatW;\n/**\n * @since 2.11.0\n */\nexports.concat = exports.concatW;\nfunction union(E) {\n    var unionE = RNEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (second) { return unionE_1(second, first); };\n        }\n        return (0, exports.isNonEmpty)(first) && (0, exports.isNonEmpty)(second) ? unionE(second)(first) : (0, exports.isNonEmpty)(first) ? first : second;\n    };\n}\nexports.union = union;\nfunction intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexports.intersection = intersection;\nfunction difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\nexports.difference = difference;\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\nvar _mapWithIndex = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.mapWithIndex)(f)); };\nvar _ap = function (fab, fa) { return (0, function_1.pipe)(fab, (0, exports.ap)(fa)); };\nvar _filter = function (fa, predicate) {\n    return (0, function_1.pipe)(fa, (0, exports.filter)(predicate));\n};\nvar _filterMap = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.filterMap)(f)); };\nvar _partition = function (fa, predicate) {\n    return (0, function_1.pipe)(fa, (0, exports.partition)(predicate));\n};\nvar _partitionMap = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.partitionMap)(f)); };\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return (0, function_1.pipe)(fa, (0, exports.partitionWithIndex)(predicateWithIndex)); };\nvar _partitionMapWithIndex = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.partitionMapWithIndex)(f)); };\nvar _alt = function (fa, that) { return (0, function_1.pipe)(fa, (0, exports.alt)(that)); };\nvar _reduce = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduce)(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = (0, exports.foldMap)(M);\n    return function (fa, f) { return (0, function_1.pipe)(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduceRight)(b, f)); };\nvar _reduceWithIndex = function (fa, b, f) {\n    return (0, function_1.pipe)(fa, (0, exports.reduceWithIndex)(b, f));\n};\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = (0, exports.foldMapWithIndex)(M);\n    return function (fa, f) { return (0, function_1.pipe)(fa, foldMapWithIndexM(f)); };\n};\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return (0, function_1.pipe)(fa, (0, exports.reduceRightWithIndex)(b, f));\n};\nvar _filterMapWithIndex = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.filterMapWithIndex)(f)); };\nvar _filterWithIndex = function (fa, predicateWithIndex) { return (0, function_1.pipe)(fa, (0, exports.filterWithIndex)(predicateWithIndex)); };\nvar _extend = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.extend)(f)); };\nvar _traverse = function (F) {\n    var traverseF = (0, exports.traverse)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = (0, exports.traverseWithIndex)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseWithIndexF(f)); };\n};\n/** @internal */\nvar _chainRecDepthFirst = function (a, f) { return (0, function_1.pipe)(a, (0, exports.chainRecDepthFirst)(f)); };\nexports._chainRecDepthFirst = _chainRecDepthFirst;\n/** @internal */\nvar _chainRecBreadthFirst = function (a, f) { return (0, function_1.pipe)(a, (0, exports.chainRecBreadthFirst)(f)); };\nexports._chainRecBreadthFirst = _chainRecBreadthFirst;\n/**\n * @category constructors\n * @since 2.5.0\n */\nexports.of = RNEA.of;\n/**\n * @since 2.7.0\n */\nvar zero = function () { return exports.empty; };\nexports.zero = zero;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nvar altW = function (that) {\n    return function (fa) {\n        return fa.concat(that());\n    };\n};\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `ReadonlyArray` concatenates the inputs into a single array.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.5.0\n */\nexports.alt = exports.altW;\n/**\n * @since 2.5.0\n */\nvar ap = function (fa) {\n    return (0, exports.flatMap)(function (f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); });\n};\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.flatMap((n) => [`a${n}`, `b${n}`])\n *   ),\n *   ['a1', 'b1', 'a2', 'b2', 'a3', 'b3']\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.flatMap(() => [])\n *   ),\n *   []\n * )\n *\n * @category sequencing\n * @since 2.14.0\n */\nexports.flatMap = (0, function_1.dual)(2, function (ma, f) {\n    return (0, function_1.pipe)(ma, (0, exports.chainWithIndex)(function (i, a) { return f(a, i); }));\n});\n/**\n * @category sequencing\n * @since 2.5.0\n */\nexports.flatten = (0, exports.flatMap)(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.5.0\n */\nvar map = function (f) { return function (fa) {\n    return fa.map(function (a) { return f(a); });\n}; };\nexports.map = map;\n/**\n * @category mapping\n * @since 2.5.0\n */\nvar mapWithIndex = function (f) { return function (fa) {\n    return fa.map(function (a, i) { return f(i, a); });\n}; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category filtering\n * @since 2.5.0\n */\nvar separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return (0, Separated_1.separated)(left, right);\n};\nexports.separate = separate;\n/**\n * @category filtering\n * @since 2.5.0\n */\nvar filter = function (predicate) {\n    return function (as) {\n        return as.filter(predicate);\n    };\n};\nexports.filter = filter;\n/**\n * @category filtering\n * @since 2.5.0\n */\nvar filterMapWithIndex = function (f) {\n    return function (fa) {\n        var out = [];\n        for (var i = 0; i < fa.length; i++) {\n            var optionB = f(i, fa[i]);\n            if (_.isSome(optionB)) {\n                out.push(optionB.value);\n            }\n        }\n        return out;\n    };\n};\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * @category filtering\n * @since 2.5.0\n */\nvar filterMap = function (f) {\n    return (0, exports.filterMapWithIndex)(function (_, a) { return f(a); });\n};\nexports.filterMap = filterMap;\n/**\n * @category filtering\n * @since 2.5.0\n */\nexports.compact = (0, exports.filterMap)(function_1.identity);\n/**\n * @category filtering\n * @since 2.5.0\n */\nvar partition = function (predicate) {\n    return (0, exports.partitionWithIndex)(function (_, a) { return predicate(a); });\n};\nexports.partition = partition;\n/**\n * @category filtering\n * @since 2.5.0\n */\nvar partitionWithIndex = function (predicateWithIndex) {\n    return function (as) {\n        var left = [];\n        var right = [];\n        for (var i = 0; i < as.length; i++) {\n            var a = as[i];\n            if (predicateWithIndex(i, a)) {\n                right.push(a);\n            }\n            else {\n                left.push(a);\n            }\n        }\n        return (0, Separated_1.separated)(left, right);\n    };\n};\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * @category filtering\n * @since 2.5.0\n */\nvar partitionMap = function (f) {\n    return (0, exports.partitionMapWithIndex)(function (_, a) { return f(a); });\n};\nexports.partitionMap = partitionMap;\n/**\n * @category filtering\n * @since 2.5.0\n */\nvar partitionMapWithIndex = function (f) {\n    return function (fa) {\n        var left = [];\n        var right = [];\n        for (var i = 0; i < fa.length; i++) {\n            var e = f(i, fa[i]);\n            if (e._tag === 'Left') {\n                left.push(e.left);\n            }\n            else {\n                right.push(e.right);\n            }\n        }\n        return (0, Separated_1.separated)(left, right);\n    };\n};\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * @category filtering\n * @since 2.5.0\n */\nvar filterWithIndex = function (predicateWithIndex) {\n    return function (as) {\n        return as.filter(function (a, i) { return predicateWithIndex(i, a); });\n    };\n};\nexports.filterWithIndex = filterWithIndex;\n/**\n * @since 2.5.0\n */\nvar extend = function (f) { return function (wa) {\n    return wa.map(function (_, i) { return f(wa.slice(i)); });\n}; };\nexports.extend = extend;\n/**\n * @since 2.5.0\n */\nexports.duplicate = (0, exports.extend)(function_1.identity);\n/**\n * @category folding\n * @since 2.5.0\n */\nvar foldMapWithIndex = function (M) {\n    return function (f) {\n        return function (fa) {\n            return fa.reduce(function (b, a, i) { return M.concat(b, f(i, a)); }, M.empty);\n        };\n    };\n};\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category folding\n * @since 2.5.0\n */\nvar reduce = function (b, f) {\n    return (0, exports.reduceWithIndex)(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduce = reduce;\n/**\n * @category folding\n * @since 2.5.0\n */\nvar foldMap = function (M) {\n    var foldMapWithIndexM = (0, exports.foldMapWithIndex)(M);\n    return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };\n};\nexports.foldMap = foldMap;\n/**\n * @category folding\n * @since 2.5.0\n */\nvar reduceWithIndex = function (b, f) { return function (fa) {\n    var len = fa.length;\n    var out = b;\n    for (var i = 0; i < len; i++) {\n        out = f(i, out, fa[i]);\n    }\n    return out;\n}; };\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * @category folding\n * @since 2.5.0\n */\nvar reduceRight = function (b, f) {\n    return (0, exports.reduceRightWithIndex)(b, function (_, a, b) { return f(a, b); });\n};\nexports.reduceRight = reduceRight;\n/**\n * @category folding\n * @since 2.5.0\n */\nvar reduceRightWithIndex = function (b, f) { return function (fa) {\n    return fa.reduceRight(function (b, a, i) { return f(i, a, b); }, b);\n}; };\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * @category traversing\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = (0, exports.traverseWithIndex)(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @category traversing\n * @since 2.6.3\n */\nvar sequence = function (F) {\n    return function (ta) {\n        return _reduce(ta, F.of((0, exports.zero)()), function (fas, fa) {\n            return F.ap(F.map(fas, function (as) { return function (a) { return (0, function_1.pipe)(as, (0, exports.append)(a)); }; }), fa);\n        });\n    };\n};\nexports.sequence = sequence;\n/**\n * @category sequencing\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) {\n    return function (f) {\n        return (0, exports.reduceWithIndex)(F.of((0, exports.zero)()), function (i, fbs, a) {\n            return F.ap(F.map(fbs, function (bs) { return function (b) { return (0, function_1.pipe)(bs, (0, exports.append)(b)); }; }), f(i, a));\n        });\n    };\n};\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category filtering\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\nexports.wither = wither;\n/**\n * @category filtering\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\nexports.wilt = wilt;\n/**\n * @since 2.6.6\n */\nvar unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        var mt = f(bb);\n        if (_.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\nexports.unfold = unfold;\n/**\n * @category type lambdas\n * @since 2.5.0\n */\nexports.URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nvar getShow = function (S) { return ({\n    show: function (as) { return \"[\".concat(as.map(S.show).join(', '), \"]\"); }\n}); };\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.5.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) { return ((0, exports.isEmpty)(first) ? second : (0, exports.isEmpty)(second) ? first : first.concat(second)); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`.\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\nvar getMonoid = function () { return ({\n    concat: (0, exports.getSemigroup)().concat,\n    empty: exports.empty\n}); };\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\nvar getEq = function (E) {\n    return (0, Eq_1.fromEquals)(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\nexports.getEq = getEq;\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\nvar getOrd = function (O) {\n    return (0, Ord_1.fromCompare)(function (a, b) {\n        var aLen = a.length;\n        var bLen = b.length;\n        var len = Math.min(aLen, bLen);\n        for (var i = 0; i < len; i++) {\n            var ordering = O.compare(a[i], b[i]);\n            if (ordering !== 0) {\n                return ordering;\n            }\n        }\n        return N.Ord.compare(aLen, bLen);\n    });\n};\nexports.getOrd = getOrd;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getUnionMonoid = function (E) { return ({\n    concat: (0, exports.getUnionSemigroup)(E).concat,\n    empty: exports.empty\n}); };\nexports.getUnionMonoid = getUnionMonoid;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getIntersectionSemigroup = function (E) {\n    var intersectionE = intersection(E);\n    return {\n        concat: function (first, second) { return intersectionE(second)(first); }\n    };\n};\nexports.getIntersectionSemigroup = getIntersectionSemigroup;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getDifferenceMagma = function (E) {\n    var differenceE = difference(E);\n    return {\n        concat: function (first, second) { return differenceE(second)(first); }\n    };\n};\nexports.getDifferenceMagma = getDifferenceMagma;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexports.apFirst = (0, Apply_1.apFirst)(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexports.apSecond = (0, Apply_1.apSecond)(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: exports.flatMap\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chainFirst(() => ['a', 'b'])\n *   ),\n *   [1, 1, 2, 2, 3, 3]\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chainFirst(() => [])\n *   ),\n *   []\n * )\n *\n * @category sequencing\n * @since 2.5.0\n */\nexports.chainFirst = \n/*#__PURE__*/ (0, Chain_1.chainFirst)(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Unfoldable = {\n    URI: exports.URI,\n    unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.Zero = {\n    URI: exports.URI,\n    zero: exports.zero\n};\n/**\n * @category do notation\n * @since 2.11.0\n */\nexports.guard = (0, Zero_1.guard)(exports.Zero, exports.Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    alt: _alt,\n    zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FilterableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category sequencing\n * @since 2.11.0\n */\nvar chainRecDepthFirst = function (f) {\n    return function (a) {\n        var todo = __spreadArray([], f(a), true);\n        var out = [];\n        while (todo.length > 0) {\n            var e = todo.shift();\n            if (_.isLeft(e)) {\n                todo.unshift.apply(todo, f(e.left));\n            }\n            else {\n                out.push(e.right);\n            }\n        }\n        return out;\n    };\n};\nexports.chainRecDepthFirst = chainRecDepthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.ChainRecDepthFirst = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap,\n    chainRec: exports._chainRecDepthFirst\n};\n/**\n * @category sequencing\n * @since 2.11.0\n */\nvar chainRecBreadthFirst = function (f) {\n    return function (a) {\n        var initial = f(a);\n        var todo = [];\n        var out = [];\n        function go(e) {\n            if (_.isLeft(e)) {\n                f(e.left).forEach(function (v) { return todo.push(v); });\n            }\n            else {\n                out.push(e.right);\n            }\n        }\n        for (var _i = 0, initial_1 = initial; _i < initial_1.length; _i++) {\n            var e = initial_1[_i];\n            go(e);\n        }\n        while (todo.length > 0) {\n            go(todo.shift());\n        }\n        return out;\n    };\n};\nexports.chainRecBreadthFirst = chainRecBreadthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.ChainRecBreadthFirst = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap,\n    chainRec: exports._chainRecBreadthFirst\n};\nvar _wither = /*#__PURE__*/ (0, Witherable_1.witherDefault)(exports.Traversable, exports.Compactable);\nvar _wilt = /*#__PURE__*/ (0, Witherable_1.wiltDefault)(exports.Traversable, exports.Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * Filter values inside a context.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as T from 'fp-ts/Task'\n *\n * const filterE = RA.filterE(T.ApplicativePar)\n * async function test() {\n *   assert.deepStrictEqual(\n *     await pipe(\n *       [-1, 2, 3],\n *       filterE((n) => T.of(n > 0))\n *     )(),\n *     [2, 3]\n *   )\n * }\n * test()\n *\n * @since 2.11.0\n */\nexports.filterE = (0, Witherable_1.filterE)(exports.Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: exports.fromEither\n};\n/**\n * @category lifting\n * @since 2.11.0\n */\nexports.fromEitherK = (0, FromEither_1.fromEitherK)(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexports.unsafeInsertAt = RNEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    return (0, exports.isNonEmpty)(as) ? RNEA.unsafeUpdateAt(i, a, as) : as;\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nvar unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\nexports.unsafeDeleteAt = unsafeDeleteAt;\n/**\n * @category conversions\n * @since 2.5.0\n */\nvar toArray = function (as) { return as.slice(); };\nexports.toArray = toArray;\n/**\n * @category conversions\n * @since 2.5.0\n */\nvar fromArray = function (as) { return ((0, exports.isEmpty)(as) ? exports.empty : as.slice()); };\nexports.fromArray = fromArray;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.5.0\n */\nexports.empty = RNEA.empty;\nfunction every(predicate) {\n    return function (as) { return as.every(predicate); };\n}\nexports.every = every;\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\nvar some = function (predicate) {\n    return function (as) {\n        return as.some(predicate);\n    };\n};\nexports.some = some;\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\nexports.exists = exports.some;\n/**\n * Places an element in between members of a `ReadonlyArray`, then folds the results using the provided `Monoid`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Monoid)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nvar intercalate = function (M) {\n    var intercalateM = RNEA.intercalate(M);\n    return function (middle) { return (0, exports.match)(function () { return M.empty; }, intercalateM(middle)); };\n};\nexports.intercalate = intercalate;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexports.Do = (0, exports.of)(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bindTo = (0, Functor_1.bindTo)(exports.Functor);\nvar let_ = /*#__PURE__*/ (0, Functor_1.let)(exports.Functor);\nexports.let = let_;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bind = (0, Chain_1.bind)(exports.Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.apS = (0, Apply_1.apS)(exports.Apply);\n// -------------------------------------------------------------------------------------\n// legacy\n// -------------------------------------------------------------------------------------\n/**\n * Alias of `flatMap`.\n *\n * @category legacy\n * @since 2.5.0\n */\nexports.chain = exports.flatMap;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `ReadonlyNonEmptyArray` module instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexports.range = RNEA.range;\n/**\n * Use [`prepend`](#prepend) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexports.cons = RNEA.cons;\n/**\n * Use [`append`](#append) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexports.snoc = RNEA.snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `RA.Functor` instead of `RA.readonlyArray`\n * (where `RA` is from `import RA from 'fp-ts/ReadonlyArray'`)\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexports.readonlyArray = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: exports.flatMap,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: exports.zero,\n    unfold: exports.unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.copy = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.lookup = exports.isOutOfBound = exports.size = exports.scanRight = exports.scanLeft = exports.chainWithIndex = exports.foldRight = exports.matchRight = exports.matchRightW = exports.foldLeft = exports.matchLeft = exports.matchLeftW = exports.match = exports.matchW = exports.fromEither = exports.fromOption = exports.fromPredicate = exports.replicate = exports.makeBy = exports.appendW = exports.append = exports.prependW = exports.prepend = exports.isNonEmpty = exports.isEmpty = void 0;\nexports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.reduce = exports.foldMapWithIndex = exports.foldMap = exports.duplicate = exports.extend = exports.filterWithIndex = exports.alt = exports.altW = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.filter = exports.separate = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.mapWithIndex = exports.flatten = exports.flatMap = exports.ap = exports.map = exports.zero = exports.of = exports.difference = exports.intersection = exports.union = exports.concat = exports.concatW = exports.comprehension = exports.fromOptionK = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = exports.uniq = exports.elem = exports.rotate = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.sort = void 0;\nexports.some = exports.every = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.fromEitherK = exports.FromEither = exports.filterE = exports.ChainRecBreadthFirst = exports.chainRecBreadthFirst = exports.ChainRecDepthFirst = exports.chainRecDepthFirst = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.guard = exports.Zero = exports.Alt = exports.Unfoldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getDifferenceMagma = exports.getIntersectionSemigroup = exports.getUnionMonoid = exports.getUnionSemigroup = exports.getOrd = exports.getEq = exports.getMonoid = exports.getSemigroup = exports.getShow = exports.URI = exports.unfold = exports.wilt = exports.wither = void 0;\nexports.array = exports.prependToAll = exports.snoc = exports.cons = exports.empty = exports.range = exports.chain = exports.apS = exports.bind = exports.let = exports.bindTo = exports.Do = exports.intercalate = exports.exists = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar NEA = __importStar(require(\"./NonEmptyArray\"));\nvar RA = __importStar(require(\"./ReadonlyArray\"));\nvar Separated_1 = require(\"./Separated\");\nvar Witherable_1 = require(\"./Witherable\");\nvar Zero_1 = require(\"./Zero\");\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isEmpty([]), true)\n * assert.strictEqual(isEmpty(['a']), false)\n *\n * @category refinements\n * @since 2.0.0\n */\nvar isEmpty = function (as) { return as.length === 0; };\nexports.isEmpty = isEmpty;\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyArray<A>`\n *\n * @example\n * import { isNonEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isNonEmpty([]), false)\n * assert.strictEqual(isNonEmpty(['a']), true)\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isNonEmpty = NEA.isNonEmpty;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @since 2.10.0\n */\nexports.prepend = NEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @example\n * import { prependW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prependW(\"a\")), [\"a\", 2, 3, 4]);\n *\n * @since 2.11.0\n */\nexports.prependW = NEA.prependW;\n/**\n * Append an element to the end of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @since 2.10.0\n */\nexports.append = NEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @example\n * import { appendW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], appendW(\"d\")), [1, 2, 3, \"d\"]);\n *\n * @since 2.11.0\n */\nexports.appendW = NEA.appendW;\n/**\n * Return a `Array` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/Array'\n *\n * const double = (i: number): number => i * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n * assert.deepStrictEqual(makeBy(-3, double), [])\n * assert.deepStrictEqual(makeBy(4.32164, double), [0, 2, 4, 6])\n *\n * @category constructors\n * @since 2.0.0\n */\nvar makeBy = function (n, f) { return (n <= 0 ? [] : NEA.makeBy(f)(n)); };\nexports.makeBy = makeBy;\n/**\n * Create a `Array` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n * assert.deepStrictEqual(replicate(-3, 'a'), [])\n * assert.deepStrictEqual(replicate(2.985647, 'a'), ['a', 'a'])\n *\n * @category constructors\n * @since 2.0.0\n */\nvar replicate = function (n, a) { return (0, exports.makeBy)(n, function () { return a; }); };\nexports.replicate = replicate;\nfunction fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? [a] : []); };\n}\nexports.fromPredicate = fromPredicate;\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n/**\n * Create an array from an `Option`. The resulting array will contain the content of the\n * `Option` if it is `Some` and it will be empty if the `Option` is `None`.\n *\n * @example\n * import { fromOption } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(option.some(\"a\"), fromOption),[\"a\"])\n * assert.deepStrictEqual(pipe(option.none, fromOption),[])\n *\n * @category conversions\n * @since 2.11.0\n */\nvar fromOption = function (ma) { return (_.isNone(ma) ? [] : [ma.value]); };\nexports.fromOption = fromOption;\n/**\n * Create an array from an `Either`. The resulting array will contain the content of the\n * `Either` if it is `Right` and it will be empty if the `Either` is `Left`.\n *\n * @example\n * import { fromEither } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(either.right(\"r\"), fromEither), [\"r\"]);\n * assert.deepStrictEqual(pipe(either.left(\"l\"), fromEither), []);\n *\n * @category conversions\n * @since 2.11.0\n */\nvar fromEither = function (e) { return (_.isLeft(e) ? [] : [e.right]); };\nexports.fromEither = fromEither;\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @example\n * import { matchW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcherW = matchW(\n *   () => \"No elements\",\n *   (as) => as.length\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcherW), 4);\n * assert.deepStrictEqual(pipe([], matcherW), \"No elements\");\n *\n * @category pattern matching\n * @since 2.11.0\n */\nvar matchW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return (0, exports.isNonEmpty)(as) ? onNonEmpty(as) : onEmpty();\n    };\n};\nexports.matchW = matchW;\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` and returns the result.\n *\n * @example\n * import { match } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcher = match(\n *   () => \"No elements\",\n *   (as) => `Found ${as.length} element(s)`\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcher), \"Found 4 element(s)\");\n * assert.deepStrictEqual(pipe([], matcher), \"No elements\");\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexports.match = exports.matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchLeftW } from 'fp-ts/Array'\n *\n * const f = matchLeftW(\n *   () => 0,\n *   (head: string, tail: string[]) => `Found \"${head}\" followed by ${tail.length} elements`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found \"a\" followed by 2 elements');\n * assert.strictEqual(f([]), 0);\n *\n * @category pattern matching\n * @since 2.11.0\n */\nvar matchLeftW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return (0, exports.isNonEmpty)(as) ? onNonEmpty(NEA.head(as), NEA.tail(as)) : onEmpty();\n    };\n};\nexports.matchLeftW = matchLeftW;\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.matchLeft = exports.matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexports.foldLeft = exports.matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchRightW } from 'fp-ts/Array'\n *\n * const f = matchRightW(\n *   () => 0,\n *   (head: string[], tail: string) => `Found ${head.length} elements folllowed by \"${tail}\"`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found 2 elements folllowed by \"c\"');\n * assert.strictEqual(f([]), 0);\n *\n * @category pattern matching\n * @since 2.11.0\n */\nvar matchRightW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return (0, exports.isNonEmpty)(as) ? onNonEmpty(NEA.init(as), NEA.last(as)) : onEmpty();\n    };\n};\nexports.matchRightW = matchRightW;\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken  into its initial elements and the last element.\n *\n * @example\n * import { matchRight } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchRight(\n *   () => 0,\n *   (head, _) => 1 + len(head)\n * );\n * assert.strictEqual(len([1, 2, 3]), 3);\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.matchRight = exports.matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexports.foldRight = exports.matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Same as [`chain`](#chain), but passing also the index to the iterating function.\n *\n * @example\n * import { chainWithIndex, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (index: number, x: string) => replicate(2, `${x}${index}`);\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], chainWithIndex(f)), [\"a0\", \"a0\", \"b1\", \"b1\", \"c2\", \"c2\"]);\n *\n * @category sequencing\n * @since 2.7.0\n */\nvar chainWithIndex = function (f) {\n    return function (as) {\n        var out = [];\n        for (var i = 0; i < as.length; i++) {\n            out.push.apply(out, f(i, as[i]));\n        }\n        return out;\n    };\n};\nexports.chainWithIndex = chainWithIndex;\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @since 2.0.0\n */\nvar scanLeft = function (b, f) {\n    return function (as) {\n        var len = as.length;\n        var out = new Array(len + 1);\n        out[0] = b;\n        for (var i = 0; i < len; i++) {\n            out[i + 1] = f(out[i], as[i]);\n        }\n        return out;\n    };\n};\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @since 2.0.0\n */\nvar scanRight = function (b, f) {\n    return function (as) {\n        var len = as.length;\n        var out = new Array(len + 1);\n        out[len] = b;\n        for (var i = len - 1; i >= 0; i--) {\n            out[i] = f(as[i], out[i + 1]);\n        }\n        return out;\n    };\n};\nexports.scanRight = scanRight;\n/**\n * Calculate the number of elements in a `Array`.\n *\n * @example\n * import { size } from 'fp-ts/Array'\n *\n * assert.strictEqual(size([\"a\",\"b\",\"c\"]),3)\n *\n * @since 2.10.0\n */\nvar size = function (as) { return as.length; };\nexports.size = size;\n/**\n * Test whether an array contains a particular index\n *\n * @example\n * import { isOutOfBound } from 'fp-ts/Array'\n *\n * assert.strictEqual(isOutOfBound(1,[\"a\",\"b\",\"c\"]),false)\n * assert.strictEqual(isOutOfBound(-1,[\"a\",\"b\",\"c\"]),true)\n * assert.strictEqual(isOutOfBound(3,[\"a\",\"b\",\"c\"]),true)\n *\n * @since 2.0.0\n */\nexports.isOutOfBound = NEA.isOutOfBound;\n// TODO: remove non-curried overloading in v3\n/**\n * This function provides a safe way to read a value at a particular index from an array.\n * It returns a `none` if the index is out of bounds, and a `some` of the element if the\n * index is valid.\n *\n * @example\n * import { lookup } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(1)), some(2))\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(3)), none)\n *\n * @since 2.0.0\n */\nexports.lookup = RA.lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.0.0\n */\nexports.head = RA.head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.0.0\n */\nexports.last = RA.last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.0.0\n */\nvar tail = function (as) { return ((0, exports.isNonEmpty)(as) ? _.some(NEA.tail(as)) : _.none); };\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.0.0\n */\nvar init = function (as) { return ((0, exports.isNonEmpty)(as) ? _.some(NEA.init(as)) : _.none); };\nexports.init = init;\n/**\n * Keep only a max number of elements from the start of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3, 4, 5]), [1, 2]);\n * assert.deepStrictEqual(takeLeft(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeLeft(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeLeft(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @since 2.0.0\n */\nvar takeLeft = function (n) {\n    return function (as) {\n        return (0, exports.isOutOfBound)(n, as) ? (0, exports.copy)(as) : as.slice(0, n);\n    };\n};\nexports.takeLeft = takeLeft;\n/**\n * Keep only a max number of elements from the end of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5]);\n * assert.deepStrictEqual(takeRight(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeRight(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeRight(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @since 2.0.0\n */\nvar takeRight = function (n) {\n    return function (as) {\n        return (0, exports.isOutOfBound)(n, as) ? (0, exports.copy)(as) : n === 0 ? [] : as.slice(-n);\n    };\n};\nexports.takeRight = takeRight;\nfunction takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        return out;\n    };\n}\nexports.takeLeftWhile = takeLeftWhile;\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nfunction spanLeft(predicate) {\n    return function (as) {\n        var _a = (0, exports.splitAt)(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\nexports.spanLeft = spanLeft;\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the start.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3]);\n * assert.deepStrictEqual(dropLeft(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropLeft(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropLeft(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @since 2.0.0\n */\nvar dropLeft = function (n) {\n    return function (as) {\n        return n <= 0 || (0, exports.isEmpty)(as) ? (0, exports.copy)(as) : n >= as.length ? [] : as.slice(n, as.length);\n    };\n};\nexports.dropLeft = dropLeft;\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the end.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3]), [1]);\n * assert.deepStrictEqual(dropRight(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropRight(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropRight(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @since 2.0.0\n */\nvar dropRight = function (n) {\n    return function (as) {\n        return n <= 0 || (0, exports.isEmpty)(as) ? (0, exports.copy)(as) : n >= as.length ? [] : as.slice(0, as.length - n);\n    };\n};\nexports.dropRight = dropRight;\nfunction dropLeftWhile(predicate) {\n    return function (as) { return as.slice(spanLeftIndex(as, predicate)); };\n}\nexports.dropLeftWhile = dropLeftWhile;\n/**\n * `findIndex` returns an `Option` containing the first index for which a predicate holds.\n * It returns `None` if no element satisfies the predicate.\n * Similar to [`findFirst`](#findFirst) but returning the index instead of the element.\n *\n * @example\n * import { findIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.0.0\n */\nexports.findIndex = RA.findIndex;\nfunction findFirst(predicate) {\n    return RA.findFirst(predicate);\n}\nexports.findFirst = findFirst;\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array and\n * returns the first `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findFirstMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove18)(persons), some(\"Mary\"));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove70)(persons), none);\n *\n * @since 2.0.0\n */\nexports.findFirstMap = RA.findFirstMap;\nfunction findLast(predicate) {\n    return RA.findLast(predicate);\n}\nexports.findLast = findLast;\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array starting from the\n * end and returns the last `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findLastMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove18)(persons), some(\"Joey\"));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove70)(persons), none);\n *\n * @since 2.0.0\n */\nexports.findLastMap = RA.findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate.\n * It returns an `Option` containing the index or `None` if not found.\n *\n * @example\n * import { findLastIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: Array<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n * @since 2.0.0\n */\nexports.findLastIndex = RA.findLastIndex;\n/**\n * This function takes an array and makes a new array containing the same elements.\n *\n * @since 2.0.0\n */\nvar copy = function (as) { return as.slice(); };\nexports.copy = copy;\n/**\n * Insert an element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { insertAt } from 'fp-ts/Array'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.0.0\n */\nvar insertAt = function (i, a) {\n    return function (as) {\n        return i < 0 || i > as.length ? _.none : _.some((0, exports.unsafeInsertAt)(i, a, as));\n    };\n};\nexports.insertAt = insertAt;\n/**\n * Change the element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { updateAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.0.0\n */\nvar updateAt = function (i, a) { return (0, exports.modifyAt)(i, function () { return a; }); };\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds.\n *\n * @example\n * import { deleteAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.0.0\n */\nvar deleteAt = function (i) {\n    return function (as) {\n        return (0, exports.isOutOfBound)(i, as) ? _.none : _.some((0, exports.unsafeDeleteAt)(i, as));\n    };\n};\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds.\n *\n * @example\n * import { modifyAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.0.0\n */\nvar modifyAt = function (i, f) {\n    return function (as) {\n        return (0, exports.isOutOfBound)(i, as) ? _.none : _.some((0, exports.unsafeUpdateAt)(i, f(as[i]), as));\n    };\n};\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @since 2.0.0\n */\nvar reverse = function (as) { return ((0, exports.isEmpty)(as) ? [] : as.slice().reverse()); };\nexports.reverse = reverse;\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Right` elements in the same order.\n *\n * @example\n * import { rights } from 'fp-ts/Array'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @since 2.0.0\n */\nvar rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\nexports.rights = rights;\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Left` elements in the same order.\n *\n * @example\n * import { lefts } from 'fp-ts/Array'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @since 2.0.0\n */\nvar lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @since 2.0.0\n */\nvar sort = function (O) {\n    return function (as) {\n        return as.length <= 1 ? (0, exports.copy)(as) : as.slice().sort(O.compare);\n    };\n};\nexports.sort = sort;\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @since 2.0.0\n */\nvar zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return (0, exports.zipWith)(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.0.0\n */\nvar unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Creates a new `Array`, prepending an element to every member of the input `Array`.\n *\n * @example\n * import { prependAll } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nvar prependAll = function (middle) {\n    var f = NEA.prependAll(middle);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : []); };\n};\nexports.prependAll = prependAll;\n/**\n * Creates a new `Array` placing an element in between members of the input `Array`.\n *\n * @example\n * import { intersperse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nvar intersperse = function (middle) {\n    var f = NEA.intersperse(middle);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : (0, exports.copy)(as)); };\n};\nexports.intersperse = intersperse;\n/**\n * Creates a new `Array` rotating the input `Array` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @since 2.0.0\n */\nvar rotate = function (n) {\n    var f = NEA.rotate(n);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : (0, exports.copy)(as)); };\n};\nexports.rotate = rotate;\n// TODO: remove non-curried overloading in v3\n/**\n * Test if a value is a member of an `Array`. Takes a `Eq<A>` as a single\n * argument which returns the function to use to search for a value of type `A` in\n * an `Array<A>`.\n *\n * @example\n * import { elem } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(2)), true)\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(0)), false)\n *\n * @since 2.0.0\n */\nexports.elem = RA.elem;\n/**\n * Creates a new `Array` removing duplicate elements, keeping the first occurrence of an element,\n * based on a `Eq<A>`.\n *\n * @example\n * import { uniq } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.0.0\n */\nvar uniq = function (E) {\n    var f = NEA.uniq(E);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : (0, exports.copy)(as)); };\n};\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/Array'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.0.0\n */\nvar sortBy = function (ords) {\n    var f = NEA.sortBy(ords);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : (0, exports.copy)(as)); };\n};\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as A from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: Array<A>) => Array<Array<A>>) => {\n *   return A.chop(as => {\n *     const { init, rest } = pipe(as, A.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @since 2.0.0\n */\nvar chop = function (f) {\n    var g = NEA.chop(f);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? g(as) : []); };\n};\nexports.chop = chop;\n/**\n * Splits an `Array` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.0.0\n */\nvar splitAt = function (n) {\n    return function (as) {\n        return n >= 1 && (0, exports.isNonEmpty)(as) ? NEA.splitAt(n)(as) : (0, exports.isEmpty)(as) ? [(0, exports.copy)(as), []] : [[], (0, exports.copy)(as)];\n    };\n};\nexports.splitAt = splitAt;\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @since 2.0.0\n */\nvar chunksOf = function (n) {\n    var f = NEA.chunksOf(n);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : []); };\n};\nexports.chunksOf = chunksOf;\n/**\n * @category lifting\n * @since 2.11.0\n */\nvar fromOptionK = function (f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return (0, exports.fromOption)(f.apply(void 0, a));\n    };\n};\nexports.fromOptionK = fromOptionK;\nfunction comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return (0, exports.isNonEmpty)(input)\n            ? (0, exports.flatMap)(NEA.head(input), function (a) { return go((0, function_1.pipe)(scope, (0, exports.append)(a)), NEA.tail(input)); })\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : [];\n    };\n    return go([], input);\n}\nexports.comprehension = comprehension;\n/**\n * @since 2.11.0\n */\nvar concatW = function (second) {\n    return function (first) {\n        return (0, exports.isEmpty)(first) ? (0, exports.copy)(second) : (0, exports.isEmpty)(second) ? (0, exports.copy)(first) : first.concat(second);\n    };\n};\nexports.concatW = concatW;\n/**\n * @since 2.11.0\n */\nexports.concat = exports.concatW;\nfunction union(E) {\n    var unionE = NEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (second) { return unionE_1(second, first); };\n        }\n        return (0, exports.isNonEmpty)(first) && (0, exports.isNonEmpty)(second)\n            ? unionE(second)(first)\n            : (0, exports.isNonEmpty)(first)\n                ? (0, exports.copy)(first)\n                : (0, exports.copy)(second);\n    };\n}\nexports.union = union;\nfunction intersection(E) {\n    var elemE = (0, exports.elem)(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexports.intersection = intersection;\nfunction difference(E) {\n    var elemE = (0, exports.elem)(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\nexports.difference = difference;\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.mapWithIndex)(f)); };\nvar _ap = function (fab, fa) { return (0, function_1.pipe)(fab, (0, exports.ap)(fa)); };\n/* istanbul ignore next */\nvar _filter = function (fa, predicate) { return (0, function_1.pipe)(fa, (0, exports.filter)(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.filterMap)(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return (0, function_1.pipe)(fa, (0, exports.partition)(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.partitionMap)(f)); };\n/* istanbul ignore next */\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return (0, function_1.pipe)(fa, (0, exports.partitionWithIndex)(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _partitionMapWithIndex = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.partitionMapWithIndex)(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return (0, function_1.pipe)(fa, (0, exports.alt)(that)); };\nvar _reduce = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduce)(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = (0, exports.foldMap)(M);\n    return function (fa, f) { return (0, function_1.pipe)(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduceRight)(b, f)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return (0, function_1.pipe)(fa, (0, exports.reduceWithIndex)(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = (0, exports.foldMapWithIndex)(M);\n    return function (fa, f) { return (0, function_1.pipe)(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return (0, function_1.pipe)(fa, (0, exports.reduceRightWithIndex)(b, f));\n};\n/* istanbul ignore next */\nvar _filterMapWithIndex = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.filterMapWithIndex)(f)); };\n/* istanbul ignore next */\nvar _filterWithIndex = function (fa, predicateWithIndex) { return (0, function_1.pipe)(fa, (0, exports.filterWithIndex)(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _extend = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.extend)(f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = (0, exports.traverse)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = (0, exports.traverseWithIndex)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseWithIndexF(f)); };\n};\nvar _chainRecDepthFirst = RA._chainRecDepthFirst;\nvar _chainRecBreadthFirst = RA._chainRecBreadthFirst;\n/**\n * Given an element of the base type, `of` builds an `Array` containing just that\n * element of the base type (this is useful for building a `Monad`).\n *\n * @example\n * import { of } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(of(\"a\"), [\"a\"]);\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.of = NEA.of;\n/**\n * Makes an empty `Array`, useful for building a [`Monoid`](#Monoid)\n *\n * @since 2.7.0\n */\nvar zero = function () { return []; };\nexports.zero = zero;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: Array<A>) => Array<B>`.\n * In practice it applies the base function to each element of the array and collects the\n * results in a new array.\n *\n * @example\n * import { map } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => n * 2;\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [2, 4, 6]);\n *\n * @category mapping\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) { return fa.map(function (a) { return f(a); }); }; };\nexports.map = map;\n/**\n * @example\n * import { ap, map, of } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * // a curried function with 3 input parameteres\n * const f = (s1: string) => (n: number) => (s2: string) => s1 + n + s2;\n *\n * // let's use `ap` to iterate `f` over an array for each input parameter\n * assert.deepStrictEqual(pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"])), [\n *   \"a1😀\", \"a1😫\", \"a1😎\",\n *   \"a2😀\", \"a2😫\", \"a2😎\",\n *   \"b1😀\", \"b1😫\", \"b1😎\",\n *   \"b2😀\", \"b2😫\", \"b2😎\",\n * ]);\n *\n * // given Array implements the Applicative interface with the `of` method,\n * // we can write exactly the same thing in a more symmetric way\n * // using `of` on `f` and `ap` on each array in input\n * assert.deepStrictEqual(\n *   pipe(of(f), ap([\"a\", \"b\"]), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"])),\n *   pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"]))\n * );\n *\n * @since 2.0.0\n */\nvar ap = function (fa) {\n    return (0, exports.flatMap)(function (f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); });\n};\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to\n * determine the next computation.\n *\n * In other words it takes a function `f` that produces an array from a single element of\n * the base type `A` and returns a new function which applies `f` to each element of the\n * input array (like [`map`](#map)) and, instead of returning an array of arrays, concatenates the\n * results into a single array (like [`flatten`](#flatten)).\n *\n * @example\n * import { flatMap, map, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => replicate(n, `${n}`);\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [[\"1\"], [\"2\", \"2\"], [\"3\", \"3\", \"3\"]]);\n * assert.deepStrictEqual(pipe([1, 2, 3], flatMap(f)), [\"1\", \"2\", \"2\", \"3\", \"3\", \"3\"]);\n *\n * @category sequencing\n * @since 2.14.0\n */\nexports.flatMap = (0, function_1.dual)(2, function (ma, f) {\n    return (0, function_1.pipe)(ma, (0, exports.chainWithIndex)(function (i, a) { return f(a, i); }));\n});\n/**\n * Takes an array of arrays of `A` and flattens them into an array of `A`\n * by concatenating the elements of each array in order.\n *\n * @example\n * import { flatten } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(flatten([[\"a\"], [\"b\", \"c\"], [\"d\", \"e\", \"f\"]]), [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]);\n *\n * @category sequencing\n * @since 2.5.0\n */\nexports.flatten = (0, exports.flatMap)(function_1.identity);\n/**\n * Same as [`map`](#map), but the iterating function takes both the index and the value\n * of the element.\n *\n * @example\n * import { mapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (i: number, s: string) => `${s} - ${i}`;\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], mapWithIndex(f)), [\"a - 0\", \"b - 1\", \"c - 2\"]);\n *\n * @category mapping\n * @since 2.0.0\n */\nvar mapWithIndex = function (f) { return function (fa) {\n    return fa.map(function (a, i) { return f(i, a); });\n}; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * Maps an array with an iterating function that takes the index and the value of\n * each element and returns an `Option`. It keeps only the `Some` values discarding\n * the `None`s.\n *\n * Same as [`filterMap`](#filterMap), but with an iterating function which takes also\n * the index as input.\n *\n * @example\n * import { filterMapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (i: number, s: string) => (i % 2 === 1 ? option.some(s.toUpperCase()) : option.none);\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMapWithIndex(f)), [\"NO\", \"B\"]);\n *\n * @category filtering\n * @since 2.0.0\n */\nvar filterMapWithIndex = function (f) {\n    return function (fa) {\n        var out = [];\n        for (var i = 0; i < fa.length; i++) {\n            var optionB = f(i, fa[i]);\n            if (_.isSome(optionB)) {\n                out.push(optionB.value);\n            }\n        }\n        return out;\n    };\n};\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * Maps an array with an iterating function that returns an `Option`\n * and it keeps only the `Some` values discarding the `None`s.\n *\n * @example\n * import { filterMap } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (s: string) => s.length === 1 ? option.some(s.toUpperCase()) : option.none;\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMap(f)), [\"A\", \"B\"]);\n *\n * @category filtering\n * @since 2.0.0\n */\nvar filterMap = function (f) {\n    return (0, exports.filterMapWithIndex)(function (_, a) { return f(a); });\n};\nexports.filterMap = filterMap;\n/**\n * Compact an array of `Option`s discarding the `None` values and\n * keeping the `Some` values. It returns a new array containing the values of\n * the `Some` options.\n *\n * @example\n * import { compact } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n *\n * assert.deepStrictEqual(compact([option.some(\"a\"), option.none, option.some(\"b\")]), [\"a\", \"b\"]);\n *\n * @category filtering\n * @since 2.0.0\n */\nexports.compact = (0, exports.filterMap)(function_1.identity);\n/**\n * Separate an array of `Either`s into `Left`s and `Right`s, creating two new arrays:\n * one containing all the left values and one containing all the right values.\n *\n * @example\n * import { separate } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n *\n * assert.deepStrictEqual(separate([either.right(\"r1\"), either.left(\"l1\"), either.right(\"r2\")]), {\n *   left: [\"l1\"],\n *   right: [\"r1\", \"r2\"],\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nvar separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return (0, Separated_1.separated)(left, right);\n};\nexports.separate = separate;\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `filter` creates a new `Array` containing the elements of the original\n * `Array` for which the iterating function is `true`.\n *\n * @example\n * import { filter } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/lib/string\";\n *\n * assert.deepStrictEqual(filter(isString)([\"a\", 1, {}, \"b\", 5]), [\"a\", \"b\"]);\n * assert.deepStrictEqual(filter((x:number) => x > 0)([-3, 1, -2, 5]), [1, 5]);\n *\n * @category filtering\n * @since 2.0.0\n */\nvar filter = function (predicate) {\n    return function (as) {\n        return as.filter(predicate);\n    };\n};\nexports.filter = filter;\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `partition` creates two new `Array`s: `right` containing the elements of the original\n * `Array` for which the iterating function is `true`, `left` containing the elements\n * for which it is false.\n *\n * @example\n * import { partition } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/lib/string\";\n *\n * assert.deepStrictEqual(partition(isString)([\"a\", 1, {}, \"b\", 5]), { left: [1, {}, 5], right: [\"a\", \"b\"] });\n * assert.deepStrictEqual(partition((x: number) => x > 0)([-3, 1, -2, 5]), { left: [-3, -2], right: [1, 5] });\n *\n * @category filtering\n * @since 2.0.0\n */\nvar partition = function (predicate) {\n    return (0, exports.partitionWithIndex)(function (_, a) { return predicate(a); });\n};\nexports.partition = partition;\n/**\n * Same as [`partition`](#partition), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionWithIndex } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(partitionWithIndex((index, x: number) => index < 3 && x > 0)([-2, 5, 6, 7]), {\n *   left: [-2, 7],\n *   right: [5, 6],\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nvar partitionWithIndex = function (predicateWithIndex) {\n    return function (as) {\n        var left = [];\n        var right = [];\n        for (var i = 0; i < as.length; i++) {\n            var b = as[i];\n            if (predicateWithIndex(i, b)) {\n                right.push(b);\n            }\n            else {\n                left.push(b);\n            }\n        }\n        return (0, Separated_1.separated)(left, right);\n    };\n};\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * Given an iterating function that returns an `Either`,\n * `partitionMap` applies the iterating function to each element and it creates two `Array`s:\n * `right` containing the values of `Right` results, `left` containing the values of `Left` results.\n *\n * @example\n * import { partitionMap } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/lib/Either\";\n *\n * const upperIfString = <B>(x: B): Either<B, string> =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMap(upperIfString)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7],\n *   right: [ 'HELLO', 'WORLD' ],\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nvar partitionMap = function (f) { return (0, exports.partitionMapWithIndex)(function (_, a) { return f(a); }); };\nexports.partitionMap = partitionMap;\n/**\n * Same as [`partitionMap`](#partitionMap), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionMapWithIndex } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/lib/Either\";\n *\n * const upperIfStringBefore3 = <B>(index: number, x: B): Either<B, string> =>\n *   index < 3 && typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMapWithIndex(upperIfStringBefore3)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7, \"world\"],\n *   right: [\"HELLO\"],\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nvar partitionMapWithIndex = function (f) {\n    return function (fa) {\n        var left = [];\n        var right = [];\n        for (var i = 0; i < fa.length; i++) {\n            var e = f(i, fa[i]);\n            if (e._tag === 'Left') {\n                left.push(e.left);\n            }\n            else {\n                right.push(e.right);\n            }\n        }\n        return (0, Separated_1.separated)(left, right);\n    };\n};\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as A from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     A.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nvar altW = function (that) {\n    return function (fa) {\n        return fa.concat(that());\n    };\n};\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Array` concatenates the inputs into a single array.\n *\n * @example\n * import * as A from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     A.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n/**\n * Same as [`filter`](#filter), but passing also the index to the iterating function.\n *\n * @example\n * import { filterWithIndex } from 'fp-ts/Array';\n *\n * const f = (index: number, x: number) => x > 0 && index <= 2;\n * assert.deepStrictEqual(filterWithIndex(f)([-3, 1, -2, 5]), [1]);\n *\n * @category filtering\n * @since 2.0.0\n */\nvar filterWithIndex = function (predicateWithIndex) {\n    return function (as) {\n        return as.filter(function (b, i) { return predicateWithIndex(i, b); });\n    };\n};\nexports.filterWithIndex = filterWithIndex;\n/**\n * Given an iterating function that takes `Array<A>` as input, `extend` returns\n * an array containing the results of the iterating function applied to the whole input\n * `Array`, then to the input `Array` without the first element, then to the input\n * `Array` without the first two elements, etc.\n *\n * @example\n * import { extend } from 'fp-ts/Array'\n *\n * const f = (a: string[]) => a.join(\",\");\n * assert.deepStrictEqual(extend(f)([\"a\", \"b\", \"c\"]), [\"a,b,c\", \"b,c\", \"c\"]);\n *\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return wa.map(function (_, i) { return f(wa.slice(i)); });\n}; };\nexports.extend = extend;\n/**\n * `duplicate` returns an array containing the whole input `Array`,\n * then to the input `Array` dropping the first element, then to the input\n * `Array` dropping the first two elements, etc.\n *\n * @example\n * import { duplicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(duplicate([\"a\", \"b\", \"c\"]), [[\"a\", \"b\", \"c\"], [\"b\", \"c\"], [\"c\"]]);\n *\n * @since 2.0.0\n */\nexports.duplicate = (0, exports.extend)(function_1.identity);\n/**\n * Map and fold an `Array`.\n * Map the `Array` passing each value to the iterating function.\n * Then fold the results using the provided `Monoid`.\n *\n * @example\n * import { foldMap } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (s: string) => s.toUpperCase()\n * assert.deepStrictEqual(foldMap(monoid)(f)([\"a\", \"b\", \"c\"]), \"ABC\");\n *\n * @category folding\n * @since 2.0.0\n */\nexports.foldMap = RA.foldMap;\n/**\n * Same as [`foldMap`](#foldMap) but passing also the index to the iterating function.\n *\n * @example\n * import { foldMapWithIndex } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (index:number, s: string) => `${s.toUpperCase()}(${index})`\n * assert.deepStrictEqual(foldMapWithIndex(monoid)(f)([\"a\", \"b\", \"c\"]), \"A(0)B(1)C(2)\");\n *\n * @category folding\n * @since 2.0.0\n */\nexports.foldMapWithIndex = RA.foldMapWithIndex;\n/**\n * Reduces an `Array`.\n *\n * `reduce` executes the supplied iterating function on each element of the array,\n * in order, passing in the element and the return value from the calculation on the preceding element.\n *\n * The first time that the iterating function is called there is no \"return value of the\n * previous calculation\", the initial value is used in its place.\n *\n * @example\n * import { reduce } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduce(5, (acc: number, cur: number) => acc * cur)([2, 3]), 5 * 2 * 3);\n *\n * @category folding\n * @since 2.0.0\n */\nexports.reduce = RA.reduce;\n/**\n * Same as [`reduce`](#reduce) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, acc: string, cur: unknown) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"A1B2\");\n *\n * @category folding\n * @since 2.0.0\n */\nexports.reduceWithIndex = RA.reduceWithIndex;\n/**\n * Same as [`reduce`](#reduce) but applied from the end to the start.\n *\n * *Note*: the iterating function in this case takes the accumulator as the last argument.\n *\n * @example\n * import { reduceRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduceRight(\"\", (cur: string, acc: string) => acc + cur)([\"a\", \"b\", \"c\"]), \"cba\");\n *\n * @category folding\n * @since 2.0.0\n */\nexports.reduceRight = RA.reduceRight;\n/**\n * Same as [`reduceRight`](#reduceRight) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceRightWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, cur: unknown, acc: string) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceRightWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"B2A1\");\n *\n * @category folding\n * @since 2.0.0\n */\nexports.reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * Given an iterating function that returns a `HKT` (higher kinded type), `traverse`\n * applies the iterating function to each element of the `Array` and then [`sequence`](#sequence)-s\n * the results using the provided `Applicative`.\n *\n * E.g. suppose you have an `Array` and you want to format each element with a function\n * that returns a result or an error as `f = (a: A) => Either<Error, B>`, using `traverse`\n * you can apply `f` to all elements and directly obtain as a result an `Either<Error,Array<B>>`\n * i.e. an `Array<B>` if all the results are `B`, or an `Error` if some of the results\n * are `Error`s.\n *\n * @example\n * import { traverse } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * const f = (x: unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", \"b\"]), right([\"A\", \"B\"]));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category traversing\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = (0, exports.traverseWithIndex)(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * `sequence` takes an `Array` where elements are `HKT<A>` (higher kinded type) and,\n * using an applicative of that `HKT`, returns an `HKT` of `Array<A>`.\n * E.g. it can turn an `Array<Either<Error, string>>` into an `Either<Error, Array<string>>`.\n *\n * `sequence` requires an `Applicative` of the `HKT` you are targeting, e.g. to turn an\n * `Array<Either<E, A>>` into an `Either<E, Array<A>>`, it needs an\n * `Applicative` for `Either`, to to turn an `Array<Option<A>>` into an `Option<Array<A>>`,\n * it needs an `Applicative` for `Option`.\n *\n * @example\n * import { sequence } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * assert.deepStrictEqual(sequence(Applicative)([right(\"a\"), right(\"b\")]), right([\"a\", \"b\"]));\n * assert.deepStrictEqual(\n *   sequence(Applicative)([right(\"a\"), left(new Error(\"not a string\"))]),\n *   left(new Error(\"not a string\"))\n * );\n *\n * @category traversing\n * @since 2.6.3\n */\nvar sequence = function (F) {\n    return function (ta) {\n        return _reduce(ta, F.of((0, exports.zero)()), function (fas, fa) {\n            return F.ap(F.map(fas, function (as) { return function (a) { return (0, function_1.pipe)(as, (0, exports.append)(a)); }; }), fa);\n        });\n    };\n};\nexports.sequence = sequence;\n/**\n * Same as [`traverse`](#traverse) but passing also the index to the iterating function.\n *\n * @example\n * import { traverseWithIndex } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * const f = (index:number, x:unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase() + index) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", \"b\"]), right([\"A0\", \"B1\"]));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category sequencing\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) {\n    return function (f) {\n        return (0, exports.reduceWithIndex)(F.of((0, exports.zero)()), function (i, fbs, a) {\n            return F.ap(F.map(fbs, function (bs) { return function (b) { return (0, function_1.pipe)(bs, (0, exports.append)(b)); }; }), f(i, a));\n        });\n    };\n};\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category filtering\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\nexports.wither = wither;\n/**\n * @category filtering\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\nexports.wilt = wilt;\n/**\n * `unfold` takes a function `f` which returns an `Option` of a tuple containing an outcome\n * value and an input for the following iteration.\n * `unfold` applies `f` to the initial value `b` and then recursively to the second\n * element of the tuple contained in the returned `option` of the previous\n * calculation until `f` returns `Option.none`.\n *\n * @example\n * import { unfold } from 'fp-ts/Array'\n * import { option } from 'fp-ts'\n *\n * const f = (n: number) => {\n *   if (n <= 0) return option.none;\n *   const returnValue = n * 2;\n *   const inputForNextRound = n - 1;\n *   return option.some([returnValue, inputForNextRound] as const);\n * };\n * assert.deepStrictEqual(unfold(5, f), [10, 8, 6, 4, 2]);\n *\n * @since 2.6.6\n */\nvar unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        var mt = f(bb);\n        if (_.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\nexports.unfold = unfold;\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexports.URI = 'Array';\n/**\n * `getShow` makes a `Show` for an `Array<A>` from a `Show` for\n * an `A`.\n *\n * @example\n * import { getShow } from 'fp-ts/Array'\n *\n * const numShow = { show: (n: number) => (n >= 0 ? `${n}` : `(${-n})`) };\n * assert.deepStrictEqual(getShow(numShow).show([-2, -1, 0, 1]), \"[(2), (1), 0, 1]\");\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getShow = RA.getShow;\n/**\n * Get a `Semigroup` based on the concatenation of `Array`s.\n * See also [`getMonoid`](#getMonoid).\n *\n * @example\n * import { getSemigroup } from 'fp-ts/Array'\n *\n * const S = getSemigroup<number>();\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 2, 3]);\n *\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) { return first.concat(second); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` for `Array<A>` based on the concatenation of `Array`s.\n *\n * @example\n * import { getMonoid } from 'fp-ts/Array'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.0.0\n */\nvar getMonoid = function () { return ({\n    concat: (0, exports.getSemigroup)().concat,\n    empty: []\n}); };\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `Array` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/Array'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getEq = RA.getEq;\n/**\n * Derives an `Ord` over the `Array` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/Array'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getOrd = RA.getOrd;\n/**\n * Get a `Semigroup` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n * See also [`getUnionMonoid`](#getUnionMonoid).\n *\n * @example\n * import { getUnionSemigroup } from 'fp-ts/Array';\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getUnionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 3]);\n *\n * @category instances\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * Get a `Monoid` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n *\n * @example\n * import { getUnionMonoid } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const M = getUnionMonoid<number>(Eq);\n * assert.deepStrictEqual(M.concat([1, 2], [2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(M.empty,[]);\n *\n * @category instances\n * @since 2.11.0\n */\nvar getUnionMonoid = function (E) { return ({\n    concat: (0, exports.getUnionSemigroup)(E).concat,\n    empty: []\n}); };\nexports.getUnionMonoid = getUnionMonoid;\n/**\n * Get a `Semigroup` based on the intersection of the elements of `Array`s.\n * Only elements present in the two arrays which are equal according to the\n * provided `Eq` are included in the result.\n *\n * @example\n * import { getIntersectionSemigroup } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getIntersectionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [2]);\n *\n * @category instances\n * @since 2.11.0\n */\nvar getIntersectionSemigroup = function (E) {\n    var intersectionE = intersection(E);\n    return {\n        concat: function (first, second) { return intersectionE(second)(first); }\n    };\n};\nexports.getIntersectionSemigroup = getIntersectionSemigroup;\n/**\n * Get a `Magma` for `Array` where the `concat` function is the differnce between\n * the first and the second array, i.e. the result contains all the elements of the\n * first array for which their is no equal element in the second array according\n * to the `Eq` provided.\n *\n *\n * @example\n * import { getDifferenceMagma } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getDifferenceMagma<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1]);\n *\n * @category instances\n * @since 2.11.0\n */\nvar getDifferenceMagma = function (E) {\n    var differenceE = difference(E);\n    return {\n        concat: function (first, second) { return differenceE(second)(first); }\n    };\n};\nexports.getDifferenceMagma = getDifferenceMagma;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Given an input an `Array` of functions, `flap` returns an `Array` containing\n * the results of applying each function to the given input.\n *\n * @example\n * import { flap } from 'fp-ts/Array'\n *\n * const funs = [\n *   (n: number) => `Double: ${n * 2}`,\n *   (n: number) => `Triple: ${n * 3}`,\n *   (n: number) => `Square: ${n * n}`,\n * ];\n * assert.deepStrictEqual(flap(4)(funs), ['Double: 8', 'Triple: 12', 'Square: 16']);\n *\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexports.apFirst = (0, Apply_1.apFirst)(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexports.apSecond = (0, Apply_1.apSecond)(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import * as A from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     A.chainFirst(() => ['a', 'b'])\n *   ),\n *   [1, 1, 2, 2, 3, 3]\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     A.chainFirst(() => [])\n *   ),\n *   []\n * )\n *\n * @category sequencing\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/ (0, Chain_1.chainFirst)(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: exports.flatMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Unfoldable = {\n    URI: exports.URI,\n    unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.Zero = {\n    URI: exports.URI,\n    zero: exports.zero\n};\n/**\n * @category do notation\n * @since 2.11.0\n */\nexports.guard = (0, Zero_1.guard)(exports.Zero, exports.Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    alt: _alt,\n    zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FilterableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    traverseWithIndex: _traverseWithIndex\n};\nvar _wither = /*#__PURE__*/ (0, Witherable_1.witherDefault)(exports.Traversable, exports.Compactable);\nvar _wilt = /*#__PURE__*/ (0, Witherable_1.wiltDefault)(exports.Traversable, exports.Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexports.chainRecDepthFirst = RA.chainRecDepthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.ChainRecDepthFirst = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap,\n    chainRec: _chainRecDepthFirst\n};\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexports.chainRecBreadthFirst = RA.chainRecBreadthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.ChainRecBreadthFirst = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap,\n    chainRec: _chainRecBreadthFirst\n};\n/**\n * Filter values inside a context.\n *\n * @since 2.11.0\n */\nexports.filterE = (0, Witherable_1.filterE)(exports.Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: exports.fromEither\n};\n/**\n * @category lifting\n * @since 2.11.0\n */\nexports.fromEitherK = (0, FromEither_1.fromEitherK)(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexports.unsafeInsertAt = NEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    return (0, exports.isNonEmpty)(as) ? NEA.unsafeUpdateAt(i, a, as) : [];\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nvar unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\nexports.unsafeDeleteAt = unsafeDeleteAt;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * `every` tells if the provided predicate holds true for every element in the `Array`.\n *\n * @example\n * import { every } from 'fp-ts/Array'\n *\n * assert.equal(every((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(every((x: number) => x >= 0)([-1, 2, 3]), false);\n *\n * @since 2.9.0\n */\nexports.every = RA.every;\n/**\n * `some` tells if the provided predicate holds true at least for one element in the `Array`.\n *\n * @example\n * import { some } from 'fp-ts/Array'\n *\n * assert.equal(some((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(some((x: number) => x >= 10)([1, 2, 3]), false);\n *\n * @since 2.9.0\n */\nvar some = function (predicate) {\n    return function (as) {\n        return as.some(predicate);\n    };\n};\nexports.some = some;\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\nexports.exists = exports.some;\n/**\n * Places an element in between members of an `Array`, then folds the results using the provided `Monoid`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intercalate(S.Monoid)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexports.intercalate = RA.intercalate;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexports.Do = (0, exports.of)(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bindTo = (0, Functor_1.bindTo)(exports.Functor);\nvar let_ = /*#__PURE__*/ (0, Functor_1.let)(exports.Functor);\nexports.let = let_;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bind = (0, Chain_1.bind)(exports.Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.apS = (0, Apply_1.apS)(exports.Apply);\n// -------------------------------------------------------------------------------------\n// legacy\n// -------------------------------------------------------------------------------------\n/**\n * Alias of `flatMap`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexports.chain = exports.flatMap;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `NonEmptyArray` module instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.range = NEA.range;\n/**\n * Use a new `[]` instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.empty = [];\n/**\n * Use `prepend` instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.cons = NEA.cons;\n/**\n * Use `append` instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.snoc = NEA.snoc;\n/**\n * Use `prependAll` instead\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `A.Functor` instead of `A.array`\n * (where `A` is from `import A from 'fp-ts/Array'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.array = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: exports.flatMap,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: exports.zero,\n    unfold: exports.unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.endsWith = exports.startsWith = exports.includes = exports.split = exports.size = exports.isEmpty = exports.slice = exports.trimRight = exports.trimLeft = exports.trim = exports.replace = exports.toLowerCase = exports.toUpperCase = exports.isString = exports.Show = exports.Ord = exports.Monoid = exports.empty = exports.Semigroup = exports.Eq = void 0;\nvar ReadonlyNonEmptyArray_1 = require(\"./ReadonlyNonEmptyArray\");\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Eq.equals('a', 'a'), true)\n * assert.deepStrictEqual(S.Eq.equals('a', 'b'), false)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.Eq = {\n    equals: function (first, second) { return first === second; }\n};\n/**\n * `string` semigroup under concatenation.\n *\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Semigroup.concat('a', 'b'), 'ab')\n *\n * @category instances\n * @since 2.10.0\n */\nexports.Semigroup = {\n    concat: function (first, second) { return first + second; }\n};\n/**\n * An empty `string`.\n *\n * @since 2.10.0\n */\nexports.empty = '';\n/**\n * `string` monoid under concatenation.\n *\n * The `empty` value is `''`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Monoid.concat('a', 'b'), 'ab')\n * assert.deepStrictEqual(S.Monoid.concat('a', S.Monoid.empty), 'a')\n *\n * @category instances\n * @since 2.10.0\n */\nexports.Monoid = {\n    concat: exports.Semigroup.concat,\n    empty: exports.empty\n};\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Ord.compare('a', 'a'), 0)\n * assert.deepStrictEqual(S.Ord.compare('a', 'b'), -1)\n * assert.deepStrictEqual(S.Ord.compare('b', 'a'), 1)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.Ord = {\n    equals: exports.Eq.equals,\n    compare: function (first, second) { return (first < second ? -1 : first > second ? 1 : 0); }\n};\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Show.show('a'), '\"a\"')\n *\n * @category instances\n * @since 2.10.0\n */\nexports.Show = {\n    show: function (s) { return JSON.stringify(s); }\n};\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.isString('a'), true)\n * assert.deepStrictEqual(S.isString(1), false)\n *\n * @category refinements\n * @since 2.11.0\n */\nvar isString = function (u) { return typeof u === 'string'; };\nexports.isString = isString;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('a', S.toUpperCase), 'A')\n *\n * @since 2.11.0\n */\nvar toUpperCase = function (s) { return s.toUpperCase(); };\nexports.toUpperCase = toUpperCase;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('A', S.toLowerCase), 'a')\n *\n * @since 2.11.0\n */\nvar toLowerCase = function (s) { return s.toLowerCase(); };\nexports.toLowerCase = toLowerCase;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.replace('b', 'd')), 'adc')\n *\n * @since 2.11.0\n */\nvar replace = function (searchValue, replaceValue) {\n    return function (s) {\n        return s.replace(searchValue, replaceValue);\n    };\n};\nexports.replace = replace;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(' a ', S.trim), 'a')\n *\n * @since 2.11.0\n */\nvar trim = function (s) { return s.trim(); };\nexports.trim = trim;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(' a ', S.trimLeft), 'a ')\n *\n * @since 2.11.0\n */\nvar trimLeft = function (s) { return s.trimLeft(); };\nexports.trimLeft = trimLeft;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(' a ', S.trimRight), ' a')\n *\n * @since 2.11.0\n */\nvar trimRight = function (s) { return s.trimRight(); };\nexports.trimRight = trimRight;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abcd', S.slice(1, 3)), 'bc')\n *\n * @since 2.11.0\n */\nvar slice = function (start, end) {\n    return function (s) {\n        return s.slice(start, end);\n    };\n};\nexports.slice = slice;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Test whether a `string` is empty.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('', S.isEmpty), true)\n * assert.deepStrictEqual(pipe('a', S.isEmpty), false)\n *\n * @since 2.10.0\n */\nvar isEmpty = function (s) { return s.length === 0; };\nexports.isEmpty = isEmpty;\n/**\n * Calculate the number of characters in a `string`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.size), 3)\n *\n * @since 2.10.0\n */\nvar size = function (s) { return s.length; };\nexports.size = size;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.split('')), ['a', 'b', 'c'])\n * assert.deepStrictEqual(pipe('', S.split('')), [''])\n *\n * @since 2.11.0\n */\nvar split = function (separator) {\n    return function (s) {\n        var out = s.split(separator);\n        return (0, ReadonlyNonEmptyArray_1.isNonEmpty)(out) ? out : [s];\n    };\n};\nexports.split = split;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.includes('b')), true)\n * assert.deepStrictEqual(pipe('abc', S.includes('d')), false)\n *\n * @since 2.11.0\n */\nvar includes = function (searchString, position) {\n    return function (s) {\n        return s.includes(searchString, position);\n    };\n};\nexports.includes = includes;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.startsWith('a')), true)\n * assert.deepStrictEqual(pipe('bc', S.startsWith('a')), false)\n *\n * @since 2.11.0\n */\nvar startsWith = function (searchString, position) {\n    return function (s) {\n        return s.startsWith(searchString, position);\n    };\n};\nexports.startsWith = startsWith;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.endsWith('c')), true)\n * assert.deepStrictEqual(pipe('ab', S.endsWith('c')), false)\n *\n * @since 2.11.0\n */\nvar endsWith = function (searchString, position) {\n    return function (s) {\n        return s.endsWith(searchString, position);\n    };\n};\nexports.endsWith = endsWith;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.JSON5 = factory());\n}(this, (function () { 'use strict';\n\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\n\tvar _global = createCommonjsModule(function (module) {\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self\n\t  // eslint-disable-next-line no-new-func\n\t  : Function('return this')();\n\tif (typeof __g == 'number') { __g = global; } // eslint-disable-line no-undef\n\t});\n\n\tvar _core = createCommonjsModule(function (module) {\n\tvar core = module.exports = { version: '2.6.5' };\n\tif (typeof __e == 'number') { __e = core; } // eslint-disable-line no-undef\n\t});\n\tvar _core_1 = _core.version;\n\n\tvar _isObject = function (it) {\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n\tvar _anObject = function (it) {\n\t  if (!_isObject(it)) { throw TypeError(it + ' is not an object!'); }\n\t  return it;\n\t};\n\n\tvar _fails = function (exec) {\n\t  try {\n\t    return !!exec();\n\t  } catch (e) {\n\t    return true;\n\t  }\n\t};\n\n\t// Thank's IE8 for his funny defineProperty\n\tvar _descriptors = !_fails(function () {\n\t  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n\t});\n\n\tvar document = _global.document;\n\t// typeof document.createElement is 'object' in old IE\n\tvar is = _isObject(document) && _isObject(document.createElement);\n\tvar _domCreate = function (it) {\n\t  return is ? document.createElement(it) : {};\n\t};\n\n\tvar _ie8DomDefine = !_descriptors && !_fails(function () {\n\t  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;\n\t});\n\n\t// 7.1.1 ToPrimitive(input [, PreferredType])\n\n\t// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n\t// and the second argument - flag - preferred type is a string\n\tvar _toPrimitive = function (it, S) {\n\t  if (!_isObject(it)) { return it; }\n\t  var fn, val;\n\t  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) { return val; }\n\t  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) { return val; }\n\t  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) { return val; }\n\t  throw TypeError(\"Can't convert object to primitive value\");\n\t};\n\n\tvar dP = Object.defineProperty;\n\n\tvar f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n\t  _anObject(O);\n\t  P = _toPrimitive(P, true);\n\t  _anObject(Attributes);\n\t  if (_ie8DomDefine) { try {\n\t    return dP(O, P, Attributes);\n\t  } catch (e) { /* empty */ } }\n\t  if ('get' in Attributes || 'set' in Attributes) { throw TypeError('Accessors not supported!'); }\n\t  if ('value' in Attributes) { O[P] = Attributes.value; }\n\t  return O;\n\t};\n\n\tvar _objectDp = {\n\t\tf: f\n\t};\n\n\tvar _propertyDesc = function (bitmap, value) {\n\t  return {\n\t    enumerable: !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable: !(bitmap & 4),\n\t    value: value\n\t  };\n\t};\n\n\tvar _hide = _descriptors ? function (object, key, value) {\n\t  return _objectDp.f(object, key, _propertyDesc(1, value));\n\t} : function (object, key, value) {\n\t  object[key] = value;\n\t  return object;\n\t};\n\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\tvar _has = function (it, key) {\n\t  return hasOwnProperty.call(it, key);\n\t};\n\n\tvar id = 0;\n\tvar px = Math.random();\n\tvar _uid = function (key) {\n\t  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n\t};\n\n\tvar _library = false;\n\n\tvar _shared = createCommonjsModule(function (module) {\n\tvar SHARED = '__core-js_shared__';\n\tvar store = _global[SHARED] || (_global[SHARED] = {});\n\n\t(module.exports = function (key, value) {\n\t  return store[key] || (store[key] = value !== undefined ? value : {});\n\t})('versions', []).push({\n\t  version: _core.version,\n\t  mode: _library ? 'pure' : 'global',\n\t  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n\t});\n\t});\n\n\tvar _functionToString = _shared('native-function-to-string', Function.toString);\n\n\tvar _redefine = createCommonjsModule(function (module) {\n\tvar SRC = _uid('src');\n\n\tvar TO_STRING = 'toString';\n\tvar TPL = ('' + _functionToString).split(TO_STRING);\n\n\t_core.inspectSource = function (it) {\n\t  return _functionToString.call(it);\n\t};\n\n\t(module.exports = function (O, key, val, safe) {\n\t  var isFunction = typeof val == 'function';\n\t  if (isFunction) { _has(val, 'name') || _hide(val, 'name', key); }\n\t  if (O[key] === val) { return; }\n\t  if (isFunction) { _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key))); }\n\t  if (O === _global) {\n\t    O[key] = val;\n\t  } else if (!safe) {\n\t    delete O[key];\n\t    _hide(O, key, val);\n\t  } else if (O[key]) {\n\t    O[key] = val;\n\t  } else {\n\t    _hide(O, key, val);\n\t  }\n\t// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n\t})(Function.prototype, TO_STRING, function toString() {\n\t  return typeof this == 'function' && this[SRC] || _functionToString.call(this);\n\t});\n\t});\n\n\tvar _aFunction = function (it) {\n\t  if (typeof it != 'function') { throw TypeError(it + ' is not a function!'); }\n\t  return it;\n\t};\n\n\t// optional / simple context binding\n\n\tvar _ctx = function (fn, that, length) {\n\t  _aFunction(fn);\n\t  if (that === undefined) { return fn; }\n\t  switch (length) {\n\t    case 1: return function (a) {\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function (a, b) {\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function (a, b, c) {\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function (/* ...args */) {\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n\tvar PROTOTYPE = 'prototype';\n\n\tvar $export = function (type, name, source) {\n\t  var IS_FORCED = type & $export.F;\n\t  var IS_GLOBAL = type & $export.G;\n\t  var IS_STATIC = type & $export.S;\n\t  var IS_PROTO = type & $export.P;\n\t  var IS_BIND = type & $export.B;\n\t  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n\t  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n\t  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n\t  var key, own, out, exp;\n\t  if (IS_GLOBAL) { source = name; }\n\t  for (key in source) {\n\t    // contains in native\n\t    own = !IS_FORCED && target && target[key] !== undefined;\n\t    // export native or passed\n\t    out = (own ? target : source)[key];\n\t    // bind timers to global for call from export context\n\t    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;\n\t    // extend global\n\t    if (target) { _redefine(target, key, out, type & $export.U); }\n\t    // export\n\t    if (exports[key] != out) { _hide(exports, key, exp); }\n\t    if (IS_PROTO && expProto[key] != out) { expProto[key] = out; }\n\t  }\n\t};\n\t_global.core = _core;\n\t// type bitmap\n\t$export.F = 1;   // forced\n\t$export.G = 2;   // global\n\t$export.S = 4;   // static\n\t$export.P = 8;   // proto\n\t$export.B = 16;  // bind\n\t$export.W = 32;  // wrap\n\t$export.U = 64;  // safe\n\t$export.R = 128; // real proto method for `library`\n\tvar _export = $export;\n\n\t// 7.1.4 ToInteger\n\tvar ceil = Math.ceil;\n\tvar floor = Math.floor;\n\tvar _toInteger = function (it) {\n\t  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n\t};\n\n\t// 7.2.1 RequireObjectCoercible(argument)\n\tvar _defined = function (it) {\n\t  if (it == undefined) { throw TypeError(\"Can't call method on  \" + it); }\n\t  return it;\n\t};\n\n\t// true  -> String#at\n\t// false -> String#codePointAt\n\tvar _stringAt = function (TO_STRING) {\n\t  return function (that, pos) {\n\t    var s = String(_defined(that));\n\t    var i = _toInteger(pos);\n\t    var l = s.length;\n\t    var a, b;\n\t    if (i < 0 || i >= l) { return TO_STRING ? '' : undefined; }\n\t    a = s.charCodeAt(i);\n\t    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n\t      ? TO_STRING ? s.charAt(i) : a\n\t      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n\t  };\n\t};\n\n\tvar $at = _stringAt(false);\n\t_export(_export.P, 'String', {\n\t  // 21.1.3.3 String.prototype.codePointAt(pos)\n\t  codePointAt: function codePointAt(pos) {\n\t    return $at(this, pos);\n\t  }\n\t});\n\n\tvar codePointAt = _core.String.codePointAt;\n\n\tvar max = Math.max;\n\tvar min = Math.min;\n\tvar _toAbsoluteIndex = function (index, length) {\n\t  index = _toInteger(index);\n\t  return index < 0 ? max(index + length, 0) : min(index, length);\n\t};\n\n\tvar fromCharCode = String.fromCharCode;\n\tvar $fromCodePoint = String.fromCodePoint;\n\n\t// length should be 1, old FF problem\n\t_export(_export.S + _export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\n\t  // 21.1.2.2 String.fromCodePoint(...codePoints)\n\t  fromCodePoint: function fromCodePoint(x) {\n\t    var arguments$1 = arguments;\n\t // eslint-disable-line no-unused-vars\n\t    var res = [];\n\t    var aLen = arguments.length;\n\t    var i = 0;\n\t    var code;\n\t    while (aLen > i) {\n\t      code = +arguments$1[i++];\n\t      if (_toAbsoluteIndex(code, 0x10ffff) !== code) { throw RangeError(code + ' is not a valid code point'); }\n\t      res.push(code < 0x10000\n\t        ? fromCharCode(code)\n\t        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\n\t      );\n\t    } return res.join('');\n\t  }\n\t});\n\n\tvar fromCodePoint = _core.String.fromCodePoint;\n\n\t// This is a generated file. Do not edit.\n\tvar Space_Separator = /[\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/;\n\tvar ID_Start = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/;\n\tvar ID_Continue = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF9\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE83\\uDE86-\\uDE99\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/;\n\n\tvar unicode = {\n\t\tSpace_Separator: Space_Separator,\n\t\tID_Start: ID_Start,\n\t\tID_Continue: ID_Continue\n\t};\n\n\tvar util = {\n\t    isSpaceSeparator: function isSpaceSeparator (c) {\n\t        return typeof c === 'string' && unicode.Space_Separator.test(c)\n\t    },\n\n\t    isIdStartChar: function isIdStartChar (c) {\n\t        return typeof c === 'string' && (\n\t            (c >= 'a' && c <= 'z') ||\n\t        (c >= 'A' && c <= 'Z') ||\n\t        (c === '$') || (c === '_') ||\n\t        unicode.ID_Start.test(c)\n\t        )\n\t    },\n\n\t    isIdContinueChar: function isIdContinueChar (c) {\n\t        return typeof c === 'string' && (\n\t            (c >= 'a' && c <= 'z') ||\n\t        (c >= 'A' && c <= 'Z') ||\n\t        (c >= '0' && c <= '9') ||\n\t        (c === '$') || (c === '_') ||\n\t        (c === '\\u200C') || (c === '\\u200D') ||\n\t        unicode.ID_Continue.test(c)\n\t        )\n\t    },\n\n\t    isDigit: function isDigit (c) {\n\t        return typeof c === 'string' && /[0-9]/.test(c)\n\t    },\n\n\t    isHexDigit: function isHexDigit (c) {\n\t        return typeof c === 'string' && /[0-9A-Fa-f]/.test(c)\n\t    },\n\t};\n\n\tvar source;\n\tvar parseState;\n\tvar stack;\n\tvar pos;\n\tvar line;\n\tvar column;\n\tvar token;\n\tvar key;\n\tvar root;\n\n\tvar parse = function parse (text, reviver) {\n\t    source = String(text);\n\t    parseState = 'start';\n\t    stack = [];\n\t    pos = 0;\n\t    line = 1;\n\t    column = 0;\n\t    token = undefined;\n\t    key = undefined;\n\t    root = undefined;\n\n\t    do {\n\t        token = lex();\n\n\t        // This code is unreachable.\n\t        // if (!parseStates[parseState]) {\n\t        //     throw invalidParseState()\n\t        // }\n\n\t        parseStates[parseState]();\n\t    } while (token.type !== 'eof')\n\n\t    if (typeof reviver === 'function') {\n\t        return internalize({'': root}, '', reviver)\n\t    }\n\n\t    return root\n\t};\n\n\tfunction internalize (holder, name, reviver) {\n\t    var value = holder[name];\n\t    if (value != null && typeof value === 'object') {\n\t        if (Array.isArray(value)) {\n\t            for (var i = 0; i < value.length; i++) {\n\t                var key = String(i);\n\t                var replacement = internalize(value, key, reviver);\n\t                if (replacement === undefined) {\n\t                    delete value[key];\n\t                } else {\n\t                    Object.defineProperty(value, key, {\n\t                        value: replacement,\n\t                        writable: true,\n\t                        enumerable: true,\n\t                        configurable: true,\n\t                    });\n\t                }\n\t            }\n\t        } else {\n\t            for (var key$1 in value) {\n\t                var replacement$1 = internalize(value, key$1, reviver);\n\t                if (replacement$1 === undefined) {\n\t                    delete value[key$1];\n\t                } else {\n\t                    Object.defineProperty(value, key$1, {\n\t                        value: replacement$1,\n\t                        writable: true,\n\t                        enumerable: true,\n\t                        configurable: true,\n\t                    });\n\t                }\n\t            }\n\t        }\n\t    }\n\n\t    return reviver.call(holder, name, value)\n\t}\n\n\tvar lexState;\n\tvar buffer;\n\tvar doubleQuote;\n\tvar sign;\n\tvar c;\n\n\tfunction lex () {\n\t    lexState = 'default';\n\t    buffer = '';\n\t    doubleQuote = false;\n\t    sign = 1;\n\n\t    for (;;) {\n\t        c = peek();\n\n\t        // This code is unreachable.\n\t        // if (!lexStates[lexState]) {\n\t        //     throw invalidLexState(lexState)\n\t        // }\n\n\t        var token = lexStates[lexState]();\n\t        if (token) {\n\t            return token\n\t        }\n\t    }\n\t}\n\n\tfunction peek () {\n\t    if (source[pos]) {\n\t        return String.fromCodePoint(source.codePointAt(pos))\n\t    }\n\t}\n\n\tfunction read () {\n\t    var c = peek();\n\n\t    if (c === '\\n') {\n\t        line++;\n\t        column = 0;\n\t    } else if (c) {\n\t        column += c.length;\n\t    } else {\n\t        column++;\n\t    }\n\n\t    if (c) {\n\t        pos += c.length;\n\t    }\n\n\t    return c\n\t}\n\n\tvar lexStates = {\n\t    default: function default$1 () {\n\t        switch (c) {\n\t        case '\\t':\n\t        case '\\v':\n\t        case '\\f':\n\t        case ' ':\n\t        case '\\u00A0':\n\t        case '\\uFEFF':\n\t        case '\\n':\n\t        case '\\r':\n\t        case '\\u2028':\n\t        case '\\u2029':\n\t            read();\n\t            return\n\n\t        case '/':\n\t            read();\n\t            lexState = 'comment';\n\t            return\n\n\t        case undefined:\n\t            read();\n\t            return newToken('eof')\n\t        }\n\n\t        if (util.isSpaceSeparator(c)) {\n\t            read();\n\t            return\n\t        }\n\n\t        // This code is unreachable.\n\t        // if (!lexStates[parseState]) {\n\t        //     throw invalidLexState(parseState)\n\t        // }\n\n\t        return lexStates[parseState]()\n\t    },\n\n\t    comment: function comment () {\n\t        switch (c) {\n\t        case '*':\n\t            read();\n\t            lexState = 'multiLineComment';\n\t            return\n\n\t        case '/':\n\t            read();\n\t            lexState = 'singleLineComment';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    multiLineComment: function multiLineComment () {\n\t        switch (c) {\n\t        case '*':\n\t            read();\n\t            lexState = 'multiLineCommentAsterisk';\n\t            return\n\n\t        case undefined:\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t    },\n\n\t    multiLineCommentAsterisk: function multiLineCommentAsterisk () {\n\t        switch (c) {\n\t        case '*':\n\t            read();\n\t            return\n\n\t        case '/':\n\t            read();\n\t            lexState = 'default';\n\t            return\n\n\t        case undefined:\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t        lexState = 'multiLineComment';\n\t    },\n\n\t    singleLineComment: function singleLineComment () {\n\t        switch (c) {\n\t        case '\\n':\n\t        case '\\r':\n\t        case '\\u2028':\n\t        case '\\u2029':\n\t            read();\n\t            lexState = 'default';\n\t            return\n\n\t        case undefined:\n\t            read();\n\t            return newToken('eof')\n\t        }\n\n\t        read();\n\t    },\n\n\t    value: function value () {\n\t        switch (c) {\n\t        case '{':\n\t        case '[':\n\t            return newToken('punctuator', read())\n\n\t        case 'n':\n\t            read();\n\t            literal('ull');\n\t            return newToken('null', null)\n\n\t        case 't':\n\t            read();\n\t            literal('rue');\n\t            return newToken('boolean', true)\n\n\t        case 'f':\n\t            read();\n\t            literal('alse');\n\t            return newToken('boolean', false)\n\n\t        case '-':\n\t        case '+':\n\t            if (read() === '-') {\n\t                sign = -1;\n\t            }\n\n\t            lexState = 'sign';\n\t            return\n\n\t        case '.':\n\t            buffer = read();\n\t            lexState = 'decimalPointLeading';\n\t            return\n\n\t        case '0':\n\t            buffer = read();\n\t            lexState = 'zero';\n\t            return\n\n\t        case '1':\n\t        case '2':\n\t        case '3':\n\t        case '4':\n\t        case '5':\n\t        case '6':\n\t        case '7':\n\t        case '8':\n\t        case '9':\n\t            buffer = read();\n\t            lexState = 'decimalInteger';\n\t            return\n\n\t        case 'I':\n\t            read();\n\t            literal('nfinity');\n\t            return newToken('numeric', Infinity)\n\n\t        case 'N':\n\t            read();\n\t            literal('aN');\n\t            return newToken('numeric', NaN)\n\n\t        case '\"':\n\t        case \"'\":\n\t            doubleQuote = (read() === '\"');\n\t            buffer = '';\n\t            lexState = 'string';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    identifierNameStartEscape: function identifierNameStartEscape () {\n\t        if (c !== 'u') {\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t        var u = unicodeEscape();\n\t        switch (u) {\n\t        case '$':\n\t        case '_':\n\t            break\n\n\t        default:\n\t            if (!util.isIdStartChar(u)) {\n\t                throw invalidIdentifier()\n\t            }\n\n\t            break\n\t        }\n\n\t        buffer += u;\n\t        lexState = 'identifierName';\n\t    },\n\n\t    identifierName: function identifierName () {\n\t        switch (c) {\n\t        case '$':\n\t        case '_':\n\t        case '\\u200C':\n\t        case '\\u200D':\n\t            buffer += read();\n\t            return\n\n\t        case '\\\\':\n\t            read();\n\t            lexState = 'identifierNameEscape';\n\t            return\n\t        }\n\n\t        if (util.isIdContinueChar(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('identifier', buffer)\n\t    },\n\n\t    identifierNameEscape: function identifierNameEscape () {\n\t        if (c !== 'u') {\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t        var u = unicodeEscape();\n\t        switch (u) {\n\t        case '$':\n\t        case '_':\n\t        case '\\u200C':\n\t        case '\\u200D':\n\t            break\n\n\t        default:\n\t            if (!util.isIdContinueChar(u)) {\n\t                throw invalidIdentifier()\n\t            }\n\n\t            break\n\t        }\n\n\t        buffer += u;\n\t        lexState = 'identifierName';\n\t    },\n\n\t    sign: function sign$1 () {\n\t        switch (c) {\n\t        case '.':\n\t            buffer = read();\n\t            lexState = 'decimalPointLeading';\n\t            return\n\n\t        case '0':\n\t            buffer = read();\n\t            lexState = 'zero';\n\t            return\n\n\t        case '1':\n\t        case '2':\n\t        case '3':\n\t        case '4':\n\t        case '5':\n\t        case '6':\n\t        case '7':\n\t        case '8':\n\t        case '9':\n\t            buffer = read();\n\t            lexState = 'decimalInteger';\n\t            return\n\n\t        case 'I':\n\t            read();\n\t            literal('nfinity');\n\t            return newToken('numeric', sign * Infinity)\n\n\t        case 'N':\n\t            read();\n\t            literal('aN');\n\t            return newToken('numeric', NaN)\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    zero: function zero () {\n\t        switch (c) {\n\t        case '.':\n\t            buffer += read();\n\t            lexState = 'decimalPoint';\n\t            return\n\n\t        case 'e':\n\t        case 'E':\n\t            buffer += read();\n\t            lexState = 'decimalExponent';\n\t            return\n\n\t        case 'x':\n\t        case 'X':\n\t            buffer += read();\n\t            lexState = 'hexadecimal';\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * 0)\n\t    },\n\n\t    decimalInteger: function decimalInteger () {\n\t        switch (c) {\n\t        case '.':\n\t            buffer += read();\n\t            lexState = 'decimalPoint';\n\t            return\n\n\t        case 'e':\n\t        case 'E':\n\t            buffer += read();\n\t            lexState = 'decimalExponent';\n\t            return\n\t        }\n\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    decimalPointLeading: function decimalPointLeading () {\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'decimalFraction';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    decimalPoint: function decimalPoint () {\n\t        switch (c) {\n\t        case 'e':\n\t        case 'E':\n\t            buffer += read();\n\t            lexState = 'decimalExponent';\n\t            return\n\t        }\n\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'decimalFraction';\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    decimalFraction: function decimalFraction () {\n\t        switch (c) {\n\t        case 'e':\n\t        case 'E':\n\t            buffer += read();\n\t            lexState = 'decimalExponent';\n\t            return\n\t        }\n\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    decimalExponent: function decimalExponent () {\n\t        switch (c) {\n\t        case '+':\n\t        case '-':\n\t            buffer += read();\n\t            lexState = 'decimalExponentSign';\n\t            return\n\t        }\n\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'decimalExponentInteger';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    decimalExponentSign: function decimalExponentSign () {\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'decimalExponentInteger';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    decimalExponentInteger: function decimalExponentInteger () {\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    hexadecimal: function hexadecimal () {\n\t        if (util.isHexDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'hexadecimalInteger';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    hexadecimalInteger: function hexadecimalInteger () {\n\t        if (util.isHexDigit(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    string: function string () {\n\t        switch (c) {\n\t        case '\\\\':\n\t            read();\n\t            buffer += escape();\n\t            return\n\n\t        case '\"':\n\t            if (doubleQuote) {\n\t                read();\n\t                return newToken('string', buffer)\n\t            }\n\n\t            buffer += read();\n\t            return\n\n\t        case \"'\":\n\t            if (!doubleQuote) {\n\t                read();\n\t                return newToken('string', buffer)\n\t            }\n\n\t            buffer += read();\n\t            return\n\n\t        case '\\n':\n\t        case '\\r':\n\t            throw invalidChar(read())\n\n\t        case '\\u2028':\n\t        case '\\u2029':\n\t            separatorChar(c);\n\t            break\n\n\t        case undefined:\n\t            throw invalidChar(read())\n\t        }\n\n\t        buffer += read();\n\t    },\n\n\t    start: function start () {\n\t        switch (c) {\n\t        case '{':\n\t        case '[':\n\t            return newToken('punctuator', read())\n\n\t        // This code is unreachable since the default lexState handles eof.\n\t        // case undefined:\n\t        //     return newToken('eof')\n\t        }\n\n\t        lexState = 'value';\n\t    },\n\n\t    beforePropertyName: function beforePropertyName () {\n\t        switch (c) {\n\t        case '$':\n\t        case '_':\n\t            buffer = read();\n\t            lexState = 'identifierName';\n\t            return\n\n\t        case '\\\\':\n\t            read();\n\t            lexState = 'identifierNameStartEscape';\n\t            return\n\n\t        case '}':\n\t            return newToken('punctuator', read())\n\n\t        case '\"':\n\t        case \"'\":\n\t            doubleQuote = (read() === '\"');\n\t            lexState = 'string';\n\t            return\n\t        }\n\n\t        if (util.isIdStartChar(c)) {\n\t            buffer += read();\n\t            lexState = 'identifierName';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    afterPropertyName: function afterPropertyName () {\n\t        if (c === ':') {\n\t            return newToken('punctuator', read())\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    beforePropertyValue: function beforePropertyValue () {\n\t        lexState = 'value';\n\t    },\n\n\t    afterPropertyValue: function afterPropertyValue () {\n\t        switch (c) {\n\t        case ',':\n\t        case '}':\n\t            return newToken('punctuator', read())\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    beforeArrayValue: function beforeArrayValue () {\n\t        if (c === ']') {\n\t            return newToken('punctuator', read())\n\t        }\n\n\t        lexState = 'value';\n\t    },\n\n\t    afterArrayValue: function afterArrayValue () {\n\t        switch (c) {\n\t        case ',':\n\t        case ']':\n\t            return newToken('punctuator', read())\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    end: function end () {\n\t        // This code is unreachable since it's handled by the default lexState.\n\t        // if (c === undefined) {\n\t        //     read()\n\t        //     return newToken('eof')\n\t        // }\n\n\t        throw invalidChar(read())\n\t    },\n\t};\n\n\tfunction newToken (type, value) {\n\t    return {\n\t        type: type,\n\t        value: value,\n\t        line: line,\n\t        column: column,\n\t    }\n\t}\n\n\tfunction literal (s) {\n\t    for (var i = 0, list = s; i < list.length; i += 1) {\n\t        var c = list[i];\n\n\t        var p = peek();\n\n\t        if (p !== c) {\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t    }\n\t}\n\n\tfunction escape () {\n\t    var c = peek();\n\t    switch (c) {\n\t    case 'b':\n\t        read();\n\t        return '\\b'\n\n\t    case 'f':\n\t        read();\n\t        return '\\f'\n\n\t    case 'n':\n\t        read();\n\t        return '\\n'\n\n\t    case 'r':\n\t        read();\n\t        return '\\r'\n\n\t    case 't':\n\t        read();\n\t        return '\\t'\n\n\t    case 'v':\n\t        read();\n\t        return '\\v'\n\n\t    case '0':\n\t        read();\n\t        if (util.isDigit(peek())) {\n\t            throw invalidChar(read())\n\t        }\n\n\t        return '\\0'\n\n\t    case 'x':\n\t        read();\n\t        return hexEscape()\n\n\t    case 'u':\n\t        read();\n\t        return unicodeEscape()\n\n\t    case '\\n':\n\t    case '\\u2028':\n\t    case '\\u2029':\n\t        read();\n\t        return ''\n\n\t    case '\\r':\n\t        read();\n\t        if (peek() === '\\n') {\n\t            read();\n\t        }\n\n\t        return ''\n\n\t    case '1':\n\t    case '2':\n\t    case '3':\n\t    case '4':\n\t    case '5':\n\t    case '6':\n\t    case '7':\n\t    case '8':\n\t    case '9':\n\t        throw invalidChar(read())\n\n\t    case undefined:\n\t        throw invalidChar(read())\n\t    }\n\n\t    return read()\n\t}\n\n\tfunction hexEscape () {\n\t    var buffer = '';\n\t    var c = peek();\n\n\t    if (!util.isHexDigit(c)) {\n\t        throw invalidChar(read())\n\t    }\n\n\t    buffer += read();\n\n\t    c = peek();\n\t    if (!util.isHexDigit(c)) {\n\t        throw invalidChar(read())\n\t    }\n\n\t    buffer += read();\n\n\t    return String.fromCodePoint(parseInt(buffer, 16))\n\t}\n\n\tfunction unicodeEscape () {\n\t    var buffer = '';\n\t    var count = 4;\n\n\t    while (count-- > 0) {\n\t        var c = peek();\n\t        if (!util.isHexDigit(c)) {\n\t            throw invalidChar(read())\n\t        }\n\n\t        buffer += read();\n\t    }\n\n\t    return String.fromCodePoint(parseInt(buffer, 16))\n\t}\n\n\tvar parseStates = {\n\t    start: function start () {\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        push();\n\t    },\n\n\t    beforePropertyName: function beforePropertyName () {\n\t        switch (token.type) {\n\t        case 'identifier':\n\t        case 'string':\n\t            key = token.value;\n\t            parseState = 'afterPropertyName';\n\t            return\n\n\t        case 'punctuator':\n\t            // This code is unreachable since it's handled by the lexState.\n\t            // if (token.value !== '}') {\n\t            //     throw invalidToken()\n\t            // }\n\n\t            pop();\n\t            return\n\n\t        case 'eof':\n\t            throw invalidEOF()\n\t        }\n\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // throw invalidToken()\n\t    },\n\n\t    afterPropertyName: function afterPropertyName () {\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // if (token.type !== 'punctuator' || token.value !== ':') {\n\t        //     throw invalidToken()\n\t        // }\n\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        parseState = 'beforePropertyValue';\n\t    },\n\n\t    beforePropertyValue: function beforePropertyValue () {\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        push();\n\t    },\n\n\t    beforeArrayValue: function beforeArrayValue () {\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        if (token.type === 'punctuator' && token.value === ']') {\n\t            pop();\n\t            return\n\t        }\n\n\t        push();\n\t    },\n\n\t    afterPropertyValue: function afterPropertyValue () {\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // if (token.type !== 'punctuator') {\n\t        //     throw invalidToken()\n\t        // }\n\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        switch (token.value) {\n\t        case ',':\n\t            parseState = 'beforePropertyName';\n\t            return\n\n\t        case '}':\n\t            pop();\n\t        }\n\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // throw invalidToken()\n\t    },\n\n\t    afterArrayValue: function afterArrayValue () {\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // if (token.type !== 'punctuator') {\n\t        //     throw invalidToken()\n\t        // }\n\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        switch (token.value) {\n\t        case ',':\n\t            parseState = 'beforeArrayValue';\n\t            return\n\n\t        case ']':\n\t            pop();\n\t        }\n\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // throw invalidToken()\n\t    },\n\n\t    end: function end () {\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // if (token.type !== 'eof') {\n\t        //     throw invalidToken()\n\t        // }\n\t    },\n\t};\n\n\tfunction push () {\n\t    var value;\n\n\t    switch (token.type) {\n\t    case 'punctuator':\n\t        switch (token.value) {\n\t        case '{':\n\t            value = {};\n\t            break\n\n\t        case '[':\n\t            value = [];\n\t            break\n\t        }\n\n\t        break\n\n\t    case 'null':\n\t    case 'boolean':\n\t    case 'numeric':\n\t    case 'string':\n\t        value = token.value;\n\t        break\n\n\t    // This code is unreachable.\n\t    // default:\n\t    //     throw invalidToken()\n\t    }\n\n\t    if (root === undefined) {\n\t        root = value;\n\t    } else {\n\t        var parent = stack[stack.length - 1];\n\t        if (Array.isArray(parent)) {\n\t            parent.push(value);\n\t        } else {\n\t            Object.defineProperty(parent, key, {\n\t                value: value,\n\t                writable: true,\n\t                enumerable: true,\n\t                configurable: true,\n\t            });\n\t        }\n\t    }\n\n\t    if (value !== null && typeof value === 'object') {\n\t        stack.push(value);\n\n\t        if (Array.isArray(value)) {\n\t            parseState = 'beforeArrayValue';\n\t        } else {\n\t            parseState = 'beforePropertyName';\n\t        }\n\t    } else {\n\t        var current = stack[stack.length - 1];\n\t        if (current == null) {\n\t            parseState = 'end';\n\t        } else if (Array.isArray(current)) {\n\t            parseState = 'afterArrayValue';\n\t        } else {\n\t            parseState = 'afterPropertyValue';\n\t        }\n\t    }\n\t}\n\n\tfunction pop () {\n\t    stack.pop();\n\n\t    var current = stack[stack.length - 1];\n\t    if (current == null) {\n\t        parseState = 'end';\n\t    } else if (Array.isArray(current)) {\n\t        parseState = 'afterArrayValue';\n\t    } else {\n\t        parseState = 'afterPropertyValue';\n\t    }\n\t}\n\n\t// This code is unreachable.\n\t// function invalidParseState () {\n\t//     return new Error(`JSON5: invalid parse state '${parseState}'`)\n\t// }\n\n\t// This code is unreachable.\n\t// function invalidLexState (state) {\n\t//     return new Error(`JSON5: invalid lex state '${state}'`)\n\t// }\n\n\tfunction invalidChar (c) {\n\t    if (c === undefined) {\n\t        return syntaxError((\"JSON5: invalid end of input at \" + line + \":\" + column))\n\t    }\n\n\t    return syntaxError((\"JSON5: invalid character '\" + (formatChar(c)) + \"' at \" + line + \":\" + column))\n\t}\n\n\tfunction invalidEOF () {\n\t    return syntaxError((\"JSON5: invalid end of input at \" + line + \":\" + column))\n\t}\n\n\t// This code is unreachable.\n\t// function invalidToken () {\n\t//     if (token.type === 'eof') {\n\t//         return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n\t//     }\n\n\t//     const c = String.fromCodePoint(token.value.codePointAt(0))\n\t//     return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n\t// }\n\n\tfunction invalidIdentifier () {\n\t    column -= 5;\n\t    return syntaxError((\"JSON5: invalid identifier character at \" + line + \":\" + column))\n\t}\n\n\tfunction separatorChar (c) {\n\t    console.warn((\"JSON5: '\" + (formatChar(c)) + \"' in strings is not valid ECMAScript; consider escaping\"));\n\t}\n\n\tfunction formatChar (c) {\n\t    var replacements = {\n\t        \"'\": \"\\\\'\",\n\t        '\"': '\\\\\"',\n\t        '\\\\': '\\\\\\\\',\n\t        '\\b': '\\\\b',\n\t        '\\f': '\\\\f',\n\t        '\\n': '\\\\n',\n\t        '\\r': '\\\\r',\n\t        '\\t': '\\\\t',\n\t        '\\v': '\\\\v',\n\t        '\\0': '\\\\0',\n\t        '\\u2028': '\\\\u2028',\n\t        '\\u2029': '\\\\u2029',\n\t    };\n\n\t    if (replacements[c]) {\n\t        return replacements[c]\n\t    }\n\n\t    if (c < ' ') {\n\t        var hexString = c.charCodeAt(0).toString(16);\n\t        return '\\\\x' + ('00' + hexString).substring(hexString.length)\n\t    }\n\n\t    return c\n\t}\n\n\tfunction syntaxError (message) {\n\t    var err = new SyntaxError(message);\n\t    err.lineNumber = line;\n\t    err.columnNumber = column;\n\t    return err\n\t}\n\n\tvar stringify = function stringify (value, replacer, space) {\n\t    var stack = [];\n\t    var indent = '';\n\t    var propertyList;\n\t    var replacerFunc;\n\t    var gap = '';\n\t    var quote;\n\n\t    if (\n\t        replacer != null &&\n\t        typeof replacer === 'object' &&\n\t        !Array.isArray(replacer)\n\t    ) {\n\t        space = replacer.space;\n\t        quote = replacer.quote;\n\t        replacer = replacer.replacer;\n\t    }\n\n\t    if (typeof replacer === 'function') {\n\t        replacerFunc = replacer;\n\t    } else if (Array.isArray(replacer)) {\n\t        propertyList = [];\n\t        for (var i = 0, list = replacer; i < list.length; i += 1) {\n\t            var v = list[i];\n\n\t            var item = (void 0);\n\n\t            if (typeof v === 'string') {\n\t                item = v;\n\t            } else if (\n\t                typeof v === 'number' ||\n\t                v instanceof String ||\n\t                v instanceof Number\n\t            ) {\n\t                item = String(v);\n\t            }\n\n\t            if (item !== undefined && propertyList.indexOf(item) < 0) {\n\t                propertyList.push(item);\n\t            }\n\t        }\n\t    }\n\n\t    if (space instanceof Number) {\n\t        space = Number(space);\n\t    } else if (space instanceof String) {\n\t        space = String(space);\n\t    }\n\n\t    if (typeof space === 'number') {\n\t        if (space > 0) {\n\t            space = Math.min(10, Math.floor(space));\n\t            gap = '          '.substr(0, space);\n\t        }\n\t    } else if (typeof space === 'string') {\n\t        gap = space.substr(0, 10);\n\t    }\n\n\t    return serializeProperty('', {'': value})\n\n\t    function serializeProperty (key, holder) {\n\t        var value = holder[key];\n\t        if (value != null) {\n\t            if (typeof value.toJSON5 === 'function') {\n\t                value = value.toJSON5(key);\n\t            } else if (typeof value.toJSON === 'function') {\n\t                value = value.toJSON(key);\n\t            }\n\t        }\n\n\t        if (replacerFunc) {\n\t            value = replacerFunc.call(holder, key, value);\n\t        }\n\n\t        if (value instanceof Number) {\n\t            value = Number(value);\n\t        } else if (value instanceof String) {\n\t            value = String(value);\n\t        } else if (value instanceof Boolean) {\n\t            value = value.valueOf();\n\t        }\n\n\t        switch (value) {\n\t        case null: return 'null'\n\t        case true: return 'true'\n\t        case false: return 'false'\n\t        }\n\n\t        if (typeof value === 'string') {\n\t            return quoteString(value, false)\n\t        }\n\n\t        if (typeof value === 'number') {\n\t            return String(value)\n\t        }\n\n\t        if (typeof value === 'object') {\n\t            return Array.isArray(value) ? serializeArray(value) : serializeObject(value)\n\t        }\n\n\t        return undefined\n\t    }\n\n\t    function quoteString (value) {\n\t        var quotes = {\n\t            \"'\": 0.1,\n\t            '\"': 0.2,\n\t        };\n\n\t        var replacements = {\n\t            \"'\": \"\\\\'\",\n\t            '\"': '\\\\\"',\n\t            '\\\\': '\\\\\\\\',\n\t            '\\b': '\\\\b',\n\t            '\\f': '\\\\f',\n\t            '\\n': '\\\\n',\n\t            '\\r': '\\\\r',\n\t            '\\t': '\\\\t',\n\t            '\\v': '\\\\v',\n\t            '\\0': '\\\\0',\n\t            '\\u2028': '\\\\u2028',\n\t            '\\u2029': '\\\\u2029',\n\t        };\n\n\t        var product = '';\n\n\t        for (var i = 0; i < value.length; i++) {\n\t            var c = value[i];\n\t            switch (c) {\n\t            case \"'\":\n\t            case '\"':\n\t                quotes[c]++;\n\t                product += c;\n\t                continue\n\n\t            case '\\0':\n\t                if (util.isDigit(value[i + 1])) {\n\t                    product += '\\\\x00';\n\t                    continue\n\t                }\n\t            }\n\n\t            if (replacements[c]) {\n\t                product += replacements[c];\n\t                continue\n\t            }\n\n\t            if (c < ' ') {\n\t                var hexString = c.charCodeAt(0).toString(16);\n\t                product += '\\\\x' + ('00' + hexString).substring(hexString.length);\n\t                continue\n\t            }\n\n\t            product += c;\n\t        }\n\n\t        var quoteChar = quote || Object.keys(quotes).reduce(function (a, b) { return (quotes[a] < quotes[b]) ? a : b; });\n\n\t        product = product.replace(new RegExp(quoteChar, 'g'), replacements[quoteChar]);\n\n\t        return quoteChar + product + quoteChar\n\t    }\n\n\t    function serializeObject (value) {\n\t        if (stack.indexOf(value) >= 0) {\n\t            throw TypeError('Converting circular structure to JSON5')\n\t        }\n\n\t        stack.push(value);\n\n\t        var stepback = indent;\n\t        indent = indent + gap;\n\n\t        var keys = propertyList || Object.keys(value);\n\t        var partial = [];\n\t        for (var i = 0, list = keys; i < list.length; i += 1) {\n\t            var key = list[i];\n\n\t            var propertyString = serializeProperty(key, value);\n\t            if (propertyString !== undefined) {\n\t                var member = serializeKey(key) + ':';\n\t                if (gap !== '') {\n\t                    member += ' ';\n\t                }\n\t                member += propertyString;\n\t                partial.push(member);\n\t            }\n\t        }\n\n\t        var final;\n\t        if (partial.length === 0) {\n\t            final = '{}';\n\t        } else {\n\t            var properties;\n\t            if (gap === '') {\n\t                properties = partial.join(',');\n\t                final = '{' + properties + '}';\n\t            } else {\n\t                var separator = ',\\n' + indent;\n\t                properties = partial.join(separator);\n\t                final = '{\\n' + indent + properties + ',\\n' + stepback + '}';\n\t            }\n\t        }\n\n\t        stack.pop();\n\t        indent = stepback;\n\t        return final\n\t    }\n\n\t    function serializeKey (key) {\n\t        if (key.length === 0) {\n\t            return quoteString(key, true)\n\t        }\n\n\t        var firstChar = String.fromCodePoint(key.codePointAt(0));\n\t        if (!util.isIdStartChar(firstChar)) {\n\t            return quoteString(key, true)\n\t        }\n\n\t        for (var i = firstChar.length; i < key.length; i++) {\n\t            if (!util.isIdContinueChar(String.fromCodePoint(key.codePointAt(i)))) {\n\t                return quoteString(key, true)\n\t            }\n\t        }\n\n\t        return key\n\t    }\n\n\t    function serializeArray (value) {\n\t        if (stack.indexOf(value) >= 0) {\n\t            throw TypeError('Converting circular structure to JSON5')\n\t        }\n\n\t        stack.push(value);\n\n\t        var stepback = indent;\n\t        indent = indent + gap;\n\n\t        var partial = [];\n\t        for (var i = 0; i < value.length; i++) {\n\t            var propertyString = serializeProperty(String(i), value);\n\t            partial.push((propertyString !== undefined) ? propertyString : 'null');\n\t        }\n\n\t        var final;\n\t        if (partial.length === 0) {\n\t            final = '[]';\n\t        } else {\n\t            if (gap === '') {\n\t                var properties = partial.join(',');\n\t                final = '[' + properties + ']';\n\t            } else {\n\t                var separator = ',\\n' + indent;\n\t                var properties$1 = partial.join(separator);\n\t                final = '[\\n' + indent + properties$1 + ',\\n' + stepback + ']';\n\t            }\n\t        }\n\n\t        stack.pop();\n\t        indent = stepback;\n\t        return final\n\t    }\n\t};\n\n\tvar JSON5 = {\n\t    parse: parse,\n\t    stringify: stringify,\n\t};\n\n\tvar lib = JSON5;\n\n\tvar es5 = lib;\n\n\treturn es5;\n\n})));\n","import { integer } from './Guards.js';\nimport { string as random } from './Random.js';\n\nexport { random };\n\n/**\n * Returns source text that is between `start` and `end` match strings. Returns _undefined_ if start/end is not found.\n *\n * ```js\n * // Yields ` orange `;\n * between(`apple orange melon`, `apple`, `melon`);\n * ```\n * @param source Source text\n * @param start Start match\n * @param end If undefined, the `start` string will be looked for\n * @param lastEndMatch If true, looks for the last match of `end` (default). If false, looks for the first match.\n * @returns\n */\nexport const between = (\n  source: string,\n  start: string,\n  end?: string,\n  lastEndMatch = true\n): string | undefined => {\n  // ✔ Unit tested\n\n  const startPos = source.indexOf(start);\n  if (startPos < 0) return;\n\n  if (end === undefined) end = start;\n\n  const endPos = lastEndMatch\n    ? source.lastIndexOf(end)\n    : source.indexOf(end, startPos + 1);\n  if (endPos < 0) return;\n\n  return source.substring(startPos + 1, endPos);\n};\n\n/**\n * Like {@link between}, but also returns the source string without the start/end match and what's between.\n * ```js\n * const [src,between] = betweenChomp('hello [there] friend', '[', ']');\n * // src: 'hello  friend'\n * // between: 'there'\n * ```\n * @param source\n * @param start\n * @param end\n * @param lastEndMatch\n * @returns\n */\nexport const betweenChomp = (\n  source: string,\n  start: string,\n  end?: string,\n  lastEndMatch = true\n): [source: string, between: string | undefined] => {\n  // ✔ Unit tested\n  const startPos = source.indexOf(start);\n  if (startPos < 0) return [source, undefined];\n\n  if (end === undefined) end = start;\n\n  const endPos = lastEndMatch\n    ? source.lastIndexOf(end)\n    : source.indexOf(end, startPos + 1);\n  if (endPos < 0) return [source, undefined];\n\n  const between = source.substring(startPos + 1, endPos);\n  const src = source.substring(0, startPos) + source.substring(endPos + 1);\n  return [src, between];\n};\n/**\n * Returns first position of the given character code, or -1 if not found.\n * @param source Source string\n * @param code Code to seek\n * @param start Start index, 0 by default\n * @param end End index (inclusive), source.length-1 by default\n * @returns Found position, or -1 if not found\n */\nexport const indexOfCharCode = (\n  source: string,\n  code: number,\n  start = 0,\n  end = source.length - 1\n): number => {\n  //eslint-disable-next-line functional/no-let\n  for (let i = start; i <= end; i++) {\n    if (source.charCodeAt(i) === code) return i;\n  }\n  return -1;\n};\n\n/**\n * Returns `source` with a given number of characters removed from a start position.\n *\n * ```js\n * // Remove three characters starting at position 1\n * omitChars(`hello there`, 1, 3); // ie. removes 'ell'\n * // Yields: `ho there`\n * ```\n * @param source\n * @param removeStart Start point to remove\n * @param removeLength Number of characters to remove\n * @returns\n */\nexport const omitChars = (\n  source: string,\n  removeStart: number,\n  removeLength: number\n) =>\n  source.substring(0, removeStart) +\n  source.substring(removeStart + removeLength);\n\n/**\n * Splits a string into `length`-size chunks.\n *\n * If `length` is greater than the length of `source`, a single element array is returned with source.\n * The final array element may be smaller if we ran out of characters.\n *\n * ```js\n * splitByLength(`hello there`, 2);\n * // Yields:\n * // [`he`, `ll`, `o `, `th`, `er`, `e`]\n * ```\n * @param source Source string\n * @param length Length of each chunk\n * @returns\n */\nexport const splitByLength = (\n  source: string,\n  length: number\n): readonly string[] => {\n  integer(length, 'aboveZero', 'length');\n  if (source === null) throw new Error('source parameter null');\n  if (typeof source !== 'string') {\n    throw new Error('source parameter not a string');\n  }\n\n  // ✔ Unit tested\n  const chunks = Math.ceil(source.length / length);\n  const ret: string[] = [];\n  //eslint-disable-next-line functional/no-let\n  let start = 0;\n\n  //eslint-disable-next-line functional/no-let\n  for (let c = 0; c < chunks; c++) {\n    //eslint-disable-next-line functional/immutable-data\n    ret.push(source.substring(start, start + length));\n    start += length;\n  }\n  return ret;\n};\n\n/**\n * Returns the `source` string up until (and excluding) `match`. If match is not\n * found, all of `source` is returned.\n *\n * ```js\n * // Yields `apple `\n * untilMarch(`apple orange melon`, `orange`);\n * ```\n * @param source\n * @param match\n * @param startPos If provided, gives the starting offset. Default 0\n */\nexport const untilMatch = (\n  source: string,\n  match: string,\n  opts: MatchOpts = {}\n): string => {\n  //  ✔️ Unit tested\n  const startPos = opts.startPos ?? undefined;\n  const fromEnd = opts.fromEnd ?? false;\n  const m = fromEnd\n    ? source.lastIndexOf(match, startPos)\n    : source.indexOf(match, startPos);\n\n  if (m < 0) return source;\n  return source.substring(startPos ?? 0, m);\n};\n\nexport type MatchOpts = {\n  readonly startPos?: number;\n  readonly fromEnd?: boolean;\n};\n/**\n * Returns all the text in `source` that follows `match`. If not found, `source` is returned.\n * ```js\n * afterMatch(`Hello. There`, `.`); // ' There'\n * afterMatch(`Hello, there', `,`); // 'Hello, there'\n * ```\n * @param source\n * @param match\n * @param startPos\n * @returns\n */\nexport const afterMatch = (\n  source: string,\n  match: string,\n  opts: MatchOpts = {}\n): string => {\n  //  ✔️ Unit tested\n  const startPos = opts.startPos ?? undefined;\n  const fromEnd = opts.fromEnd ?? false;\n\n  const m = fromEnd\n    ? source.lastIndexOf(match, startPos)\n    : source.indexOf(match, startPos);\n\n  if (m < 0) return source;\n  return source.substring(m + match.length);\n};\n\n/**\n * 'Unwraps' a string, removing one or more 'wrapper' strings that it starts and ends with.\n * Only removes when a matching end is found.\n * ```js\n * unwrap(\"'hello'\", \"'\");        // hello\n * // No mataching end 'a', so nothing happens\n * unwrap(\"apple\", \"a\");          // apple\n * unwrap(\"wow\", \"w\");            // o\n * unwrap(`\"'blah'\"`, '\"', \"'\");  // blah\n * ```\n * @param source\n * @param wrappers\n * @returns\n */\nexport const unwrap = (\n  source: string,\n  ...wrappers: readonly string[]\n): string => {\n  //eslint-disable-next-line functional/no-let\n  let matched = false;\n  do {\n    matched = false;\n    for (const w of wrappers) {\n      if (source.startsWith(w) && source.endsWith(w)) {\n        source = source.substring(w.length, source.length - w.length * 2 + 1);\n        matched = true;\n      }\n    }\n  } while (matched);\n\n  return source;\n};\n\n/**\n * A range\n */\nexport type Range = {\n  /**\n   * Text of range\n   */\n  readonly text: string;\n  /**\n   * Start position, with respect to source text\n   */\n  readonly start: number;\n  /**\n   * End position, with respect to source text\n   */\n  readonly end: number;\n  /**\n   * Index of range. First range is 0\n   */\n  readonly index: number;\n};\n\nexport type LineSpan = {\n  readonly start: number;\n  readonly end: number;\n  readonly length: number;\n};\n\n/**\n * Calculates the span, defined in {@link Range} indexes, that includes `start` through to `end` character positions.\n *\n * After using {@link splitRanges} to split text, `lineSpan` is used to associate some text coordinates with ranges.\n *\n * @param ranges Ranges\n * @param start Start character position, in source text reference\n * @param end End character position, in source text reference\n * @returns Span\n */\nexport const lineSpan = (\n  ranges: readonly Range[],\n  start: number,\n  end: number\n): LineSpan => {\n  //eslint-disable-next-line functional/no-let\n  let s = -1;\n  //eslint-disable-next-line functional/no-let\n  let e = -1;\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < ranges.length; i++) {\n    const r = ranges[i];\n    s = i;\n    if (r.text.length === 0) continue;\n    if (start < r.end) {\n      break;\n    }\n  }\n\n  //eslint-disable-next-line functional/no-let\n  for (let i = s; i < ranges.length; i++) {\n    const r = ranges[i];\n    e = i;\n    if (end === r.end) {\n      e = i + 1;\n      break;\n    }\n    if (end < r.end) {\n      break;\n    }\n  }\n  return { length: e - s, start: s, end: e };\n};\n\n/**\n * Splits a source string into ranges:\n * ```js\n * const ranges = splitRanges(\"hello;there;fella\", \";\");\n * ```\n *\n * Each range consists of:\n * ```js\n * {\n *  text: string  - the text of range\n *  start: number - start pos of range, wrt to source\n *  end: number   - end pos of range, wrt to source\n *  index: number - index of range (starting at 0)\n * }\n * ```\n * @param source\n * @param split\n * @returns\n */\nexport const splitRanges = (\n  source: string,\n  split: string\n): readonly Range[] => {\n  //eslint-disable-next-line functional/no-let\n  let start = 0;\n  //eslint-disable-next-line functional/no-let\n  let text = ``;\n  const ranges: Range[] = [];\n  //eslint-disable-next-line functional/no-let\n  let index = 0;\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < source.length; i++) {\n    if (source.indexOf(split, i) === i) {\n      //eslint-disable-next-line functional/no-let\n      const end = i;\n      //eslint-disable-next-line functional/immutable-data\n      ranges.push({\n        text,\n        start,\n        end,\n        index,\n      });\n      start = end + 1;\n      text = ``;\n      index++;\n    } else {\n      text += source.charAt(i);\n    }\n  }\n  if (start < source.length) {\n    //eslint-disable-next-line functional/immutable-data\n    ranges.push({ text, start, index, end: source.length });\n  }\n  return ranges;\n};\n\n/**\n * Counts the number of times one of `chars` appears at the front of\n * a string, contiguously.\n *\n * ```js\n * countCharsFromStart(`  hi`, ` `); // 2\n * countCharsFromStart(`hi  `, ` `); // 0\n * countCharsFromStart(`  hi  `, ` `); // 2\n * ```\n * @param source\n * @param chars\n * @returns\n */\nexport const countCharsFromStart = (\n  source: string,\n  ...chars: readonly string[]\n): number => {\n  //eslint-disable-next-line functional/no-let\n  let counted = 0;\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < source.length; i++) {\n    if (chars.includes(source.charAt(i))) {\n      counted++;\n    } else {\n      break;\n    }\n  }\n  return counted;\n};\n\n/**\n * Returns _true_ if `source` starts and ends with `start` and `end`. Case-sensitive.\n * If _end_ is omitted, the the `start` value will be used.\n *\n * ```js\n * startsEnds(`This is a string`, `This`, `string`); // True\n * startsEnds(`This is a string`, `is`, `a`); // False\n * starsEnds(`test`, `t`); // True, starts and ends with 't'\n * ```\n * @param source String to search within\n * @param start Start\n * @param end End (if omitted, start will be looked for at end as well)\n * @returns True if source starts and ends with provided values.\n */\nexport const startsEnds = (\n  source: string,\n  start: string,\n  end: string = start\n): boolean => source.startsWith(start) && source.endsWith(end);\n\n//eslint-disable-next-line no-useless-escape\nexport const htmlEntities = (source: string): string =>\n  source.replace(/[\\u00A0-\\u9999<>\\&]/g, (i) => `&#${i.charCodeAt(0)};`);\n","export type NumberGuardRange =\n  /**\n   * No range checking\n   */\n  | ``\n  /**\n   * Can be any number, except zero\n   */\n  | `nonZero`\n  | `positive`\n  | `negative`\n  /**\n   * Must be above zero\n   */\n  | `aboveZero`\n  | `belowZero`\n  | `percentage`\n  | `bipolar`;\n\n/**\n * Throws an error if `t` is not a number or within specified range.\n * Use an empty string for no special range constraints.\n * Alternatives: {@link integer} for additional integer check, {@link percent} for percentage-range.\n *\n * * positive: must be at least zero\n * * negative: must be zero or lower\n * * aboveZero: must be above zero\n * * belowZero: must be below zero\n * * percentage: must be within 0-1, inclusive\n * * nonZero: can be anything except zero\n * * bipolar: can be -1 to 1, inclusive\n * @param value Value to check\n * @param paramName Name of parameter (for more helpful exception messages)\n * @param range Range to enforce\n * @returns\n */\nexport const number = (\n  value?: number,\n  range: NumberGuardRange = ``,\n  paramName = `?`,\n  throwException = true\n): boolean => {\n  if (typeof value === `undefined`) {\n    if (throwException) {\n      throw new Error(`Parameter ${paramName} is undefined`);\n    } else {\n      return false;\n    }\n  }\n  if (Number.isNaN(value)) {\n    if (throwException) {\n      throw new Error(`Parameter '${paramName}' is NaN`);\n    } else {\n      return false;\n    }\n  }\n  if (typeof value !== `number`) {\n    if (throwException) {\n      throw new Error(`Parameter '${paramName}' is not a number (${value})`);\n    } else {\n      return false;\n    }\n  }\n  switch (range) {\n    case `positive`:\n      if (value < 0) {\n        if (throwException) {\n          throw new Error(\n            `Parameter '${paramName}' must be at least zero (${value})`\n          );\n        } else {\n          return false;\n        }\n      }\n      break;\n    case `negative`:\n      if (value > 0) {\n        if (throwException) {\n          throw new Error(\n            `Parameter '${paramName}' must be zero or lower (${value})`\n          );\n        } else {\n          return false;\n        }\n      }\n      break;\n    case `aboveZero`:\n      if (value <= 0) {\n        if (throwException) {\n          throw new Error(\n            `Parameter '${paramName}' must be above zero (${value})`\n          );\n        } else {\n          return false;\n        }\n      }\n      break;\n    case `belowZero`:\n      if (value >= 0) {\n        if (throwException) {\n          throw new Error(\n            `Parameter '${paramName}' must be below zero (${value})`\n          );\n        } else {\n          return false;\n        }\n      }\n      break;\n    case `percentage`:\n      if (value > 1 || value < 0) {\n        if (throwException) {\n          throw new Error(\n            `Parameter '${paramName}' must be in percentage range (0 to 1). (${value})`\n          );\n        } else {\n          return false;\n        }\n      }\n      break;\n    case `nonZero`:\n      if (value === 0) {\n        if (throwException) {\n          throw new Error(`Parameter '${paramName}' must non-zero. (${value})`);\n        } else {\n          return false;\n        }\n      }\n      break;\n    case `bipolar`:\n      if (value > 1 || value < -1) {\n        if (throwException) {\n          throw new Error(\n            `Parameter '${paramName}' must be in bipolar percentage range (-1 to 1). (${value})`\n          );\n        } else {\n          return false;\n        }\n      }\n      break;\n  }\n  return true;\n};\n\n/**\n * Test a number, returning _true_ if it passes, _false_ if not.\n * Compared to {@link number} which by default throws an exception.\n * @param value\n * @param range\n * @returns\n */\nexport const numberTry = (\n  value?: number,\n  range: NumberGuardRange = ``\n): boolean => {\n  return number(value, range, '', false);\n};\n\n/**\n * Throws if `value` is _undefined_ or _null_.\n * @param value\n * @param paramName\n */\nexport const nullUndef = (value: any, paramName = '?') => {\n  if (typeof value === `undefined`) {\n    throw new Error(`${paramName} param is undefined`);\n  }\n  if (value === null) throw new Error(`${paramName} param is null`);\n};\n/**\n * Throws an error if `value` is not in the range of 0-1.\n * Equiv to `number(value, `percentage`);`\n *\n * This is the same as calling ```number(t, `percentage`)```\n * @param value Value to check\n * @param paramName Param name for customising exception message\n * @returns\n */\nexport const percent = (value: number, paramName = `?`) =>\n  number(value, `percentage`, paramName);\n\n/**\n * Throws an error if `value` is not an integer, or does not meet guard criteria.\n * See {@link number} for guard details, or use that if integer checking is not required.\n *\n * Note:\n * * `bipolar` will mean -1, 0 or 1.\n * * positive: must be at least zero\n * * negative: must be zero or lower\n * * aboveZero: must be above zero\n * * belowZero: must be below zero\n * * percentage: must be within 0-1, inclusive\n * * nonZero: can be anything except zero\n * @param value Value to check\n * @param paramName Param name for customising exception message\n * @param range Guard specifier.\n */\nexport const integer = (\n  value: number | undefined,\n  range: NumberGuardRange = ``,\n  paramName = `?`\n) => {\n  // ✔️ Unit tested\n  number(value, range, paramName);\n  if (!Number.isInteger(value)) {\n    throw new Error(`Parameter ${paramName} is not an integer`);\n  }\n};\n\n/**\n * Parses `value` as an integer, returning it if it meets the `range` criteria.\n * If not, `defaultValue` is returned.\n *\n * ```js\n * const i = integerParse('10', 'positive');    // 10\n * const i = integerParse('10.5', 'positive');  // 10\n * const i = integerParse('0', 'nonZero', 100); // 100\n * ```\n *\n * NaN is returned if criteria does not match and no default is given\n * ```js\n * const i = integerParse('10', 'negative');    // NaN\n * ```\n *\n * @param value\n * @param range\n * @param defaultValue\n * @returns\n */\nexport const integerParse = (\n  value: any,\n  range: NumberGuardRange = ``,\n  defaultValue: number = Number.NaN\n) => {\n  // ✔️ Unit tested\n  if (value === undefined) return defaultValue;\n  if (value === null) return defaultValue;\n  try {\n    integer(Number.parseInt(value), range, 'parsed');\n  } catch (ex) {\n    return defaultValue;\n  }\n  return parseInt(value);\n};\n\n/**\n * Returns true if parameter is an array of strings\n * @param value\n * @returns\n */\nexport const isStringArray = (value: unknown): boolean => {\n  if (!Array.isArray(value)) return false;\n  return value.find((v) => typeof v !== `string`) === undefined;\n};\n\n/**\n * Throws an error if parameter is not an array\n * @param value\n * @param paramName\n */\nexport const array = (value: unknown, paramName = `?`): void => {\n  if (!Array.isArray(value)) {\n    throw new Error(`Parameter '${paramName}' is expected to be an array'`);\n  }\n};\n\n/** Throws an error if parameter is not defined */\nexport const defined = <T>(argument: T | undefined): argument is T =>\n  argument !== undefined;\n","import { randomIndex, randomElement, shuffle } from './collections/Arrays.js';\nimport { number as guardNumber, integer as guardInteger } from './Guards.js';\nimport { type EasingName, get as EasingGet } from './modulation/Easing.js';\nimport { clamp } from './data/Clamp.js';\nimport { range } from './IterableSync.js';\n\nexport { randomIndex as arrayIndex };\nexport { randomElement as arrayElement };\nexport { randomHue as hue } from './visual/Colour.js';\n\nexport type RandomOpts = {\n  readonly max: number;\n  readonly min?: number;\n  readonly source?: RandomSource;\n};\n\n/**\n * Default random number generator: `Math.random`.\n */\nexport const defaultRandom = Math.random;\n\n/**\n * A random source.\n *\n * Predefined sources: {@link defaultRandom}, {@link gaussianFn}, {@link weightedFn}\n */\nexport type RandomSource = () => number;\n\n/**\n * Options for producing weighted distribution\n */\nexport type WeightedOpts = {\n  /**\n   * Easing function to use (optional)\n   */\n  readonly easing?: EasingName;\n  /**\n   * Random source (optional)\n   */\n  readonly source?: RandomSource;\n};\n\n/***\n * Returns a random number, 0..1, weighted by a given easing function.\n * Default easing is `quadIn`, which skews towards zero.\n * Use {@link weighted} to get a value directly.\n *\n * ```js\n * import * as Random from 'https://unpkg.com/ixfx/dist/random.js';\n * const r1 = Random.weightedFn();          // quadIn easing by default, which skews toward low values\n * r1(); // Produce a value\n *\n * const r2 = Random.weightedFn(`quadOut`); // quadOut favours high values\n * r2(); // Produce a value\n * ```\n * @param easingName Easing name or options `quadIn` by default.\n * @see {@link weighted} Returns value instead of function\n * @returns Function which returns a weighted random value\n */\nexport const weightedFn = (\n  easingNameOrOpts: EasingName | WeightedOpts = 'quadIn'\n): RandomSource => {\n  const opts =\n    typeof easingNameOrOpts === 'string'\n      ? { easing: easingNameOrOpts }\n      : easingNameOrOpts;\n  const source = opts.source ?? defaultRandom;\n  const easingName = opts.easing ?? 'quadIn';\n  const easingFn = EasingGet(easingName as EasingName);\n  if (easingFn === undefined) {\n    throw new Error(`Easing function '${easingName}' not found.`);\n  }\n\n  const compute = (): number => {\n    const r = source();\n    return easingFn(r);\n  };\n  return compute;\n};\n\n/***\n * Returns a random number, 0..1, weighted by a given easing function.\n * Default easing is `quadIn`, which skews towards zero.\n *\n * Use {@link weightedFn} to return a function instead.\n *\n * ```js\n * import * as Random from 'https://unpkg.com/ixfx/dist/random.js';\n * Random.weighted();          // quadIn easing by default, which skews toward low values\n * Random.weighted(`quadOut`); // quadOut favours high values\n * ```\n * @param easingNameOrOpts Options. Uses 'quadIn' by default.\n * @see {@link weightedFn} Returns a function rather than value\n * @returns Random number (0-1)\n */\nexport const weighted = (\n  easingNameOrOpts: EasingName | WeightedOpts = 'quadIn'\n): number => weightedFn(easingNameOrOpts)();\n\nexport type WeightedIntOpts = WeightedOpts & {\n  readonly min?: number;\n  readonly max: number;\n};\n/**\n * Random integer, weighted according to an easing function.\n * Number will be inclusive of `min` and below `max`.\n *\n * @example 0..99\n * ```js\n * import * as Random from 'https://unpkg.com/ixfx/dist/random.js';\n * const r = Random.weightedIntegerFn(100);\n * r(); // Produce value\n * ```\n *\n * @example 20..29\n * ```js\n * const r = Random.weightedIntegerFn({ min: 20, max: 30 });\n * r(); // Produce value\n * ```\n *\n * @example  0..99 with 'quadIn' easing\n * ```js\n * const r = Random.weightedInteger({ max: 100, easing: `quadIn` });\n * ```\n *\n * Note: result from easing function will be clamped to\n * the min/max (by default 0-1);\n *\n * @param maxOrOpts Maximum (exclusive)\n * @returns Function that produces a random weighted integer\n */\nexport const weightedIntegerFn = (\n  maxOrOpts: number | WeightedIntOpts\n): RandomSource => {\n  const opts = typeof maxOrOpts === 'number' ? { max: maxOrOpts } : maxOrOpts;\n  const source = opts.source ?? defaultRandom;\n  const max = opts.max;\n  const min = opts.min ?? 0;\n  const easingName = opts.easing ?? `quadIn`;\n  if (max === undefined) throw new Error(`max field is undefined`);\n  if (typeof easingName !== 'string') {\n    throw new Error(`easing field expected to be string`);\n  }\n  guardNumber(max);\n\n  const easingFn = EasingGet(easingName as EasingName);\n  if (easingFn === undefined) {\n    throw new Error(`Easing '${easingName}' not found`);\n  }\n\n  guardNumber(min);\n  if (max <= min) throw new Error(`Max should be greater than min`);\n\n  const compute = (): number => {\n    const r = clamp(easingFn(source()));\n    return Math.floor(r * (max - min)) + min;\n  };\n  return compute;\n};\n\n/**\n * @example 0..99\n * ```js\n * import * as Random from 'https://unpkg.com/ixfx/dist/random.js';\n * Random.weightedInteger(100);\n * ```\n *\n * @example 20..29\n * ```js\n * Random.weightedInteger({ min: 20, max: 30 });\n * ```\n *\n * @example  0..99 with 'quadIn' easing\n * ```js\n * Random.weightedInteger({ max: 100, easing: `quadIn` })\n * ```\n * @inheritDoc {@link weightedIntegerFn}\n * @param maxOrOpts\n * @returns Random weighted integer\n */\nexport const weightedInteger = (maxOrOpts: number | WeightedIntOpts): number =>\n  weightedIntegerFn(maxOrOpts)();\n\n/**\n * Returns a random number with gaussian (ie. bell-curved) distribution\n * \n * @example Random number between 0..1 with gaussian distribution\n * ```js\n * import * as Random from 'https://unpkg.com/ixfx/dist/random.js';\n * Random.gaussian();\n * ```\n * \n * @example Distribution can be skewed\n * ```js\n * Random.gaussian(10);\n * ```\n * \n\n * @param skew Skew factor. Defaults to 1, no skewing. Above 1 will skew to left, below 1 will skew to right\n * @returns \n */\nexport const gaussian = (skew = 1) => gaussianFn(skew)();\n\n/**\n * Returns a function that generates a gaussian-distributed random number\n *  * @example Random number between 0..1 with gaussian distribution\n * ```js\n * import * as Random from 'https://unpkg.com/ixfx/dist/random.js';\n *\n * // Create function\n * const r = Random.gaussianFn();\n *\n * // Generate random value\n * r();\n * ```\n *\n * @example Pass the random number generator elsewhere\n * ```js\n * import * as Random from 'https://unpkg.com/ixfx/dist/random.js';\n * import * as Arrays from 'https://unpkg.com/ixfx/dist/arrays.js';\n * const r = Random.gaussianFn(10);\n *\n * // Randomise array with gaussian distribution\n * Arrays.shuffle(r);\n * ```\n * @param skew\n * @returns\n */\nexport const gaussianFn = (skew = 1): RandomSource => {\n  const min = 0;\n  const max = 1;\n  // Source: https://stackoverflow.com/questions/25582882/javascript-math-random-normal-distribution-gaussian-bell-curve\n\n  const compute = (): number => {\n    //eslint-disable-next-line functional/no-let\n    let u = 0,\n      v = 0;\n    while (u === 0) u = Math.random(); //Converting [0,1) to (0,1)\n    while (v === 0) v = Math.random();\n    //eslint-disable-next-line functional/no-let\n    let num = Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\n\n    num = num / 10.0 + 0.5; // Translate to 0 -> 1\n    if (num > 1 || num < 0) {\n      num = compute(); //;gaussian(skew); // resample between 0 and 1 if out of range\n    } else {\n      num = Math.pow(num, skew); // Skew\n      num *= max - min; // Stretch to fill range\n      num += min; // offset to min\n    }\n    return num;\n  };\n  return compute;\n};\n\n/**\n * Returns a function that produces a random integer between `max` (exclusive) and 0 (inclusive)\n * Use {@link integer} if you want a random number directly.\n *\n * Invoke directly:\n * ```js\n * integerFn(10)();  // Random number 0-9\n * ```\n *\n * Or keep a reference to re-compute:\n * ```js\n * const r = integerFn(10);\n * r(); // Produce a random integer\n * ```\n *\n * If a negative value is given, this is assumed to be the\n * minimum (inclusive), with 0 as the max (inclusive)\n * ```js\n * integerFn(-5)();  // Random number from -5 to 0\n * ```\n *\n * Specify options for a custom minimum or source of random:\n * ```js\n * integerFn({ max: 5,  min: 10 })();  // Random number 4-10\n * integerFn({ max: -5, min: -10 })(); // Random number from -10 to -6\n * integerFn({ max: 10, source: Math.random })(); // Random number between 0-9, with custom source of random\n * ```\n *\n * Throws an error if max & min are equal\n * @param maxOrOpts Max value (exclusive), or set of options\n * @returns Random integer\n */\nexport const integerFn = (maxOrOpts: number | RandomOpts): RandomSource => {\n  if (typeof maxOrOpts === `undefined`) {\n    throw new Error(`maxOrOpts is undefined`);\n  }\n  const opts = typeof maxOrOpts === 'number' ? { max: maxOrOpts } : maxOrOpts;\n  //eslint-disable-next-line functional/no-let\n  let max = Math.floor(opts.max);\n  //eslint-disable-next-line functional/no-let\n  let min = Math.floor(opts.min ?? 0);\n\n  // If we just get -5 as the max, invert so\n  // max:1 and min: -5 instead for -5...0 range\n  if (!opts.min && max < 0) {\n    max = 1;\n    min = opts.max;\n  }\n  const randomSource = opts.source ?? defaultRandom;\n  if (min > max) {\n    throw new Error(`Min value is greater than max (min: ${min} max: ${max})`);\n  }\n\n  guardNumber(min, '', 'min');\n  guardNumber(max, '', 'max');\n\n  if (max === min) {\n    throw new Error(`Max and min values cannot be the same (${max})`);\n  }\n\n  // Distance\n  const amt = Math.abs(max - min);\n  return () => Math.floor(randomSource() * amt) + min;\n};\n\n/**\n * Returns a random integer between `max` (exclusive) and 0 (inclusive)\n * Use {@link integerFn} to return a function instead.\n *\n * ```js\n * integer(10);  // Random number 0-9\n * ```\n *\n * If a negative value is given, this is assumed to be the\n * minimum (inclusive), with 0 as the max (inclusive)\n * ```js\n * integer(-5);  // Random number from -5 to 0\n * ```\n *\n * Specify options for a custom minimum or source of random:\n * ```js\n * integer({ max: 5,  min: 10 });  // Random number 4-10\n * integer({ max: -5, min: -10 }); // Random number from -10 to -6\n * integer({ max: 10, source: Math.random }); // Random number between 0-9, with custom source of random\n * ```\n *\n * Throws an error if max & min are equal\n * @param maxOrOpts Max value (exclusive), or set of options\n * @returns Random integer\n */\nexport const integer = (maxOrOpts: number | RandomOpts): number =>\n  integerFn(maxOrOpts)();\n\n/**\n * Returns a function that produces random float values.\n * Use {@link float} to produce a valued directly.\n *\n * Random float between `max` (exclusive) and 0 (inclusive). Max is 1 if unspecified.\n *\n *\n * ```js\n * // Random number between 0..1 (but not including 1)\n * // (this would be identical to Math.random())\n * const r = floatFn();\n * r(); // Execute to produce random value\n *\n * // Random float between 0..100 (but not including 100)\n * const v = floatFn(100)();\n * ```\n *\n * Options can be used:\n * ```js\n * // Random float between 20..40 (possibly including 20, but always lower than 40)\n * const r = floatFn({ min: 20, max: 40 });\n * ```\n * @param maxOrOpts Maximum value (exclusive) or options\n * @returns Random number\n */\nexport const floatFn = (maxOrOpts: number | RandomOpts = 1): RandomSource => {\n  const opts = typeof maxOrOpts === 'number' ? { max: maxOrOpts } : maxOrOpts;\n  //eslint-disable-next-line functional/no-let\n  let max = opts.max;\n  //eslint-disable-next-line functional/no-let\n  let min = opts.min ?? 0;\n  const source = opts.source ?? defaultRandom;\n\n  guardNumber(min, '', 'min');\n  guardNumber(max, '', 'max');\n\n  if (!opts.min && max < 0) {\n    min = max;\n    max = 0;\n  }\n  if (min > max) {\n    throw new Error(`Min is greater than max. Min: ${min} max: ${max}`);\n  }\n\n  return () => source() * (max - min) + min;\n};\n\n/**\n * Returns a random float between `max` (exclusive) and 0 (inclusive). Max is 1 if unspecified.\n * Use {@link floatFn} to get a function that produces values. This is used internally.\n *\n * ```js\n * // Random number between 0..1 (but not including 1)\n * // (this would be identical to Math.random())\n * const v = float();\n * // Random float between 0..100 (but not including 100)\n * const v = float(100);\n * ```\n *\n * Options can be used:\n * ```js\n * // Random float between 20..40 (possibly including 20, but always lower than 40)\n * const v = float({ min: 20, max: 40 });\n * ```\n * @param maxOrOpts Maximum value (exclusive) or options\n * @returns Random number\n */\nexport const float = (maxOrOpts: number | RandomOpts = 1): number =>\n  floatFn(maxOrOpts)();\n\nexport type StringOpts = {\n  readonly length: number;\n  readonly source?: RandomSource;\n};\n/**\n * Returns a string of random letters and numbers of a given `length`.\n *\n * ```js\n * string();  // Random string of length 5\n * string(4); // eg. `4afd`\n * ```\n * @param length Length of random string\n * @returns Random string\n */\nexport const string = (lengthOrOpts: number | StringOpts = 5) => {\n  const opts =\n    typeof lengthOrOpts === 'number' ? { length: lengthOrOpts } : lengthOrOpts;\n  const source = opts.source ?? defaultRandom;\n  source()\n    .toString(36)\n    .substring(2, length + 2);\n};\n\n/**\n * Generates a short roughly unique id\n * ```js\n * const id = shortGuid();\n * ```\n * @param opts Options.\n * @returns\n */\nexport const shortGuid = (opts: { readonly source?: RandomSource } = {}) => {\n  const source = opts.source ?? defaultRandom;\n  // Via Stackoverflow...\n  const firstPart = (source() * 46656) | 0;\n  const secondPart = (source() * 46656) | 0;\n  const firstPartStr = `000${firstPart.toString(36)}`.slice(-3);\n  const secondPartStr = `000${secondPart.toString(36)}`.slice(-3);\n  return firstPartStr + secondPartStr;\n};\n\n/**\n * Returns a random number of minutes, with a unit of milliseconds.\n * Max value is exclusive.\n * Use {@link minutesMs} to get a value directly, or {@link minutesMsFn} to return a function.\n *\n * @example Random value from 0 to one milli less than 5 * 60 * 1000\n * ```js\n * // Create function that returns value\n * const f = minuteMsFn(5);\n *\n * f(); // Generate value\n * ```\n *\n * @example Specified options:\n * ```js\n * // Random time between one minute and 5 minutes\n * const f = minuteMsFn({ max: 5, min: 1 });\n * f();\n * ```\n *\n * @remarks\n * It's a very minor function, but can make\n * code a little more literate:\n * ```js\n * // Random timeout of up to 5 mins\n * setTimeout(() => { ... }, minuteMs(5));\n * ```\n * @param maxMinutesOrOpts\n * @see {@link minutesMs}\n * @returns Function that produces a random value\n */\nexport const minutesMsFn = (\n  maxMinutesOrOpts: number | RandomOpts\n): RandomSource => {\n  const opts =\n    typeof maxMinutesOrOpts === 'number'\n      ? { max: maxMinutesOrOpts }\n      : maxMinutesOrOpts;\n  const min = (opts.min ?? 0) * 60 * 1000;\n  const max = opts.max * 60 * 1000;\n  return integerFn({ ...opts, max, min });\n};\n\n/**\n * @example Random value from 0 to one milli less than 5 * 60 * 1000\n * ```js\n * // Random value from 0 to one milli less than 5*60*1000\n * minuteMs(5);\n * ```\n *\n * @example Specified options:\n * ```js\n * // Random time between one minute and 5 minutes\n * minuteMs({ max: 5, min: 1 });\n * ```\n * @inheritDoc minutesMsFn\n *\n * @param maxMinutesOrOpts\n * @see {@link minutesMsFn}\n * @returns Milliseconds\n */\nexport const minutesMs = (maxMinutesOrOpts: number | RandomOpts): number =>\n  minutesMsFn(maxMinutesOrOpts)();\n\n/**\n * Returns function which produces a random number of seconds, with a unit of milliseconds.\n * Maximum value is exclusive.\n * Use {@link secondsMs} to return a random value directly, or {@link secondsMsFn} to return a function.\n *\n * @example Random milliseconds between 0..4999\n * ```js\n * // Create function\n * const f = secondsMsFn(5000);\n * // Produce a value\n * const value = f();\n * ```\n *\n * @example Options can be provided\n * ```js\n * // Random milliseconds between 1000-4999\n * const value = secondsMsFn({ max:5, min:1 })();\n * // Note the extra () at the end to execute the function\n * ```\n *\n * @remarks\n * It's a very minor function, but can make\n * code a little more literate:\n * ```js\n * // Random timeout of up to 5 seconds\n * setTimeout(() => { ...}, secondsMs(5));\n * ```\n * @param maxSecondsOrOpts Maximum seconds, or options.\n * @returns Milliseconds\n */\nexport const secondsMsFn = (\n  maxSecondsOrOpts: number | RandomOpts\n): RandomSource => {\n  const opts =\n    typeof maxSecondsOrOpts === 'number'\n      ? { max: maxSecondsOrOpts }\n      : maxSecondsOrOpts;\n  const min = (opts.min ?? 0) * 1000;\n  const max = opts.max * 1000;\n  return () => integer({ ...opts, max, min });\n};\n\n/**\n * @example Random milliseconds between 0..4999\n * ```js\n * secondsMs(5000);\n * ```\n *\n * @example Options can be provided\n * ```js\n * // Random milliseconds between 1000-4999\n * secondsMs({ max:5, min:1 });\n * ```\n * @inheritDoc secondsMsFn\n * @param maxSecondsOrOpts\n * @returns\n */\nexport const secondsMs = (maxSecondsOrOpts: number | RandomOpts): number =>\n  secondsMsFn(maxSecondsOrOpts)();\n\nexport type GenerateRandomOpts = RandomOpts & {\n  /**\n   * If true, number range is looped\n   */\n  readonly loop?: boolean;\n};\n\n/**\n * Returns a generator over random unique integers, up to\n * but not including the given max value.\n *\n * @example 0..9 range\n * ```js\n * const rand = [ ...integerUniqueGen(10) ];\n * // eg: [2, 9, 6, 0, 8, 7, 3, 4, 5, 1]\n * ```\n *\n * @example Options can be provided:\n * ```js\n * // 5..9 range\n * const rand = [ ...integerUniqueGen({ min: 5, max: 10 })];\n * ```\n *\n * Range can be looped. Once the initial random walk through the number\n * range completes, it starts again in a new random way.\n *\n * ```js\n * for (const r of integerUniqueGen({ max: 10, loop: true })) {\n *  // Warning: loops forever\n * }\n * ```\n *\n * Behind the scenes, an array of numbers is created that captures the range, this is then\n * shuffled on the first run, and again whenever the iterator loops, if that's allowed.\n *\n * As a consequence, large ranges will consume larger amounts of memory.\n * @param maxOrOpts\n * @returns\n */\nexport function* integerUniqueGen(\n  maxOrOpts: number | GenerateRandomOpts\n): IterableIterator<number> {\n  const opts = typeof maxOrOpts === 'number' ? { max: maxOrOpts } : maxOrOpts;\n  const min = opts.min ?? 0;\n  const max = opts.max;\n  const source = opts.source ?? defaultRandom;\n  const loop = opts.loop ?? false;\n\n  guardInteger(min, '', 'min');\n  guardInteger(max, '', 'max');\n  if (min > max) {\n    throw new Error(`Min value is greater than max. Min: ${min} Max: ${max}`);\n  }\n\n  const origRange = [...range(min, max - min)];\n  //eslint-disable-next-line functional/no-let\n  let numberRange = shuffle(origRange);\n  //eslint-disable-next-line functional/no-let\n  let index = 0;\n  while (true) {\n    if (index === numberRange.length) {\n      if (loop) numberRange = shuffle(origRange, source);\n      else return;\n    }\n    yield numberRange[index++];\n  }\n}\n","/**\n * Functions for working with primitive arrays, regardless of type\n * See Also: NumericArrays.ts\n */\n\nimport { integer as guardInteger } from '../Guards.js';\nimport { defaultRandom, type RandomSource } from '../Random.js';\nimport {\n  type IsEqual,\n  isEqualDefault,\n  isEqualValueDefault,\n  type ToString,\n  toStringDefault,\n} from '../Util.js';\nimport { fromIterable as mapFromIterable } from './map/MapFns.js';\nexport * from './NumericArrays.js';\n\n/**\n * Throws an error if `array` parameter is not a valid array\n *\n * ```js\n * import { guardArray } from 'https://unpkg.com/ixfx/dist/arrays.js';\n * guardArray(someVariable);\n * ```\n * @private\n * @param array\n * @param paramName\n */\nexport const guardArray = <V>(array: ArrayLike<V>, paramName: string = `?`) => {\n  if (array === undefined) {\n    throw new Error(`Param '${paramName}' is undefined. Expected array.`);\n  }\n  if (array === null) {\n    throw new Error(`Param '${paramName}' is null. Expected array.`);\n  }\n  if (!Array.isArray(array)) {\n    throw new Error(`Param '${paramName}' not an array as expected`);\n  }\n};\n\n/**\n * Throws if `index` is an invalid array index for `array`, and if\n * `array` itself is not a valid array.\n * @param array\n * @param index\n */\nexport const guardIndex = <V>(\n  array: ArrayLike<V>,\n  index: number,\n  paramName: string = `index`\n) => {\n  guardArray(array);\n  guardInteger(index, `positive`, paramName);\n  if (index > array.length - 1) {\n    throw new Error(\n      `'${paramName}' ${index} beyond array max of ${array.length - 1}`\n    );\n  }\n};\n\n/**\n * Returns _true_ if all the contents of the array are identical.\n *\n * @example Uses default equality function:\n * ```js\n * import { valuesEqual } from 'https://unpkg.com/ixfx/dist/arrays.js';\n *\n * const a1 = [10, 10, 10];\n * valuesEqual(a1); // True\n *\n * const a2 = [ {name:`Jane`}, {name:`John} ];\n * valuesEqual(a2); // True, because JSON version captures value\n * ```\n *\n * If we want to compare by value for objects that aren't readily\n * converted to JSON, you need to provide a function:\n *\n * ```js\n * valuesEqual(someArray, (a, b) => {\n *  return (a.eventType === b.eventType);\n * });\n * ```\n *\n * Returns _true_ if `array` is empty.\n * @param array Array\n * @param equality Equality checker. Uses string-conversion checking by default\n * @returns\n */\nexport const valuesEqual = <V>(\n  //eslint-disable-next-line functional/prefer-readonly-type\n  array: ReadonlyArray<V> | Array<V>,\n  equality?: IsEqual<V>\n): boolean => {\n  // Unit tested\n\n  if (!Array.isArray(array)) throw new Error(`Param 'array' is not an array.`);\n  if (array.length === 0) return true;\n  const eq = equality === undefined ? isEqualValueDefault : equality;\n  const a = array[0];\n  const r = array.some((v) => !eq(a, v));\n  if (r) return false;\n  return true;\n};\n\n/**\n * Returns the _intersection_ of two arrays: the elements that are in common.\n * \n * ```js\n * intersection([1, 2, 3], [2, 4, 6]);\n// returns [2]\n * ```\n * See also: \n * * {@link unique}: Unique set of items amongst one or more arrays\n * @param a1 \n * @param a2 \n * @param equality \n * @returns \n */\nexport const intersection = <V>(\n  a1: ReadonlyArray<V> | ReadonlyArray<V>,\n  a2: ReadonlyArray<V> | ReadonlyArray<V>,\n  equality: IsEqual<V> = isEqualDefault\n) => a1.filter((e1) => a2.some((e2) => equality(e1, e2)));\n\n/**\n * Returns a 'flattened' copy of array, un-nesting arrays one level\n * ```js\n * flatten([1, [2, 3], [[4]]] ]);\n * // Yields: [ 1, 2, 3, [4]];\n * ```\n * @param array\n * @returns\n */\nexport const flatten = <V>(array: ReadonlyArray<V | readonly V[]>): V[] =>\n  Array.prototype.concat.apply([], [...array]);\n\n/**\n * Zip ombines the elements of two or more arrays based on their index.\n *\n * ```js\n * import { zip } from 'https://unpkg.com/ixfx/dist/arrays.js';\n *\n * const a = [1,2,3];\n * const b = [`red`, `blue`, `green`];\n *\n * const c = zip(a, b);\n * // Yields:\n * // [\n * //   [1, `red`],\n * //   [2, `blue`],\n * //   [3, `green`]\n * // ]\n * ```\n *\n * Typically the arrays you zip together are all about the same logical item. Eg, in the above example\n * perhaps `a` is size and `b` is colour. So thing #1 (at array index 0) is a red thing of size 1. Before\n * zipping we'd access it by `a[0]` and `b[0]`. After zipping, we'd have c[0], which is array of [1, `red`].\n * @param arrays\n * @returns Zipped together array\n */\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const zip = (\n  ...arrays: ReadonlyArray<any> | ReadonlyArray<any>\n): Array<any> => {\n  // Unit tested\n  if (arrays.some((a) => !Array.isArray(a))) {\n    throw new Error(`All parameters must be an array`);\n  }\n  const lengths = arrays.map((a) => a.length);\n  if (!valuesEqual(lengths)) {\n    throw new Error(`Arrays must be of same length`);\n  }\n  const ret = [];\n  const len = lengths[0];\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < len; i++) {\n    //eslint-disable-next-line functional/immutable-data\n    ret.push(arrays.map((a) => a[i]));\n  }\n  return ret;\n};\n\n/**\n * Returns an interleaving of two or more arrays. All arrays must be the same length.\n *\n * ```js\n * import { interleave } from 'https://unpkg.com/ixfx/dist/arrays.js';\n *\n * const a = [`a`, `b`, `c`];\n * const b = [`1`, `2`, `3`];\n * const c = interleave(a, b);\n * // Yields:\n * // [`a`, `1`, `b`, `2`, `c`, `3`]\n * ```\n * @param arrays\n * @returns\n */\nexport const interleave = <V>(\n  ...arrays: ReadonlyArray<readonly V[]> | ReadonlyArray<readonly V[]>\n): Array<V> => {\n  if (arrays.some((a) => !Array.isArray(a))) {\n    throw new Error(`All parameters must be an array`);\n  }\n  const lengths = arrays.map((a) => a.length);\n  if (!valuesEqual(lengths)) {\n    throw new Error(`Arrays must be of same length`);\n  }\n\n  const ret = [];\n  const len = lengths[0];\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < len; i++) {\n    //eslint-disable-next-line functional/no-let\n    for (let p = 0; p < arrays.length; p++) {\n      //eslint-disable-next-line functional/immutable-data\n      ret.push(arrays[p][i]);\n    }\n  }\n  return ret;\n};\n\n/**\n * Returns an copy of `data` with specified length.\n * If the input array is too long, it is truncated.\n *\n * If the input array is too short, it will be expanded based on the `expand` strategy:\n *  - 'undefined': fill with `undefined`\n *  - 'repeat': repeat array elements, starting from position 0\n *  - 'first': continually use first element\n *  - 'last': continually use last element\n *\n * ```js\n * import { ensureLength } from 'https://unpkg.com/ixfx/dist/arrays.js';\n *\n * ensureLength([1,2,3], 2); // [1,2]\n * ensureLength([1,2,3], 5, `undefined`); // [1,2,3,undefined,undefined]\n * ensureLength([1,2,3], 5, `repeat`);    // [1,2,3,1,2]\n * ensureLength([1,2,3], 5, `first`);     // [1,2,3,1,1]\n * ensureLength([1,2,3], 5, `last`);      // [1,2,3,3,3]\n * ```\n * @param data Input array to expand\n * @param length Desired length\n * @param expand Expand strategy\n * @typeParam V Type of array\n */\nexport const ensureLength = <V>(\n  data: ReadonlyArray<V> | ReadonlyArray<V>,\n  length: number,\n  expand: `undefined` | `repeat` | `first` | `last` = `undefined`\n): Array<V> => {\n  // Unit tested\n  if (data === undefined) throw new Error(`Data undefined`);\n  if (!Array.isArray(data)) throw new Error(`data is not an array`);\n  if (data.length === length) return [...data];\n  if (data.length > length) {\n    return data.slice(0, length);\n  }\n  const d = [...data];\n  const add = length - d.length;\n\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < add; i++) {\n    //eslint-disable-next-line functional/immutable-data\n    if (expand === `undefined`) {\n      // @ts-ignore\n      //eslint-disable-next-line functional/immutable-data\n      d.push(undefined);\n    } else if (expand === `repeat`) {\n      //eslint-disable-next-line functional/immutable-data\n      d.push(data[i % data.length]);\n    } else if (expand === `first`) {\n      //eslint-disable-next-line functional/immutable-data\n      d.push(data[0]);\n    } else if (expand === `last`) {\n      //eslint-disable-next-line functional/immutable-data\n      d.push(data[data.length - 1]);\n    }\n  }\n  return d;\n};\n\n/**\n * Return elements from `array` that match a given `predicate`, and moreover are between\n * the given `startIndex` (inclusive) and `endIndex` (exclusive).\n *\n * While this can be done with in the in-built `array.filter` function, it will\n * needlessly iterate through the whole array. It also avoids another alternative\n * of slicing the array before using `filter`.\n *\n * ```js\n * import { filterBetween } from 'https://unpkg.com/ixfx/dist/arrays.js';\n *\n * // Return 'registered' people between and including array indexes 5-10\n * const filtered = filterBetween(people, person => person.registered, 5, 10);\n * ```\n * @param array Array to filter\n * @param predicate Filter function\n * @param startIndex Start index (defaults to 0)\n * @param endIndex End index (by default runs until end)\n */\nexport const filterBetween = <V>(\n  array: ReadonlyArray<V> | ReadonlyArray<V>,\n  predicate: (\n    value: V,\n    index: number,\n    array: ReadonlyArray<V> | ReadonlyArray<V>\n  ) => boolean,\n  startIndex?: number,\n  endIndex?: number\n): V[] => {\n  guardArray(array);\n  if (typeof startIndex === `undefined`) startIndex = 0;\n  if (typeof endIndex === `undefined`) endIndex = array.length; //- 1;\n  guardIndex(array, startIndex, `startIndex`);\n  guardIndex(array, endIndex - 1, `endIndex`);\n\n  const t: V[] = [];\n\n  //eslint-disable-next-line functional/no-let\n  for (let i = startIndex; i < endIndex; i++) {\n    //eslint-disable-next-line functional/immutable-data\n    if (predicate(array[i], i, array)) t.push(array[i]);\n  }\n  return t;\n};\n/**\n * Returns a random array index.\n *\n * ```js\n * import { randomIndex } from 'https://unpkg.com/ixfx/dist/arrays.js';\n *\n * const v = [`blue`, `red`, `orange`];\n * randomIndex(v); // Yields 0, 1 or 2\n * ```\n *\n * Use {@link randomElement} if you want a value from `array`, not index.\n *\n * @param array Array\n * @param rand Random generator. `Math.random` by default.\n * @returns\n */\nexport const randomIndex = <V>(\n  array: ArrayLike<V>,\n  rand: RandomSource = defaultRandom\n): number => Math.floor(rand() * array.length);\n\n/**\n * Returns random element.\n *\n * ```js\n * import { randomElement } from 'https://unpkg.com/ixfx/dist/arrays.js';\n *\n * const v = [`blue`, `red`, `orange`];\n * randomElement(v); // Yields `blue`, `red` or `orange`\n * ```\n *\n * Use {@link randomIndex} if you want a random index within `array`.\n *\n * @param array\n * @params rand Random generator. `Math.random` by default.\n * @returns\n */\nexport const randomElement = <V>(\n  array: ArrayLike<V>,\n  rand: RandomSource = defaultRandom\n): V => {\n  guardArray(array, `array`);\n  return array[Math.floor(rand() * array.length)];\n};\n\n/**\n * Removes a random item from an array, returning both the item and the new array as a result.\n * Does not modify the original array unless `mutate` parameter is true.\n *\n * @example Without changing source\n * ```js\n * import { randomPluck } from 'https://unpkg.com/ixfx/dist/arrays.js';\n *\n * const data = [100, 20, 40];\n * const {value, array} = randomPluck(data);\n * // value: 20, array: [100, 40], data: [100, 20, 40];\n * ```\n *\n * @example Mutating source\n * ```js\n * import { randomPluck } from 'https://unpkg.com/ixfx/dist/arrays.js';\n *\n * const data = [100, 20, 40];\n * const {value} = randomPluck(data, true);\n * // value: 20, data: [100, 40];\n * ```\n *\n * @template V Type of array\n * @param array Array to pluck item from\n * @param mutate If _true_, changes input array. _False_ by default.\n * @param random Random generatr. `Math.random` by default.\n * @return Returns an object `{value:V|undefined, array:V[]}`\n *\n */\nexport const randomPluck = <V>(\n  array: readonly V[] | ReadonlyArray<V>,\n  mutate = false,\n  rand: RandomSource = defaultRandom\n): { readonly value: V | undefined; readonly array: Array<V> } => {\n  if (array === undefined) throw new Error(`array is undefined`);\n  if (!Array.isArray(array)) throw new Error(`'array' param is not an array`);\n  if (array.length === 0) return { value: undefined, array: [] };\n  const index = randomIndex(array, rand);\n  if (mutate) {\n    return {\n      value: array[index],\n      //eslint-disable-next-line functional/immutable-data\n      array: array.splice(index, 1),\n    };\n  } else {\n    // Copy array, remove item from that\n    const t = [...array];\n    //eslint-disable-next-line functional/immutable-data\n    t.splice(index, 1);\n    return {\n      value: array[index],\n      array: t,\n    };\n  }\n};\n\n/**\n * Returns a shuffled copy of the input array.\n * @example\n * ```js\n * import { shuffle } from 'https://unpkg.com/ixfx/dist/arrays.js';\n *\n * const d = [1, 2, 3, 4];\n * const s = shuffle(d);\n * // d: [1, 2, 3, 4], s: [3, 1, 2, 4]\n * ```\n * @param dataToShuffle\n * @param rand Random generator. `Math.random` by default.\n * @returns Copy with items moved around randomly\n * @template V Type of array items\n */\nexport const shuffle = <V>(\n  dataToShuffle: ReadonlyArray<V> | ReadonlyArray<V>,\n  rand: RandomSource = defaultRandom\n): Array<V> => {\n  const array = [...dataToShuffle];\n  // eslint-disable-next-line  functional/no-let\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(rand() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\n/**\n * Sorts an array of objects in ascending order\n * by the given property name, assuming it is a number.\n *\n * ```js\n * const data = [\n *  { size: 10, colour: `red` },\n *  { size: 20, colour: `blue` },\n *  { size: 5, colour: `pink` }\n * ];\n * const sorted = Arrays.sortByNumericProperty(data, `size`);\n *\n * Yields items ascending order:\n * [ { size: 5, colour: `pink` }, { size: 10, colour: `red` }, { size: 20, colour: `blue` } ]\n * ```\n * @param data\n * @param propertyName\n */\nexport const sortByNumericProperty = <V, K extends keyof V>(\n  data: ReadonlyArray<V> | ReadonlyArray<V>,\n  propertyName: K\n) =>\n  [...data].sort((a, b) => {\n    guardArray(data, `data`);\n    const av = a[propertyName];\n    const bv = b[propertyName];\n    if (av < bv) return -1;\n    if (av > bv) return 1;\n    return 0;\n  });\n\n/**\n * Returns an array with a value omitted. If value is not found, result will be a copy of input.\n * Value checking is completed via the provided `comparer` function.\n * By default checking whether `a === b`. To compare based on value, use the `isEqualValueDefault` comparer.\n *\n * @example\n * ```js\n * import { without } from 'https://unpkg.com/ixfx/dist/arrays.js';\n *\n * const data = [100, 20, 40];\n * const filtered = without(data, 20); // [100, 40]\n * ```\n *\n * @example Using value-based comparison\n * ```js\n * import { without } from 'https://unpkg.com/ixfx/dist/arrays.js';\n *\n * const data = [{name: `Alice`}, {name:`Sam`}];\n *\n * // This wouldn't work as expected, because the default comparer uses instance,\n * // not value:\n * without(data, {name: `Alice`});\n *\n * // So instead we can use a value comparer:\n * without(data, {name:`Alice`}, isEqualValueDefault);\n * ```\n *\n * @example Use a function\n * ```js\n * import { without } from 'https://unpkg.com/ixfx/dist/arrays.js';\n *\n * const data = [{name: `Alice`}, {name:`Sam`}];\n * without(data, {name:`ALICE`}, (a, b) => {\n *  return (a.name.toLowerCase() === b.name.toLowerCase());\n * });\n * ```\n *\n * Consider {@link remove} to remove an item by index.\n *\n * @template V Type of array items\n * @param data Source array\n * @param value Value to remove\n * @param comparer Comparison function. If not provided `Util.isEqualDefault` is used, which compares using `===`\n * @return Copy of array without value.\n */\nexport const without = <V>(\n  //eslint-disable-next-line functional/prefer-readonly-type\n  data: ReadonlyArray<V> | Array<V>,\n  value: V,\n  comparer: IsEqual<V> = isEqualDefault\n): Array<V> => data.filter((v) => !comparer(v, value));\n\n/**\n * Returns all items in `data` for as long as `predicate` returns true.\n *\n * `predicate` returns an array of `[stop:boolean, acc:A]`. The first value\n * is _true_ when the iteration should stop, and the `acc` is the accumulated value.\n * This allows `until` to be used to carry over some state from item to item.\n *\n * @example Stop when we hit an item with value of 3\n * ```js\n * const v = Arrays.until([1,2,3,4,5], v => [v === 3, 0]);\n * // [ 1, 2 ]\n * ```\n *\n * @example Stop when we reach a total\n * ```js\n * // Stop when accumulated value reaches 6\n * const v = Arrays.until[1,2,3,4,5], (v, acc) => [acc >= 7, v+acc], 0);\n * // [1, 2, 3]\n * ```\n * @param data\n * @param predicate\n * @returns\n */\nexport const until = <V, A>(\n  //eslint-disable-next-line functional/prefer-readonly-type\n  data: ReadonlyArray<V> | Array<V>,\n  predicate: (v: V, acc: A) => readonly [stop: boolean, acc: A],\n  initial: A\n): V[] => {\n  const ret = [];\n  //eslint-disable-next-line functional/no-let\n  let total = initial;\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < data.length; i++) {\n    const [stop, acc] = predicate(data[i], total);\n    if (stop) break;\n\n    total = acc;\n\n    //eslint-disable-next-line functional/immutable-data\n    ret.push(data[i]);\n  }\n  return ret;\n};\n\n/**\n * Removes an element at `index` index from `data`, returning the resulting array without modifying the original.\n *\n * ```js\n * import { remove } from 'https://unpkg.com/ixfx/dist/arrays.js';\n *\n * const v = [ 100, 20, 50 ];\n * const vv = remove(2);\n *\n * Yields:\n *  v: [ 100, 20, 50 ]\n * vv: [ 100, 20 ]\n * ```\n *\n * Consider {@link without} if you want to remove an item by value.\n *\n * Throws an exception if `index` is outside the range of `data` array.\n * @param data Input array\n * @param index Index to remove\n * @typeParam V Type of array\n * @returns\n */\nexport const remove = <V>(\n  //eslint-disable-next-line functional/prefer-readonly-type\n  data: ReadonlyArray<V> | Array<V>,\n  index: number\n): Array<V> => {\n  // ✔️ Unit tested\n  if (!Array.isArray(data)) {\n    throw new Error(`'data' parameter should be an array`);\n  }\n  guardIndex(data, index, `index`);\n  return [...data.slice(0, index), ...data.slice(index + 1)];\n};\n\n/**\n * Groups data by a function `grouper`, returning data as a map with string\n * keys and array values. Multiple values can be assigned to the same group.\n *\n * `grouper` must yield a string designated group for a given item.\n *\n * @example\n * ```js\n * import { groupBy } from 'https://unpkg.com/ixfx/dist/arrays.js';\n *\n * const data = [\n *  { age: 39, city: `London` }\n *  { age: 14, city: `Copenhagen` }\n *  { age: 23, city: `Stockholm` }\n *  { age: 56, city: `London` }\n * ];\n *\n * // Whatever the function returns will be the designated group\n * // for an item\n * const map = groupBy(data, item => data.city);\n * ```\n *\n * This yields a Map with keys London, Stockholm and Copenhagen, and the corresponding values.\n *\n * ```\n * London: [{ age: 39, city: `London` }, { age: 56, city: `London` }]\n * Stockhom: [{ age: 23, city: `Stockholm` }]\n * Copenhagen: [{ age: 14, city: `Copenhagen` }]\n * ```\n * @param array Array to group\n * @param grouper Function that returns a key for a given item\n * @typeParam K Type of key to group by. Typically string.\n * @typeParam V Type of values\n * @returns Map\n */\nexport const groupBy = <K, V>(\n  //eslint-disable-next-line functional/prefer-readonly-type\n  array: Iterable<V>,\n  grouper: (item: V) => K\n) => {\n  const map = new Map<K, V[]>();\n\n  for (const a of array) {\n    const key = grouper(a);\n    //eslint-disable-next-line functional/no-let\n    let existing = map.get(key);\n    if (!existing) {\n      existing = [];\n      map.set(key, existing);\n    }\n    //eslint-disable-next-line functional/immutable-data\n    existing.push(a);\n  }\n  return map;\n};\n\n/**\n * Samples array\n *\n * @example By percentage - get half of the items\n * ```\n * import { sample } from 'https://unpkg.com/ixfx/dist/arrays.js';\n *\n * const list = [1,2,3,4,5,6,7,8,9,10];\n * const sub = sample(list, 0.5);\n * // Yields: [2, 4, 6, 8, 10]\n * ```\n *\n * @example By steps - every third\n * ```\n * import { sample } from 'https://unpkg.com/ixfx/dist/arrays.js';\n *\n * const list = [1,2,3,4,5,6,7,8,9,10];\n * const sub = sample(list, 3);\n * // Yields:\n * // [3, 6, 9]\n * ```\n * @param array Array to sample\n * @param amount Amount, given as a percentage (0..1) or the number of interval (ie 3 for every third item)\n * @returns\n */\nexport const sample = <V>(array: ArrayLike<V>, amount: number): Array<V> => {\n  //eslint-disable-next-line functional/no-let\n  let subsampleSteps = 1;\n  if (amount <= 1) {\n    // Subsample based on a percentage\n    const numberOfItems = array.length * amount;\n    subsampleSteps = Math.round(array.length / numberOfItems);\n  } else {\n    subsampleSteps = amount;\n  }\n\n  guardInteger(subsampleSteps, `positive`, `amount`);\n  if (subsampleSteps > array.length - 1) {\n    throw new Error(`Subsample steps exceeds array length`);\n  }\n  const r: V[] = [];\n\n  //eslint-disable-next-line functional/no-let\n  for (let i = subsampleSteps - 1; i < array.length; i += subsampleSteps) {\n    //eslint-disable-next-line functional/immutable-data\n    r.push(array[i]);\n  }\n  return r;\n};\n\n/**\n * Return `arr` broken up into chunks of `size`\n *\n * ```js\n * chunks([1,2,3,4,5,6,7,8,9,10], 3);\n * // Yields: [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]\n * ```\n * @param arr\n * @param size\n * @returns\n */\n//eslint-disable-next-line func-style\nexport function chunks<V>(\n  arr: ReadonlyArray<V> | ReadonlyArray<V>,\n  size: number\n) {\n  // https://surma.github.io/underdash/\n  const output = [];\n  //eslint-disable-next-line  functional/no-let\n  for (let i = 0; i < arr.length; i += size) {\n    //eslint-disable-next-line functional/immutable-data\n    output.push(arr.slice(i, i + size));\n  }\n  return output;\n}\n\n/**\n * Returns a result of a merged into b.\n * B is always the 'newer' data that takes\n * precedence.\n */\nexport type MergeReconcile<V> = (a: V, b: V) => V;\n\n/**\n * Merges arrays left to right, using the provided\n * `reconcile` function to choose a winner when keys overlap.\n *\n * There's also [Maps.mergeByKey](functions/Collections.Maps.mergeByKey.html) if the input data is in Map form.\n *\n * For example, if we have the array A:\n * [`A-1`, `A-2`, `A-3`]\n *\n * And array B:\n * [`B-1`, `B-2`, `B-4`]\n *\n * And with the key function:\n * ```js\n * // Make a key for value based on last char\n * const keyFn = (v) => v.substr(-1, 1);\n * ```\n *\n * If they are merged with the reconile function:\n * ```js\n * const reconcile = (a, b) => b.replace(`-`, `!`);\n * const output = mergeByKey(keyFn, reconcile, arrayA, arrayB);\n * ```\n *\n * The final result will be:\n *\n * [`B!1`, `B!2`, `A-3`, `B-4`]\n *\n * In this toy example, it's obvious how the reconciler transforms\n * data where the keys overlap. For the keys that do not overlap -\n * 3 and 4 in this example - they are copied unaltered.\n *\n * A practical use for `mergeByKey` has been in smoothing keypoints\n * from a TensorFlow pose. In this case, we want to smooth new keypoints\n * with older keypoints. But if a keypoint is not present, for it to be\n * passed through.\n *\n * @param keyFn Function to generate a unique key for data\n * @param reconcile Returns value to decide 'winner' when keys conflict.\n * @param arrays Arrays of data to merge\n */\nexport const mergeByKey = <V>(\n  keyFn: ToString<V>,\n  reconcile: MergeReconcile<V>,\n  ...arrays: readonly ReadonlyArray<V>[]\n): Array<V> => {\n  const result = new Map<string, V>();\n  for (const m of arrays) {\n    for (const mv of m) {\n      if (mv === undefined) continue;\n      const mk = keyFn(mv);\n      //eslint-disable-next-line functional/no-let\n      let v = result.get(mk);\n      if (v) {\n        v = reconcile(v, mv);\n      } else {\n        v = mv;\n      }\n      result.set(mk, v);\n    }\n  }\n  return [...result.values()];\n};\n\n/**\n * Reduces in a pairwise fashion.\n *\n * Eg, if we have input array of [1, 2, 3, 4, 5], the\n * `reducer` fn will run with 1,2 as parameters, then 2,3, then 3,4 etc.\n * ```js\n * const values = [1, 2, 3, 4, 5]\n * reducePairwise(values, (acc, a, b) => {\n *  return acc + (b - a);\n * }, 0);\n * ```\n *\n * If input array has less than two elements, the initial value is returned.\n *\n * ```js\n * const reducer = (acc:string, a:string, b:string) => acc + `[${a}-${b}]`;\n * const result = reducePairwise(`a b c d e f g`.split(` `), reducer, `!`);\n * Yields: `![a-b][b-c][c-d][d-e][e-f][f-g]`\n * ```\n * @param arr\n * @param reducer\n * @param initial\n * @returns\n */\nexport const reducePairwise = <V, X>(\n  arr: readonly V[] | ReadonlyArray<V>,\n  reducer: (acc: X, a: V, b: V) => X,\n  initial: X\n) => {\n  guardArray(arr, `arr`);\n  if (arr.length < 2) return initial;\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < arr.length - 1; i++) {\n    initial = reducer(initial, arr[i], arr[i + 1]);\n  }\n  return initial;\n};\n\n/**\n * Returns two separate arrays of everything that `filter` returns _true_,\n * and everything it returns _false_ on. The in-built Array.filter() in\n * constrast only returns things that `filter` returns _true_ for.\n *\n * ```js\n * const [ matching, nonMatching ] = filterAB(data, v => v.enabled);\n * // `matching` is a list of items from `data` where .enabled is true\n * // `nonMatching` is a list of items from `data` where .enabled is false\n * ```\n * @param data Array of data to filter\n * @param filter Function which returns _true_ to add items to the A list, or _false_ for items to add to the B list\n * @returns Array of two elements. The first is items that match `filter`, the second is items that do not.\n */\nexport const filterAB = <V>(\n  data: readonly V[] | ReadonlyArray<V>,\n  filter: (a: V) => boolean\n): [a: V[], b: V[]] => {\n  const a: V[] = [];\n  const b: V[] = [];\n  for (let i = 0; i < data.length; i++) {\n    //eslint-disable-next-line functional/immutable-data\n    if (filter(data[i]!)) a.push(data[i]!);\n    //eslint-disable-next-line functional/immutable-data\n    else b.push(data[i]!);\n  }\n  return [a, b];\n};\n\n/**\n * Combines the values of one or more arrays, removing duplicates\n * ```js\n * const v = Arrays.unique([ [1, 2, 3, 4], [ 3, 4, 5, 6] ]);\n * // [ 1, 2, 3, 4, 5, 6]\n * ```\n *\n * A single array can be provided as well:\n * ```js\n * const v = Arrays.unique([ 1, 2, 3, 1, 2, 3 ]);\n * // [ 1, 2, 3 ]\n * ```\n * See also:\n * * {@link intersection}: Overlap between two arrays\n * * {@link additionalValues}: Yield values from an iterable not present in the other\n * @param arrays\n * @param comparer\n * @returns\n */\nexport const unique = <V>(\n  arrays: //eslint-disable-next-line functional/prefer-readonly-type\n  | Array<Array<V>>\n    //eslint-disable-next-line functional/prefer-readonly-type\n    | Array<V>\n    | ReadonlyArray<V>\n    | ReadonlyArray<ReadonlyArray<V>>,\n  comparer = isEqualDefault<V>\n): readonly V[] => {\n  //eslint-disable-next-line functional/no-let\n  const t: V[] = [];\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    if (Array.isArray(a)) {\n      for (const v of additionalValues<V>(t, a, comparer)) {\n        //eslint-disable-next-line functional/immutable-data\n        t.push(v);\n      }\n    } else {\n      return [...additionalValues<V>([], arrays as Array<V>, comparer)];\n    }\n  }\n  return t;\n};\n\n/**\n * Returns _true_ if array contains duplicate values.\n *\n * ```js\n *\n * containsDuplicateValues(['a','b','a']); // True\n * containsDuplicateValues([\n *  { name: 'Apple' },\n *  { name: 'Apple' }\n * ]); // True\n * ```\n * @param array\n * @param comparer\n * @returns\n */\nexport const containsDuplicateValues = <V>(\n  //eslint-disable-next-line functional/prefer-readonly-type\n  array: Array<V> | ReadonlyArray<V>,\n  keyFn = toStringDefault<V>\n): boolean => {\n  if (!Array.isArray(array)) throw new Error(`Parameter needs to be an array`);\n  try {\n    const _ = mapFromIterable(array, keyFn);\n  } catch (ex) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Compares the values of two arrays, returning a list\n * of items they have in common, and those unique in `a` or `b`.\n *\n * ```js\n * const a = ['apples', 'oranges', 'pears' ]\n * const b = ['pears', 'kiwis', 'bananas' ];\n *\n * const r = compareValues(a, b);\n * r.shared;  // [ 'pears' ]\n * r.a;       // [ 'apples', 'oranges' ]\n * r.b;       // [ 'kiwis', 'bananas' ]\n * @param a\n * @param b\n * @param eq\n * @returns\n */\nexport const compareValues = <V>(\n  a: ArrayLike<V>,\n  b: ArrayLike<V>,\n  eq = isEqualDefault<V>\n) => {\n  const shared = [];\n  const aUnique = [];\n  const bUnique = [];\n\n  for (let i = 0; i < a.length; i++) {\n    //eslint-disable-next-line functional/no-let\n    let seenInB = false;\n    for (let x = 0; x < b.length; x++) {\n      if (eq(a[i], b[x])) {\n        seenInB = true;\n        break;\n      }\n    }\n    if (seenInB) {\n      //eslint-disable-next-line functional/immutable-data\n      shared.push(a[i]);\n    } else {\n      //eslint-disable-next-line functional/immutable-data\n      aUnique.push(a[i]);\n    }\n  }\n\n  for (let i = 0; i < b.length; i++) {\n    //eslint-disable-next-line functional/no-let\n    let seenInA = false;\n    for (let x = 0; x < a.length; x++) {\n      if (eq(b[i], a[x])) {\n        seenInA = true;\n      }\n    }\n    if (!seenInA) {\n      //eslint-disable-next-line functional/immutable-data\n      bUnique.push(b[i]);\n    }\n  }\n\n  return {\n    shared,\n    a: aUnique,\n    b: bUnique,\n  };\n};\n\n/**\n * Returns _true_ if all values in `arrays` are equal, regardless\n * of their position. Use === checking by default.\n * ```js\n * const a = ['apples','oranges','pears'];\n * const b = ['pears','oranges','apples'];\n * compareValuesEqual(a, b); // True\n * ```\n *\n * ```js\n * const a = [ { name: 'John' }];\n * const b = [ { name: 'John' }];\n * // Use a custom equality checker\n * compareValuesEqual(a, b, (aa,bb) => aa.name === bb.name);\n * ```\n * @param arrays\n * @param eq\n */\nexport const compareValuesEqual = <V>(\n  //eslint-disable-next-line functional/prefer-readonly-type\n  a: ArrayLike<V>,\n  b: ArrayLike<V>,\n  eq = isEqualDefault<V>\n): boolean => {\n  const ret = compareValues(a, b, eq);\n  return ret.a.length === 0 && ret.b.length === 0;\n};\n\n/**\n * Returns _true_ if contents of `needles` is contained by `haystack`.\n * ```js\n * const a = ['apples','oranges','pears','mandarins'];\n * const b = ['pears', 'apples'];\n * contains(a, b); // True\n *\n * const c = ['pears', 'bananas'];\n * contains(a, b); // False ('bananas' does not exist in a)\n * ```\n * @param haystack\n * @param needles\n * @param eq\n */\nexport const contains = <V>(\n  haystack: ArrayLike<V>,\n  needles: ArrayLike<V>,\n  eq = isEqualDefault<V>\n) => {\n  if (!Array.isArray(haystack)) {\n    throw new Error(`Expects haystack parameter to be an array`);\n  }\n  if (!Array.isArray(needles)) {\n    throw new Error(`Expects needles parameter to be an array`);\n  }\n\n  for (let i = 0; i < needles.length; i++) {\n    //eslint-disable-next-line functional/no-let\n    let found = false;\n    for (let x = 0; x < haystack.length; x++) {\n      if (eq(needles[i], haystack[x])) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Yield values from an iterable not present in the other.\n *\n * Assuming that `input` array is unique values, this function\n * yields items from `values` which are not present in `input`.\n *\n * Duplicate items in `values` are ignored - only the first is yielded.\n *\n * If `eq` function is not provided, values are compared using the\n * default === semantics (via {@link isEqualDefault})\n *\n * ```js\n * const existing = [ 1, 2, 3 ];\n * const newValues = [ 3, 4, 5];\n * const v = [...additionalValues(existing, newValues)];\n * // [ 1, 2, 3, 4, 5]\n * ```\n *\n * ```js\n * const existing = [ 1, 2, 3 ];\n * const newValues = [ 3, 4, 5 ];\n * for (const v of additionalValues(existing, newValues)) {\n *  // 4, 5\n * }\n * To combine one or more iterables, keeping only unique items, use {@link unique}\n * @param input\n * @param values\n */\nexport function* additionalValues<V>(\n  //eslint-disable-next-line functional/prefer-readonly-type\n  input: Array<V>,\n  //eslint-disable-next-line functional/prefer-readonly-type\n  values: Iterable<V>,\n  eq: IsEqual<V> = isEqualDefault\n): Iterable<V> {\n  // Keep track of values already yielded\n  const yielded: V[] = [];\n  for (const v of values) {\n    const found = input.find((i) => eq(i, v));\n    if (!found) {\n      const alreadyYielded = yielded.find((ii) => eq(ii, v));\n      if (!alreadyYielded) {\n        //eslint-disable-next-line functional/immutable-data\n        yielded.push(v);\n        yield v;\n      }\n    }\n  }\n}\n","import { number as guardNumber } from './Guards.js';\nimport { untilMatch } from './Text.js';\nexport * as IterableAsync from './IterableAsync.js';\nexport * as Debug from './Debug.js';\n\n/**\n * Returns `fallback` if `v` is NaN, otherwise returns `v`.\n *\n * Throws if `v` is not a number type.\n * @param v\n * @param fallback\n * @returns\n */\nexport const ifNaN = (v: number, fallback: number): number => {\n  // ✔️ Unit tested\n\n  if (Number.isNaN(v)) return fallback;\n  if (typeof v !== 'number') {\n    throw new Error(`v is not a number. Got: ${typeof v}`);\n  }\n  return v;\n};\n\n/**\n * Maps the properties of an object through a map function.\n * That is, run each of the values of an object through a function, an return\n * the result.\n *\n * @example Double the value of all fields\n * ```js\n * const rect = { width: 100, height: 250 };\n * const doubled = mapObject(rect, (fieldValue) => {\n *  return fieldValue*2;\n * });\n * // Yields: { width: 200, height: 500 }\n * ```\n *\n * Since the map callback gets the name of the property, it can do context-dependent things.\n * ```js\n * const rect = { width: 100, height: 250, colour: 'red' }\n * const doubled = mapObject(rect, (fieldValue, fieldName) => {\n *  if (fieldName === 'width') return fieldValue*3;\n *  else if (typeof fieldValue === 'number') return fieldValue*2;\n *  return fieldValue;\n * });\n * // Yields: { width: 300, height: 500, colour: 'red' }\n * ```\n * In addition to bulk processing, it allows remapping of property types.\n *\n * In terms of typesafety, the mapped properties are assumed to have the\n * same type.\n *\n * ```js\n * const o = {\n *  x: 10,\n *  y: 20,\n *  width: 200,\n *  height: 200\n * }\n *\n * // Make each property use an averager instead\n * const oAvg = mapObject(o, (value, key) => {\n *  return movingAverage(10);\n * });\n *\n * // Add a value to the averager\n * oAvg.x.add(20);\n * ```\n */\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const mapObject = <\n  SourceType extends Record<string, any>,\n  DestinationFieldType,\n>(\n  object: SourceType,\n  mapFn: (fieldValue: any, field: string, index: number) => DestinationFieldType\n): RemapObjectPropertyType<SourceType, DestinationFieldType> => {\n  type MapResult = [field: string, value: DestinationFieldType];\n  const entries = Object.entries(object);\n  const mapped = entries.map(([sourceField, sourceFieldValue], i) => [\n    sourceField,\n    mapFn(sourceFieldValue, sourceField, i),\n  ]) as MapResult[];\n  // @ts-ignore\n  return Object.fromEntries(mapped);\n};\n\nexport type RemapObjectPropertyType<OriginalType, PropType> = {\n  readonly [Property in keyof OriginalType]: PropType;\n};\n\n/**\n * Returns true if `x` is a power of two\n * @param x\n * @returns True if `x` is a power of two\n */\nexport const isPowerOfTwo = (x: number) => Math.log2(x) % 1 === 0;\n\n/**\n * Returns the relative difference from the `initial` value\n * ```js\n * const rel = relativeDifference(100);\n * rel(100); // 1\n * rel(150); // 1.5\n * rel(50);  // 0.5\n * ```\n *\n * The code for this is simple:\n * ```js\n * const relativeDifference = (initial) => (v) => v/initial\n * ```\n * @param {number} initial\n * @returns\n */\nexport const relativeDifference = (initial: number) => (v: number) =>\n  v / initial;\n\n// try {\n//   if (typeof window !== `undefined`) {\n//     //eslint-disable-next-line functional/immutable-data,@typescript-eslint/no-explicit-any\n//     (window as any).ixfx = {...(window as any).ixfx, clamp, clampIndex, flip, interpolate, interpolateAngle, proportion, relativeDifference, scale, scalePercent, wrap, wrapInteger, wrapRange};\n//   }\n// } catch { /* no-op */ }\n\n/**\n * Returns a field on object `o` by a dotted path.\n * ```\n * const d = {\n *  accel: {x: 1, y: 2, z: 3},\n *  gyro:  {x: 4, y: 5, z: 6}\n * };\n * getFieldByPath(d, `accel.x`); // 1\n * getFieldByPath(d, `gyro.z`);  // 6\n * getFieldByPath(d, `gyro`);    // {x:4, y:5, z:6}\n * getFieldByPath(d, ``);        // Returns original object\n * ```\n *\n * If a field does not exist, `undefined` is returned.\n * Use {@link getFieldPaths} to get a list of paths.\n *\n * Throws if `o` is not an object.\n * @param o\n * @param path\n * @returns\n */\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const getFieldByPath = (o: any, path: string = ``): any | undefined => {\n  if (o === null) throw new Error(`Parameter 'o' is null`);\n  if (typeof o !== 'object') {\n    throw new Error(`Parameter 'o' is not an object. Got: ${typeof o}`);\n  }\n  if (path.length === 0) return o;\n  if (path in o) {\n    return o[path];\n  } else {\n    const start = untilMatch(path, `.`);\n    if (start in o) {\n      return getFieldByPath(o[start], path.substring(start.length + 1));\n    } else {\n      return undefined;\n    }\n  }\n};\n\n/**\n * Returns a list of paths for all the fields on `o`\n * ```\n * const d = {\n *  accel: {x: 1, y: 2, z: 3},\n *  gyro:  {x: 4, y: 5, z: 6}\n * };\n * const paths = getFieldPaths(d);\n * // Yields [ `accel.x`, `accel.y`,`accel.z`,`gyro.x`,`gyro.y`,`gyro.z` ]\n * ```\n *\n * Use {@link getFieldByPath} to fetch data by this 'path' string.\n *\n * If object is _null_, and empty array is returned.\n * @param o\n * @returns\n */\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const getFieldPaths = (o: any): readonly string[] => {\n  if (o === null) return [];\n  if (typeof o !== 'object') {\n    throw new Error(`Parameter o should be an object. Got: ${typeof o}`);\n  }\n  const paths: string[] = [];\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const probe = (o: any, prefix = ``) => {\n    if (typeof o === `object`) {\n      const keys = Object.keys(o);\n      if (prefix.length > 0) prefix += `.`;\n      keys.forEach((k) => probe(o[k], prefix + k));\n    } else {\n      //eslint-disable-next-line functional/immutable-data\n      paths.push(prefix);\n    }\n  };\n  probe(o);\n  return paths;\n};\n\n/**\n * Rounds `v` up to the nearest multiple of `multiple`\n * ```\n * roundMultiple(19, 20); // 20\n * roundMultiple(21, 20); // 40\n * ```\n * @param v\n * @param multiple\n * @returns\n */\nexport const roundUpToMultiple = (v: number, multiple: number): number => {\n  guardNumber(v, `nonZero`, `v`);\n  guardNumber(multiple, `nonZero`, `muliple`);\n  return Math.ceil(v / multiple) * multiple;\n};\n\nexport type ToString<V> = (itemToMakeStringFor: V) => string;\n\n/**\n * Function that returns true if `a` and `b` are considered equal\n */\nexport type IsEqual<V> = (a: V, b: V) => boolean;\n\n/**\n * Default comparer function is equiv to checking `a === b`\n */\nexport const isEqualDefault = <V>(a: V, b: V): boolean => a === b;\n\n/**\n * Comparer returns true if string representation of `a` and `b` are equal.\n * Uses `toStringDefault` to generate a string representation (`JSON.stringify`)\n * @returns True if the contents of `a` and `b` are equal\n */\nexport const isEqualValueDefault = <V>(a: V, b: V): boolean => {\n  // ✔ UNIT TESTED\n  if (a === b) return true; // Object references are the same, or string values are the same\n  return toStringDefault(a) === toStringDefault(b); // String representations are the same\n};\n\n/**\n * A default converter to string that uses JSON.stringify if its an object, or the thing itself if it's a string\n */\nexport const toStringDefault = <V>(itemToMakeStringFor: V): string =>\n  typeof itemToMakeStringFor === `string`\n    ? itemToMakeStringFor\n    : JSON.stringify(itemToMakeStringFor);\n\nexport const runningiOS = () =>\n  [\n    `iPad Simulator`,\n    `iPhone Simulator`,\n    `iPod Simulator`,\n    `iPad`,\n    `iPhone`,\n    `iPod`,\n  ].includes(navigator.platform) ||\n  // iPad on iOS 13 detection\n  (navigator.userAgent.includes(`Mac`) && `ontouchend` in document);\n\nexport type CompareResult = number; // 0 | 1 | -1;\nexport type Comparer<V> = (a: V, b: V) => CompareResult;\n\n/**\n * Sort numbers in ascending order.\n *\n * ```js\n * [10, 4, 5, 0].sort(numericComparer);\n * // Yields: [0, 4, 5, 10]\n * [10, 4, 5, 0].sort(comparerInverse(numericComparer));\n * // Yields: [ 10, 5, 4, 0]\n * ```\n * @param x\n * @param y\n * @returns\n */\nexport const numericComparer = (x: number, y: number): CompareResult => {\n  // ✔️ Unit tested\n  if (x === y) return 0;\n  if (x > y) return 1;\n  return -1;\n};\n\n// /**\n//  * Sorts numbers in descending order\n//  * @param x\n//  * @param y\n//  * @returns\n//  */\n// export const numericComparerInverse = (x: number, y: number): CompareResult => {\n//   // ✔️ Unit tested\n//   if (x === y) return 0;\n//   if (x > y) return -1;\n//   return 1;\n// };\n\n/**\n * Default sort comparer, following same sematics as Array.sort.\n * Consider using {@link defaultComparer} to get more logical sorting of numbers.\n *\n * Note: numbers are sorted in alphabetical order, eg:\n * ```js\n * [ 10, 20, 5, 100 ].sort(jsComparer); // same as .sort()\n * // Yields: [10, 100, 20, 5]\n * ```\n * @param x\n * @param y\n * @returns\n */\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const jsComparer = (x: any, y: any): CompareResult => {\n  // ✔️ Unit tested\n\n  // Via https://stackoverflow.com/questions/47334234/how-to-implement-array-prototype-sort-default-compare-function\n  if (x === undefined && y === undefined) return 0;\n  if (x === undefined) return 1;\n  if (y === undefined) return -1;\n\n  const xString = defaultToString(x);\n  const yString = defaultToString(y);\n\n  if (xString < yString) return -1;\n  if (xString > yString) return 1;\n  return 0;\n};\n\n// export const jsComparerInverse = (x: any, y: any): CompareResult =>\n//   jsComparer(x, y) * -1;\n\n/**\n * Compares numbers by numeric value, otherwise uses the default\n * logic of string comparison.\n *\n * Is an ascending sort:\n *  b, a, c -> a, b, c\n *  10, 5, 100 -> 5, 10, 100\n * @param x\n * @param y\n * @see {@link comparerInverse} Inverted order\n * @returns\n */\nexport const defaultComparer = (x: any, y: any): CompareResult => {\n  if (typeof x === `number` && typeof y === `number`) {\n    return numericComparer(x, y);\n  }\n  return jsComparer(x, y);\n};\n\n// /**\n//  * Compares numbers by numeric value, otherwise uses the default\n//  * logic of string comparison.\n//  *\n//  * Is an descending sort:\n//  *  b, a, c -> c, a, b\n//  *  10, 5, 100 -> 100, 10, 5\n//  * @param x\n//  * @param y\n//  * @returns\n//  * @see {@link defaultComparer} Asending\n//  */\n// export const defaultComparerInverse = (x: any, y: any): CompareResult => {\n//   if (typeof x === `number` && typeof y === `number`) {\n//     return numericComparerInverse(x, y);\n//   }\n//   return jsComparerInverse(x, y);\n// };\n\n/**\n * Inverts the source comparer.\n * @param fn\n * @returns\n */\nexport const comparerInverse = <V>(fn: Comparer<V>): Comparer<V> => {\n  return (x: V, y: V) => {\n    const v = fn(x, y);\n    return v * -1;\n  };\n};\n\n/**\n * If values are strings, uses that as the key.\n * Otherwise uses `JSON.stringify`.\n * @param a\n * @returns\n */\nexport const defaultKeyer = <V>(a: V) => {\n  if (typeof a === `string`) {\n    return a;\n  } else {\n    return JSON.stringify(a);\n  }\n};\n\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst defaultToString = (obj: any) => {\n  //ECMA specification: http://www.ecma-international.org/ecma-262/6.0/#sec-tostring\n  if (obj === null) return `null`;\n  if (typeof obj === `boolean` || typeof obj === `number`) {\n    return obj.toString();\n  }\n\n  if (typeof obj === `string`) return obj;\n  if (typeof obj === `symbol`) throw new TypeError();\n  return obj.toString();\n};\n\ntry {\n  if (typeof window !== `undefined`) {\n    //eslint-disable-next-line functional/immutable-data,@typescript-eslint/no-explicit-any\n    (window as any).ixfx = {\n      ...(window as any).ixfx,\n      getFieldByPath,\n      getFieldPaths,\n    };\n  }\n} catch {\n  /* no-op */\n}\n","import { type IsEqual } from './Util.js';\n//export { eachInterval } from './flow/Interval.js';\n\n/**\n * Breaks an iterable into array chunks\n * ```js\n * chunks([1,2,3,4,5,6,7,8,9,10], 3);\n * // Yields [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]\n * ```\n * @param it\n * @param size\n */\n//eslint-disable-next-line func-style\nexport async function* chunks<V>(it: Iterable<V>, size: number) {\n  // Source: https://surma.github.io/underdash/\n  //eslint-disable-next-line functional/no-let\n  let buffer = [];\n  for await (const v of it) {\n    //eslint-disable-next-line functional/immutable-data\n    buffer.push(v);\n    if (buffer.length === size) {\n      yield buffer;\n      buffer = [];\n    }\n  }\n  if (buffer.length > 0) yield buffer;\n}\n\n/**\n * Return concatenation of iterators\n * @param its\n */\n//eslint-disable-next-line func-style\nexport async function* concat<V>(...its: readonly Iterable<V>[]) {\n  // Source: https://surma.github.io/underdash/\n  for await (const it of its) yield* it;\n}\n\n/**\n * Drops elements that do not meet the predicate `f`.\n * ```js\n * dropWhile([1, 2, 3, 4], e => e < 3);\n * returns [3, 4]\n * ```\n * @param it\n * @param f\n */\n//eslint-disable-next-line func-style\nexport async function* dropWhile<V>(\n  it: AsyncIterable<V>,\n  f: (v: V) => boolean\n) {\n  // https://surma.github.io/underdash/\n  //const iit = it[Symbol.asyncIterator]();\n  for await (const v of it) {\n    if (!f(v)) {\n      yield v;\n      break;\n    }\n  }\n  yield* it;\n}\n\n/**\n * Returns true if items in two iterables are equal, as\n * determined by the `equality` function.\n * @param it1\n * @param it2\n * @param equality\n * @returns\n */\n//eslint-disable-next-line func-style\nexport async function equals<V>(\n  it1: Iterable<V>,\n  it2: Iterable<V>,\n  equality?: IsEqual<V>\n) {\n  // https://surma.github.io/underdash/\n  const iit1 = it1[Symbol.iterator]();\n  const iit2 = it2[Symbol.iterator]();\n  //eslint-disable-next-line no-constant-condition\n  while (true) {\n    const i1 = await iit1.next(),\n      i2 = await iit2.next();\n    if (equality !== undefined) {\n      if (!equality(i1.value, i2.value)) return false;\n    } else if (i1.value !== i2.value) return false;\n    if (i1.done || i2.done) return i1.done && i2.done;\n  }\n}\n\n/**\n * Returns _true_ if `f` returns _true_ for\n * every item in iterable\n * @param it\n * @param f\n * @returns\n */\n//eslint-disable-next-line func-style\nexport async function every<V>(it: Iterable<V>, f: (v: V) => boolean) {\n  // https://surma.github.io/underdash/\n  //eslint-disable-next-line functional/no-let\n  let ok = true;\n  for await (const v of it) ok = ok && f(v);\n  return ok;\n}\n\n/**\n * Yields `v` for each item within `it`.\n *\n * ```js\n * fill([1, 2, 3], 0);\n * // Yields: [0, 0, 0]\n * ```\n * @param it\n * @param v\n */\n//eslint-disable-next-line func-style\nexport async function* fill<V>(it: AsyncIterable<V>, v: V) {\n  // https://surma.github.io/underdash/\n  for await (const _ of it) yield v;\n}\n\n/**\n * Filters an iterable, returning items which match `f`.\n *\n * ```js\n * filter([1, 2, 3, 4], e => e % 2 == 0);\n * returns [2, 4]\n * ```\n * @param it\n * @param f\n */\n//eslint-disable-next-line func-style\nexport async function* filter<V>(it: AsyncIterable<V>, f: (v: V) => boolean) {\n  // https://surma.github.io/underdash/\n  for await (const v of it) {\n    if (!f(v)) continue;\n    yield v;\n  }\n}\n\n/**\n * Returns first item from iterable `it` that matches predicate `f`\n * ```js\n * find([1, 2, 3, 4], e => e > 2);\n * // Yields: 3\n * ```\n * @param it\n * @param f\n * @returns\n */\n//eslint-disable-next-line func-style\nexport async function find<V>(it: AsyncIterable<V>, f: (v: V) => boolean) {\n  // https://surma.github.io/underdash/\n  for await (const v of it) {\n    if (f(v)) return v;\n  }\n}\n\n/**\n * Returns a 'flattened' copy of array, un-nesting arrays one level\n * ```js\n * flatten([1, [2, 3], [[4]]]);\n * // Yields: [1, 2, 3, [4]];\n * ```\n * @param it\n */\n//eslint-disable-next-line func-style\nexport async function* flatten<V>(it: AsyncIterable<V>) {\n  // https://surma.github.io/underdash/\n  for await (const v of it) {\n    //eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (Symbol.asyncIterator in (v as any)) {\n      // @ts-ignore\n      yield* v;\n    } else {\n      yield v;\n    }\n  }\n}\n\n/**\n * Execute function `f` for each item in iterable\n * @param it\n * @param f\n */\n//eslint-disable-next-line func-style\nexport async function forEach<V>(it: AsyncIterable<V>, f: (v: V) => boolean) {\n  // https://surma.github.io/underdash/\n  for await (const v of it) f(v);\n}\n\n/**\n * Maps an iterable of type `V` to type `X`.\n * ```js\n * map([1, 2, 3], e => e*e)\n * returns [1, 4, 9]\n * ```\n * @param it\n * @param f\n */\n//eslint-disable-next-line func-style\nexport async function* map<V, X>(it: AsyncIterable<V>, f: (v: V) => X) {\n  // https://surma.github.io/underdash/\n\n  for await (const v of it) {\n    yield f(v);\n  }\n}\n\n/**\n * Returns the maximum seen of an iterable\n * ```js\n * min([\n *  {i:0,v:1},\n *  {i:1,v:9},\n *  {i:2,v:-2}\n * ], (a, b) => a.v > b.v);\n * // Yields: {i:1, v:-9}\n * ```\n * @param it Iterable\n * @param gt Should return _true_ if `a` is greater than `b`.\n * @returns\n */\n//eslint-disable-next-line func-style\nexport async function max<V>(it: AsyncIterable<V>, gt = (a: V, b: V) => a > b) {\n  // https://surma.github.io/underdash/\n\n  //eslint-disable-next-line functional/no-let\n  let max;\n\n  for await (const v of it) {\n    if (!max) {\n      max = v;\n      continue;\n    }\n    max = gt(max, v) ? max : v;\n  }\n  return max;\n}\n\n/**\n * Returns the minimum seen of an iterable\n * ```js\n * min([\n *  {i:0,v:1},\n *  {i:1,v:9},\n *  {i:2,v:-2}\n * ], (a, b) => a.v > b.v);\n * // Yields: {i:2, v:-2}\n * ```\n * @param it Iterable\n * @param gt Should return _true_ if `a` is greater than `b`.\n * @returns\n */\n//eslint-disable-next-line func-style\nexport async function min<V>(it: AsyncIterable<V>, gt = (a: V, b: V) => a > b) {\n  // https://surma.github.io/underdash/\n  //eslint-disable-next-line functional/no-let\n  let min;\n\n  for await (const v of it) {\n    if (!min) {\n      min = v;\n      continue;\n    }\n    min = gt(min, v) ? v : min;\n  }\n  return min;\n}\n\n/**\n * Returns count from `start` for a given length\n * ```js\n * range(-5, 10);\n * // Yields: [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4]\n * ```\n * @param start\n * @param len\n */\n//eslint-disable-next-line func-style\nexport async function* range(start: number, len: number) {\n  // https://surma.github.io/underdash/\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < len; i++) {\n    yield start++;\n  }\n  //for (let i=len;len > 0; len--) yield start++;\n}\n\n/**\n * Reduce for iterables\n * ```js\n * reduce([1, 2, 3], (acc, cur) => acc + cur, 0);\n * // Yields: 6\n * ```\n * @param it Iterable\n * @param f Function\n * @param start Start value\n * @returns\n */\n//eslint-disable-next-line func-style\nexport async function reduce<V>(\n  it: AsyncIterable<V>,\n  f: (acc: V, current: V) => V,\n  start: V\n) {\n  // https://surma.github.io/underdash/\n\n  for await (const v of it) start = f(start, v);\n  return start;\n}\n\n/**\n * Returns a section from an iterable\n * @param it Iterable\n * @param start Start index\n * @param end End index (or until completion)\n */\n//eslint-disable-next-line func-style\nexport async function* slice<V>(\n  it: AsyncIterable<V>,\n  start = 0,\n  end = Number.POSITIVE_INFINITY\n) {\n  // https://surma.github.io/underdash/\n  const iit = it[Symbol.asyncIterator]();\n\n  for (; start > 0; start--, end--) await iit.next();\n\n  for await (const v of it) {\n    if (end-- > 0) {\n      yield v;\n    } else {\n      break;\n    }\n  }\n}\n\n/**\n * Returns true the first time `f` returns true. Useful for spotting any occurrence of\n * data, and exiting quickly\n * ```js\n * some([1, 2, 3, 4], e => e % 3 === 0);\n * // Yields: true\n * ```\n * @param it Iterable\n * @param f Filter function\n * @returns\n */\n//eslint-disable-next-line func-style\nexport async function some<V>(it: AsyncIterable<V>, f: (v: V) => boolean) {\n  // https://surma.github.io/underdash/\n\n  for await (const v of it) {\n    if (f(v)) return true;\n  }\n  return false;\n}\n\n/**\n * Returns items for which the filter function returns _true_\n * ```js\n * takeWhile([ 1, 2, 3, 4 ], e => e < 3);\n * // Yields: [ 1, 2 ]\n * ```\n * @param it Iterable\n * @param f Filter function\n * @returns\n */\n//eslint-disable-next-line func-style\nexport async function* takeWhile<V>(\n  it: AsyncIterable<V>,\n  f: (v: V) => boolean\n) {\n  // https://surma.github.io/underdash/\n\n  for await (const v of it) {\n    if (!f(v)) return;\n    yield v;\n  }\n}\n\n/**\n * Returns an array of values from an iterator.\n *\n * ```js\n * const data = await toArray(adsrIterable(opts, 10));\n * ```\n *\n * Note: If the iterator is infinite, be sure to provide a `count` or the function\n * will never return.\n *\n * @param it Asynchronous iterable\n * @param count Number of items to return, by default all.\n * @returns\n */\n//eslint-disable-next-line func-style\nexport async function toArray<V>(\n  it: AsyncIterable<V>,\n  count = Infinity\n): Promise<readonly V[]> {\n  // https://2ality.com/2016/10/asynchronous-iteration.html\n  const result = [];\n  const iterator = it[Symbol.asyncIterator]();\n\n  while (result.length < count) {\n    const { value, done } = await iterator.next();\n    if (done) break;\n    //eslint-disable-next-line functional/immutable-data\n    result.push(value);\n  }\n  return result;\n}\n\n/**\n * Returns unique items from iterables, given a particular key function\n * ```js\n * unique([{i:0,v:2},{i:1,v:3},{i:2,v:2}], e => e.v);\n * Yields:  [{i:0,v:2},{i:1,v:3}]\n * @param it\n * @param f\n */\n//eslint-disable-next-line func-style\nexport async function* unique<V>(\n  it: AsyncIterable<V>,\n  f: (id: V) => V = (id) => id\n) {\n  // https://surma.github.io/underdash/\n  const buffer = [];\n\n  for await (const v of it) {\n    const fv = f(v);\n    if (buffer.indexOf(fv) !== -1) continue;\n    //eslint-disable-next-line functional/immutable-data\n    buffer.push(fv);\n    yield v;\n  }\n}\n\n/**\n * Combine same-positioned items from several iterables\n * ```js\n * zip( [1, 2, 3], [4, 5, 6], [7, 8, 9] );\n * Yields: [ [1, 4, 7], [2, 5, 8], [3, 6, 9] ]\n * ```\n * @param its\n * @returns\n */\n//eslint-disable-next-line func-style\nexport async function* zip<V>(...its: readonly AsyncIterable<V>[]) {\n  // https://surma.github.io/underdash/\n  const iits = its.map((it) => it[Symbol.asyncIterator]());\n\n  while (true) {\n    const vs = await Promise.all(iits.map((it) => it.next()));\n    if (vs.some((v) => v.done)) return;\n    yield vs.map((v) => v.value);\n  }\n}\n","import { getOrGenerateSync } from './collections/map/index.js';\nimport { goldenAngleColour } from './visual/Colour.js';\n\nexport type LogKind = 'info' | 'debug' | 'error' | 'warn';\nexport type LogMsg = {\n  readonly kind?: LogKind;\n  readonly msg: any;\n  readonly category?: string;\n};\n\nexport type LogFn = (msg: LogMsg | string) => void;\n\n/**\n * Either a flag for default console logging, or a simple log function\n */\nexport type LogOption = boolean | LogFn;\n\n/**\n * Resolve a LogOption to a function\n * @param l\n * @returns\n */\nexport const resolveLogOption = (\n  l?: LogOption,\n  defaults: { readonly category?: string; readonly kind?: string } = {}\n): LogFn => {\n  if (typeof l === 'undefined' || (typeof l === 'boolean' && l === false)) {\n    return (_: LogMsg | string) => {\n      /** no-op */\n    };\n  }\n  const defaultCat = defaults.category ?? '';\n  const defaultKind = defaults.kind ?? undefined;\n\n  if (typeof l === 'boolean' && l === true) {\n    return (msgOrString: LogMsg | string) => {\n      const m =\n        typeof msgOrString === 'string' ? { msg: msgOrString } : msgOrString;\n      const kind = m.kind ?? defaultKind;\n      const category = m.category ?? defaultCat;\n      //eslint-disable-next-line functional/no-let\n      let msg = m.msg;\n      if (category) msg = `[${category}] ${msg}`;\n      switch (kind) {\n        case 'error':\n          console.error(msg);\n          break;\n        case `warn`:\n          console.warn(msg);\n          break;\n        case `info`:\n          console.info(msg);\n          break;\n        default:\n          console.log(msg);\n      }\n    };\n  }\n  return l;\n};\n\n//eslint-disable-next-line functional/no-let\nlet logColourCount = 0;\nconst logColours = getOrGenerateSync(new Map<string, string>(), () =>\n  goldenAngleColour(++logColourCount)\n);\n\n/**\n * Returns a bundled collection of {@link logger}s\n *\n * ```js\n * const con = logSet(`a`);\n * con.log(`Hello`);  // console.log(`a Hello`);\n * con.warn(`Uh-oh`); // console.warn(`a Uh-oh`);\n * con.error(`Eek!`); // console.error(`a Eek!`);\n * ```\n *\n * By default each prefix is assigned a colour. To use\n * another logic, provide the `colourKey` parameter.\n *\n * ```js\n * // Both set of loggers will use same colour\n * const con = logSet(`a`, true, `system`);\n * const con2 = logSet(`b`, true, `system`);\n * ```\n * @param prefix Prefix for log messages\n * @param verbose True by default. If false, log() messages are a no-op\n * @param colourKey If specified, log messages will be coloured by this key instead of prefix (default)\n * @returns\n */\nexport const logSet = (prefix: string, verbose = true, colourKey?: string) => {\n  if (verbose) {\n    return {\n      log: logger(prefix, `log`, colourKey),\n      warn: logger(prefix, `warn`, colourKey),\n      error: logger(prefix, `error`, colourKey),\n    };\n  } else {\n    return {\n      //eslint-disable-next-line @typescript-eslint/no-explicit-any\n      log: (_: any) => {\n        /** no-op */\n      },\n      warn: logger(prefix, `warn`, colourKey),\n      error: logger(prefix, `error`, colourKey),\n    };\n  }\n};\n\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type Logger = (m: any) => void;\nexport type LogSet = {\n  readonly log: Logger;\n  readonly warn: Logger;\n  readonly error: Logger;\n};\n\n/**\n * Returns a console logging function which prefixes messages. This is\n * useful for tracing messages from different components. Each prefix\n * is assigned a colour, further helping to distinguish messages.\n *\n * Use {@link logSet} to get a bundled set.\n *\n * ```\n * // Initialise once\n * const log = logger(`a`);\n * const error = logger(`a`, `error`);\n * const warn = logger(`a`, `warn);\n *\n * // And then use\n * log(`Hello`);    // console.log(`a Hello`);\n * error(`Uh-oh`);  // console.error(`a Uh-oh`);\n * warn(`Eek!`);    // console.warn(`a Eeek!`);\n * ```\n *\n * Provide the `colourKey` parameter to make log messages\n * be coloured the same, even though the prefix is different.\n * ```js\n * // Both loggers will use the same colour because they\n * // share the colour key `system`\n * const log = logger(`a`,`log`,`system`);\n * const log2 = logger(`b`, `log`, `system`);\n * ```\n * @param prefix\n * @param kind\n * @param colourKey Optional key to colour log lines by instead of prefix\n * @returns\n */\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const logger =\n  (\n    prefix: string,\n    kind: `log` | `warn` | `error` = `log`,\n    colourKey?: string\n  ): Logger =>\n  (m: any) => {\n    if (m === undefined) {\n      m = `(undefined)`;\n    } else if (typeof m === `object`) {\n      m = JSON.stringify(m);\n    }\n\n    const colour = colourKey ?? prefix;\n    switch (kind) {\n      case `log`:\n        console.log(`%c${prefix} ${m}`, `color: ${logColours(colour)}`);\n        break;\n      case `warn`:\n        console.warn(prefix, m);\n        break;\n      case `error`:\n        console.error(prefix, m);\n        break;\n    }\n  };\n\nexport const getErrorMessage = (ex: Error | unknown): string => {\n  if (typeof ex === 'string') return ex;\n  if (ex instanceof Error) {\n    return ex.message;\n  }\n  return ex as string;\n};\n","export type GetOrGenerate<K, V, Z> = (key: K, args?: Z) => Promise<V>;\nexport { create as expiringMap, ExpiringMap } from './ExpiringMap.js';\nexport type {\n  ExpiringMapEvent,\n  ExpiringMapEvents,\n  Opts as ExpiringMapOpts,\n} from './ExpiringMap.js';\n\nexport type { IMapOf } from './IMapOf.js';\nexport { immutable, type IMapImmutable } from './Map.js';\nexport { mutable, type IMapMutable } from './MapMutable.js';\nexport { ofSetMutable } from './MapOfSetMutable.js';\nexport { ofCircularMutable } from './MapOfCircularMutable.js';\nexport type { MapCircularOpts } from './MapOfCircularMutable.js';\nexport type { IMapOfMutable } from './IMapOfMutable.js';\nexport type { IMappish, IWithEntries } from './IMappish.js';\nexport type { MapArrayOpts } from './MapOfArrayMutable.js';\nexport * from './MapMulti.js';\nexport * from './MapFns.js';\n","/* eslint-disable */\nimport type { ISimpleEventEmitter, Listener } from './ISimpleEventEmitter.js';\nimport { ofSimpleMutable } from './collections/map/MapOfSimpleMutable.js';\n\nexport type { ISimpleEventEmitter, Listener };\n// type FlowSource = {\n//   name:string,\n//   dispose():void,\n//   input:FlowSink,\n// };\n\n// type FlowHandler = (args?:any) => void;\n\n// interface FlowSink {\n//  [key:string]: FlowHandler;\n// }\n\n// export type Debouncer = {\n//   reset:()=>void\n//   dispose:()=>void\n// }\n\n// const sinkify = (handler:FlowHandler): FlowSink => ({ '*': handler });\n\n// export const debounceFactory = (sink:FlowSink, opts:{timeoutMs:number}): FlowSource => {\n//   let timer:number|undefined;\n\n//   const input = sinkify(() => {\n//     if (timer) window.clearTimeout(timer);\n//     timer = window.setTimeout(() => { sink[`*`](null); }, opts.timeoutMs);\n//   });\n\n//   const dispose = () => {\n//     if (timer) window.clearTimeout(timer);\n//     timer = undefined;\n//   };\n\n//   return { input, dispose, name:`debounce` };\n// };\n\n// export const debounce = (triggered:()=>void, timeoutMs:number):Debouncer => {\n//   const opts = { timeoutMs: timeoutMs};\n\n//   const sink:FlowSink = {\n//     '*': () => {\n//       triggered();\n//     }\n//   };\n//   const source = debounceFactory(sink, opts);\n//   const reset = () => {\n//     source.input[`*`](null);\n//   };\n//   return {...source, reset};\n// };\n\nexport class SimpleEventEmitter<Events> implements ISimpleEventEmitter<Events> {\n  readonly #listeners = ofSimpleMutable<Listener<Events>>();\n\n  /**\n   * Fire event\n   * @private\n   * @param type Type of event\n   * @param args Arguments for event\n   * @returns\n   */\n  protected fireEvent<K extends keyof Events>(type: K, args: Events[K]) {\n    const listeners = this.#listeners.get(type as string);\n    //console.log(`Firing ${type as string}`);\n    for (const l of listeners) {\n      l(args, this);\n    }\n  }\n\n  /**\n   * Adds event listener\n   *\n   * @template K\n   * @param {K} type\n   * @param {Listener<Events>} listener\n   * @memberof SimpleEventEmitter\n   */\n  addEventListener<K extends keyof Events>(\n    type: K,\n    listener: (ev: Events[K], sender: SimpleEventEmitter<Events>) => void\n  ): void {\n    // (this: any, ev: Events[K]) => any): void {\n    this.#listeners.addKeyedValues(\n      type as string,\n      listener as Listener<Events>\n    );\n  }\n\n  /**\n   * Remove event listener\n   *\n   * @param {Listener<Events>} listener\n   * @memberof SimpleEventEmitter\n   */\n  removeEventListener<K extends keyof Events>(\n    type: K,\n    listener: (ev: Events[K], sender: SimpleEventEmitter<Events>) => void\n  ) {\n    // listener: Listener<Events>): void {\n    this.#listeners.deleteKeyValue(\n      type as string,\n      listener as Listener<Events>\n    );\n  }\n\n  /**\n   * Clear all event listeners\n   * @private\n   * @memberof SimpleEventEmitter\n   */\n  clearEventListeners() {\n    this.#listeners.clear();\n  }\n}\n\n// type TestEventMap = {\n//   readonly change: TestEvent\n//   readonly other: TestEvent2;\n// }\n\n// interface TestEvent2 {\n//   readonly something: string;\n// }\n// interface TestEvent {\n//   readonly blah: boolean;\n// }\n\n// class TestEmitter extends SimpleEventEmitter<TestEventMap> {\n//   constructor() {\n//     super();\n//     this.addEventListener(`change`, (e) => {\n//       e.blah;\n//     });\n//   }\n// }\n\n/*\nexport class Event {\n  public target: any;\n  public type: string;\n  constructor(type: string, target: any) {\n    this.target = target;\n    this.type = type;\n  }\n}\n\nexport class ErrorEvent extends Event {\n  public message: string;\n  public error: Error;\n  constructor(error: Error, target: any) {\n    super('error', target);\n    this.message = error.message;\n    this.error = error;\n  }\n}\n\nexport class CloseEvent extends Event {\n  public code: number;\n  public reason: string;\n  public wasClean = true;\n  constructor(code = 1000, reason = '', target: any) {\n    super('close', target);\n    this.code = code;\n    this.reason = reason;\n  }\n}\nexport interface WebSocketEventMap {\n  close: CloseEvent;\n  error: ErrorEvent;\n  message: MessageEvent;\n  open: Event;\n}\n\nexport interface WebSocketEventListenerMap {\n  close: (event: CloseEvent) => void | {handleEvent: (event: CloseEvent) => void};\n  error: (event: ErrorEvent) => void | {handleEvent: (event: ErrorEvent) => void};\n  message: (event: MessageEvent) => void | {handleEvent: (event: MessageEvent) => void};\n  open: (event: Event) => void | {handleEvent: (event: Event) => void};\n}\n*/\n","// ✔ UNIT TESTED\n\nimport { type IsEqual, isEqualDefault } from '../../Util.js';\nimport type { IMapOf } from './IMapOf.js';\nimport type { IWithEntries } from './IMappish.js';\n\n/**\n * Finds first entry by iterable value. Expects a map with an iterable as values.\n *\n * ```js\n * const map = new Map();\n * map.set('hello', ['a', 'b', 'c']);\n * map.set('there', ['d', 'e', 'f']);\n *\n * const entry = firstEntryByIterablePredicate(map, (value, key) => {\n *  return (value === 'e');\n * });\n * // Entry is: ['there', ['d', 'e', 'f']]\n * ```\n *\n * An alternative is {@link firstEntryByIterableValue} to search by value.\n * @param map Map to search\n * @param predicate Filter function returns true when there is a match of value\n * @returns Entry, or _undefined_ if `filter` function never returns _true_\n */\nexport const firstEntryByIterablePredicate = <K, V>(\n  map: IWithEntries<K, Iterable<V>>,\n  predicate: (value: V, key: K) => boolean\n): readonly [key: K, value: Iterable<V>] | undefined => {\n  for (const e of map.entries()) {\n    const val = e[1];\n    for (const subValue of val) {\n      if (predicate(subValue, e[0])) return e;\n    }\n  }\n};\n\n/**\n * Returns the size of the largest key, or 0 if empty.\n */\nexport const lengthMax = <V>(map: IMapOf<V>): number => {\n  //eslint-disable-next-line functional/no-let\n  let largest: readonly [string, number] = ['', 0];\n  for (const e of map.keysAndCounts()) {\n    if (e[1] > largest[1]) {\n      largest = e;\n    }\n  }\n  return largest[1];\n};\n\n/**\n * Finds first entry by iterable value. Expects a map with an iterable as values.\n *\n * ```js\n * const map = new Map();\n * map.set('hello', ['a', 'b', 'c']);\n * map.set('there', ['d', 'e', 'f']);\n *\n * const entry = firstEntryByIterableValue(map, 'e');\n * // Entry is: ['there', ['d', 'e', 'f']]\n * ```\n *\n * An alternative is {@link firstEntryByIterablePredicate} to search by predicate function.\n * @param map Map to search\n * @param value Value to seek\n * @param isEqual Filter function which checks equality. Uses JS comparer by default.\n * @returns Entry, or _undefined_ if `value` not found.\n */\nexport const firstEntryByIterableValue = <K, V>(\n  map: IWithEntries<K, Iterable<V>>,\n  value: V,\n  isEqual: IsEqual<V> = isEqualDefault\n): readonly [key: K, value: Iterable<V>] | undefined => {\n  for (const e of map.entries()) {\n    const val = e[1];\n    for (const subValue of val) {\n      if (isEqual(subValue, value)) return e;\n    }\n  }\n};\n","import {\n  defaultKeyer,\n  type IsEqual,\n  type ToString,\n  isEqualDefault,\n} from '../../Util.js';\nimport { firstEntryByIterableValue } from './MapMultiFns.js';\n\nexport class MapOfSimpleBase<V> {\n  protected map: Map<string, ReadonlyArray<V>>;\n  protected readonly groupBy;\n  protected valueEq;\n\n  /**\n   * Constructor\n   * @param groupBy Creates keys for values when using `addValue`. By default uses JSON.stringify\n   * @param valueEq Compare values. By default uses JS logic for equality\n   */\n  constructor(\n    groupBy: ToString<V> = defaultKeyer,\n    valueEq: IsEqual<V> = isEqualDefault<V>,\n    initial: [string, readonly V[]][] = []\n  ) {\n    this.groupBy = groupBy;\n    this.valueEq = valueEq;\n    this.map = new Map(initial);\n  }\n  /**\n   * Iterate over all entries\n   */\n  *entriesFlat(): IterableIterator<[key: string, value: V]> {\n    for (const key of this.map.keys()) {\n      for (const value of this.map.get(key)!) {\n        yield [key, value];\n      }\n    }\n  }\n\n  *entries(): IterableIterator<[key: string, value: V[]]> {\n    for (const [k, v] of this.map.entries()) {\n      yield [k, [...v]];\n    }\n  }\n\n  firstKeyByValue(value: V, eq: IsEqual<V> = isEqualDefault) {\n    const e = firstEntryByIterableValue(this, value, eq);\n    if (e) return e[0];\n  }\n\n  /**\n   * Get all values under `key`\n   * @param key\n   * @returns\n   */\n  *get(key: string): IterableIterator<V> {\n    const m = this.map.get(key);\n    if (!m) return;\n    yield* m.values();\n  }\n\n  /**\n   * Iterate over all keys\n   */\n  *keys(): IterableIterator<string> {\n    yield* this.map.keys();\n  }\n\n  /**\n   * Iterate over all values (regardless of key)\n   */\n  *valuesFlat(): IterableIterator<V> {\n    for (const entries of this.map) {\n      yield* entries[1];\n    }\n  }\n\n  /**\n   * Iterate over keys and length of values stored under keys\n   */\n  *keysAndCounts(): IterableIterator<[string, number]> {\n    for (const entries of this.map) {\n      yield [entries[0], entries[1].length];\n    }\n  }\n\n  /**\n   * Returns _true_ if `key` exists\n   * @param key\n   * @returns\n   */\n  //eslint-disable-next-line functional/prefer-tacit\n  has(key: string): boolean {\n    return this.map.has(key);\n  }\n\n  /**\n   * Returns _true_ if `value` exists under `key`.\n   * @param key Key\n   * @param value Value to seek under `key`\n   * @returns _True_ if `value` exists under `key`.\n   */\n  hasKeyValue(key: string, value: V): boolean {\n    const values = this.map.get(key);\n    if (!values) return false;\n    for (const v of values) {\n      if (this.valueEq(v, value)) return true;\n    }\n    return false;\n  }\n\n  /**\n   * Debug dump of contents\n   * @returns\n   */\n  debugString(): string {\n    // eslint-disable-next-line functional/no-let\n    let r = ``;\n    const keys = Array.from(this.map.keys());\n    keys.every((k) => {\n      const v = this.map.get(k);\n      if (v === undefined) return;\n      r += k + ` (${v.length}) = ${JSON.stringify(v)}\\r\\n`;\n    });\n    return r;\n  }\n\n  /**\n   * _True_ if empty\n   */\n  get isEmpty(): boolean {\n    return this.map.size === 0;\n  }\n\n  /**\n   * Return number of values stored under `key`.\n   * Returns 0 if `key` is not found.\n   * @param key\n   * @returns\n   */\n  count(key: string): number {\n    const values = this.map.get(key);\n    if (!values) return 0;\n    return values.length;\n  }\n}\n","import {\n  type ToString,\n  defaultKeyer,\n  type IsEqual,\n  isEqualDefault,\n} from '../../Util.js';\nimport type { IMapOfMutable } from './IMapOfMutable.js';\nimport { MapOfSimpleBase } from './MapOfSimpleBase.js';\n\n/**\n * A simple mutable map of arrays, without events. It can store multiple values\n * under the same key.\n *\n * For a fancier approaches, consider {@link ofArrayMutable}, {@link ofCircularMutable} or {@link ofSetMutable}.\n *\n * @example\n * ```js\n * const m = mapOfSimpleMutable();\n * m.add(`hello`, 1, 2, 3); // Adds numbers under key `hello`\n * m.delete(`hello`);       // Deletes everything under `hello`\n *\n * const hellos = m.get(`hello`); // Get list of items under `hello`\n * ```\n *\n * Constructor takes a `groupBy` parameter, which yields a string key for a value. This is the\n * basis by which values are keyed when using `addValues`.\n *\n * Constructor takes a `valueEq` parameter, which compares values. This is used when checking\n * if a value exists under a key, for example.\n * @template V Type of items\n */\nexport class MapOfSimpleMutable<V>\n  extends MapOfSimpleBase<V>\n  implements IMapOfMutable<V>\n{\n  addKeyedValues(key: string, ...values: ReadonlyArray<V>) {\n    const existing = this.map.get(key);\n    if (existing === undefined) {\n      this.map.set(key, values);\n    } else {\n      this.map.set(key, [...existing, ...values]);\n    }\n  }\n\n  /**\n   * Adds a value, automatically extracting a key via the\n   * `groupBy` function assigned in the constructor options.\n   * @param values Adds several values\n   */\n  addValue(...values: ReadonlyArray<V>) {\n    for (const v of values) {\n      const key = this.groupBy(v);\n      this.addKeyedValues(key, v);\n    }\n  }\n\n  /**\n   * Delete `value` under a particular `key`\n   * @param key\n   * @param value\n   * @returns _True_ if `value` was found under `key`\n   */\n  deleteKeyValue(key: string, value: V): boolean {\n    const existing = this.map.get(key);\n    if (existing === undefined) return false;\n    const without = existing.filter((i) => !this.valueEq(i, value));\n    this.map.set(key, without);\n    return without.length < existing.length;\n  }\n\n  /**\n   * Deletes `value` regardless of key.\n   *\n   * Uses the constructor-defined equality function.\n   * @param value Value to delete\n   * @returns\n   */\n  deleteByValue(value: V): boolean {\n    //eslint-disable-next-line functional/no-let\n    let del = false;\n    for (const entries of [...this.map.entries()]) {\n      for (const values of entries[1]) {\n        if (this.valueEq(values, value)) {\n          del = true;\n          this.deleteKeyValue(entries[0], value);\n        }\n      }\n    }\n    return del;\n  }\n\n  /**\n   * Deletes all values under `key`,\n   * @param key\n   * @returns _True_ if `key` was found and values stored\n   */\n  delete(key: string): boolean {\n    const values = this.map.get(key);\n    if (!values) return false;\n    if (values.length === 0) return false;\n    this.map.delete(key);\n    return true;\n  }\n\n  /**\n   * Clear contents\n   */\n  clear() {\n    this.map.clear();\n  }\n}\n\n/**\n * A simple mutable map of arrays, without events. It can store multiple values\n * under the same key.\n *\n * For a fancier approaches, consider {@link ofArrayMutable}, {@link ofCircularMutable} or {@link ofSetMutable}.\n *\n * @example\n * ```js\n * const m = mapOfSimpleMutable();\n * m.add(`hello`, 1, 2, 3); // Adds numbers under key `hello`\n * m.delete(`hello`);       // Deletes everything under `hello`\n *\n * const hellos = m.get(`hello`); // Get list of items under `hello`\n * ```\n *\n * @template V Type of items\n * @returns New instance\n */\nexport const ofSimpleMutable = <V>(\n  groupBy: ToString<V> = defaultKeyer,\n  valueEq: IsEqual<V> = isEqualDefault<V>\n): IMapOfMutable<V> => new MapOfSimpleMutable<V>(groupBy, valueEq);\n","import {\n  toStringDefault,\n  defaultComparer,\n  type IsEqual,\n  isEqualDefault,\n  type ToString,\n} from '../../Util.js';\nimport type { IMappish, IWithEntries } from './IMappish.js';\nimport type { GetOrGenerate } from './index.js';\n\n// ✔ UNIT TESTED!\n/**\n * Gets the closest integer key to `target` in `data`.\n * * Requires map to have numbers as keys, not strings\n * * Math.round is used for rounding `target`.\n *\n * Examples:\n * ```js\n * // Assuming numeric keys 1, 2, 3, 4 exist:\n * getClosestIntegerKey(map, 3);    // 3\n * getClosestIntegerKey(map, 3.1);  // 3\n * getClosestIntegerKey(map, 3.5);  // 4\n * getClosestIntegerKey(map, 3.6);  // 4\n * getClosestIntegerKey(map, 100);  // 4\n * getClosestIntegerKey(map, -100); // 1\n * ```\n * @param data Map\n * @param target Target value\n * @returns\n */\nexport const getClosestIntegerKey = (\n  data: ReadonlyMap<number, any>,\n  target: number\n): number => {\n  target = Math.round(target);\n  if (data.has(target)) {\n    return target;\n  } else {\n    //eslint-disable-next-line functional/no-let\n    let offset = 1;\n    while (offset < 1000) {\n      if (data.has(target - offset)) return target - offset;\n      else if (data.has(target + offset)) return target + offset;\n      offset++;\n    }\n    throw new Error(`Could not find target ${target}`);\n  }\n};\n\n/**\n * Returns true if map contains `value` under `key`, using `comparer` function. Use {@link hasAnyValue} if you don't care\n * what key value might be under.\n *\n * Having a comparer function is useful to check by value rather than object reference.\n *\n * @example Find key value based on string equality\n * ```js\n * hasKeyValue(map,`hello`, `samantha`, (a, b) => a === b);\n * ```\n * @param map Map to search\n * @param key Key to search\n * @param value Value to search\n * @param comparer Function to determine match\n * @returns True if key is found\n */\nexport const hasKeyValue = <K, V>(\n  map: ReadonlyMap<K, V>,\n  key: K,\n  value: V,\n  comparer: IsEqual<V>\n): boolean => {\n  if (!map.has(key)) return false;\n  const values = Array.from(map.values());\n  return values.some((v) => comparer(v, value));\n};\n\n/**\n * Deletes all key/values from map where value matches `value`,\n * with optional comparer. Mutates map.\n *\n * ```js\n * import { Maps } from \"https://unpkg.com/ixfx/dist/collections.js\"\n *\n * // Compare fruits based on their colour property\n * const colourComparer = (a, b) => a.colour === b.colour;\n *\n * // Deletes all values where .colour = `red`\n * Maps.deleteByValue(map, { colour: `red` }, colourComparer);\n * ```\n * @param map\n * @param value\n * @param comparer\n */\nexport const deleteByValue = <K, V>(\n  map: ReadonlyMap<K, V>,\n  value: V,\n  comparer: IsEqual<V> = isEqualDefault\n) => {\n  for (const e of Object.entries(map)) {\n    if (comparer(e[1], value)) {\n      // @ts-ignore\n      map.delete(e[0]);\n    }\n  }\n};\n\n/**\n * Returns a function that fetches a value from a map, or generates and sets it if not present.\n * Undefined is never returned, because if `fn` yields that, an error is thrown.\n *\n * See {@link getOrGenerateSync} for a synchronous version.\n *\n * ```\n * const m = getOrGenerate(new Map(), (key) => {\n *  return key.toUppercase();\n * });\n *\n * // Not contained in map, so it will run the uppercase function,\n * // setting the value to the key 'hello'.\n * const v = await m(`hello`);  // Yields 'HELLO'\n * const v1 = await m(`hello`); // Value exists, so it is returned ('HELLO')\n * ```\n *\n */\n//eslint-disable-next-line functional/prefer-readonly-type\nexport const getOrGenerate =\n  <K, V, Z>(\n    map: IMappish<K, V>,\n    fn: (key: K, args?: Z) => Promise<V> | V\n  ): GetOrGenerate<K, V, Z> =>\n  async (key: K, args?: Z): Promise<V> => {\n    //eslint-disable-next-line functional/no-let\n    let value = map.get(key);\n    if (value !== undefined) return Promise.resolve(value);\n    value = await fn(key, args);\n    if (value === undefined) throw new Error(`fn returned undefined`);\n    map.set(key, value);\n    return value;\n  };\n\n/**\n * Finds first entry by iterable value. Expects a map with an iterable as values.\n *\n * ```js\n * const map = new Map();\n * map.set('hello', 'a');\n * map.set('there', 'b');\n *\n * const entry = firstEntryByIterablePredicate(map, (value, key) => {\n *  return (value === 'b');\n * });\n * // Entry is: ['there', 'b']\n * ```\n *\n * An alternative is {@link firstEntryByIterableValue} to search by value.\n * @param map Map to search\n * @param predicate Filter function returns true when there is a match of value\n * @returns Entry, or _undefined_ if `filter` function never returns _true_\n */\nexport const firstEntryByIterablePredicate = <K, V>(\n  map: IWithEntries<K, V>,\n  predicate: (value: V, key: K) => boolean\n): readonly [key: K, value: V] | undefined => {\n  for (const e of map.entries()) {\n    if (predicate(e[1], e[0])) return e;\n  }\n};\n\n/**\n * Finds first entry by iterable value.\n *\n * ```js\n * const map = new Map();\n * map.set('hello', 'a');\n * map.set('there', 'b');\n *\n * const entry = firstEntryByIterableValue(map, 'b');\n * // Entry is: ['there', 'b']\n * ```\n *\n * An alternative is {@link firstEntryByIterablePredicate} to search by predicate function.\n * @param map Map to search\n * @param value Value to seek\n * @param isEqual Filter function which checks equality. Uses JS comparer by default.\n * @returns Entry, or _undefined_ if `value` not found.\n */\nexport const firstEntryByIterableValue = <K, V>(\n  map: IWithEntries<K, V>,\n  value: V,\n  isEqual: IsEqual<V> = isEqualDefault\n): readonly [key: K, value: V] | undefined => {\n  for (const e of map.entries()) {\n    if (isEqual(e[1], value)) return e;\n  }\n};\n\n/**\n * @inheritDoc getOrGenerate\n * @param map\n * @param fn\n * @returns\n */\n//eslint-disable-next-line functional/prefer-readonly-type\nexport const getOrGenerateSync =\n  <K, V, Z>(map: IMappish<K, V>, fn: (key: K, args?: Z) => V) =>\n  (key: K, args?: Z): V => {\n    //eslint-disable-next-line functional/no-let\n    let value = map.get(key);\n    if (value !== undefined) return value;\n    value = fn(key, args);\n    map.set(key, value);\n    return value;\n  };\n\n/**\n * Adds items to a map only if their key doesn't already exist\n *\n * Uses provided {@link Util.ToString} function to create keys for items. Item is only added if it doesn't already exist.\n * Thus the older item wins out, versus normal `Map.set` where the newest wins.\n *\n *\n * @example\n * ```js\n * import { Maps } from \"https://unpkg.com/ixfx/dist/collections.js\";\n * const map = new Map();\n * const peopleArray = [ _some people objects..._];\n * Maps.addKeepingExisting(map, p => p.name, ...peopleArray);\n * ```\n * @param set\n * @param hashFunc\n * @param values\n * @returns\n */\nexport const addKeepingExisting = <V>(\n  set: ReadonlyMap<string, V> | undefined,\n  hashFunc: ToString<V>,\n  ...values: readonly V[]\n) => {\n  const s = set === undefined ? new Map() : new Map(set);\n  values.forEach((v) => {\n    const vStr = hashFunc(v);\n    if (s.has(vStr)) return;\n    s.set(vStr, v);\n  });\n  return s;\n};\n\n/**\n * Returns a array of entries from a map, sorted by value.\n *\n * ```js\n * const m = new Map();\n * m.set(`4491`, { name: `Bob` });\n * m.set(`2319`, { name: `Alice` });\n *\n * // Compare by name\n * const comparer = (a, b) => defaultComparer(a.name, b.name);\n *\n * // Get sorted values\n * const sorted = Maps.sortByValue(m, comparer);\n * ```\n *\n * `sortByValue` takes a comparison function that should return -1, 0 or 1 to indicate order of `a` to `b`. If not provided, {@link Util.defaultComparer} is used.\n * @param map\n * @param compareFn\n * @returns\n */\nexport const sortByValue = <K, V>(\n  map: ReadonlyMap<K, V>,\n  compareFn?: (a: V, b: V) => number\n) => {\n  const f = compareFn ?? defaultComparer;\n  [...map.entries()].sort((a, b) => f(a[1], b[1]));\n};\n\n/**\n * Returns an array of entries from a map, sorted by a property of the value\n *\n * ```js\n * cosnt m = new Map();\n * m.set(`4491`, { name: `Bob` });\n * m.set(`2319`, { name: `Alice` });\n * const sorted = Maps.sortByValue(m, `name`);\n * ```\n * @param map Map to sort\n * @param prop Property of value\n * @param compareFn Comparer. If unspecified, uses a default.\n */\nexport const sortByValueProperty = <K, V, Z>(\n  map: ReadonlyMap<K, V>,\n  prop: string,\n  compareFn?: (a: Z, b: Z) => number\n) => {\n  const cfn = typeof compareFn === `undefined` ? defaultComparer : compareFn;\n  return [...map.entries()].sort((aE, bE) => {\n    const a = aE[1];\n    const b = bE[1];\n    // @ts-ignore\n    return cfn(a[prop], b[prop]);\n  });\n};\n/**\n * Returns true if _any_ key contains `value`, based on the provided `comparer` function. Use {@link hasKeyValue}\n * if you only want to find a value under a certain key.\n *\n * Having a comparer function is useful to check by value rather than object reference.\n * @example Finds value where name is 'samantha', regardless of other properties\n * ```js\n * hasAnyValue(map, {name:`samantha`}, (a, b) => a.name === b.name);\n * ```\n *\n * Works by comparing `value` against all values contained in `map` for equality using the provided `comparer`.\n *\n * @param map Map to search\n * @param value Value to find\n * @param comparer Function that determines matching. Should return true if `a` and `b` are considered equal.\n * @returns True if value is found\n */\nexport const hasAnyValue = <K, V>(\n  map: ReadonlyMap<K, V>,\n  value: V,\n  comparer: IsEqual<V>\n): boolean => {\n  const entries = Array.from(map.entries());\n  return entries.some((kv) => comparer(kv[1], value));\n};\n\n/**\n * Returns values where `predicate` returns true.\n *\n * If you just want the first match, use `find`\n *\n * @example All people over thirty\n * ```js\n * // for-of loop\n * for (const v of filter(people, person => person.age > 30)) {\n *\n * }\n * // If you want an array\n * const overThirty = Array.from(filter(people, person => person.age > 30));\n * ```\n * @param map Map\n * @param predicate Filtering predicate\n * @returns Values that match predicate\n */\n//eslint-disable-next-line func-style\nexport function* filter<V>(\n  map: ReadonlyMap<string, V>,\n  predicate: (v: V) => boolean\n) {\n  for (const v of map.values()) {\n    if (predicate(v)) yield v;\n  }\n}\n\n//export const filter = <V>(map:ReadonlyMap<string, V>, predicate:(v:V) => boolean):ReadonlyArray<V> => Array.from(map.values()).filter(predicate);\n\n/**\n * Copies data to an array\n * @param map\n * @returns\n */\nexport const toArray = <V>(map: ReadonlyMap<string, V>): ReadonlyArray<V> =>\n  Array.from(map.values());\n\n/**\n * Returns a Map from an iterable. By default throws an exception\n * if iterable contains duplicate values.\n *\n * ```js\n * const data = [\n *  { fruit: `granny-smith`, family: `apple`, colour: `green` }\n *  { fruit: `mango`, family: `stone-fruit`, colour: `orange` }\n * ];\n * const map = Maps.fromIterable(data, v => v.fruit);\n * ```\n * @param data Input data\n * @param keyFn Function which returns a string id. By default uses the JSON value of the object.\n * @param allowOverwrites When set to _true_, items with same id will silently overwrite each other, with last write wins. _false_ by default.\n * @returns\n */\nexport const fromIterable = <V>(\n  data: Iterable<V>,\n  keyFn = toStringDefault<V>,\n  allowOverwrites = false\n): ReadonlyMap<string, V> => {\n  const m = new Map<string, V>();\n  for (const d of data) {\n    const id = keyFn(d);\n    if (m.has(id) && !allowOverwrites) {\n      throw new Error(\n        `id ${id} is already used and new data will overwrite it. `\n      );\n    }\n    m.set(id, d);\n  }\n  return m;\n};\n\n/**\n * Returns a Map from an object, or array of objects.\n * Assumes the top-level properties of the object is the key.\n *\n * ```js\n * const data = {\n *  Sally: { name: `Sally`, colour: `red` },\n *  Bob: { name: `Bob`, colour: `pink` }\n * };\n * const map = Maps.fromObject(data);\n * map.get(`Sally`); // { name: `Sally`, colour: `red` }\n * ```\n *\n * To add an object to an existing map, use {@link addObject}.\n * @param data\n * @returns\n */\n//eslint-disable-next-line @typescript-eslint/no-explicit-any,functional/prefer-readonly-type\nexport const fromObject = <V>(data: any): ReadonlyMap<string, V> => {\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any,functional/prefer-readonly-type\n  const map = new Map<string, V>();\n  if (Array.isArray(data)) {\n    data.forEach((d) => addObject<V>(map, d));\n  } else {\n    addObject<V>(map, data);\n  }\n  return map;\n};\n\n/**\n * Adds an object to an existing map. It assumes a structure where\n * each top-level property is a key:\n *\n * ```js\n * const data = {\n *  Sally: { name: `Sally`, colour: `red` },\n *  Bob: { name: `Bob`, colour: `pink` }\n * };\n * const map = new Map();\n * Maps.addObject(map, data);\n *\n * map.get(`Sally`); // { name: `Sally`, colour: `red` }\n * ```\n *\n * To create a new map from an object, use {@link fromObject} instead.\n * @param map\n * @param data\n */\n//eslint-disable-next-line @typescript-eslint/no-explicit-any,functional/prefer-readonly-type\nexport const addObject = <V>(map: Map<string, V>, data: any) => {\n  const entries = Object.entries(data);\n  for (const [key, value] of entries) {\n    map.set(key, value as V);\n  }\n};\n/**\n * Returns the first found item that matches `predicate` or _undefined_.\n *\n * If you want all matches, use {@link filter}.\n *\n * @example First person over thirty\n * ```js\n * const overThirty = find(people, person => person.age > 30);\n * ```\n * @param map Map to search\n * @param predicate Function that returns true for a matching item\n * @returns Found item or _undefined_\n */\nexport const find = <V>(\n  map: ReadonlyMap<string, V>,\n  predicate: (v: V) => boolean\n): V | undefined => Array.from(map.values()).find(predicate);\n\n/**\n * Converts a map to a simple object, transforming from type `T` to `K` as it does so. If no transforms are needed, use {@link toObject}.\n *\n * ```js\n * const map = new Map();\n * map.set(`name`, `Alice`);\n * map.set(`pet`, `dog`);\n *\n * const o = mapToObjTransform(map, v => {\n *  ...v,\n *  registered: true\n * });\n *\n * // Yields: { name: `Alice`, pet: `dog`, registered: true }\n * ```\n *\n * If the goal is to create a new map with transformed values, use {@link transformMap}.\n * @param m\n * @param valueTransform\n * @typeParam T Value type of input map\n * @typeParam K Value type of destination map\n * @returns\n */\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const mapToObjTransform = <T, K>(\n  m: ReadonlyMap<string, T>,\n  valueTransform: (value: T) => K\n): { readonly [key: string]: K } =>\n  Array.from(m).reduce((obj: any, [key, value]) => {\n    const t = valueTransform(value);\n    /* eslint-disable-next-line functional/immutable-data */\n    obj[key] = t;\n    return obj;\n  }, {});\n\n/**\n * Zips together an array of keys and values into an object. Requires that\n * `keys` and `values` are the same length.\n *\n * @example\n * ```js\n * const o = zipKeyValue([`a`, `b`, `c`], [0, 1, 2])\n * Yields: { a: 0, b: 1, c: 2}\n *```\n * @param keys String keys\n * @param values Values\n * @typeParam V Type of values\n * @return Object with keys and values\n */\nexport const zipKeyValue = <V>(\n  keys: ReadonlyArray<string>,\n  values: ArrayLike<V | undefined>\n) => {\n  if (keys.length !== values.length) {\n    throw new Error(`Keys and values arrays should be same length`);\n  }\n  return Object.fromEntries(keys.map((k, i) => [k, values[i]]));\n};\n\n//#region Functions by Kees C. Bakker\n// Functions by Kees C. Bakker\n// https://keestalkstech.com/2021/10/having-fun-grouping-arrays-into-maps-with-typescript/\n\n/**\n * Like `Array.map`, but for a Map. Transforms from Map<K,V> to Map<K,R>, returning as a new Map.\n *\n * @example\n * ```js\n * const mapOfStrings = new Map();\n * mapOfStrings.set(`a`, `10`);\n * mapOfStrings.get(`a`); // Yields `10` (a string)\n *\n * // Convert a map of string->string to string->number\n * const mapOfInts = transformMap(mapOfStrings, (value, key) => parseInt(value));\n *\n * mapOfInts.get(`a`); // Yields 10 (a proper number)\n * ```\n *\n * If you want to combine values into a single object, consider instead  {@link mapToObjTransform}.\n * @param source\n * @param transformer\n * @typeParam K Type of keys (generally a string)\n * @typeParam V Type of input map values\n * @typeParam R Type of output map values\n * @returns\n */\nexport const transformMap = <K, V, R>(\n  source: ReadonlyMap<K, V>,\n  transformer: (value: V, key: K) => R\n) => new Map(Array.from(source, (v) => [v[0], transformer(v[1], v[0])]));\n\n/**\n * Converts a `Map` to a plain object, useful for serializing to JSON.\n * To convert back to a map use {@link fromObject}.\n *\n * @example\n * ```js\n * const map = new Map();\n * map.set(`Sally`, { name: `Sally`, colour: `red` });\n * map.set(`Bob`, { name: `Bob`, colour: `pink });\n *\n * const objects = Maps.toObject(map);\n * // Yields: {\n * //  Sally: { name: `Sally`, colour: `red` },\n * //  Bob: { name: `Bob`, colour: `pink` }\n * // }\n * ```\n * @param m\n * @returns\n */\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nexport const toObject = <T>(\n  m: ReadonlyMap<string, T>\n): { readonly [key: string]: T } =>\n  Array.from(m).reduce((obj: any, [key, value]) => {\n    /* eslint-disable-next-line functional/immutable-data */\n    obj[key] = value;\n    return obj;\n  }, {});\n\n/**\n * Converts Map to Array with a provided `transformer` function. Useful for plucking out certain properties\n * from contained values and for creating a new map based on transformed values from an input map.\n *\n * @example Get an array of ages from a map of Person objects\n * ```js\n * let person = { age: 29, name: `John`};\n * map.add(person.name, person);\n *\n * const ages = mapToArray(map, (key, person) => person.age);\n * // [29, ...]\n * ```\n *\n * In the above example, the `transformer` function returns a number, but it could\n * just as well return a transformed version of the input:\n *\n * ```js\n * // Return with random heights and uppercased name\n * mapToArray(map, (key, person) => ({\n *  ...person,\n *  height: Math.random(),\n *  name: person.name.toUpperCase();\n * }))\n * // Yields:\n * // [{height: 0.12, age: 29, name: \"JOHN\"}, ...]\n * ```\n * @param m\n * @param transformer A function that takes a key and item, returning a new item.\n * @returns\n */\nexport const mapToArray = <K, V, R>(\n  m: ReadonlyMap<K, V>,\n  transformer: (key: K, item: V) => R\n): readonly R[] => Array.from(m.entries()).map((x) => transformer(x[0], x[1]));\n// End Functions by Kees C. Bakker\n//#endregion\n\n/**\n * Returns a result of a merged into b.\n * B is always the 'newer' data that takes\n * precedence.\n */\nexport type MergeReconcile<V> = (a: V, b: V) => V;\n\n/**\n * Merges maps left to right, using the provided\n * `reconcile` function to choose a winner when keys overlap.\n *\n * There's also [Arrays.mergeByKey](functions/Collections.Arrays.mergeByKey.html) if you don't already have a map.\n *\n * For example, if we have the map A:\n * 1 => `A-1`, 2 => `A-2`, 3 => `A-3`\n *\n * And map B:\n * 2 => `B-1`, 2 => `B-2`, 4 => `B-4`\n *\n * If they are merged with the reconile function:\n * ```js\n * const reconcile = (a, b) => b.replace(`-`, `!`);\n * const output = mergeByKey(reconcile, mapA, mapB);\n * ```\n *\n * The final result will be:\n *\n * 1 => `B!1`, 2 => `B!2`, 3 => `A-3`, 4 => `B-4`\n *\n * In this toy example, it's obvious how the reconciler transforms\n * data where the keys overlap. For the keys that do not overlap -\n * 3 and 4 in this example - they are copied unaltered.\n *\n * A practical use for `mergeByKey` has been in smoothing keypoints\n * from a TensorFlow pose. In this case, we want to smooth new keypoints\n * with older keypoints. But if a keypoint is not present, for it to be\n * passed through.\n *\n * @param reconcile\n * @param maps\n */\nexport const mergeByKey = <K, V>(\n  reconcile: MergeReconcile<V>,\n  ...maps: readonly ReadonlyMap<K, V>[]\n): ReadonlyMap<K, V> => {\n  const result = new Map<K, V>();\n  for (const m of maps) {\n    for (const [mk, mv] of m) {\n      //eslint-disable-next-line functional/no-let\n      let v = result.get(mk);\n      if (v) {\n        v = reconcile(v, mv);\n      } else {\n        v = mv;\n      }\n      result.set(mk, v);\n    }\n  }\n  return result;\n};\n","import { SimpleEventEmitter } from '../../Events.js';\nimport { sortByValueProperty } from './MapFns.js';\nimport { integer as guardInteger } from '../../Guards.js';\n\n/**\n * Expiring map options\n */\nexport type Opts = {\n  /**\n   * Capacity limit\n   */\n  readonly capacity?: number;\n  /**\n   * Policy for evicting items if capacity is reached\n   */\n  readonly evictPolicy?: `none` | `oldestGet` | `oldestSet`;\n  /**\n   * Automatic deletion policy.\n   * none: no automatic deletion (default)\n   * get/set: interval based on last get/set\n   * either: if either interval has elapsed\n   */\n  readonly autoDeletePolicy?: `none` | `get` | `set` | `either`;\n  /**\n   * Automatic deletion interval\n   */\n  readonly autoDeleteElapsedMs?: number;\n};\n\ntype Item<V> = {\n  readonly value: V;\n  readonly lastSet: number;\n  readonly lastGet: number;\n};\n\n/**\n * Event from the ExpiringMap\n */\nexport type ExpiringMapEvent<K, V> = {\n  readonly key: K;\n  readonly value: V;\n};\n\nexport type ExpiringMapEvents<K, V> = {\n  /**\n   * Fires when an item is removed due to eviction\n   * or automatic expiry\n   */\n  readonly expired: ExpiringMapEvent<K, V>;\n  /**\n   * Fires when a item with a new key is added\n   */\n  readonly newKey: ExpiringMapEvent<K, V>;\n\n  /**\n   * Fires when an item is manually removed,\n   * removed due to eviction or automatic expiry\n   */\n  readonly removed: ExpiringMapEvent<K, V>;\n};\n\n/**\n * Create a ExpiringMap instance\n * @param opts\n * @returns\n */\nexport const create = <K, V>(opts: Opts = {}): ExpiringMap<K, V> =>\n  new ExpiringMap(opts);\n/***\n * A map that can have a capacity limit. The elapsed time for each get/set\n * operation is maintained allowing for items to be automatically removed.\n * `has()` does not affect the last access time.\n *\n * By default, it uses the `none` eviction policy, meaning that when full\n * an error will be thrown if attempting to add new keys.\n *\n * Eviction policies:\n * `oldestGet` removes the item that hasn't been accessed the longest,\n * `oldestSet` removes the item that hasn't been updated the longest.\n *\n * ```js\n * const map = new ExpiringMap();\n * map.set(`fruit`, `apple`);\n *\n * // Remove all entries that were set more than 100ms ago\n * map.deleteWithElapsed(100, `set`);\n * // Remove all entries that were last accessed more than 100ms ago\n * map.deleteWithElapsed(100, `get`);\n * // Returns the elapsed time since `fruit` was last accessed\n * map.elapsedGet(`fruit`);\n * // Returns the elapsed time since `fruit` was last set\n * map.elapsedSet(`fruit`);\n * ```\n *\n * Last set/get time for a key can be manually reset using `touch(key)`.\n *\n *\n * Events:\n * * `expired`: when an item is automatically removed.\n * * `removed`: when an item is manually or automatically removed.\n * * `newKey`: when a new key is added\n *\n * ```js\n * map.addEventListener(`expired`, evt => {\n *  const { key, value } = evt;\n * });\n * ```\n * The map can automatically remove items based on elapsed intervals.\n *\n * @example Automatically delete items that haven't been accessed for one second\n * ```js\n * const map = new ExpiringMap({\n *  autoDeleteElapsed: 1000,\n *  autoDeletePolicy: `get`\n * });\n * ```\n *\n * @example Automatically delete the oldest item if we reach a capacity limit\n * ```\n * const map = new ExpiringMap({\n *  capacity: 5,\n *  evictPolicy: `oldestSet`\n * });\n * ```\n */\nexport class ExpiringMap<K, V> extends SimpleEventEmitter<\n  ExpiringMapEvents<K, V>\n> {\n  private capacity: number;\n  private store: Map<K, Item<V>>;\n  private keyCount: number;\n  private evictPolicy;\n\n  private autoDeleteElapsedMs: number;\n  private autoDeletePolicy;\n\n  constructor(opts: Opts = {}) {\n    super();\n    this.capacity = opts.capacity ?? -1;\n\n    guardInteger(this.capacity, `nonZero`, `capacity`);\n    this.store = new Map();\n    this.keyCount = 0;\n\n    if (opts.evictPolicy && this.capacity <= 0) {\n      throw new Error(`evictPolicy is set, but no capacity limit is set`);\n    }\n    this.evictPolicy = opts.evictPolicy ?? `none`;\n    this.autoDeleteElapsedMs = opts.autoDeleteElapsedMs ?? -1;\n    this.autoDeletePolicy = opts.autoDeletePolicy ?? `none`;\n\n    if (this.autoDeleteElapsedMs > 0) {\n      setInterval(\n        () => this.#maintain(),\n        Math.max(1000, this.autoDeleteElapsedMs * 2)\n      );\n    }\n  }\n\n  /**\n   * Returns the number of keys being stored.\n   */\n  get keyLength() {\n    return this.keyCount;\n  }\n\n  *entries(): IterableIterator<[k: K, v: V]> {\n    for (const entry of this.store.entries()) {\n      yield [entry[0], entry[1].value];\n    }\n  }\n\n  *values(): IterableIterator<V> {\n    for (const v of this.store.values()) {\n      yield v.value;\n    }\n  }\n\n  *keys(): IterableIterator<K> {\n    yield* this.store.keys();\n  }\n\n  /**\n   * Returns the elapsed time since `key`\n   * was set. Returns _undefined_ if `key`\n   * does not exist\n   */\n  elapsedSet(key: K): number | undefined {\n    const v = this.store.get(key);\n    if (!v) return v;\n    return Date.now() - v.lastSet;\n  }\n\n  /**\n   * Returns the elapsed time since `key`\n   * was accessed. Returns _undefined_ if `key`\n   * does not exist\n   */\n  elapsedGet(key: K): number | undefined {\n    const v = this.store.get(key);\n    if (!v) return v;\n    return Date.now() - v.lastGet;\n  }\n\n  /**\n   * Returns true if `key` is stored.\n   * Does not affect the key's last access time.\n   * @param key\n   * @returns\n   */\n  has(key: K): boolean {\n    return this.store.has(key);\n  }\n\n  /**\n   * Gets an item from the map by key, returning\n   * undefined if not present\n   * @param key Key\n   * @returns Value, or undefined\n   */\n  get(key: K): V | undefined {\n    const v = this.store.get(key);\n    if (v) {\n      return v.value;\n    }\n  }\n\n  /**\n   * Deletes the value under `key`, if present.\n   *\n   * Returns _true_ if something was removed.\n   * @param key\n   * @returns\n   */\n  delete(key: K): boolean {\n    const val = this.store.get(key);\n    if (!val) return false;\n    const d = this.store.delete(key);\n    this.keyCount = this.keyCount - 1;\n    this.fireEvent(`removed`, {\n      key,\n      value: val.value,\n    });\n    return d;\n  }\n\n  /**\n   * Updates the lastSet/lastGet time for a value\n   * under `k`.\n   *\n   * Returns false if key was not found\n   * @param key\n   * @returns\n   */\n  touch(key: K): boolean {\n    const v = this.store.get(key);\n    if (!v) return false;\n    this.store.set(key, {\n      ...v,\n      lastSet: Date.now(),\n      lastGet: Date.now(),\n    });\n    return true;\n  }\n\n  private findEvicteeKey() {\n    if (this.evictPolicy === `none`) return null;\n    //eslint-disable-next-line functional/no-let\n    let sortBy = ``;\n    if (this.evictPolicy === `oldestGet`) sortBy = `lastGet`;\n    else if (this.evictPolicy === `oldestSet`) sortBy = `lastSet`;\n    else throw Error(`Unknown eviction policy ${this.evictPolicy}`);\n    const sorted = sortByValueProperty(this.store, sortBy);\n    return sorted[0][0];\n  }\n\n  #maintain() {\n    if (this.autoDeletePolicy === `none`) return;\n    this.deleteWithElapsed(this.autoDeleteElapsedMs, this.autoDeletePolicy);\n  }\n\n  /**\n   * Deletes all values where elapsed time has past\n   * for get/set or either.\n   *\n   * Remove items are returned\n   * @param time\n   * @param prop get/set/either\n   */\n  deleteWithElapsed(\n    time: number,\n    prop: `get` | `set` | `either`\n  ): [k: K, v: V][] {\n    const entries = [...this.store.entries()];\n    const prune: [k: K, v: V][] = [];\n    const now = Date.now();\n    for (const e of entries) {\n      const elapsedGet = now - e[1].lastGet;\n      const elapsedSet = now - e[1].lastSet;\n      const elapsed =\n        prop === `get`\n          ? elapsedGet\n          : prop === `set`\n          ? elapsedSet\n          : Math.max(elapsedGet, elapsedSet);\n      if (elapsed >= time) {\n        prune.push([e[0], e[1].value]);\n      }\n    }\n\n    for (const e of prune) {\n      this.store.delete(e[0]);\n      this.keyCount = this.keyCount - 1;\n      const eventArgs = {\n        key: e[0],\n        value: e[1],\n      };\n      this.fireEvent(`expired`, eventArgs);\n      this.fireEvent(`removed`, eventArgs);\n    }\n    return prune;\n  }\n\n  /**\n   * Sets the `key` to be `value`.\n   *\n   * If the key already exists, it is updated.\n   *\n   * If the map is full, according to its capacity,\n   * another value is selected for removal.\n   * @param key\n   * @param value\n   * @returns\n   */\n  set(key: K, value: V) {\n    const existing = this.store.get(key);\n\n    if (existing) {\n      // Update set time\n      this.store.set(key, {\n        ...existing,\n        lastSet: performance.now(),\n      });\n      return;\n    }\n\n    // New key\n    if (this.keyCount === this.capacity && this.capacity > 0) {\n      // Evict first\n      const key = this.findEvicteeKey();\n      if (!key) {\n        throw new Error(`ExpiringMap full (capacity: ${this.capacity})`);\n      }\n      const existing = this.store.get(key);\n      this.store.delete(key);\n      this.keyCount = this.keyCount - 1;\n      if (existing) {\n        const eventArgs = { key, value: existing.value };\n        this.fireEvent(`expired`, eventArgs);\n        this.fireEvent(`removed`, eventArgs);\n      }\n    }\n\n    this.keyCount++;\n    this.store.set(key, {\n      lastGet: 0,\n      lastSet: Date.now(),\n      value: value,\n    });\n\n    this.fireEvent(`newKey`, { key, value });\n  }\n}\n","export type ArrayKeys<K, V> = ReadonlyArray<readonly [key: K, value: V]>;\nexport type ObjKeys<K, V> = ReadonlyArray<{\n  readonly key: K;\n  readonly value: V;\n}>;\nexport type EitherKey<K, V> = ArrayKeys<K, V> | ObjKeys<K, V>;\n\nexport {\n  circularArray,\n  type ICircularArray as CircularArray,\n} from './CircularArray.js';\nexport * as Trees from './Trees.js';\n\n/**\n * Stacks store items in order.\n *\n * Stacks and queues can be helpful for processing data in order. They each have slightly different behaviour.\n *\n * Like a stack of plates, the newest item (on top) is removed\n * before the oldest items (at the bottom). {@link Queues} operate differently, with\n * the oldest items (at the front of the queue) removed before the newest items (at the end of the queue).\n *\n * Create stacks with {@link Stacks.immutable} or {@link Stacks.mutable}. These return a {@link IStackImmutable} or {@link IStackMutable} respectively.\n *\n * The ixfx implementation allow you to set a capacity limit with three {@link StackDiscardPolicy |policies} for\n * how items are evicted.\n *\n */\nexport * as Stacks from './stack/index.js';\n\nexport { StackMutable } from './stack/StackMutable.js';\nexport { StackImmutable } from './stack/StackImmutable.js';\n\n/**\n * Arrays are a list of data. ixfx provides a number of functions for working with arrays in an immutable manner.\n * This means that the input array is not changed.\n *\n * For arrays of numbers:\n * * {@link average}, {@link max}, {@link min}, {@link total}: Calculate average/max/min/total\n * * {@link averageWeighted}: Calculate average, but applies a weighting function, eg to favour items at beginning of array\n * * {@link minMaxAvg}: Find smallest, largest and average\n * * {@link maxIndex}, {@link minIndex}: Return index of largest/smallest value\n * * {@link dotProduct}: Returns the dot-product between two arrays\n * * {@link weight}: Applies a weighting function to all values based on their index\n *\n * Randomisation\n * * {@link randomIndex}: Return a random array index\n * * {@link randomElement}: Return a random value\n * * {@link randomPluck}: Remove a random element from an array, returning it and the new array\n * * {@link shuffle}: Returns a randomly-sorted copy of arra\n *\n * Finding/accessing\n * * {@link filterBetween}: Same as `Array.filter` but only looks within a specified index range\n * * {@link sample}: Returns a new array with a random sampling of input\n * * {@link valuesEqual}: Returns true if all the values in the array are identical\n *\n * Changing the shape\n * * {@link ensureLength}: Returns a copy of array with designated length, either padding it out or truncating as necessary\n * * {@link groupBy}: Groups data into a new Map\n * * {@link interleave}: Flattens several arrays into one, interleaving their values.\n * * {@link remove}: Remove an item by index\n * * {@link without}: Returns an array with specified value omitted\n * * {@link zip}: Groups together elements from several arrays based on their index\n */\nexport * as Arrays from './Arrays.js';\n\nimport * as Sets from './set/index.js';\n\n/**\n * Sets store unique items.\n *\n * ixfx's {@link ISetImmutable} (or {@link ISetMutable}) compares items by value rather than reference, unlike the default JS implementation.\n *\n * Create using {@link Sets.immutable} or {@link Sets.mutable}\n */\nexport { Sets };\nexport { SetStringMutable } from './set/SetMutable.js';\nexport { SetStringImmutable } from './set/SetImmutable.js';\nimport * as Queues from './queue/index.js';\n\n/**\n * Queues store items in the order in which they are added.\n *\n * Stacks and queues can be helpful when it's necessary to process data in order, but each one has slightly different behaviour.\n *\n * Like lining up at a bakery, the oldest items (at the front of the queue) are removed\n * before the newest items (at the end of the queue). This is different to {@link Stacks},\n * where the newest item (on top) is removed before the oldest items (at the bottom).\n *\n * The ixfx implementations allow you to set a capacity limit with three {@link QueueDiscardPolicy | policies} for\n * how items are evicted.\n *\n * Create queues with {@link Queues.immutable} or {@link Queues.mutable}. These return a {@link IQueueImmutable} or {@link IQueueMutable} respectively.\n */\nexport { Queues };\nexport { QueueMutable } from './queue/QueueMutable.js';\nexport { QueueImmutable } from './queue/QueueImmutable.js';\nimport * as Maps from './map/index.js';\n\n/**\n * Maps associate keys with values. Several helper functions are provided\n * for working with the standard JS Map class.\n *\n * ixfx also includes {@link Maps.IMapMutable}, {@link Maps.IMapImmutable}\n *\n * Overview:\n * * {@link getOrGenerate}: Solves a common scenario of wanting a value by a particular key, or generating it if it doesn't exist\n * * {@link filter}: Yields values in map that match a predicate\n * * {@link find}: Finds the first value that matches a predicate, or _undefined_ if nothing found\n * * {@link hasAnyValue}: Searches through all keys, returning true if any occurence of _value_ was found\n *\n * Transformations:\n * * {@link toArray}: Returns the values of the map as an array\n * * {@link mapToArray}: Applies a function to convert a map's values to an array\n * * {@link toObject}: Coverts a Map to a plain object, useful for JSON serialising.\n * * {@link mapToObjTransform}: Converts a map to a plain object, but applying a function to values\n * * {@link transformMap}: Like `Array.map`, but for Maps. Useful for generating a map as a transform of an input map.\n * * {@link zipKeyValue}: Given an array of keys and values, combines them together into a map\n */\nexport { Maps };\n","import { integer as guardInteger } from '../Guards.js';\n\n/**\n * The circular array is immutable. It keeps up to `capacity` items.\n * Old items are overridden with new items.\n *\n * `CircularArray` extends the regular JS array. Only use `add` to change the array if you want\n * to keep the `CircularArray` behaviour.\n * @example\n * ```js\n * let a = circularArray(10);\n * a = a.add(`hello`); // Because it's immutable, capture the return result of `add`\n * a.isFull;  // True if circular array is full\n * a.pointer; // The current position in array it will write to\n * ```\n * @class CircularArray\n * @extends {Array}\n * @template V\n */\nexport interface ICircularArray<V> extends Array<V> {\n  /**\n   * Returns true if the array has filled to capacity and is now\n   * recycling array indexes.\n   */\n  get isFull(): boolean;\n\n  /**\n   * Returns a new Circular with item added\n   *\n   * Items are added at `pointer` position, which automatically cycles through available array indexes.\n   *\n   * @param {V} thing Thing to add\n   * @returns {Circular<V>} Circular with item added\n   * @memberof Circular\n   */\n  add(v: V): ICircularArray<V>;\n\n  get length(): number;\n\n  /**\n   * Returns the current add position of array.\n   */\n  get pointer(): number;\n}\n\nclass CircularArray<V> extends Array {\n  // ✔ Class is unit tested!\n  /* eslint-disable-next-line functional/prefer-readonly-type */\n  #capacity: number;\n  /* eslint-disable-next-line functional/prefer-readonly-type */\n  #pointer: number;\n\n  constructor(capacity: number = 0) {\n    super();\n    // Allowed to create with capacity zero\n    guardInteger(capacity, `positive`, `capacity`);\n\n    // Can't throw because .filter won't use ctor proprly\n    this.#capacity = capacity;\n    this.#pointer = 0;\n  }\n\n  add(thing: V): CircularArray<V> {\n    const ca = CircularArray.from(this) as CircularArray<V>;\n    /* eslint-disable-next-line functional/immutable-data */\n    ca[this.#pointer] = thing;\n    /* eslint-disable-next-line functional/immutable-data */\n    ca.#capacity = this.#capacity;\n    if (this.#capacity > 0) {\n      /* eslint-disable-next-line functional/immutable-data */\n      ca.#pointer =\n        this.#pointer + 1 === this.#capacity ? 0 : this.#pointer + 1;\n    } else {\n      /* eslint-disable-next-line functional/immutable-data */\n      ca.#pointer = this.#pointer + 1;\n    }\n    return ca;\n  }\n\n  get pointer(): number {\n    return this.#pointer;\n  }\n\n  get isFull(): boolean {\n    if (this.#capacity === 0) return false;\n    return this.length === this.#capacity;\n  }\n}\n\n/**\n * Returns a new circular array. Immutable. A circular array only keeps up to `capacity` items.\n * Old items are overridden with new items.\n *\n * `CircularArray` extends the regular JS array. Only use `add` to change the array if you want\n * to keep the `CircularArray` behaviour.\n *\n * @example Basic functions\n * ```js\n * let a = circularArray(10);\n * a = a.add(`hello`);  // Because it's immutable, capture the return result of `add`\n * a.isFull;            // True if circular array is full\n * a.pointer;           // The current position in array it will write to\n * ```\n *\n * Since it extends the regular JS array, you can access items as usual:\n * @example Accessing\n * ```js\n * let a = circularArray(10);\n * ... add some stuff ..\n * a.forEach(item => // do something with item);\n * ```\n * @param capacity Maximum capacity before recycling array entries\n * @return Circular array\n */\nexport const circularArray = <V>(capacity: number): ICircularArray<V> =>\n  new CircularArray<V>(capacity);\n","// #region Imports\nimport { type IsEqual, isEqualDefault } from '../Util.js';\nimport { QueueMutable } from './queue/QueueMutable.js';\nimport { StackMutable } from './stack/StackMutable.js';\nimport { betweenChomp } from '../Text.js';\nimport { TreeNodeMutable, treeNodeMutable } from './TreeNodeMutable.js';\nimport { integerParse, nullUndef } from '../Guards.js';\nimport { last } from '../IterableSync.js';\n\n// #endregion\n\nexport { treeNodeMutable, TreeNodeMutable };\n\nexport type Entry = readonly [name: string, value: any];\n\n/**\n * TreeNode type\n */\nexport type TreeNode = {\n  /**\n   * Direct children of node\n   */\n  children(): IterableIterator<TreeNode>;\n  /**\n   * Chain of parents of node. First result will be immediate parent,\n   * last result will be the terminating parent (root)\n   */\n  parents(): IterableIterator<TreeNode>;\n\n  getLengthChildren?(): number;\n};\n\n/**\n * Options for parsing a path\n */\nexport type PathOpts = {\n  /**\n   * Separator for path, eg '.'\n   */\n  readonly separator?: string;\n  /**\n   * If true, [integer] will be used for arrays\n   */\n  readonly allowArrayIndexes?: boolean;\n};\n\n/**\n * Returns _true_ if `p` seems to match the `TreeNode` type.\n * Returns _false_ if `p` is undefined or null.\n *\n * @param p\n * @returns\n */\nexport function isTreeNode(p: TreeNode | unknown): p is TreeNode {\n  nullUndef(p, `p`);\n\n  if (typeof (p as TreeNode).children === 'undefined') return false;\n  if (typeof (p as TreeNode).parents === 'undefined') return false;\n  return true;\n}\n\n/**\n * Returns the count of immediate children for this\n * TreeNode (or map, or plain object)\n *\n * ```js\n * const basicObj = {\n *  john: {\n *    address: { postcode: 1234, city: 'Blahville' }\n *  }\n * }\n * Trees.getLengthChildren(basicObj); // 1\n * ```\n * @param p\n * @returns\n */\nexport const getLengthChildren = (p: TreeNode | object): number => {\n  // ✔️ Unit tested\n  if (isTreeNode(p)) {\n    if (typeof p.getLengthChildren !== `undefined`) {\n      return p.getLengthChildren();\n    }\n  }\n  return [...directChildren(p)].length;\n};\n\nfunction prettyPrintEntryPath(entries: readonly Entry[]) {\n  if (entries.length === 0) return '(empty)';\n  //eslint-disable-next-line functional/no-let\n  let t = '';\n  for (let i = 0; i < entries.length; i++) {\n    t += '  '.repeat(i);\n    t += entries[i][0] + ' = ' + JSON.stringify(entries[i][1]) + '\\n';\n  }\n  return t;\n}\n\n/**\n * Returns a human-friendly debug string for a tree-like structure\n * ```js\n * console.log(Trees.prettyPrint(obj));\n * ```\n * @param indent\n * @param node\n * @param defaultLabel\n * @returns\n */\nexport const prettyPrint = (\n  node: object,\n  indent = 0,\n  defaultLabel = 'root'\n): string => {\n  nullUndef(node, `node`);\n  const entry = getEntry(node, defaultLabel);\n  const t = `${'  '.repeat(indent)} + label: ${\n    entry[0]\n  } value: ${JSON.stringify(entry[1])}`;\n  const children = [...directChildren(node, defaultLabel)];\n  if (children.length) {\n    return (\n      t +\n      '\\n' +\n      children.map((d) => prettyPrint(d[1], indent + 1, d[0])).join('\\n')\n    );\n  } else {\n    return t;\n  }\n};\n\n/**\n * Returns the direct children of a tree-like object as a pairing\n * of node label and value. Supports basic objects, Maps, arrays and {@link TreeNode}s.\n * \n * Sub-children are included as an object blob.\n * \n * @example Simple object\n * ```js\n * const o = {\n *  colour: {\n *    r: 0.5, g: 0.5, b: 0.5\n *  }\n * };\n * \n * const children = [...Trees.directChildren(o)];\n * // Children:\n * // [\n * //  [ \"colour\", { b: 0.5, g: 0.5, r: 0.5 }]\n * // ]\n * ```\n * \n * Arrays are assigned a label based on index.\n * @example Arrays\n * ```js\n  const colours = [ {r:1,g:0,b:0}, {r:0,g:1,b:0}, {r:0,g:0,b:1} ];\n * // Children: \n * // [\n * //  [\"array[0]\", {r:1,g:0,b:0}],\n * //  [\"array[1]\", {r:0,g:1,b:0}],\n * //  [\"array[2]\", {r:0,g:0,b:1}],\n * // ]\n * ```\n * \n * Pass in `defaultName` (eg 'colours') to have labels generated as 'colours[0]', etc.\n * @param node \n * @param defaultName \n */\nexport function* directChildren(\n  node: object,\n  defaultName?: string\n): IterableIterator<Entry> {\n  // ✔️ Unit tested\n  nullUndef(node, `node`);\n  if (Array.isArray(node)) {\n    if (!defaultName) defaultName = 'array';\n    for (let i = 0; i < node.length; i++) {\n      yield [defaultName + '[' + i.toString() + ']', node[i]];\n    }\n  } else if (isTreeNode(node)) {\n    for (const n of node.children()) yield getEntry(n);\n  } else if (typeof node === 'object') {\n    if ('entries' in node) {\n      yield* (node as Map<any, any>).entries();\n    }\n    yield* Object.entries(node);\n  }\n}\n\n/**\n * Finds a given direct child by label\n * @param label\n * @param node\n * @returns\n */\nfunction findDirectChildByLabel(\n  label: string,\n  node: object\n): Entry | undefined {\n  for (const d of directChildren(node)) {\n    if (d[0] === label) return d;\n  }\n}\n\n/**\n * Returns the closest matching entry, tracing `path` in a tree.\n * Returns an entry with _undefined_ value at the point where tracing stopped.\n * Use {@link traceByPath} to step through all the segments.\n *\n * ```js\n * const people = {\n *  jane: {\n *   address: {\n *    postcode: 1000,\n *    street: 'West St',\n *    city: 'Blahville'\n *   },\n *   colour: 'red'\n *  }\n * }\n * Trees.getByPath('jane.address.postcode', people); // '.' default separator\n * // ['postcode', 1000]\n * Trees.getByPath('jane.address.country.state', people);\n * // ['country', undefined] - since full path could not be resolved.\n * ```\n * @param path Path, eg `jane.address.postcode`\n * @param node Node to look within\n * @param opts Options for parsing path. By default '.' is used as a separator\n * @returns\n */\nexport function getByPath(\n  path: string,\n  node: object,\n  opts: PathOpts = {}\n): Entry {\n  // ✔️ Unit tested\n  const v = last(traceByPath(path, node, opts));\n  if (!v) throw new Error(`Could not trace path: ${path}`);\n  return v;\n}\n\n/**\n * Enumerates from root over nodes that lead to the given path terminus.\n * Use {@link getByPath} to only fetch the closest matching entry.\n *\n * ```js\n * const people = {\n *  jane: {\n *   address: {\n *    postcode: 1000,\n *    street: 'West St',\n *    city: 'Blahville'\n *   },\n *   colour: 'red'\n *  }\n * }\n * for (const p of Trees.traceByPath('jane.address.street', rootNode)) {\n * // [\"jane\", { address: { postcode: 1000,street: 'West St', city: 'Blahville' }, colour: 'red'}],\n * // [\"address\", { postcode: 1000, street: 'West St', city: 'Blahville' }],\n * // [\"street\",\"West St\"]\n * }\n * ```\n *\n * Results stop when the path can't be followed. The last entry will have a label of\n * the last sought path segment, and _undefined_ as its value.\n *\n * @param path\n * @param node\n * @returns\n */\nexport function* traceByPath(\n  path: string,\n  node: object,\n  opts: PathOpts = {}\n): Iterable<Entry> {\n  // ✔️ Unit tested\n  nullUndef(path, `path`);\n  nullUndef(node, `node`);\n\n  const separator = opts.separator ?? '.';\n  const allowArrayIndexes = opts.allowArrayIndexes ?? true;\n  const pathSplit = path.split(separator);\n\n  for (const p of pathSplit) {\n    //eslint-disable-next-line functional/no-let\n    let e = findDirectChildByLabel(p, node);\n    if (allowArrayIndexes) {\n      const [withoutBrackets, arrayIndexStr] = betweenChomp(p, '[', ']');\n      const arrayIndex = integerParse(arrayIndexStr, 'positive', -1);\n      if (arrayIndex >= 0) {\n        // Get array by name without the []\n        e = findDirectChildByLabel(withoutBrackets, node);\n\n        if (e && Array.isArray(e[1])) {\n          // Result was array as expected\n          e = [p, e[1][arrayIndex]];\n        }\n      }\n    }\n\n    if (!e) {\n      yield [p, undefined];\n      return;\n    }\n    node = e[1];\n    yield e;\n  }\n}\n\n/**\n * Generates a label for a node.\n * Uses the 'label' property if it exists, otherwise uses `defaultLabel`\n * @param node\n * @param defaultLabel\n * @returns\n */\nfunction getEntry(node: object, defaultLabel = ''): Entry {\n  if ('label' in node) {\n    return [node.label as string, node];\n  }\n  return [defaultLabel, node];\n}\n\n/**\n * Depth-first traversal over object, array, Map or TreeNode\n * @param root\n * @returns\n */\nexport function* depthFirst(root: object): IterableIterator<Entry> {\n  if (!root) return;\n  const stack = new StackMutable<Entry>();\n  //eslint-disable-next-line functional/immutable-data\n  stack.push(getEntry(root, 'root'));\n  //eslint-disable-next-line functional/no-let,functional/immutable-data\n  let entry = stack.pop();\n  while (entry) {\n    yield entry;\n    if (entry) {\n      //eslint-disable-next-line functional/immutable-data\n      stack.push(...directChildren(entry[1], entry[0]));\n    }\n    if (stack.isEmpty) break;\n    //eslint-disable-next-line functional/immutable-data\n    entry = stack.pop();\n  }\n}\n\n/**\n * Breadth-first traversal over object, array, Map or TreeNode\n * @param root\n * @returns\n */\nexport function* breadthFirst(root: object): IterableIterator<Entry> {\n  if (!root) return;\n  const queue = new QueueMutable<Entry>();\n  queue.enqueue(getEntry(root, 'root'));\n  //eslint-disable-next-line functional/no-let\n  let entry = queue.dequeue();\n  while (entry) {\n    yield entry;\n    if (entry) {\n      queue.enqueue(...directChildren(entry[1], entry[0]));\n    }\n    if (queue.isEmpty) break;\n    entry = queue.dequeue();\n  }\n}\n\n/**\n * Returns _true_ if _possibleChild_ is contained within _parent_ tree.\n * That is, it is any possible sub-child.\n * @param parent Parent tree\n * @param possibleChild Sought child\n * @param eq Equality function, or {@link Util.isEqualDefault} if undefined.\n * @returns\n */\nexport const hasAnyChild = <V extends TreeNode>(\n  parent: V,\n  possibleChild: V,\n  eq: IsEqual<V> = isEqualDefault\n): boolean => {\n  return hasChild(parent, possibleChild, Number.MAX_SAFE_INTEGER, eq);\n};\n\n/**\n * Returns _true_ if _possibleChild_ is contained within _maxDepth_ children\n * of _parent_ node. By default only looks at immediate children (maxDepth = 0).\n *\n * ```js\n * // Just check parentNode for childNode\n * Trees.hasChild(parentNode, childNode);\n * // See if parentNode or parentNode's parents have childNode\n * Trees.hasChild(parentNode, childNode, 1);\n * // Use custom equality function, in this case comparing on name field\n * Trees.hasChild(parentNode, childNode, 0, (a, b) => a.name === b.name);\n * ```\n * @param parent Parent tree\n * @param possibleChild Sought child\n * @param maxDepth Maximum depth. 0 for immediate children, Number.MAX_SAFE_INTEGER for boundless\n * @param eq Equality function, or {@link Util.isEqualDefault} if undefined.\n * @returns\n */\nexport const hasChild = <V extends TreeNode>(\n  parent: V,\n  possibleChild: V,\n  maxDepth = 0,\n  eq: IsEqual<V> = isEqualDefault\n): boolean => {\n  nullUndef(parent, `parent`);\n  nullUndef(possibleChild, `possibleChild`);\n\n  if (maxDepth < 0) return false;\n  for (const d of parent.children()) {\n    if (eq(d as V, possibleChild)) return true;\n    if (hasChild(d, possibleChild, maxDepth - 1)) return true;\n  }\n  return false;\n};\n\n/**\n * Returns _true_ if `child` exists within `possibleParent`. By default it only looks at the immediate\n * parent (maxDepth: 0). Use Number.MAX_SAFE_INTEGER for searching recursively upwards (or {@link hasAnyParent})\n * @param child Child being sought\n * @param possibleParent Possible parent of child\n * @param maxDepth Max depth of traversal. Default of 0 only looks for immediate parent.\n * @param eq Equality comparison function. {@link Util.isEqualDefault} used by default.\n * @returns\n */\nexport const hasParent = <V extends TreeNode>(\n  child: V,\n  possibleParent: V,\n  maxDepth = 0,\n  eq: IsEqual<V> = isEqualDefault\n): boolean => {\n  nullUndef(possibleParent, `possibleParent`);\n  nullUndef(child, `child`);\n\n  for (const p of child.parents()) {\n    if (eq(p as V, possibleParent)) return true;\n    maxDepth--;\n    if (maxDepth < 0) break;\n  }\n  return false;\n};\n\n/**\n * Returns _true_ if `child` is parented at any level (grand-parented etc) by `possibleParent`\n * @param child Child being sought\n * @param possibleParent Possible parent of child\n * @param eq Equality comparison function {@link Util.isEqualDefault} used by default\n * @returns\n */\nexport const hasAnyParent = <V extends TreeNode>(\n  child: V,\n  possibleParent: V,\n  eq: IsEqual<V> = isEqualDefault\n): boolean => {\n  return hasParent(child, possibleParent, Number.MAX_SAFE_INTEGER, eq);\n};\n\n/**\n * Returns _true_ if `prospectiveChild` can be legally added to `parent`.\n * _False_ is returned if:\n *  * `parent` and `prospectiveChild` are equal\n *  * `parent` already contains `prospectiveChild`\n *  * `prospectiveChild` has `parent` as its own child\n *\n * Throws an error if `parent` or `prospectiveChild` is null/undefined.\n * @param parent Parent to add to\n * @param prospectiveChild Prospective child\n * @param eq Equality function\n */\nexport const couldAddChild = <V extends TreeNode>(\n  parent: V,\n  prospectiveChild: V,\n  eq: IsEqual<V> = isEqualDefault\n) => {\n  nullUndef(prospectiveChild, `prospectiveChild`);\n  nullUndef(parent, `parent`);\n\n  if (eq(parent, prospectiveChild)) throw new Error(`Child equals parent`);\n  if (hasAnyChild(parent, prospectiveChild, eq)) {\n    throw new Error(`Circular. Parent already has child`);\n  }\n  if (hasAnyChild(prospectiveChild, parent, eq)) {\n    throw new Error(`Prospective child has parent as child relation`);\n  }\n};\n","import type { StackOpts } from '.';\n\nexport const trimStack = <V>(\n  opts: StackOpts,\n  stack: ReadonlyArray<V>,\n  toAdd: ReadonlyArray<V>\n): ReadonlyArray<V> => {\n  const potentialLength = stack.length + toAdd.length;\n  const policy = opts.discardPolicy ?? `additions`;\n  const capacity = opts.capacity ?? potentialLength;\n  const toRemove = potentialLength - capacity;\n  if (opts.debug) {\n    console.log(\n      `Stack.push: stackLen: ${stack.length} potentialLen: ${potentialLength} toRemove: ${toRemove} policy: ${policy}`\n    );\n  }\n  switch (policy) {\n    case `additions`:\n      if (opts.debug) {\n        console.log(\n          `Stack.push:DiscardAdditions: stackLen: ${stack.length} slice: ${\n            potentialLength - capacity\n          } toAddLen: ${toAdd.length}`\n        );\n      }\n      if (stack.length === opts.capacity) {\n        return stack; // Completely full\n      } else {\n        // Only add some from the new array\n        return [...stack, ...toAdd.slice(0, toAdd.length - toRemove)];\n      }\n    case `newer`:\n      if (toRemove >= stack.length) {\n        // New items will completely flush out old\n        return toAdd.slice(\n          Math.max(0, toAdd.length - capacity),\n          Math.min(toAdd.length, capacity) + 1\n        );\n      } else {\n        // Keep some of the old (from 0)\n        //if (opts.debug) console.log(` orig: ${JSON.stringify(stack)}`);\n        if (opts.debug) {\n          console.log(` from orig: ${stack.slice(0, stack.length - toRemove)}`);\n        }\n        return [\n          ...stack.slice(0, stack.length - toRemove),\n          ...toAdd.slice(0, Math.min(toAdd.length, capacity - toRemove + 1)),\n        ];\n      }\n    case `older`:\n      // Oldest item in stack is position 0\n      return [...stack, ...toAdd].slice(toRemove);\n    default:\n      throw new Error(`Unknown discard policy ${policy}`);\n  }\n};\n\n// Add to top (last index)\nexport const push = <V>(\n  opts: StackOpts,\n  stack: ReadonlyArray<V>,\n  ...toAdd: ReadonlyArray<V>\n): ReadonlyArray<V> => {\n  // If stack is A, B and toAdd is C, D this yields A, B, C, D\n  //const mutated = [...stack, ...toAdd];\n  const potentialLength = stack.length + toAdd.length;\n\n  const overSize = opts.capacity && potentialLength > opts.capacity;\n  const toReturn = overSize\n    ? trimStack(opts, stack, toAdd)\n    : [...stack, ...toAdd];\n  return toReturn;\n};\n\n// Remove from top (last index)\nexport const pop = <V>(\n  opts: StackOpts,\n  stack: ReadonlyArray<V>\n): ReadonlyArray<V> => {\n  if (stack.length === 0) throw new Error(`Stack is empty`);\n  return stack.slice(0, stack.length - 1);\n};\n\n/**\n * Peek at the top of the stack (end of array)\n *\n * @template V\n * @param {StackOpts} opts\n * @param {V[]} stack\n * @returns {(V | undefined)}\n */\nexport const peek = <V>(\n  opts: StackOpts,\n  stack: ReadonlyArray<V>\n): V | undefined => stack[stack.length - 1];\n\nexport const isEmpty = <V>(opts: StackOpts, stack: ReadonlyArray<V>): boolean =>\n  stack.length === 0;\n\nexport const isFull = <V>(\n  opts: StackOpts,\n  stack: ReadonlyArray<V>\n): boolean => {\n  if (opts.capacity) {\n    return stack.length >= opts.capacity;\n  }\n  return false;\n};\n","// -------------------------\n// Mutable\n// -------------------------\n\nimport type { IStackMutable } from './IStackMutable.js';\nimport { push, peek, pop, isEmpty, isFull } from './StackFns.js';\nimport type { StackOpts } from './index.js';\n\n/**\n * Creates a stack. Mutable. Use {@link StackImmutable} for an immutable alternative.\n *\n * @example Basic usage\n * ```js\n * // Create\n * const s = new StackMutable();\n * // Add one or more items\n * s.push(1, 2, 3, 4);\n *\n * // See what's on top\n * s.peek;  // 4\n *\n * // Remove the top-most, and return it\n * s.pop();   // 4\n *\n * // Now there's a new top-most element\n * s.peek;  // 3\n * ```\n */\nexport class StackMutable<V> implements IStackMutable<V> {\n  readonly opts: StackOpts;\n  /* eslint-disable-next-line functional/prefer-readonly-type */\n  data: ReadonlyArray<V>;\n\n  constructor(opts: StackOpts = {}, data: ReadonlyArray<V> = []) {\n    this.opts = opts;\n    this.data = data;\n  }\n\n  push(...toAdd: ReadonlyArray<V>): number {\n    /* eslint-disable-next-line functional/immutable-data */\n    this.data = push(this.opts, this.data, ...toAdd);\n    return this.data.length;\n  }\n\n  forEach(fn: (v: V) => void): void {\n    this.data.forEach(fn);\n  }\n\n  forEachFromTop(fn: (v: V) => void): void {\n    [...this.data].reverse().forEach(fn);\n  }\n\n  pop(): V | undefined {\n    const v = peek(this.opts, this.data);\n    this.data = pop(this.opts, this.data);\n    return v;\n  }\n\n  get isEmpty(): boolean {\n    return isEmpty(this.opts, this.data);\n  }\n\n  get isFull(): boolean {\n    return isFull(this.opts, this.data);\n  }\n\n  get peek(): V | undefined {\n    return peek(this.opts, this.data);\n  }\n\n  get length(): number {\n    return this.data.length;\n  }\n}\n\n/**\n * Creates a stack. Mutable. Use {@link Stacks.immutable} for an immutable alternative.\n *\n * @example Basic usage\n * ```js\n * // Create\n * const s = Stacks.mutable();\n * // Add one or more items\n * s.push(1, 2, 3, 4);\n *\n * // See what's on top\n * s.peek;  // 4\n *\n * // Remove the top-most, and return it\n * s.pop();   // 4\n *\n * // Now there's a new top-most element\n * s.peek;  // 3\n * ```\n */\nexport const mutable = <V>(\n  opts: StackOpts = {},\n  ...startingItems: ReadonlyArray<V>\n): IStackMutable<V> => new StackMutable({ ...opts }, [...startingItems]);\n","import { type TreeNode } from '../collections/Trees.js';\nimport { Points, Rects, Shapes } from './index.js';\nimport { type ShapePositioned } from './Shape.js';\n\n/**\n * Options for quad tree\n */\nexport type QuadTreeOpts = {\n  /**\n   * Maximum items per node\n   */\n  readonly maxItems: number;\n  /**\n   * Maximum level of sub-division\n   */\n  readonly maxLevels: number;\n};\n\n/**\n * Direction\n */\nexport enum Direction {\n  Nw,\n  Ne,\n  Sw,\n  Se,\n}\n\n/**\n * A Point or ShapePositioned\n */\nexport type QuadTreeItem = Points.Point | ShapePositioned;\n\n/**\n * Creates a QuadTreeNode\n * @param bounds Bounds of region\n * @param initialData Initial items to place in quad tree\n * @param opts Options\n * @returns New quad tree\n */\n// export const quadTree = (bounds:Rects.RectPositioned, initialData:readonly QuadTreeItem[] = [], opts:Partial<QuadTreeOpts> = {}):QuadTreeNode => {\n//   const o:QuadTreeOpts = {\n//     maxItems: opts.maxItems ?? 4,\n//     maxLevels: opts.maxLevels ?? 4\n//   };\n\n//   const n = new QuadTreeNode( undefined, bounds, 0, o);\n//   initialData.forEach(d => {\n//     n.add(d);\n//   });\n//   return n;\n// };\n\n/**\n * QuadTreeNode\n *\n * To create, you probably want the {@link quadTree} function.\n */\nexport class QuadTreeNode implements TreeNode {\n  #items: QuadTreeItem[] = [];\n  #children: QuadTreeNode[] = [];\n  #parent: QuadTreeNode | undefined;\n  /**\n   * Constructor\n   * @param boundary\n   * @param level\n   * @param opts\n   */\n  constructor(\n    parent: QuadTreeNode | undefined,\n    readonly boundary: Rects.RectPositioned,\n    readonly level: number,\n    readonly opts: QuadTreeOpts\n  ) {\n    this.#parent = parent;\n  }\n\n  getLengthChildren(): number {\n    return this.#children.length;\n  }\n\n  *parents(): IterableIterator<QuadTreeNode> {\n    //eslint-disable-next-line functional/no-let,@typescript-eslint/no-this-alias\n    let n: QuadTreeNode | undefined = this;\n    while (n.#parent !== undefined) {\n      yield n.#parent;\n      n = n.#parent;\n    }\n  }\n\n  *children(): IterableIterator<QuadTreeNode> {\n    for (const c of this.#children) {\n      yield c;\n    }\n  }\n  /**\n   * Get a descendant node in a given direction\n   * @param d\n   * @returns\n   */\n  direction(d: Direction): QuadTreeNode | undefined {\n    return this.#children[d] as QuadTreeNode | undefined;\n  }\n\n  /**\n   * Add an item to the quadtree\n   * @param p\n   * @returns False if item is outside of boundary, True if item was added\n   */\n  add(p: QuadTreeItem): boolean {\n    if (!Shapes.isIntersecting(this.boundary, p)) return false;\n\n    if (this.#children.length) {\n      this.#children.forEach((d) => (d as QuadTreeNode).add(p));\n      return true;\n    }\n\n    this.#items.push(p);\n\n    if (\n      this.#items.length > this.opts.maxItems &&\n      this.level < this.opts.maxLevels\n    ) {\n      if (!this.#children.length) {\n        this.#subdivide();\n      }\n\n      // Add to child\n      this.#items.forEach((item) => {\n        this.#children.forEach((d) => (d as QuadTreeNode).add(item));\n      });\n      //this.descendants.forEach(d => (d as QuadTreeNode).add(p));\n      this.#items = [];\n    }\n    return true;\n  }\n\n  /**\n   * Returns true if point is inside node's boundary\n   * @param p\n   * @returns\n   */\n  couldHold(p: Points.Point) {\n    return Rects.intersectsPoint(this.boundary, p);\n  }\n\n  #subdivide() {\n    const w = this.boundary.width / 2;\n    const h = this.boundary.height / 2;\n    const x = this.boundary.x;\n    const y = this.boundary.y;\n\n    // top-left corners of each of the four new sections\n    const coords = Points.fromNumbers(x + w, y, x, y, x, y + h, x + w, y + h);\n    const rects = coords.map((p) => Rects.fromTopLeft(p, w, h));\n    // rects.forEach((r, index) => {\n    //   this.descendants[index] = new QuadTreeNode(r, this.level + 1, this.opts);\n    // });\n    this.#children = rects.map(\n      (r) => new QuadTreeNode(this, r, this.level + 1, this.opts)\n    );\n  }\n}\n","import * as Arcs from './Arc.js';\nimport * as Beziers from './Bezier.js';\nimport * as Circles from './Circle.js';\nimport * as Compound from './CompoundPath.js';\nimport * as Grids from './Grid.js';\nimport * as Lines from './Line.js';\nimport * as Paths from './Path.js';\nimport * as Points from './Point.js';\nimport * as Rects from './Rect.js';\nimport * as Ellipses from './Ellipse.js';\nimport * as Shapes from './Shape.js';\nimport * as Vectors from './Vector.js';\nimport * as Waypoints from './Waypoint.js';\nimport * as Spheres from './Sphere.js';\nimport * as Polar from './Polar.js';\nimport * as Layouts from './Layout.js';\n\nexport { Circles, Lines, Rects, Points, Paths, Grids, Beziers, Compound, Ellipses,  Waypoints, Spheres };\nexport { Layouts };\n\n/**\n * Quad tree is a datastructure for efficiently determining whether\n * a point/shape is at a location\n * - {@link quadTree}: Create a quad tree\n */\nexport * as QuadTree from './QuadTree.js';\n\nexport * as Scaler from './Scaler.js';\nexport * as Convolve2d from './Convolve2d.js';\n\n/**\n * Work with arcs. Arcs are a angle-limited circle, describing a wedge.\n * \n * {@link ArcPositioned} has a origin x,y.\n * \n * Conversions:\n * - {@link fromDegrees}\n * - {@link toLine}: A line from start/end position of arc\n * - {@link toSvg}: Returns an SVG representation of arc\n * \n * Calculations:\n * - {@link bbox}: Bounding box\n * - {@link interpolate}: Interplate two arcs\n * - {@link point}: Find a point on the arc, given an angle\n * - {@link length}: Circumference of arc\n * \n * Comparisons:\n * - {@link isArc}: Returns true if object is Arc-ish\n * - {@link isEqual}: Returns true if two objects have identical arc properties\n */\nexport { Arcs };\n\n/**\n * Generate a few basic geometric shapes\n * Overview:\n * * {@link arrow}\n * * {@link starburst}\n */\nexport { Shapes };\n\n/**\n * Helper functions for working with vectors, which can either be a {@link Points.Point} or Polar {@link Polar.Coord}.\n * While most of the functionality is provided in either of those modules, the Vector module lets you cleanly\n * interoperate between these two coordinates.\n */\nexport { Vectors };\n\n/**\n * Work with Polar coordinates.\n * A Polar {@link Coord} is just `{ angleRadians:number, distance: number }`.\n * \n * Conversion: {@link toCartesian}, {@link fromCartesian}, {@link toString}\n * \n * Math: {@link divide}, {@link invert}, {@link multiply}, {@link dotProduct}\n * \n * Geometric manipulations: {@link rotate}, {@link rotateDegrees}\n * \n * Cleaning: {@link clampMagnitude}, {@link normalise}\n * \n * Debugging: {@link toString}\n * \n * Comparisons: {@link isAntiParallel}, {@link isOpposite}, {@link isParallel}, {@link isCoord}\n */\nexport { Polar };\n\n/**\n * Functions for producing points within a shape.\n * Useful for creating patterns.\n * \n * Overview:\n * * {@link sphereFibonacci}: Generate points on a sphere\n * * {@link circleVogelSpiral}: Generate a sunflower-esque pattern of points in a circle \n */\nexport * as SurfacePoints from './SurfacePoints.js';\n\n/**\n * Triangle processing.\n * \n * Helpers for creating:\n * - {@link Triangles.fromFlatArray}: Create from `[ x1, y1, x2, y2, x3, y3 ]`\n * - {@link Triangles.fromPoints}: Create from three `{ x, y }` sets\n * - {@link Triangles.fromRadius}: Equilateral triangle of a given radius and center\n * \n * There are sub-modules for dealing with particular triangles:\n * - {@link Triangles.Equilateral}: Equilateral triangls\n * - {@link Triangles.Right}: Right-angled triangles\n * - {@link Triangles.Isosceles}: Iscosceles triangles\n * \n * Calculations\n * - {@link angles}: Internal angles in radians. {@link anglesDegrees} for degrees. \n * - {@link area}: Area of triangle\n * - {@link bbox}: Bounding box\n * - {@link centroid}: Centroid of triangle\n * - {@link perimeter}: Calculate perimeter\n * - {@link lengths}: Return array lengths of triangle's edges\n * - {@link rotate}, {@link rotateByVertex}\n * \n * Conversions\n * - {@link edges}: Edges of triangle as {@link Lines.Line}\n * - {@link corners}: Corner positions\n * - {@link innerCircle}: Largest circle to fit within triangle\n * - {@link outerCircle}: Largest circle to enclose triangle\n * - {@link toFlatArray}\n * \n * Comparisons\n * - {@link intersectsPoint}: Whether a point intersects triangle\n * - {@link isEqual}: Check whether two triangles have equal values\n * - {@link isAcute}, {@link isEquilateral}, {@link isIsosceles}, {@link isRightAngle}\n * - {@link isTriangle}: Returns true if object has expected properties of a triangle\n */\nexport * as Triangles from './Triangle.js';\n\n/**\n * Convert angle in degrees to angle in radians.\n * @param angleInDegrees \n * @returns \n */\nexport function degreeToRadian(angleInDegrees:number):number;\n\n/**\n * Convert angles in degrees to angles in radians\n * @param angleInDegrees \n */\nexport function degreeToRadian(angleInDegrees:readonly number[]):readonly number[];\n\n//eslint-disable-next-line func-style\nexport function degreeToRadian(angleInDegrees:number|readonly number[]):number|readonly number[] {\n  if (Array.isArray(angleInDegrees)) {\n    return angleInDegrees.map(v => v * (Math.PI / 180.0));\n  } else {\n    return (angleInDegrees as number) * (Math.PI / 180.0);\n  }\n}\n\n/**\n * Convert angle in radians to angle in degrees\n * @param angleInRadians\n * @returns \n */\nexport function radianToDegree(angleInRadians:number):number;\n\n/**\n * Convert angles in radians to angles in degrees\n * @param angleInRadians \n */\nexport function radianToDegree(angleInRadians:readonly number[]):readonly number[];\n\n//eslint-disable-next-line func-style\nexport function radianToDegree(angleInRadians:number|readonly number[]):number| readonly number[] {\n  if (Array.isArray(angleInRadians)) {\n    return angleInRadians.map(v => v * 180 / Math.PI);\n  } else {\n    return (angleInRadians as number) * 180 / Math.PI;\n  }\n}\n\n/**\n * Angle from x-axis to point (ie. `Math.atan2`)\n * @param point \n * @returns \n */\nexport const radiansFromAxisX = (point:Points.Point):number => Math.atan2(point.x, point.y);\n\ntry {\n  if (typeof window !== `undefined`) {\n    //eslint-disable-next-line functional/immutable-data,@typescript-eslint/no-explicit-any\n    (window as any).ixfx = { ...(window as any).ixfx, Geometry: { Circles, Arcs, Lines, Rects, Points, Paths, Grids, Beziers, Compound, Ellipses, Polar, Shapes, radiansFromAxisX, radianToDegree, degreeToRadian } };\n  }\n} catch { /* no-op */ }","import {degreeToRadian, Polar} from './index.js';\nimport {guard as guardPoint, isPoint} from './Point.js';\nimport {type Path} from './Path.js';\nimport {Lines, Points, Rects} from './index.js';\n\n/**\n * Returns true if parameter is an arc\n * @param p Arc or number\n * @returns \n */\nexport const isArc = (p: Arc | number | unknown): p is Arc => (p as Arc).startRadian !== undefined && (p as Arc).endRadian !== undefined;\n\n/**\n * Returns true if parameter has a positioned (x,y) \n * @param p Point, Arc or ArcPositiond\n * @returns \n */\nexport const isPositioned = (p: Points.Point | Arc | ArcPositioned): p is Points.Point => (p as Points.Point).x !== undefined && (p as Points.Point).y !== undefined;\n\n/**\n * Arc, defined by radius, start and end point in radians, and whether it is counter-clockwise.\n */\nexport type Arc = {\n  /**\n   * Radius of arc\n   */\n  readonly radius: number\n  /**\n   * Start radian\n   */\n  readonly startRadian: number\n  /**\n   * End radian\n   */\n  readonly endRadian: number\n  /**\n   * If true, arc is counter-clockwise\n   */\n  readonly counterClockwise?: boolean\n}\n\n/**\n * An {@link Geometry.Arcs.Arc} that also has a position, given in x, y\n */\nexport type ArcPositioned = Points.Point & Arc;\n\nconst piPi = Math.PI * 2;\n\n/**\n * Returns an arc from degrees, rather than radians\n * @param radius Radius of arc\n * @param startDegrees Start angle in degrees\n * @param endDegrees End angle in degrees\n * @param origin Optional center of arc\n * @returns Arc\n */\nexport function fromDegrees(radius: number, startDegrees: number, endDegrees: number): Arc;\nexport function fromDegrees(radius: number, startDegrees: number, endDegrees: number, origin: Points.Point): ArcPositioned\n\n//eslint-disable-next-line func-style\nexport function fromDegrees(radius: number, startDegrees: number, endDegrees: number, origin?: Points.Point): Arc | ArcPositioned {\n  const a: Arc = {\n    radius,\n    startRadian: degreeToRadian(startDegrees),\n    endRadian: degreeToRadian(endDegrees)\n  };\n  if (isPoint(origin)) {\n    guardPoint(origin);\n    const ap: ArcPositioned = {\n      ...a,\n      x: origin.x,\n      y: origin.y\n    };\n    return Object.freeze(ap);\n  } else {\n    return Object.freeze(a);\n  }\n}\n\n/**\n * Returns a {@link Geometry.Lines.Line} linking the start and end points of an {@link ArcPositioned}.\n *\n * @param arc\n * @returns Line from start to end of arc\n */\nexport const toLine = (arc: ArcPositioned): Lines.Line => Lines.fromPoints(\n  point(arc, arc.startRadian),\n  point(arc, arc.endRadian)\n);\n\n/**\n * Calculates a coordinate on an arc, based on an angle\n * @param arc Arc\n * @param angleRadian Angle of desired coordinate \n * @param origin Origin of arc (0,0 used by default)\n * @returns Coordinate\n */\nexport const point = (arc: Arc | ArcPositioned, angleRadian: number, origin?: Points.Point): Points.Point => {\n  if (angleRadian > arc.endRadian) throw new Error(`angleRadian beyond end angle of arc`);\n  if (angleRadian < arc.startRadian) throw new Error(`angleRadian beyond start angle of arc`);\n\n  if (origin === undefined) {\n    if (isPositioned(arc)) {\n      origin = arc;\n    } else {\n      origin = {x: 0, y: 0};\n    }\n  }\n  return {\n    x: (Math.cos(angleRadian) * arc.radius) + origin.x,\n    y: (Math.sin(angleRadian) * arc.radius) + origin.y\n  };\n};\n\n/**\n * Throws an error if arc instance is invalid\n * @param arc \n */\nexport const guard = (arc: Arc | ArcPositioned) => {\n  if (arc === undefined) throw new Error(`Arc is undefined`);\n  if (isPositioned(arc)) {\n    guardPoint(arc, `arc`);\n  }\n  if (arc.radius === undefined) throw new Error(`Arc radius is undefined (${JSON.stringify(arc)})`);\n  if (typeof arc.radius !== `number`) throw new Error(`Radius must be a number`);\n  if (Number.isNaN(arc.radius)) throw new Error(`Radius is NaN`);\n  if (arc.radius <= 0) throw new Error(`Radius must be greater than zero`);\n\n  if (arc.startRadian === undefined) throw new Error(`Arc is missing 'startRadian' field`);\n  if (arc.endRadian === undefined) throw new Error(`Arc is missing 'startRadian' field`);\n  if (Number.isNaN(arc.endRadian)) throw new Error(`Arc endRadian is NaN`);\n  if (Number.isNaN(arc.startRadian)) throw new Error(`Arc endRadian is NaN`);\n\n  if (arc.startRadian >= arc.endRadian) throw new Error(`startRadian is expected to be les than endRadian`);\n};\n\n\ntype Interpolate = {\n  (amount: number, arc: Arc, origin: Points.Point): Points.Point;\n  (amount: number, arc: ArcPositioned): Points.Point;\n};\n\n/**\n * Compute relative position on arc\n * @param arc Arc\n * @param amount Relative position 0-1\n * @param origin If arc is not positioned, pass in an origin\n * @returns \n */\nexport const interpolate: Interpolate = (amount: number, arc: ArcPositioned | Arc, origin?: Points.Point): Points.Point => {\n  guard(arc);\n  return point(arc, arc.startRadian + ((arc.endRadian - arc.startRadian) * amount), origin);\n};\n\n/**\n * Creates a {@link Geometry.Paths.Path} instance from the arc. This wraps up some functions for convienence.\n * @param arc \n * @returns Path\n */\nexport const toPath = (arc: ArcPositioned): Path => {\n  guard(arc);\n\n  return Object.freeze({\n    ...arc,\n    nearest: (point: Points.Point) => {throw new Error(`not implemented`);},\n    interpolate: (amount: number) => interpolate(amount, arc),\n    bbox: () => bbox(arc) as Rects.RectPositioned,\n    length: () => length(arc),\n    toSvgString: () => toSvg(arc),\n    kind: `arc`\n  });\n};\n\n/**\n * Calculates the length of the arc\n * @param arc \n * @returns Length\n */\nexport const length = (arc: Arc): number => piPi * arc.radius * ((arc.startRadian - arc.endRadian) / piPi);\n\n/**\n * Calculates a {@link Geometry.Rects.Rect | Rect} bounding box for arc.\n * @param arc \n * @returns Rectangle encompassing arc.\n */\nexport const bbox = (arc: ArcPositioned | Arc): Rects.RectPositioned | Rects.Rect => {\n  if (isPositioned(arc)) {\n    const middle = interpolate(0.5, arc);\n    const asLine = toLine(arc);\n    return Points.bbox(middle, asLine.a, asLine.b);\n  } else {\n    return {\n      width: arc.radius * 2,\n      height: arc.radius * 2\n    };\n  }\n};\n\n\ntype ToSvg = {\n  /**\n   * SVG path for arc description\n   * @param origin Origin of arc\n   * @param radius Radius\n   * @param startRadian Start\n   * @param endRadian End\n   */\n  (origin: Points.Point, radius: number, startRadian: number, endRadian: number, opts?: SvgOpts): readonly string[];\n  /**\n   * SVG path for non-positioned arc\n   */\n  (arc: Arc, origin: Points.Point, opts?: SvgOpts): readonly string[];\n  /**\n   * SVG path for positioned arc\n   */\n  (arc: ArcPositioned, opts?: SvgOpts): readonly string[];\n};\n\n\n/**\n * Creates an SV path snippet for arc\n * @returns \n */\nexport const toSvg: ToSvg = (a: Points.Point | Arc | ArcPositioned, b?: number | Points.Point | SvgOpts, c?: number | SvgOpts, d?: number, e?: SvgOpts) => {\n  if (isArc(a)) {\n    if (isPositioned(a)) {\n      return toSvgFull(a, a.radius, a.startRadian, a.endRadian, b as SvgOpts);\n    } else {\n      if (isPoint(b)) {\n        return toSvgFull(b, a.radius, a.startRadian, a.endRadian, c as SvgOpts);\n      } else {\n        return toSvgFull({x: 0, y: 0}, a.radius, a.startRadian, a.endRadian);\n      }\n    }\n  } else {\n    if (c === undefined) throw new Error(`startAngle undefined`);\n    if (d === undefined) throw new Error(`endAngle undefined`);\n\n    if (isPoint(a)) {\n      if (typeof b === `number` && typeof c === `number` && typeof d === `number`) {\n        return toSvgFull(a, b, c, d, e);\n      } else {\n        throw new Error(`Expected (point, number, number, number). Missing a number param.`);\n      }\n    } else {\n      throw new Error(`Expected (point, number, number, number). Missing first point.`);\n    }\n  }\n};\n\nexport type SvgOpts = {\n\n  /**\n   * \"If the arc should be greater or less than 180 degrees\"\n   * ie. tries to maximise arc length\n   */\n  readonly largeArc?: boolean\n\n  /**\n   * \"If the arc should begin moving at positive angles\"\n   * ie. the kind of bend it makes to reach end point\n   */\n  readonly sweep?: boolean\n}\n\nconst toSvgFull = (origin: Points.Point, radius: number, startRadian: number, endRadian: number, opts?: SvgOpts): readonly string[] => {\n  // https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths\n  // A rx ry x-axis-rotation large-arc-flag sweep-flag x y\n  // a rx ry x-axis-rotation large-arc-flag sweep-flag dx dy\n\n  if (opts === undefined || typeof opts !== `object`) opts = {};\n\n  const isFullCircle = endRadian - startRadian === 360;\n  const start = Polar.toCartesian(radius, endRadian - 0.01, origin);\n  const end = Polar.toCartesian(radius, startRadian, origin);\n\n  const {largeArc = false, sweep = false} = opts;\n\n  const d = [`\n    M ${start.x} ${start.y}\n    A ${radius} ${radius} 0 ${largeArc ? `1` : `0`} ${sweep ? `1` : `0`} ${end.x} ${end.y},\n  `];\n\n  //eslint-disable-next-line functional/immutable-data\n  if (isFullCircle) d.push(`z`);\n\n  return d;\n};\n\n/**\n * Calculates the distance between the centers of two arcs\n * @param a\n * @param b \n * @returns Distance \n */\nexport const distanceCenter = (a: ArcPositioned, b: ArcPositioned): number => Points.distance(a, b);\n\n/**\n * Returns true if the two arcs have the same values\n *\n * ```js\n * const arcA = { radius: 5, endRadian: 0, startRadian: 1 };\n * const arcA = { radius: 5, endRadian: 0, startRadian: 1 };\n * arcA === arcB; // false, because object identities are different\n * Arcs.isEqual(arcA, arcB); // true, because values are identical\n * ```\n * @param a\n * @param b\n * @returns {boolean}\n */\nexport const isEqual = (a: Arc | ArcPositioned, b: Arc | ArcPositioned): boolean => {\n  if (a.radius !== b.radius) return false;\n\n  if (isPositioned(a) && isPositioned(b)) {\n    if (a.x !== b.x) return false;\n    if (a.y !== b.y) return false;\n    if (a.z !== b.z) return false;\n    return true;\n  } else if (!isPositioned(a) && !isPositioned(b)) {\n    // no-op\n  } else return false; // one is positioned one not\n\n  if (a.endRadian !== b.endRadian) return false;\n  if (a.startRadian !== b.startRadian) return false;\n  return true;\n};","import { Circles, Lines, Points, Polar, Rects } from './index.js';\nimport { interpolate as lineInterpolate } from './Line.js';\nimport { number as guardNumber } from '../Guards.js';\nimport { clamp as clampNumber, wrap as wrapNumber } from '../data/index.js';\nimport { Arrays } from '../collections/index.js';\nimport { type RandomSource, defaultRandom } from '../Random.js';\nimport { quantiseEvery as quantiseEveryNumber } from '../Numbers.js';\n/**\n * A point, consisting of x, y and maybe z fields.\n */\nexport type Point = {\n  readonly x: number;\n  readonly y: number;\n  readonly z?: number;\n};\n\nexport type Point3d = Point & {\n  readonly z: number;\n};\n\n/**\n * Returns a Point form of either a point, x,y params or x,y,z params.\n * If parameters are undefined, an empty point is returned (0, 0)\n * @ignore\n * @param a\n * @param b\n * @returns\n */\nexport function getPointParam(\n  //eslint-disable-next-line functional/prefer-readonly-type\n  a?: Point | number | number[] | readonly number[],\n  b?: number | boolean,\n  c?: number\n): Point | Point3d {\n  if (a === undefined) return { x: 0, y: 0 };\n\n  if (Array.isArray(a)) {\n    if (a.length === 0) return Object.freeze({ x: 0, y: 0 });\n    if (a.length === 1) return Object.freeze({ x: a[0], y: 0 });\n    if (a.length === 2) return Object.freeze({ x: a[0], y: a[1] });\n    if (a.length === 3) return Object.freeze({ x: a[0], y: a[1], z: a[2] });\n    throw new Error(\n      `Expected array to be 1-3 elements in length. Got ${a.length}.`\n    );\n  }\n\n  if (Points.isPoint(a)) {\n    return a;\n  } else if (typeof a !== `number` || typeof b !== `number`) {\n    throw new Error(\n      `Expected point or x,y as parameters. Got: a: ${JSON.stringify(\n        a\n      )} b: ${JSON.stringify(b)}`\n    );\n  }\n\n  // x,y,z\n  if (typeof c === `number`) {\n    return Object.freeze({ x: a, y: b, z: c });\n  }\n  // x,y\n  return Object.freeze({ x: a, y: b });\n}\n\nexport const dotProduct = (...pts: readonly Point[]): number => {\n  const a = pts.map(Points.toArray);\n  return Arrays.dotProduct(a);\n};\n\n/**\n * An empty point of `{ x:0, y:0 }`.\n *\n * Use `isEmpty` to check if a point is empty.\n */\n//eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Empty = Object.freeze({ x: 0, y: 0 });\n\n/**\n * Placeholder point, where x and y is `NaN`.\n * Use `isPlaceholder` to check if a point is a placeholder.\n */\n//eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Placeholder = Object.freeze({ x: NaN, y: NaN });\n\n/**\n * Returns true if both x and y is 0.\n * Use `Points.Empty` to return an empty point.\n * @param p\n * @returns\n */\nexport const isEmpty = (p: Point) => p.x === 0 && p.y === 0;\n\n/**\n * Returns true if point is a placeholder, where both x and y\n * are `NaN`.\n *\n * Use Points.Placeholder to return a placeholder point.\n * @param p\n * @returns\n */\nexport const isPlaceholder = (p: Point) =>\n  Number.isNaN(p.x) && Number.isNaN(p.y);\n\n/**\n * Returns true if p.x and p.y === null\n * @param p\n * @returns\n */\nexport const isNull = (p: Point) => p.x === null && p.y === null;\n\n/***\n * Returns true if p.x or p.y isNaN\n */\nexport const isNaN = (p: Point) => Number.isNaN(p.x) || Number.isNaN(p.y);\n/**\n * Returns the 'minimum' point from an array of points, using a comparison function.\n *\n * @example Find point closest to a coordinate\n * ```js\n * const points = [...];\n * const center = {x: 100, y: 100};\n *\n * const closestToCenter = findMinimum((a, b) => {\n *  const aDist = distance(a, center);\n *  const bDist = distance(b, center);\n *  if (aDistance < bDistance) return a;\n *  return b;\n * }, points);\n * ```\n * @param compareFn Compare function returns the smallest of `a` or `b`\n * @param points\n * @returns\n */\nexport const findMinimum = (\n  compareFn: (a: Point, b: Point) => Point,\n  ...points: readonly Point[]\n): Point => {\n  if (points.length === 0) throw new Error(`No points provided`);\n  //eslint-disable-next-line functional/no-let\n  let min = points[0];\n  points.forEach((p) => {\n    min = compareFn(min, p);\n  });\n  return min;\n};\n\n/**\n * Returns the left-most of the provided points.\n *\n * Same as:\n * ```js\n * findMinimum((a, b) => {\n *  if (a.x <= b.x) return a;\n *  return b;\n *}, ...points)\n * ```\n *\n * @param points\n * @returns\n */\nexport const leftmost = (...points: readonly Point[]): Point =>\n  findMinimum((a, b) => (a.x <= b.x ? a : b), ...points);\n\n/**\n * Returns the right-most of the provided points.\n *\n * Same as:\n * ```js\n * findMinimum((a, b) => {\n *  if (a.x >= b.x) return a;\n *  return b;\n *}, ...points)\n * ```\n *\n * @param points\n * @returns\n */\nexport const rightmost = (...points: readonly Point[]): Point =>\n  findMinimum((a, b) => (a.x >= b.x ? a : b), ...points);\n\nexport function distance(a: Point, b: Point): number;\nexport function distance(a: Point, x: number, y: number): number;\nexport function distance(a: Point): number;\n\n/**\n * Calculate distance between two points.\n *\n * ```js`\n * // Distance between two points\n * const ptA = { x: 0.5, y:0.8 };\n * const ptB = { x: 1, y: 0.4 };\n * distance(ptA, ptB);\n * // Or, provide x,y as parameters\n * distance(ptA, 0.4, 0.9);\n *\n * // Distance from ptA to x: 0.5, y:0.8, z: 0.1\n * const ptC = { x: 0.5, y:0.5, z: 0.3 };\n * // With x,y,z as parameters:\n * distance(ptC, 0.5, 0.8, 0.1);\n * ``\n * @param a First point\n * @param xOrB Second point, or x coord\n * @param y y coord, if x coord is given\n * @param z Optional z coord, if x and y are given.\n * @returns\n */\n//eslint-disable-next-line func-style\nexport function distance(\n  a: Point | Point3d,\n  xOrB?: Point | Point3d | number,\n  y?: number,\n  z?: number\n): number {\n  const pt = getPointParam(xOrB, y, z);\n  guard(pt);\n\n  if (isPoint3d(pt) && isPoint3d(a)) {\n    return Math.hypot(pt.x - a.x, pt.y - a.y, pt.z - a.z);\n  } else {\n    return Math.hypot(pt.x - a.x, pt.y - a.y);\n  }\n}\n\n/**\n * Returns the distance from point `a` to the exterior of `shape`.\n *\n * @example Distance from point to rectangle\n * ```\n * const distance = distanceToExterior(\n *  {x: 50, y: 50},\n *  {x: 100, y: 100, width: 20, height: 20}\n * );\n * ```\n *\n * @example Find closest shape to point\n * ```\n * import {minIndex} from '../collections/arrays.js';\n * const shapes = [ some shapes... ]; // Shapes to compare against\n * const pt = { x: 10, y: 10 };       // Comparison point\n * const distances = shapes.map(v => distanceToExterior(pt, v));\n * const closest = shapes[minIndex(...distances)];\n * ```\n * @param a Point\n * @param shape Point, or a positioned Rect or Circle.\n * @returns\n */\nexport const distanceToExterior = (\n  a: Point,\n  shape: PointCalculableShape\n): number => {\n  if (Rects.isRectPositioned(shape)) {\n    return Rects.distanceFromExterior(shape, a);\n  }\n  if (Circles.isCirclePositioned(shape)) {\n    return Circles.distanceFromExterior(shape, a);\n  }\n  if (isPoint(shape)) return distance(a, shape);\n  throw new Error(`Unknown shape`);\n};\n\n/**\n * Returns the distance from point `a` to the center of `shape`.\n * @param a Point\n * @param shape Point, or a positioned Rect or Circle.\n * @returns\n */\nexport const distanceToCenter = (\n  a: Point,\n  shape: PointCalculableShape\n): number => {\n  if (Rects.isRectPositioned(shape)) {\n    return Rects.distanceFromExterior(shape, a);\n  }\n  if (Circles.isCirclePositioned(shape)) {\n    return Circles.distanceFromExterior(shape, a);\n  }\n  if (isPoint(shape)) return distance(a, shape);\n  throw new Error(`Unknown shape`);\n};\n\nexport type PointCalculableShape =\n  | Lines.PolyLine\n  | Lines.Line\n  | Rects.RectPositioned\n  | Point\n  | Circles.CirclePositioned;\n\n/**\n * Throws an error if point is invalid\n * @param p\n * @param name\n */\nexport function guard(p: Point, name = `Point`) {\n  if (p === undefined) {\n    throw new Error(\n      `'${name}' is undefined. Expected {x,y} got ${JSON.stringify(p)}`\n    );\n  }\n  if (p === null) {\n    throw new Error(\n      `'${name}' is null. Expected {x,y} got ${JSON.stringify(p)}`\n    );\n  }\n  if (p.x === undefined) {\n    throw new Error(\n      `'${name}.x' is undefined. Expected {x,y} got ${JSON.stringify(p)}`\n    );\n  }\n  if (p.y === undefined) {\n    throw new Error(\n      `'${name}.y' is undefined. Expected {x,y} got ${JSON.stringify(p)}`\n    );\n  }\n  if (typeof p.x !== `number`) {\n    throw new Error(`'${name}.x' must be a number. Got ${p.x}`);\n  }\n  if (typeof p.y !== `number`) {\n    throw new Error(`'${name}.y' must be a number. Got ${p.y}`);\n  }\n\n  if (p.x === null) throw new Error(`'${name}.x' is null`);\n  if (p.y === null) throw new Error(`'${name}.y' is null`);\n\n  if (Number.isNaN(p.x)) throw new Error(`'${name}.x' is NaN`);\n  if (Number.isNaN(p.y)) throw new Error(`'${name}.y' is NaN`);\n}\n\n/**\n * Throws if parameter is not a valid point, or either x or y is 0\n * @param pt\n * @returns\n */\nexport const guardNonZeroPoint = (pt: Point | Point3d, name = `pt`) => {\n  guard(pt, name);\n  guardNumber(pt.x, `nonZero`, `${name}.x`);\n  guardNumber(pt.y, `nonZero`, `${name}.y`);\n  if (typeof pt.z !== `undefined`) {\n    guardNumber(pt.z, `nonZero`, `${name}.z`);\n  }\n\n  return true;\n};\n\n/**\n * Returns a point with Math.abs applied to x and y.\n * ```js\n * Points.abs({ x:1,  y:1  }); // { x: 1, y: 1 }\n * Points.abs({ x:-1, y:1  }); // { x: 1, y: 1 }\n * Points.abs({ x:-1, y:-1 }); // { x: 1, y: 1 }\n * ```\n * @param pt\n * @returns\n */\nexport const abs = (pt: Point) => ({\n  ...pt,\n  x: Math.abs(pt.x),\n  y: Math.abs(pt.y),\n});\n\n/**\n * Returns the angle in radians between `a` and `b`.\n *\n * Eg if `a` is the origin, and `b` is another point,\n * in degrees one would get 0 to -180 when `b` was above `a`.\n *  -180 would be `b` in line with `a`.\n * Same for under `a`.\n *\n * Providing a third point `c` gives the interior angle, where `b` is the middle point.\n * @param a\n * @param b\n * @param c\n * @returns\n */\nexport const angle = (a: Point, b?: Point, c?: Point) => {\n  if (b === undefined) {\n    return Math.atan2(a.y, a.x);\n  } else if (c !== undefined) {\n    return Math.atan2(b.y - a.y, b.x - a.x) - Math.atan2(c.y - a.y, c.x - a.x);\n  }\n  return Math.atan2(b.y - a.y, b.x - a.x);\n};\n\n/**\n * Calculates the [centroid](https://en.wikipedia.org/wiki/Centroid#Of_a_finite_set_of_points) of a set of points\n * Undefined values are skipped over.\n *\n * ```js\n * // Find centroid of a list of points\n * const c1 = centroid(p1, p2, p3, ...);\n *\n * // Find centroid of an array of points\n * const c2 = centroid(...pointsArray);\n * ```\n * @param points\n * @returns A single point\n */\nexport const centroid = (...points: readonly (Point | undefined)[]): Point => {\n  if (!Array.isArray(points)) throw new Error(`Expected list of points`);\n  const sum = points.reduce(\n    (prev, p) => {\n      if (p === undefined) return prev; // Ignore undefined\n      if (Array.isArray(p)) {\n        throw new Error(\n          `'points' list contains an array. Did you mean: centroid(...myPoints)?`\n        );\n      }\n      if (!isPoint(p)) {\n        throw new Error(\n          `'points' contains something which is not a point: ${JSON.stringify(\n            p\n          )}`\n        );\n      }\n      return {\n        x: prev.x + p.x,\n        y: prev.y + p.y,\n      };\n    },\n    { x: 0, y: 0 }\n  );\n\n  return Object.freeze({\n    x: sum.x / points.length,\n    y: sum.y / points.length,\n  });\n};\n\n/**\n * Returns the minimum rectangle that can enclose all provided points\n * @param points\n * @returns\n */\nexport const bbox = (...points: readonly Point[]): Rects.RectPositioned => {\n  const leftMost = findMinimum((a, b) => {\n    if (a.x < b.x) return a;\n    else return b;\n  }, ...points);\n  const rightMost = findMinimum((a, b) => {\n    if (a.x > b.x) return a;\n    else return b;\n  }, ...points);\n  const topMost = findMinimum((a, b) => {\n    if (a.y < b.y) return a;\n    else return b;\n  }, ...points);\n  const bottomMost = findMinimum((a, b) => {\n    if (a.y > b.y) return a;\n    else return b;\n  }, ...points);\n\n  const topLeft = { x: leftMost.x, y: topMost.y };\n  const topRight = { x: rightMost.x, y: topMost.y };\n  const bottomRight = { x: rightMost.x, y: bottomMost.y };\n  const bottomLeft = { x: leftMost.x, y: bottomMost.y };\n  return Rects.maxFromCorners(topLeft, topRight, bottomRight, bottomLeft);\n};\n\n/**\n * Returns _true_ if the parameter has x and y fields\n * @param p\n * @returns\n */\nexport function isPoint(p: number | unknown): p is Point {\n  if (p === undefined) return false;\n  if (p === null) return false;\n  if ((p as Point).x === undefined) return false;\n  if ((p as Point).y === undefined) return false;\n  return true;\n}\n\nexport const isPoint3d = (p: Point | unknown): p is Point3d => {\n  if (p === undefined) return false;\n  if (p === null) return false;\n  if ((p as Point3d).x === undefined) return false;\n  if ((p as Point3d).y === undefined) return false;\n  if ((p as Point3d).z === undefined) return false;\n  return true;\n};\n\n/**\n * Returns point as an array in the form [x,y]. This can be useful for some libraries\n * that expect points in array form.\n *\n * ```\n * const p = {x: 10, y:5};\n * const p2 = toArray(p); // yields [10,5]\n * ```\n * @param p\n * @returns\n */\nexport const toArray = (p: Point): readonly number[] => [p.x, p.y];\n\n/**\n * Returns a human-friendly string representation `(x, y)`.\n * If `precision` is supplied, this will be the number of significant digits.\n * @param p\n * @returns\n */\nexport function toString(p: Point, digits?: number): string {\n  if (p === undefined) return `(undefined)`;\n  if (p === null) return `(null)`;\n\n  const x = digits ? p.x.toFixed(digits) : p.x;\n  const y = digits ? p.y.toFixed(digits) : p.y;\n\n  if (p.z !== undefined) {\n    const z = digits ? p.z.toFixed(digits) : p.z;\n    return `(${x},${y},${z})`;\n  } else {\n    return `(${x},${y})`;\n  }\n}\n\n/**\n * Returns _true_ if the points have identical values\n *\n * ```js\n * const a = {x: 10, y: 10};\n * const b = {x: 10, y: 10;};\n * a === b        // False, because a and be are different objects\n * isEqual(a, b)   // True, because a and b are same value\n * ```\n * @param a\n * @param b\n * @returns _True_ if points are equal\n */\nexport const isEqual = (...p: readonly Point[]): boolean => {\n  if (p === undefined) throw new Error(`parameter 'p' is undefined`);\n  if (p.length < 2) return true;\n\n  //eslint-disable-next-line functional/no-let\n  for (let i = 1; i < p.length; i++) {\n    if (p[i].x !== p[0].x) return false;\n    if (p[i].y !== p[0].y) return false;\n  }\n  return true;\n};\n\n/**\n * Returns true if two points are within a specified range.\n * Provide a point for the range to set different x/y range, or pass a number\n * to use the same range for both axis.\n *\n * Note this simply compares x,y values it does not calcuate distance.\n *\n * @example\n * ```js\n * withinRange({x:100,y:100}, {x:101, y:101}, 1); // True\n * withinRange({x:100,y:100}, {x:105, y:101}, {x:5, y:1}); // True\n * withinRange({x:100,y:100}, {x:105, y:105}, {x:5, y:1}); // False - y axis too far\n * ```\n * @param a\n * @param b\n * @param maxRange\n * @returns\n */\nexport const withinRange = (\n  a: Point,\n  b: Point,\n  maxRange: Point | number\n): boolean => {\n  if (typeof maxRange === `number`) {\n    maxRange = { x: maxRange, y: maxRange };\n  }\n  const x = Math.abs(b.x - a.x);\n  const y = Math.abs(b.y - a.y);\n  return x <= maxRange.x && y <= maxRange.y;\n};\n\n/**\n * Returns a relative point between two points\n * ```js\n * interpolate(0.5, a, b); // Halfway point between a and b\n * ```\n *\n * Alias for Lines.interpolate(amount, a, b);\n *\n * @param amount Relative amount, 0-1\n * @param a\n * @param b\n * @param allowOverflow If true, length of line can be exceeded for `amount` of below 0 and above `1`.\n * @returns {@link Point}\n */\nexport const interpolate = (\n  amount: number,\n  a: Point,\n  b: Point,\n  allowOverflow = false\n): Point => lineInterpolate(amount, a, b, allowOverflow); //({x: (1-amt) * a.x + amt * b.x, y:(1-amt) * a.y + amt * b.y });\n\n/**\n * Returns a point from two coordinates or an array of [x,y]\n * @example\n * ```js\n * let p = from([10, 5]); // yields {x:10, y:5}\n * let p = from(10, 5);   // yields {x:10, y:5}\n * let p = from(10);      // yields {x:10, y:0} 0 is used for default y\n * let p = from();        // yields {x:0, y:0}  0 used for default x & y\n * ```\n * @param xOrArray\n * @param [y]\n * @returns Point\n */\nexport const from = (\n  xOrArray?: number | readonly number[],\n  y?: number\n): Point => {\n  if (Array.isArray(xOrArray)) {\n    if (xOrArray.length !== 2) {\n      throw new Error(`Expected array of length two, got ` + xOrArray.length);\n    }\n    return Object.freeze({\n      x: xOrArray[0],\n      y: xOrArray[1],\n    });\n  } else {\n    if (xOrArray === undefined) xOrArray = 0;\n    else if (Number.isNaN(xOrArray)) throw new Error(`x is NaN`);\n    if (y === undefined) y = 0;\n    else if (Number.isNaN(y)) throw new Error(`y is NaN`);\n    return Object.freeze({ x: xOrArray as number, y: y });\n  }\n};\n\n/**\n * Returns an array of points from an array of numbers.\n *\n * Array can be a continuous series of x, y values:\n * ```\n * [1,2,3,4] would yield: [{x:1, y:2}, {x:3, y:4}]\n * ```\n *\n * Or it can be an array of arrays:\n * ```\n * [[1,2], [3,4]] would yield: [{x:1, y:2}, {x:3, y:4}]\n * ```\n * @param coords\n * @returns\n */\nexport const fromNumbers = (\n  ...coords: readonly ReadonlyArray<number>[] | readonly number[]\n): readonly Point[] => {\n  const pts: Point[] = [];\n\n  if (Array.isArray(coords[0])) {\n    // [[x,y],[x,y]...]\n    (coords as number[][]).forEach((coord) => {\n      if (!(coord.length % 2 === 0)) {\n        throw new Error(`coords array should be even-numbered`);\n      }\n      //eslint-disable-next-line  functional/immutable-data\n      pts.push(Object.freeze({ x: coord[0], y: coord[1] }));\n    });\n  } else {\n    // [x,y,x,y,x,y]\n    if (coords.length % 2 !== 0) {\n      throw new Error(`Expected even number of elements: [x,y,x,y...]`);\n    }\n    //eslint-disable-next-line functional/no-let\n    for (let i = 0; i < coords.length; i += 2) {\n      //eslint-disable-next-line  functional/immutable-data\n      pts.push(\n        Object.freeze({ x: coords[i] as number, y: coords[i + 1] as number })\n      );\n    }\n  }\n  return pts;\n};\n\n/**\n * Returns `a` minus `b`\n *\n * ie.\n * ```js\n * return {\n *   x: a.x - b.x,\n *   y: a.y - b.y\n * };\n * ```\n * @param a Point a\n * @param b Point b\n * @returns Point\n */\nexport function subtract(a: Point, b: Point): Point;\n\n/**\n * Returns `a` minus the given coordinates.\n *\n * ie:\n * ```js\n * return {\n *  x: a.x - x,\n *  y: a.y - y\n * }\n * ```\n * @param a Point\n * @param x X coordinate\n * @param y Y coordinate (if omitted, x is used as well)\n */\nexport function subtract(a: Point, x: number, y?: number): Point;\n\n/**\n * Subtracts two sets of x,y pairs.\n *\n * If first parameter is a Point, any additional properties of it\n * are included in returned Point.\n * @param x1\n * @param y1\n * @param x2\n * @param y2\n */\nexport function subtract(x1: number, y1: number, x2: number, y2: number): Point;\n\n//eslint-disable-next-line func-style\nexport function subtract(\n  a: Point | number,\n  b: Point | number,\n  c?: number,\n  d?: number\n): Point {\n  if (isPoint(a)) {\n    guard(a, `a`);\n    if (isPoint(b)) {\n      guard(b, `b`);\n      return Object.freeze({\n        ...a,\n        x: a.x - b.x,\n        y: a.y - b.y,\n      });\n    } else {\n      if (c === undefined) c = b;\n      return Object.freeze({\n        ...a,\n        x: a.x - b,\n        y: a.y - c,\n      });\n    }\n  } else {\n    guardNumber(a, ``, `a`);\n    if (typeof b !== `number`) {\n      throw new Error(`Second parameter is expected to by y value`);\n    }\n    guardNumber(b, ``, `b`);\n\n    if (Number.isNaN(c)) throw new Error(`Third parameter is NaN`);\n    if (Number.isNaN(d)) throw new Error(`Fourth parameter is NaN`);\n\n    if (c === undefined) c = 0;\n    if (d === undefined) d = 0;\n    return Object.freeze({\n      x: a - c,\n      y: b - d,\n    });\n  }\n}\n\n/**\n * Applies `fn` on `x` and `y` fields, returning all other fields as well\n * ```js\n * const p = {x:1.234, y:4.9};\n * const p2 = Points.apply(p, Math.round);\n * // Yields: {x:1, y:5}\n * ```\n *\n * The name of the field is provided as well. Here we only round the `x` field:\n *\n * ```js\n * const p = {x:1.234, y:4.9};\n * const p2 = Points.apply(p, (v, field) => {\n *  if (field === `x`) return Math.round(v);\n *  return v;\n * });\n * ```\n * @param pt\n * @param fn\n * @returns\n */\nexport const apply = (\n  pt: Point,\n  fn: (v: number, field?: string) => number\n): Point =>\n  Object.freeze<Point>({\n    ...pt,\n    x: fn(pt.x, `x`),\n    y: fn(pt.y, `y`),\n  });\n\n/**\n * Runs a sequential series of functions on `pt`. The output from one feeding into the next.\n * ```js\n * const p = Points.pipelineApply(somePoint, Points.normalise, Points.invert);\n * ```\n *\n * If you want to make a reusable pipeline of functions, consider {@link pipeline} instead.\n * @param pt\n * @param pipeline\n * @returns\n */\nexport const pipelineApply = (\n  pt: Point,\n  ...pipelineFns: readonly ((pt: Point) => Point)[]\n): Point => pipeline(...pipelineFns)(pt); // pipeline.reduce((prev, curr) => curr(prev), pt);\n\n/**\n * Returns a pipeline function that takes a point to be transformed through a series of functions\n * ```js\n * // Create pipeline\n * const p = Points.pipeline(Points.normalise, Points.invert);\n *\n * // Now run it on `somePoint`.\n * // First we normalised, and then invert\n * const changedPoint = p(somePoint);\n * ```\n *\n * If you don't want to create a pipeline, use {@link pipelineApply}.\n * @param pipeline Pipeline of functions\n * @returns\n */\nexport const pipeline =\n  (...pipeline: readonly ((pt: Point) => Point)[]) =>\n  (pt: Point) =>\n    pipeline.reduce((prev, curr) => curr(prev), pt);\n\n/**\n * Reduces over points, treating _x_ and _y_ separately.\n *\n * ```\n * // Sum x and y values\n * const total = Points.reduce(points, (p, acc) => {\n *  return {x: p.x + acc.x, y: p.y + acc.y}\n * });\n * ```\n * @param pts Points to reduce\n * @param fn Reducer\n * @param initial Initial value, uses `{ x:0, y:0 }` by default\n * @returns\n */\nexport const reduce = (\n  pts: readonly Point[],\n  fn: (p: Point, accumulated: Point) => Point,\n  initial: Point = { x: 0, y: 0 }\n): Point => {\n  //eslint-disable-next-line functional/no-let\n  let acc = initial;\n  pts.forEach((p) => {\n    acc = fn(p, acc);\n  });\n  return acc;\n};\n\ntype Sum = {\n  /**\n   * Adds two sets of coordinates. If y is omitted, the parameter for x is added to both x and y\n   */\n  (aX: number, aY: number, bX: number, bY: number): Point;\n  /**\n   * Add x,y to a\n   */\n  (a: Point, x: number, y?: number): Point;\n  /**\n   * Add two points\n   */\n  (a: Point, b?: Point): Point;\n};\n\n/**\n * Returns a Point of `a` plus `b`. ie:\n *\n * ```js\n * return {\n *   x: a.x + b.x,\n *   y: a.y + b.y\n * };\n * ```\n *\n * Usage:\n *\n * ```js\n * sum(ptA, ptB);\n * sum(x1, y1, x2, y2);\n * sum(ptA, x2, y2);\n * sum(ptA, xAndY);\n * ```\n */\nexport const sum: Sum = function (\n  a: Point | number,\n  b: Point | number | undefined,\n  c?: number,\n  d?: number\n): Point {\n  // ✔️ Unit tested\n  if (a === undefined) throw new Error(`a missing. a: ${a}`);\n\n  //eslint-disable-next-line functional/no-let\n  let ptA: Point | undefined;\n  //eslint-disable-next-line functional/no-let\n  let ptB: Point | undefined;\n  if (isPoint(a)) {\n    ptA = a;\n    if (b === undefined) b = Empty;\n    if (isPoint(b)) {\n      ptB = b;\n    } else {\n      if (b === undefined) throw new Error(`Expects x coordinate`);\n      ptB = { x: b, y: c === undefined ? b : c };\n    }\n  } else if (!isPoint(b)) {\n    // Neither of first two params are points\n    if (b === undefined) throw new Error(`Expected number as second param`);\n    ptA = { x: a, y: b };\n    if (c === undefined) throw new Error(`Expects x coordiante`);\n    ptB = { x: c, y: d === undefined ? 0 : d };\n  }\n\n  if (ptA === undefined) throw new Error(`ptA missing. a: ${a}`);\n  if (ptB === undefined) throw new Error(`ptB missing. b: ${b}`);\n  guard(ptA, `a`);\n  guard(ptB, `b`);\n  return Object.freeze({\n    x: ptA.x + ptB.x,\n    y: ptA.y + ptB.y,\n  });\n};\n\n/**\n * Returns `a` multiplied by `b`\n *\n * ie.\n * ```js\n * return {\n *  x: a.x * b.x,\n *   y: a.y * b.y\n * }\n * ```\n * @param a\n * @param b\n * @returns\n */\nexport function multiply(a: Point, b: Point): Point;\n\n/**\n * Multiply by a width,height:\n * ```\n * return {\n *  x: a.x * rect.width,\n *  y: a.y * rect.height\n * };\n * ```\n * @param a\n * @param rect\n */\nexport function multiply(a: Point, rect: Rects.Rect): Point;\n\n/**\n * Returns `a` multipled by some x and/or y scaling factor\n *\n * ie.\n * ```js\n * return {\n *  x: a.x * x\n *   y: a.y * y\n * }\n * ```\n *\n * Usage:\n * ```js\n * multiply(pt, 10, 100); // Scale pt by x:10, y:100\n * multiply(pt, Math.min(window.innerWidth, window.innerHeight)); // Scale both x,y by viewport with or height, whichever is smaller\n * ```\n * @export\n * @parama Point to scale\n * @param x Scale factor for x axis\n * @param [y] Scale factor for y axis (if not specified, the x value is used)\n * @returns Scaled point\n */\nexport function multiply(a: Point, x: number, y?: number): Point;\n\n/**\n * Returns `a` multiplied by `b` point, or given x and y.\n * ie.\n * ```js\n * return {\n *   x: a.x * b.x,\n *   y: a.y * b.y\n * };\n * ```\n * @param a\n * @param bOrX\n * @param y\n * @returns\n */\n/* eslint-disable func-style */\nexport function multiply(\n  a: Point,\n  bOrX: Rects.Rect | Point | number,\n  y?: number\n): Point {\n  // ✔️ Unit tested\n\n  guard(a, `a`);\n  if (typeof bOrX === `number`) {\n    if (typeof y === `undefined`) y = bOrX;\n    guardNumber(y, ``, `y`);\n    guardNumber(bOrX, ``, `x`);\n    return Object.freeze({ x: a.x * bOrX, y: a.y * y });\n  } else if (isPoint(bOrX)) {\n    guard(bOrX, `b`);\n    return Object.freeze({\n      x: a.x * bOrX.x,\n      y: a.y * bOrX.y,\n    });\n  } else if (Rects.isRect(bOrX)) {\n    Rects.guard(bOrX, `rect`);\n    return Object.freeze({\n      x: a.x * bOrX.width,\n      y: a.y * bOrX.height,\n    });\n  } else {\n    throw new Error(\n      `Invalid arguments. a: ${JSON.stringify(a)} b: ${JSON.stringify(bOrX)}`\n    );\n  }\n}\n\n/**\n * Multiplies all components by `v`.\n * Existing properties of `pt` are maintained.\n *\n * ```js\n * multiplyScalar({ x:2, y:4 }, 2);\n * // Yields: { x:4, y:8 }\n * ```\n * @param pt Point\n * @param v Value to multiply by\n * @returns\n */\nexport const multiplyScalar = (\n  pt: Point | Point3d,\n  v: number\n): Point | Point3d => {\n  if (isPoint3d(pt)) {\n    return Object.freeze({\n      ...pt,\n      x: pt.x * v,\n      y: pt.y * v,\n      z: pt.z * v,\n    });\n  } else {\n    return Object.freeze({\n      ...pt,\n      x: pt.x * v,\n      y: pt.y * v,\n    });\n  }\n};\n/**\n * Divides a / b:\n * ```js\n * return {\n *  x: a.x / b.x,\n *  y: a.y / b.y\n * }\n * ```\n * @param a\n * @param b\n */\nexport function divide(a: Point, b: Point): Point;\n\n/**\n * Divides point a by rectangle:\n * ```js\n * return {\n *  x: a.x / rect.width,\n *  y: a.y / rect.hight\n * };\n * ```\n * @param a\n * @param Rect\n */\nexport function divide(a: Point, rect: Rects.Rect): Point;\n\n/**\n * Divides a point by x,y.\n * ```js\n * return {\n *  x: a.x / x,\n *  y: b.y / y\n * };\n * ```\n * @param a Point\n * @param x X divisor\n * @param y Y divisor. If unspecified, x divisor is used.\n */\nexport function divide(a: Point, x: number, y?: number): Point;\n\n/**\n * Divides two sets of points:\n * ```js\n * return {\n *  x: x1 / x2,\n *  y: y1 / y2\n * };\n * ```\n * @param x1\n * @param y1\n * @param x2\n * @param y2\n */\nexport function divide(x1: number, y1: number, x2?: number, y2?: number): Point;\n\n/**\n * Divides a from b. If a contains a zero, that axis will be returned as zero\n * @param a\n * @param b\n * @param c\n * @param d\n * @returns\n */\nexport function divide(\n  a: Point | number,\n  b: Rects.Rect | Point | number,\n  c?: number,\n  d?: number\n): Point {\n  // ✔️ Unit tested\n\n  if (isPoint(a)) {\n    guard(a, `a`);\n    if (isPoint(b)) {\n      guardNonZeroPoint(b);\n      return Object.freeze({\n        x: a.x / b.x,\n        y: a.y / b.y,\n      });\n    } else if (Rects.isRect(b)) {\n      Rects.guard(b, `rect`);\n      return Object.freeze({\n        x: a.x / b.width,\n        y: a.y / b.height,\n      });\n    } else {\n      if (c === undefined) c = b;\n      guard(a);\n      guardNumber(b, `nonZero`, `x`);\n      guardNumber(c, `nonZero`, `y`);\n      return Object.freeze({\n        x: a.x / b,\n        y: a.y / c,\n      });\n    }\n  } else {\n    if (typeof b !== `number`) {\n      throw new Error(`expected second parameter to be y1 coord`);\n    }\n    guardNumber(a, `positive`, `x1`);\n    guardNumber(b, `positive`, `y1`);\n    if (c === undefined) c = 1;\n    if (d === undefined) d = c;\n    guardNumber(c, `nonZero`, `x2`);\n    guardNumber(d, `nonZero`, `y2`);\n\n    return Object.freeze({\n      x: a / c,\n      y: b / d,\n    });\n  }\n}\n\n/**\n * Returns a function that divides a point:\n * ```js\n * const f = divideFn(100, 200);\n * f(50,100); // Yields: { x: 0.5, y: 0.5 }\n * ```\n *\n * Input values can be Point, separate x,y and optional z values or an array:\n * ```js\n * const f = divideFn({ x: 100, y: 100 });\n * const f = divideFn( 100, 100 );\n * const f = divideFn([ 100, 100 ]);\n * ```\n *\n * Likewise the returned function an take these as inputs:\n * ```js\n * f({ x: 100, y: 100});\n * f( 100, 100 );\n * f([ 100, 100 ]);\n * ```\n *\n * Function throws if divisor has 0 for any coordinate (since we can't divide by 0)\n * @param a Divisor point, array of points or x\n * @param b Divisor y value\n * @param c Divisor z value\n * @returns\n */\n//eslint-disable-next-line functional/prefer-readonly-type\nexport function divideFn(a: Point | number | number[], b?: number, c?: number) {\n  const divisor = getPointParam(a, b, c);\n  guardNonZeroPoint(divisor, `divisor`);\n\n  return (\n    aa: Point | number | number[],\n    bb?: number,\n    cc?: number\n  ): Point | Point3d => {\n    const dividend = getPointParam(aa, bb, cc);\n\n    if (typeof dividend.z !== `undefined`) {\n      return Object.freeze({\n        x: dividend.x / divisor.x,\n        y: dividend.y / divisor.y,\n        z: dividend.z / (divisor.z ?? 1),\n      });\n    } else {\n      return Object.freeze({\n        x: dividend.x / divisor.x,\n        y: dividend.y / divisor.y,\n      });\n    }\n  };\n}\n\nexport const quantiseEvery = (pt: Point, snap: Point, middleRoundsUp = true) =>\n  Object.freeze({\n    x: quantiseEveryNumber(pt.x, snap.x, middleRoundsUp),\n    y: quantiseEveryNumber(pt.y, snap.y, middleRoundsUp),\n  });\n/**\n * Simple convex hull impementation. Returns a set of points which\n * enclose `pts`.\n *\n * For more power, see something like [Hull.js](https://github.com/AndriiHeonia/hull)\n * @param pts\n * @returns\n */\nexport const convexHull = (...pts: readonly Point[]): readonly Point[] => {\n  const sorted = [...pts].sort(compareByX);\n  if (sorted.length === 1) return sorted;\n\n  const x = (points: Point[]) => {\n    const v: Point[] = [];\n    points.forEach((p) => {\n      while (v.length >= 2) {\n        const q = v[v.length - 1];\n        const r = v[v.length - 2];\n        if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x)) {\n          //eslint-disable-next-line functional/immutable-data\n          v.pop();\n        } else break;\n      }\n      //eslint-disable-next-line functional/immutable-data\n      v.push(p);\n    });\n    //eslint-disable-next-line functional/immutable-data\n    v.pop();\n    return v;\n  };\n\n  const upper = x(sorted);\n  //eslint-disable-next-line functional/immutable-data\n  const lower = x(sorted.reverse());\n\n  if (upper.length === 1 && lower.length === 1 && isEqual(lower[0], upper[0])) {\n    return upper;\n  }\n  return upper.concat(lower);\n};\n\n/**\n * Returns -2 if both x & y of a is less than b\n * Returns -1 if either x/y of a is less than b\n *\n * Returns 2 if both x & y of a is greater than b\n * Returns 1 if either x/y of a is greater than b's x/y\n *\n * Returns 0 if x/y of a and b are equal\n * @param a\n * @param b\n * @returns\n */\nexport const compare = (a: Point, b: Point): number => {\n  if (a.x < b.x && a.y < b.y) return -2;\n  if (a.x > b.x && a.y > b.y) return 2;\n  if (a.x < b.x || a.y < b.y) return -1;\n  if (a.x > b.x || a.y > b.y) return 1;\n  if (a.x === b.x && a.x === b.y) return 0;\n  return NaN;\n};\n\n/**\n * Compares points based on x value.\n * Returns above 0 if a.x > b.x (to the right)\n * Returns 0 if a.x === b.x\n * Returns below 0 if a.x < b.x (to the left)\n *\n * @example Sorting by x\n * ```js\n * arrayOfPoints.sort(Points.compareByX);\n * ```\n * @param a\n * @param b\n * @returns\n */\nexport const compareByX = (a: Point, b: Point): number =>\n  a.x - b.x || a.y - b.y;\n\n/**\n * Project `origin` by `distance` and `angle` (radians).\n *\n * To figure out rotation, imagine a horizontal line running through `origin`.\n * * Rotation = 0 deg puts the point on the right of origin, on same y-axis\n * * Rotation = 90 deg/3:00 puts the point below origin, on the same x-axis\n * * Rotation = 180 deg/6:00 puts the point on the left of origin on the same y-axis\n * * Rotation = 270 deg/12:00 puts the point above the origin, on the same x-axis\n *\n * ```js\n * // Yields a point 100 units away from 10,20 with 10 degrees rotation (ie slightly down)\n * const a = Points.project({x:10, y:20}, 100, degreeToRadian(10));\n * ```\n * @param origin\n * @param distance\n * @param angle\n * @returns\n */\nexport const project = (origin: Point, distance: number, angle: number) => {\n  const x = Math.cos(angle) * distance + origin.x;\n  const y = Math.sin(angle) * distance + origin.y;\n  return { x, y };\n};\n\n/**\n * Rotate a single point by a given amount in radians\n * @param pt\n * @param amountRadian\n * @param origin\n */\nexport function rotate(pt: Point, amountRadian: number, origin?: Point): Point;\n\n/**\n * Rotate several points by a given amount in radians\n * @param pt Points\n * @param amountRadian Amount to rotate in radians. If 0 is given, a copy of the input array is returned\n * @param origin Origin to rotate around. Defaults to 0,0\n */\nexport function rotate(\n  pt: ReadonlyArray<Point>,\n  amountRadian: number,\n  origin?: Point\n): ReadonlyArray<Point>;\n\nexport function rotate(\n  pt: Point | ReadonlyArray<Point>,\n  amountRadian: number,\n  origin?: Point\n): Point | ReadonlyArray<Point> {\n  if (origin === undefined) origin = { x: 0, y: 0 };\n  guard(origin, `origin`);\n  guardNumber(amountRadian, ``, `amountRadian`);\n  const arrayInput = Array.isArray(pt);\n\n  // no-op\n  if (amountRadian === 0) return pt;\n\n  if (!arrayInput) {\n    pt = [pt as Point];\n  }\n\n  const ptAr = pt as ReadonlyArray<Point>;\n  ptAr.forEach((p, index) => guard(p, `pt[${index}]`));\n\n  //eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const asPolar = ptAr.map((p) => Polar.fromCartesian(p, origin!));\n  const rotated = asPolar.map((p) => Polar.rotate(p, amountRadian));\n  const asCartesisan = rotated.map((p) => Polar.toCartesian(p, origin));\n  if (arrayInput) return asCartesisan;\n  else return asCartesisan[0];\n\n  //const p = Polar.fromCartesian(pt, origin);\n  //const pp = Polar.rotate(p, amountRadian);\n  //return Polar.toCartesian(pp, origin);\n}\n\n//eslint-disable-next-line functional/prefer-readonly-type\nexport const rotatePointArray = (\n  v: ReadonlyArray<readonly number[]>,\n  amountRadian: number\n): number[][] => {\n  const mat = [\n    [Math.cos(amountRadian), -Math.sin(amountRadian)],\n    [Math.sin(amountRadian), Math.cos(amountRadian)],\n  ];\n  const result = [];\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < v.length; ++i) {\n    //eslint-disable-next-line functional/immutable-data\n    result[i] = [\n      mat[0][0] * v[i][0] + mat[0][1] * v[i][1],\n      mat[1][0] * v[i][0] + mat[1][1] * v[i][1],\n    ];\n  }\n  return result;\n};\n\nconst length = (ptOrX: Point | number, y?: number): number => {\n  if (isPoint(ptOrX)) {\n    y = ptOrX.y;\n    ptOrX = ptOrX.x;\n  }\n  if (y === undefined) throw new Error(`Expected y`);\n  return Math.sqrt(ptOrX * ptOrX + y * y);\n};\n\n/**\n * Normalise point as a unit vector.\n *\n * ```js\n * normalise({x:10, y:20});\n * normalise(10, 20);\n * ```\n * @param ptOrX Point, or x value\n * @param y y value if first param is x\n * @returns\n */\nexport const normalise = (ptOrX: Point | number, y?: number): Point => {\n  const pt = getPointParam(ptOrX, y);\n  const l = length(pt);\n  if (l === 0) return Points.Empty;\n  return Object.freeze({\n    x: pt.x / l,\n    y: pt.y / l,\n  });\n};\n\n/**\n * Normalises a point by a given width and height\n * @param pt Point\n * @param width Width\n * @param height Height\n */\nexport function normaliseByRect(\n  pt: Point,\n  width: number,\n  height: number\n): Point;\n\nexport function normaliseByRect(pt: Point, rect: Rects.Rect): Point;\n\n/**\n * Normalises x,y by width and height so it is on a 0..1 scale\n * @param x\n * @param y\n * @param width\n * @param height\n */\nexport function normaliseByRect(\n  x: number,\n  y: number,\n  width: number,\n  height: number\n): Point;\n\n/**\n * Normalises a point so it is on a 0..1 scale\n * @param a Point, or x\n * @param b y coord or width\n * @param c height or width\n * @param d height\n * @returns Point\n */\nexport function normaliseByRect(\n  a: Point | number,\n  b: number | Rects.Rect,\n  c?: number,\n  d?: number\n): Point {\n  // ✔️ Unit tested\n  if (isPoint(a)) {\n    if (typeof b === `number` && c !== undefined) {\n      guardNumber(b, `positive`, `width`);\n      guardNumber(c, `positive`, `height`);\n    } else {\n      if (!Rects.isRect(b)) {\n        throw new Error(`Expected second parameter to be a rect`);\n      }\n      c = b.height;\n      b = b.width;\n    }\n    return Object.freeze({\n      x: a.x / b,\n      y: a.y / c,\n    });\n  } else {\n    guardNumber(a, `positive`, `x`);\n    if (typeof b !== `number`) {\n      throw new Error(`Expecting second parameter to be a number (width)`);\n    }\n    if (typeof c !== `number`) {\n      throw new Error(`Expecting third parameter to be a number (height)`);\n    }\n\n    guardNumber(b, `positive`, `y`);\n    guardNumber(c, `positive`, `width`);\n    if (d === undefined) throw new Error(`Expected height parameter`);\n    guardNumber(d, `positive`, `height`);\n    return Object.freeze({\n      x: a / c,\n      y: b / d,\n    });\n  }\n}\n\n/**\n * Returns a random point on a 0..1 scale.\n * ```js\n * import { Points } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * const pt = Points.random(); // eg {x: 0.2549012, y:0.859301}\n * ```\n *\n * A custom source of randomness can be provided:\n * ```js\n * import { Points } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * import { weightedFn } from \"https://unpkg.com/ixfx/dist/random.js\"\n * const pt = Points.random(weightedFn(`quadIn`));\n * ```\n * @param rando\n * @returns\n */\nexport const random = (rando?: RandomSource): Point => {\n  if (rando === undefined) rando = defaultRandom;\n\n  return Object.freeze({\n    x: rando(),\n    y: rando(),\n  });\n};\n\n/**\n * Wraps a point to be within `ptMin` and `ptMax`.\n * Note that max values are _exclusive_, meaning the return value will always be one less.\n *\n * Eg, if a view port is 100x100 pixels, wrapping the point 150,100 yields 50,99.\n *\n * ```js\n * // Wraps 150,100 to on 0,0 -100,100 range\n * wrap({x:150,y:100}, {x:100,y:100});\n * ```\n *\n * Wrap normalised point:\n * ```js\n * wrap({x:1.2, y:1.5}); // Yields: {x:0.2, y:0.5}\n * ```\n * @param pt Point to wrap\n * @param ptMax Maximum value, or `{ x:1, y:1 }` by default\n * @param ptMin Minimum value, or `{ x:0, y:0 }` by default\n * @returns Wrapped point\n */\nexport const wrap = (\n  pt: Point,\n  ptMax: Point = { x: 1, y: 1 },\n  ptMin: Point = { x: 0, y: 0 }\n): Point => {\n  // ✔️ Unit tested\n  guard(pt, `pt`);\n  guard(ptMax, `ptMax`);\n  guard(ptMin, `ptMin`);\n\n  return Object.freeze({\n    x: wrapNumber(pt.x, ptMin.x, ptMax.x),\n    y: wrapNumber(pt.y, ptMin.y, ptMax.y),\n  });\n};\n\n/**\n * Inverts one or more axis of a point\n * ```js\n * invert({x:10, y:10}); // Yields: {x:-10, y:-10}\n * invert({x:10, y:10}, `x`); // Yields: {x:-10, y:10}\n * ```\n * @param pt Point to invert\n * @param what Which axis. If unspecified, both axies are inverted\n * @returns\n */\nexport const invert = (\n  pt: Point | Point3d,\n  what: `both` | `x` | `y` | `z` = `both`\n): Point => {\n  switch (what) {\n    case `both`:\n      if (isPoint3d(pt)) {\n        return Object.freeze({\n          ...pt,\n          x: pt.x * -1,\n          y: pt.y * -1,\n          z: pt.z * -1,\n        });\n      } else {\n        return Object.freeze({\n          ...pt,\n          x: pt.x * -1,\n          y: pt.y * -1,\n        });\n      }\n    case `x`:\n      return Object.freeze({\n        ...pt,\n        x: pt.x * -1,\n      });\n    case `y`:\n      return Object.freeze({\n        ...pt,\n        y: pt.y * -1,\n      });\n    case `z`:\n      if (isPoint3d(pt)) {\n        return Object.freeze({\n          ...pt,\n          z: pt.z * -1,\n        });\n      } else throw new Error(`pt parameter is missing z`);\n    default:\n      throw new Error(`Unknown what parameter. Expecting 'both', 'x' or 'y'`);\n  }\n};\n\n/**\n * Returns a point with rounded x,y coordinates. By default uses `Math.round` to round.\n * ```js\n * toIntegerValues({x:1.234, y:5.567}); // Yields: {x:1, y:6}\n * ```\n *\n * ```js\n * toIntegerValues(pt, Math.ceil); // Use Math.ceil to round x,y of `pt`.\n * ```\n * @param pt Point to round\n * @param rounder Rounding function, or Math.round by default\n * @returns\n */\nexport const toIntegerValues = (\n  pt: Point,\n  rounder: (x: number) => number = Math.round\n): Point => {\n  guard(pt, `pt`);\n  return Object.freeze({\n    x: rounder(pt.x),\n    y: rounder(pt.y),\n  });\n};\n\n/**\n * Clamps the magnitude of a point.\n * This is useful when using a Point as a vector, to limit forces.\n * @param pt\n * @param max Maximum magnitude (1 by default)\n * @param min Minimum magnitude (0 by default)\n * @returns\n */\nexport const clampMagnitude = (pt: Point, max = 1, min = 0): Point => {\n  const length = distance(pt);\n  //eslint-disable-next-line functional/no-let\n  let ratio = 1;\n  if (length > max) {\n    ratio = max / length;\n  } else if (length < min) {\n    ratio = min / length;\n  }\n  return ratio === 1 ? pt : multiply(pt, ratio, ratio);\n};\n\n/**\n * Clamps a point to be between `min` and `max` (0 & 1 by default)\n * @param pt Point\n * @param min Minimum value (0 by default)\n * @param max Maximum value (1 by default)\n */\nexport function clamp(pt: Point, min?: number, max?: number): Point;\n\n/**\n * Clamps an x,y pair to be between `min` and `max` (0 & 1 by default)\n * @param x X coordinate\n * @param y Y coordinate\n * @param min Minimum value (0 by default)\n * @param max Maximum value (1 by default)\n */\nexport function clamp(x: number, y: number, min?: number, max?: number): Point;\nexport function clamp(\n  a: Point | number,\n  b?: number,\n  c?: number,\n  d?: number\n): Point {\n  // ✔️ Unit tested\n\n  if (isPoint(a)) {\n    if (b === undefined) b = 0;\n    if (c === undefined) c = 1;\n    guardNumber(b, ``, `min`);\n    guardNumber(c, ``, `max`);\n    return Object.freeze({\n      x: clampNumber(a.x, b, c),\n      y: clampNumber(a.y, b, c),\n    });\n  } else {\n    if (b === undefined) throw new Error(`Expected y coordinate`);\n    if (c === undefined) c = 0;\n    if (d === undefined) d = 1;\n    guardNumber(a, ``, `x`);\n    guardNumber(b, ``, `y`);\n    guardNumber(c, ``, `min`);\n    guardNumber(d, ``, `max`);\n\n    return Object.freeze({\n      x: clampNumber(a, c, d),\n      y: clampNumber(b, c, d),\n    });\n  }\n}\n\nexport type PointRelation = (\n  a: Point | number,\n  b?: number\n) => PointRelationResult;\n\nexport type PointRelationResult = {\n  /**\n   * Angle from start\n   */\n  readonly angle: number;\n  /**\n   * Distance from start\n   */\n  readonly distanceFromStart: number;\n  /**\n   * Distance from last compared point\n   */\n  readonly distanceFromLast: number;\n\n  /**\n   * Center point from start\n   */\n  readonly centroid: Point;\n  /**\n   * Average of all points seen\n   * This is calculated by summing x,y and dividing by total points\n   */\n  readonly average: Point;\n\n  /**\n   * Speed. Distance/millisecond from one sample to the next.\n   */\n  readonly speed: number;\n};\n\n/**\n * Tracks the relation between two points\n *\n * ```js\n * import { Points } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n *\n * // Start point: 50,50\n * const t = Points.relation({x:50,y:50});\n *\n * // Compare to 0,0\n * const { angle, distanceFromStart, distanceFromLast, average, centroid, speed } = t({x:0,y:0});\n * ```\n *\n * X,y coordinates can also be used as parameters:\n * ```js\n * const t = Points.relation(50, 50);\n * const result = t(0, 0);\n * // result.speed, result.angle ...\n * ```\n *\n * Note that all the intermediate values are not stored. It keeps the initial\n * point, and the previous point. If you want to compute something over a set\n * of prior points, you may want to use [Data.pointsTracker](./Data.pointsTracker.html)\n * @param start\n * @returns\n */\nexport const relation = (a: Point | number, b?: number): PointRelation => {\n  const start = getPointParam(a, b);\n  //eslint-disable-next-line functional/no-let\n  let totalX = 0;\n  //eslint-disable-next-line functional/no-let\n  let totalY = 0;\n  //eslint-disable-next-line functional/no-let\n  let count = 0;\n  //eslint-disable-next-line functional/no-let\n  let lastUpdate = performance.now();\n  //eslint-disable-next-line functional/no-let\n  let lastPoint = start;\n  const update = (aa: Point | number, bb?: number) => {\n    const p = getPointParam(aa, bb);\n    totalX += p.x;\n    totalY += p.y;\n    count++;\n\n    const distanceFromStart = distance(p, start);\n    const distanceFromLast = distance(p, lastPoint);\n\n    // Track speed\n    const now = performance.now();\n    const speed = distanceFromLast / (now - lastUpdate);\n    lastUpdate = now;\n\n    lastPoint = p;\n\n    return Object.freeze({\n      angle: angle(p, start),\n      distanceFromStart,\n      distanceFromLast,\n      speed,\n      centroid: centroid(p, start),\n      average: {\n        x: totalX / count,\n        y: totalY / count,\n      },\n    });\n  };\n\n  return update;\n};\n\nexport const progressBetween = (\n  currentPos: Points.Point | Points.Point3d,\n  from: Points.Point | Points.Point3d,\n  to: Points.Point | Points.Point3d\n) => {\n  // Via: https://www.habrador.com/tutorials/math/2-passed-waypoint/?s=09\n  // from -> current\n  const a = Points.subtract(currentPos, from);\n\n  // from -> to\n  const b = Points.subtract(to, from);\n\n  if (Points.isPoint3d(a) && Points.isPoint3d(b)) {\n    return (\n      (a.x * b.x + a.y * b.y + a.z * b.z) / (b.x * b.x + b.y * b.y + b.z * b.z)\n    );\n  } else {\n    return (a.x * b.x + a.y * b.y) / (b.x * b.x + b.y * b.y);\n  }\n};\n// const p = { x: 100, y: 100 };\n// console.log(`distance: ` + distance(p));\n// const pp = clampMagnitude(p, 10);\n// console.log(`c1: ${toString(pp)} distance: ${distance(pp)}`);\n\n// const p = { x: 42, y: 1337};\n// const pNorm = normalise(p);\n// console.log(`normalised: ${toString(pNorm)}`);\n","import {Arrays} from '../collections/index.js';\nimport {minFast} from '../collections/NumericArrays.js';\nimport {number as guardNumber, percent as guardPercent} from '../Guards.js';\nimport {Points, Rects} from './index.js';\nimport {type Path} from './Path.js';\nimport {guard as guardPoint, type Point} from './Point.js';\n\n/**\n * A line, which consists of an `a` and `b` {@link Points.Point}.\n */\nexport type Line = {\n  readonly a: Points.Point\n  readonly b: Points.Point\n}\n\n//eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Empty = Object.freeze({\n  a: Object.freeze({x: 0, y: 0}),\n  b: Object.freeze({x: 0, y: 0})\n});\n\n//eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Placeholder = Object.freeze({\n  a: Object.freeze({x: NaN, y: NaN}),\n  b: Object.freeze({x: NaN, y: NaN})\n});\n\n/**\n * Returns true if `l` is the same as Line.Empty, that is\n * the `a` and `b` points are Points.Empty.\n * @param l \n * @returns \n */\nexport const isEmpty = (l: Line): boolean => Points.isEmpty(l.a) && Points.isEmpty(l.b);\n\nexport const isPlaceholder = (l: Line): boolean => Points.isPlaceholder(l.a) && Points.isPlaceholder(l.b);\n\n/**\n * A PolyLine, consisting of more than one line.\n */\nexport type PolyLine = ReadonlyArray<Line>;\n\n/**\n * Returns true if `p` is a valid line, containing `a` and `b` Points.\n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * Lines.isLine(l);\n * ```\n * @param p Value to check\n * @returns True if a valid line.\n */\nexport const isLine = (p: Path | Line | Points.Point): p is Line => {\n  if (p === undefined) return false;\n  if ((p as Line).a === undefined) return false;\n  if ((p as Line).b === undefined) return false;\n  if (!Points.isPoint((p as Line).a)) return false;\n  if (!Points.isPoint((p as Line).b)) return false;\n  return true;\n};\n\n/**\n * Returns true if `p` is a {@link PolyLine}, ie. an array of {@link Line}s.\n * Validates all items in array.\n * @param p \n * @returns\n */\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const isPolyLine = (p: any): p is PolyLine => {\n  if (!Array.isArray(p)) return false;\n\n  const valid = !p.some(v => !isLine(v));\n  return valid;\n};\n\n/**\n * Returns true if the lines have the same value. Note that only\n * the line start and end points are compared. So the lines might\n * be different in other properties, and `isEqual` will still return\n * true.\n * \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * const a = { a: {x:0,  y: 10 }, b: { x: 20, y: 20 }};\n * const b = { a: {x:0,  y: 10 }, b: { x: 20, y: 20 }};\n * a === b; // false, because they are different objects\n * Lines.isEqual(a, b); // true, because they have the same value\n * ```\n * @param {Line} a\n * @param {Line} b\n * @returns {boolean}\n */\nexport const isEqual = (a: Line, b: Line): boolean => Points.isEqual(a.a, b.a) && Points.isEqual(a.b, b.b);\n\n/**\n * Applies `fn` to both start and end points.\n * \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * // Line 10,10 -> 20,20\n * const line = Lines.fromNumbers(10,10, 20,20);\n * \n * // Applies randomisation to both x and y.\n * const rand = (p) => ({\n *  x: p.x * Math.random(),\n *  y: p.y * Math.random()\n * });\n * \n * // Applies our randomisation function\n * const line2 = apply(line, rand);\n * ```\n * @param line Line\n * @param fn Function that takes a point and returns a point\n * @returns \n */\nexport const apply = (line: Line, fn: (p: Points.Point) => Points.Point) => Object.freeze<Line>(\n  {\n    ...line,\n    a: fn(line.a),\n    b: fn(line.b)\n  }\n);\n\n\n/**\n * Throws an exception if:\n * * line is undefined\n * * a or b parameters are missing\n * \n * Does not validate points\n * @param line \n * @param paramName \n */\nexport const guard = (line: Line, paramName: string = `line`) => {\n  if (line === undefined) throw new Error(`${paramName} undefined`);\n  if (line.a === undefined) throw new Error(`${paramName}.a undefined. Expected {a:Point, b:Point}. Got: ${JSON.stringify(line)}`);\n  if (line.b === undefined) throw new Error(`${paramName}.b undefined. Expected {a:Point, b:Point} Got: ${JSON.stringify(line)}`);\n};\n\n/**\n * Returns the angle in radians of a line, or two points\n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * Lines.angleRadian(line);\n * Lines.angleRadian(ptA, ptB);\n * ```\n * @param lineOrPoint \n * @param b \n * @returns \n */\nexport const angleRadian = (lineOrPoint: Line | Points.Point, b?: Points.Point): number => {\n  //eslint-disable-next-line functional/no-let\n  let a: Points.Point;\n  if (isLine(lineOrPoint)) {\n    a = lineOrPoint.a;\n    b = lineOrPoint.b;\n  } else {\n    a = lineOrPoint;\n    if (b === undefined) throw new Error(`b point must be provided`);\n  }\n  return Math.atan2(b.y - a.y, b.x - a.x);\n};\n\n/**\n * Multiplies start and end of line by point.x, point.y.\n * \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * \n * // Line 1,1 -> 10,10\n * const l = Lines.fromNumbers(1, 1, 10, 10);\n * const ll = Lines.multiply(l, {x:2, y:3});\n * // Yields: 2,20 -> 3,30\n * ```\n * @param line \n * @param point \n * @returns \n */\nexport const multiply = (line: Line, point: Points.Point): Line => (Object.freeze({\n  ...line,\n  a: Points.multiply(line.a, point),\n  b: Points.multiply(line.b, point)\n}));\n\n/**\n * Divides both start and end points by given x,y\n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * \n * // Line 1,1 -> 10,10\n * const l = Lines.fromNumbers(1,1,10,10);\n * const ll = Lines.divide(l, {x:2, y:4});\n * // Yields: 0.5,0.25 -> 5,2.5\n * ```\n * @param line \n * @param point \n * @returns \n */\nexport const divide = (line: Line, point: Points.Point): Line => Object.freeze({\n  ...line,\n  a: Points.divide(line.a, point),\n  b: Points.divide(line.b, point)\n});\n\n/**\n * Adds both start and end points by given x,y\n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * // Line 1,1 -> 10,10\n * const l = Lines.fromNumbers(1,1,10,10);\n * const ll = Lines.sum(l, {x:2, y:4});\n * // Yields: 3,5 -> 12,14\n * ```\n * @param line \n * @param point \n * @returns \n */\nexport const sum = (line: Line, point: Points.Point): Line => Object.freeze({\n  ...line,\n  a: Points.sum(line.a, point),\n  b: Points.sum(line.b, point)\n});\n\n/**\n * Subtracts both start and end points by given x,y\n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * \n * // Line 1,1 -> 10,10\n * const l = Lines.fromNumbers(1,1,10,10);\n * const ll = Lines.subtract(l, {x:2, y:4});\n * // Yields: -1,-3 -> 8,6\n * ```\n * @param line \n * @param point \n * @returns \n */\nexport const subtract = (line: Line, point: Points.Point): Line => Object.freeze({\n  ...line,\n  a: Points.subtract(line.a, point),\n  b: Points.subtract(line.b, point)\n});\n\n/**\n * Normalises start and end points by given width and height. Useful\n * for converting an absolutely-defined line to a relative one.\n * \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * \n * // Line 1,1 -> 10,10\n * const l = Lines.fromNumbers(1,1,10,10);\n * const ll = Lines.normaliseByRect(l, 10, 10);\n * // Yields: 0.1,0.1 -> 1,1\n * ```\n * @param line \n * @param width\n * @param height \n * @returns \n */\nexport const normaliseByRect = (line: Line, width: number, height: number): Line => Object.freeze({\n  ...line,\n  a: Points.normaliseByRect(line.a, width, height),\n  b: Points.normaliseByRect(line.b, width, height)\n});\n\n\n/**\n * Returns true if `point` is within `maxRange` of `line`.\n * \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * const line = Lines.fromNumbers(0,20,20,20);\n * Lines.withinRange(line, {x:0,y:21}, 1); // True\n * ```\n * @param line\n * @param point\n * @param maxRange \n * @returns True if point is within range\n */\nexport const withinRange = (line: Line, point: Points.Point, maxRange: number): boolean => {\n  const dist = distance(line, point);\n  return dist <= maxRange;\n};\n\n/**\n * Returns the length between two points\n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * Lines.length(ptA, ptB);\n * ```\n * @param a First point\n * @param b Second point\n * @returns \n */\nexport function length(a: Points.Point, b: Points.Point): number;\n\n/**\n * Returns length of line. If a polyline (array of lines) is provided,\n * it is the sum total that is returned.\n * \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * Lines.length(a: {x:0, y:0}, b: {x: 100, y:100});\n * Lines.length(lines);\n * ```\n * @param line Line\n */\nexport function length(line: Line | PolyLine): number;\n\n/**\n * Returns length of line, polyline or between two points\n * \n * @param aOrLine Point A, line or polyline (array of lines)\n * @param pointB Point B, if first parameter is a point\n * @returns Length (total accumulated length for arrays)\n */\n//eslint-disable-next-line func-style\nexport function length(aOrLine: Points.Point | Line | PolyLine, pointB?: Points.Point): number {\n  if (isPolyLine(aOrLine)) {\n    const sum = aOrLine.reduce((acc, v) => length(v) + acc, 0);\n    return sum;\n  }\n\n  const [a, b] = getPointsParam(aOrLine, pointB);\n  const x = b.x - a.x;\n  const y = b.y - a.y;\n  if (a.z !== undefined && b.z !== undefined) {\n    const z = b.z - a.z;\n    return Math.hypot(x, y, z);\n  } else {\n    return Math.hypot(x, y);\n  }\n}\n\n/**\n * Returns the mid-point of a line (same as `interpolate` with an amount of 0.5)\n * \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * Lines.midpoint(line); // Returns {x, y}\n * ```\n * @param aOrLine \n * @param pointB \n * @returns \n */\nexport const midpoint = (aOrLine: Points.Point | Line, pointB?: Points.Point): Points.Point => {\n  const [a, b] = getPointsParam(aOrLine, pointB);\n  return interpolate(0.5, a, b);\n};\n\n/**\n * Returns [a,b] points from either a line parameter, or two points.\n * It additionally applies the guardPoint function to ensure validity.\n * This supports function overloading.\n * @ignore\n * @param aOrLine \n * @param b \n * @returns \n */\nexport const getPointsParam = (aOrLine: Points.Point | Line, b?: Points.Point): readonly [Points.Point, Points.Point] => {\n  //eslint-disable-next-line functional/no-let\n  let a;\n  if (isLine(aOrLine)) {\n    b = aOrLine.b;\n    a = aOrLine.a;\n  } else {\n    a = aOrLine;\n    if (b === undefined) throw new Error(`Since first parameter is not a line, two points are expected. Got a: ${JSON.stringify(a)} b: ${JSON.stringify(b)}`);\n  }\n  guardPoint(a, `a`);\n  guardPoint(a, `b`);\n\n  return [a, b];\n};\n\n/**\n * Returns the nearest point on `line` closest to `point`.\n * \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * const pt = Lines.nearest(line, {x:10,y:10});\n * ```\n * \n * If an array of lines is provided, it will be the closest point amongst all the lines\n * @param line Line or array of lines\n * @param point\n * @returns Point `{ x, y }`\n */\nexport const nearest = (line: Line | readonly Line[], point: Points.Point): Points.Point => {\n\n  const n = (line: Line): Points.Point => {\n    const {a, b} = line;\n    const atob = {x: b.x - a.x, y: b.y - a.y};\n    const atop = {x: point.x - a.x, y: point.y - a.y};\n    const len = atob.x * atob.x + atob.y * atob.y;\n\n    //eslint-disable-next-line functional/no-let\n    let dot = atop.x * atob.x + atop.y * atob.y;\n    const t = Math.min(1, Math.max(0, dot / len));\n    dot = (b.x - a.x) * (point.y - a.y) - (b.y - a.y) * (point.x - a.x);\n    return {x: a.x + atob.x * t, y: a.y + atob.y * t};\n  };\n\n  if (Array.isArray(line)) {\n    const pts = line.map(l => n(l));\n    const dists = pts.map(p => Points.distance(p, point));\n    return Object.freeze<Points.Point>(pts[Arrays.minIndex(...dists)]);\n  } else {\n    return Object.freeze<Points.Point>(n(line as Line));\n  }\n};\n\n/**\n * Calculates [slope](https://en.wikipedia.org/wiki/Slope) of line.\n * \n * @example\n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * Lines.slope(line);\n * Lines.slope(ptA, ptB)\n * ```\n * @param lineOrPoint Line or point. If point is provided, second point must be given too\n * @param b Second point if needed\n * @returns \n */\nexport const slope = (lineOrPoint: Line | Points.Point, b?: Points.Point): number => {\n  //eslint-disable-next-line functional/no-let\n  let a: Points.Point;\n  if (isLine(lineOrPoint)) {\n    //eslint-disable-next-line functional/no-let\n    a = lineOrPoint.a;\n    b = lineOrPoint.b;\n  } else {\n    a = lineOrPoint;\n    if (b === undefined) throw new Error(`b parameter required`);\n  }\n  if (b !== undefined) {\n    return (b.y - a.y) / (b.x - a.x);\n  } else throw Error(`Second point missing`);\n};\n\nconst directionVector = (line: Line): Points.Point => ({\n  x: line.b.x - line.a.x,\n  y: line.b.y - line.a.y\n});\n\nconst directionVectorNormalised = (line: Line): Points.Point => {\n  const l = length(line);\n  const v = directionVector(line);\n  return {\n    x: v.x / l,\n    y: v.y / l\n  };\n};\n\n/**\n * Returns a point perpendicular to `line` at a specified `distance`. Use negative\n * distances for the other side of line.\n * ```\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * // Project a point 100 units away from line, at its midpoint.\n * const pt = Lines.perpendicularPoint(line, 100, 0.5);\n * ```\n * @param line Line\n * @param distance Distance from line. Use negatives to flip side\n * @param amount Relative place on line to project point from. 0 projects from A, 0.5 from the middle, 1 from B.\n */\nexport const perpendicularPoint = (line: Line, distance: number, amount: number = 0) => {\n  const origin = interpolate(amount, line);\n  const dvn = directionVectorNormalised(line);\n  return {\n    x: origin.x - dvn.y * distance,\n    y: origin.y + dvn.x * distance\n  };\n};\n\n/**\n * Returns a parallel line to `line` at `distance`.\n * \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * const l = Lines.parallel(line, 10);\n * ```\n * @param line\n * @param distance \n */\nexport const parallel = (line: Line, distance: number): Line => {\n  const dv = directionVector(line);\n  const dvn = directionVectorNormalised(line);\n  const a = {\n    x: line.a.x - dvn.y * distance,\n    y: line.a.y + dvn.x * distance\n  };\n  return {\n    a,\n    b: {\n      x: a.x + dv.x,\n      y: a.y + dv.y\n    }\n  };\n};\n\n/**\n * Scales a line from its midpoint\n * \n * @example Shorten by 50%, anchored at the midpoint\n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * const l = {\n *  a: {x:50, y:50}, b: {x: 100, y: 90}\n * }\n * const l2 = Lines.scaleFromMidpoint(l, 0.5);\n * ```\n * @param line\n * @param factor \n */\nexport const scaleFromMidpoint = (line: Line, factor: number): Line => {\n  const a = interpolate(factor / 2, line);\n  const b = interpolate(0.5 + factor / 2, line);\n  return {a, b};\n};\n\n/**\n * Calculates `y` where `line` intersects `x`.\n * @param line Line to extend\n * @param x Intersection of x-axis.\n */\nexport const pointAtX = (line: Line, x: number): Points.Point => {\n  const y = line.a.y + (x - line.a.x) * slope(line);\n  return Object.freeze({x: x, y});\n};\n\n/**\n * Returns a line extended from its `a` point by a specified distance\n *\n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * const line = {a: {x: 0, y:0}, b: {x:10, y:10} }\n * const extended = Lines.extendFromA(line, 2);\n * ```\n * @param line\n * @param distance\n * @return Newly extended line\n */\nexport const extendFromA = (line: Line, distance: number): Line => {\n  const len = length(line);\n  return Object.freeze({\n    ...line,\n    a: line.a,\n    b: Object.freeze({\n      x: line.b.x + (line.b.x - line.a.x) / len * distance,\n      y: line.b.y + (line.b.y - line.a.y) / len * distance,\n    })\n  })\n    ;\n};\n\n/**\n * Yields every integer point along `line`. \n * \n * @example Basic usage\n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * const l = { a: {x: 0, y: 0}, b: {x: 100, y: 100} };\n * for (const p of Lines.pointsOf(l)) {\n *  // Do something with point `p`...\n * }\n * ```\n * \n * Some precision is lost as start and end\n * point is also returned as an integer.\n * \n * Uses [Bresenham's line algorithm](https://en.wikipedia.org/wiki/Bresenham%27s_line_algorithm)\n * @param line Line\n */\n//eslint-disable-next-line func-style\nexport function* pointsOf(line: Line): Generator<Points.Point> {\n  // Via https://play.ertdfgcvb.xyz/#/src/demos/dyna\n  const {a, b} = line;\n  //eslint-disable-next-line functional/no-let\n  let x0 = Math.floor(a.x);\n  //eslint-disable-next-line functional/no-let\n  let y0 = Math.floor(a.y);\n  const x1 = Math.floor(b.x);\n  const y1 = Math.floor(b.y);\n  const dx = Math.abs(x1 - x0);\n  const dy = -Math.abs(y1 - y0);\n  const sx = x0 < x1 ? 1 : -1;\n  const sy = y0 < y1 ? 1 : -1;\n  //eslint-disable-next-line functional/no-let\n  let err = dx + dy;\n\n  while (true) {\n    yield {x: x0, y: y0};\n    if (x0 === x1 && y0 === y1) break;\n    const e2 = 2 * err;\n    if (e2 >= dy) {\n      err += dy;\n      x0 += sx;\n    }\n    if (e2 <= dx) {\n      err += dx;\n      y0 += sy;\n    }\n  }\n}\n\n/**\n * Returns the distance of `point` to the \n * nearest point on `line`.\n * \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * const d = Lines.distance(line, {x:10,y:10});\n * ```\n * \n * If an array of lines is provided, the shortest distance is returned.\n * @param line Line (or array of lines)\n * @param point Point to check against\n * @returns Distance\n */\nexport const distance = (line: Line | ReadonlyArray<Line>, point: Points.Point): number => {\n  if (Array.isArray(line)) {\n    const distances = line.map(l => distanceSingleLine(l, point));\n    return minFast(distances);\n  } else {\n    return distanceSingleLine(line as Line, point);\n  }\n};\n\n/**\n * Returns the distance of `point` to the nearest point on `line`\n * \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * const distance = Lines.distanceSingleLine(line, pt);\n * ```\n * @param line Line\n * @param point Target point\n * @returns \n */\nconst distanceSingleLine = (line: Line, point: Points.Point): number => {\n  guard(line, `line`);\n  guardPoint(point, `point`);\n\n  if (length(line) === 0) {\n    // Line is really a point\n    return length(line.a, point);\n  }\n\n  const near = nearest(line, point);\n  return length(near, point);\n};\n\n/**\n * Calculates a point in-between `a` and `b`.\n * \n * If an interpolation amount below 0 or above 1 is given, _and_\n * `allowOverflow_ is true, a point will be returned that is extended\n * past `line`. This is useful for easing functions which might\n * briefly go past the limits.\n * \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * \n * // Get {x,y} at 50% along line\n * Lines.interpolate(0.5, line);\n * \n * // Get {x,y} at 80% between point A and B\n * Lines.interpolate(0.8, ptA, ptB);\n * ```\n * @param amount Relative position, 0 being at a, 0.5 being halfway, 1 being at b\n * @param a Start\n * @param b End\n * @returns Point between a and b\n */\nexport function interpolate(amount: number, a: Points.Point, pointB: Points.Point, allowOverflow?: boolean): Points.Point;\n\n/**\n * Calculates a point in-between `line`'s start and end points.\n * \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * \n * // Get {x, y } at 50% along line\n * Lines.interpolate(0.5, line);\n * ```\n * \n * Any additional properties from `b`  are returned on the result as well.\n * @param amount 0..1 \n * @param line Line\n * @param allowOverflow If true, interpolation amount is permitted to exceed 0..1, extending the line\n */\nexport function interpolate(amount: number, line: Line, allowOverflow?: boolean): Points.Point;\n\n/**\n * Calculates a point in-between a line's start and end points.\n * \n * @param amount Interpolation amount\n * @param aOrLine Line, or first point\n * @param pointBOrAllowOverflow Second point (if needed) or allowOverflow.\n * @param allowOverflow If true, interpolation amount is permitted to exceed 0..1, extending the line.\n * @returns \n */\n//eslint-disable-next-line func-style\nexport function interpolate(amount: number, aOrLine: Points.Point | Line, pointBOrAllowOverflow?: Points.Point | boolean, allowOverflow?: boolean): Points.Point {\n\n  if (typeof pointBOrAllowOverflow === `boolean`) {\n    allowOverflow = pointBOrAllowOverflow;\n    pointBOrAllowOverflow = undefined;\n  }\n\n  if (!allowOverflow) guardPercent(amount, `amount`);\n  else guardNumber(amount, ``, `amount`);\n\n  const [a, b] = getPointsParam(aOrLine, pointBOrAllowOverflow);\n\n  const d = length(a, b);\n  const d2 = d * (1 - amount);\n\n  // Points are identical, return a copy of b\n  if (d === 0 && d2 === 0) return Object.freeze({...b});\n\n  const x = b.x - (d2 * (b.x - a.x) / d);\n  const y = b.y - (d2 * (b.y - a.y) / d);\n\n  return Object.freeze({\n    ...b,\n    x: x,\n    y: y\n  });\n}\n\n/**\n * Returns a string representation of two points\n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * console.log(Lines.toString(a, b)));\n * ```\n * @param a \n * @param b \n * @returns \n */\nexport function toString(a: Points.Point, b: Points.Point): string;\n\n/**\n * Returns a string representation of a line \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * Lines.toString(line);\n * ```\n * @param line \n */\nexport function toString(line: Line): string;\n\n/**\n * Returns a string representation of a line or two points.\n * @param a\n * @param b \n * @returns \n */\n//eslint-disable-next-line func-style\nexport function toString(a: Points.Point | Line, b?: Points.Point): string {\n  if (isLine(a)) {\n    guard(a, `a`);\n    b = a.b;\n    a = a.a;\n  } else if (b === undefined) throw new Error(`Expect second point if first is a point`);\n  return Points.toString(a) + `-` + Points.toString(b);\n}\n\n/**\n * Returns a line from a basis of coordinates (x1, y1, x2, y2)\n * \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * // Line from 0,1 -> 10,15\n * Lines.fromNumbers(0, 1, 10, 15);\n * ```\n * @param x1 \n * @param y1 \n * @param x2 \n * @param y2 \n * @returns \n */\nexport const fromNumbers = (x1: number, y1: number, x2: number, y2: number): Line => {\n  if (Number.isNaN(x1)) throw new Error(`x1 is NaN`);\n  if (Number.isNaN(x2)) throw new Error(`x2 is NaN`);\n  if (Number.isNaN(y1)) throw new Error(`y1 is NaN`);\n  if (Number.isNaN(y2)) throw new Error(`y2 is NaN`);\n\n  const a = {x: x1, y: y1};\n  const b = {x: x2, y: y2};\n  return fromPoints(a, b);\n};\n\n/**\n * Returns an array representation of line: [a.x, a.y, b.x, b.y]\n * \n * See {@link fromFlatArray} to create a line _from_ this representation.\n *\n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * Lines.toFlatArray(line);\n * Lines.toFlatArray(pointA, pointB);\n * ```\n * @export\n * @param {Point} a\n * @param {Point} b\n * @returns {number[]}\n */\nexport const toFlatArray = (a: Points.Point | Line, b: Points.Point): readonly number[] => {\n  if (isLine(a)) {\n    return [a.a.x, a.a.y, a.b.x, a.b.y];\n  } else if (Points.isPoint(a) && Points.isPoint(b)) {\n    return [a.x, a.y, b.x, b.y];\n  } else {\n    throw new Error(`Expected single line parameter, or a and b points`);\n  }\n};\n\n/**\n * Yields all the points of all the lines.\n * \n * ```js\n * const lines = [ ..some array of lines.. ];\n * for (const pt of Lines.asPoints(lines)) {\n *  // Yields a and then b of each point sequentially\n * }\n * ```\n * @param lines \n */\n//eslint-disable-next-line func-style\nexport function* asPoints(lines: Iterable<Line>) {\n  for (const l of lines) {\n    yield l.a;\n    yield l.b;\n  }\n}\n\n/**\n * Returns an SVG description of line\n * ```\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js';\n * Lines.toSvgString(ptA, ptB);\n * ```\n * @param a \n * @param b \n * @returns \n */\nexport const toSvgString = (a: Points.Point, b: Points.Point): readonly string[] => [`M${a.x} ${a.y} L ${b.x} ${b.y}`];\n\n/**\n * Returns a line from four numbers [x1,y1,x2,y2].\n * \n * See {@link toFlatArray} to create an array from a line.\n * \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * const line = Lines.fromFlatArray(...[0, 0, 100, 100]);\n * // line is {a: { x:0, y:0 }, b: { x: 100, y: 100 } }\n * ```\n * @param arr Array in the form [x1,y1,x2,y2]\n * @returns Line\n */\nexport const fromFlatArray = (arr: readonly number[]): Line => {\n  if (!Array.isArray(arr)) throw new Error(`arr parameter is not an array`);\n  if (arr.length !== 4) throw new Error(`array is expected to have length four`);\n  return fromNumbers(arr[0], arr[1], arr[2], arr[3]);\n};\n\n/**\n * Returns a line from two points\n * \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * // Line from 0,1 to 10,15\n * const line = Lines.fromPoints( { x:0, y:1 }, { x:10, y:15 });\n * // line is: { a: { x: 0, y: 1}, b: { x: 10, y: 15 } };\n * ```\n * @param a Start point\n * @param b End point\n * @returns \n */\nexport const fromPoints = (a: Points.Point, b: Points.Point): Line => {\n  guardPoint(a, `a`);\n  guardPoint(b, `b`);\n  a = Object.freeze({...a});\n  b = Object.freeze({...b});\n  return Object.freeze({\n    a: a,\n    b: b\n  });\n};\n\n/**\n * Returns an array of lines that connects provided points. Note that line is not closed.\n * \n * Eg, if points a,b,c are provided, two lines are provided: a->b and b->c.\n * \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * const lines = Lines.joinPointsToLines(ptA, ptB, ptC);\n * // lines is an array of, well, lines\n * ```\n * @param points \n * @returns \n */\nexport const joinPointsToLines = (...points: readonly Points.Point[]): PolyLine => {\n  const lines = [];\n  //eslint-disable-next-line functional/no-let\n  let start = points[0];\n  //eslint-disable-next-line functional/no-let\n  for (let i = 1; i < points.length; i++) {\n    //eslint-disable-next-line functional/immutable-data\n    lines.push(fromPoints(start, points[i]));\n    start = points[i];\n  }\n  return lines;\n};\n\n/**\n * Returns a {@link LinePath} from two points\n * \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * const path = Lines.fromPointsToPath(ptA, ptB);\n * ```\n * @param a \n * @param b \n * @returns \n */\nexport const fromPointsToPath = (a: Points.Point, b: Points.Point): LinePath => toPath(fromPoints(a, b));\n\n/**\n * Returns a rectangle that encompasses dimension of line\n * \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js';\n * const rect = Lines.bbox(line);\n * ```\n */\nexport const bbox = (line: Line): Rects.RectPositioned => Points.bbox(line.a, line.b);\n\n/**\n * Returns a path wrapper around a line instance. This is useful if there are a series\n * of operations you want to do with the same line because you don't have to pass it\n * in as an argument to each function.\n * \n * Note that the line is immutable, so a function like `sum` returns a new LinePath,\n * wrapping the result of `sum`.\n * \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * // Create a path\n * const l = Lines.toPath(fromNumbers(0,0,10,10));\n * \n * // Now we can use it...\n * l.length();\n * \n * // Mutate functions return a new path\n * const ll = l.sum({x:10,y:10});\n * ll.length();\n * ```\n * @param line \n * @returns \n */\nexport const toPath = (line: Line): LinePath => {\n  const {a, b} = line;\n  return Object.freeze({\n    ...line,\n    length: () => length(a, b),\n    interpolate: (amount: number) => interpolate(amount, a, b),\n    bbox: () => bbox(line),\n    toString: () => toString(a, b),\n    toFlatArray: () => toFlatArray(a, b),\n    toSvgString: () => toSvgString(a, b),\n    toPoints: () => [a, b],\n    rotate: (amountRadian: number, origin: Points.Point) => toPath(rotate(line, amountRadian, origin)),\n    nearest: (point: Point) => nearest(line, point),\n    sum: (point: Points.Point) => toPath(sum(line, point)),\n    divide: (point: Points.Point) => toPath(divide(line, point)),\n    multiply: (point: Point) => toPath(multiply(line, point)),\n    subtract: (point: Point) => toPath(subtract(line, point)),\n    midpoint: () => midpoint(a, b),\n    distance: (point: Point) => distanceSingleLine(line, point),\n    parallel: (distance: number) => parallel(line, distance),\n    perpendicularPoint: (distance: number, amount?: number) => perpendicularPoint(line, distance, amount),\n    slope: () => slope(line),\n    withinRange: (point: Point, maxRange: number) => withinRange(line, point, maxRange),\n    isEqual: (otherLine: Line) => isEqual(line, otherLine),\n    apply: (fn: (point: Points.Point) => Points.Point) => toPath(apply(line, fn)),\n    kind: `line`\n  });\n};\n\nexport type LinePath = Line & Path & {\n  toFlatArray(): readonly number[]\n  toPoints(): readonly Points.Point[]\n  rotate(amountRadian: number, origin: Points.Point): LinePath\n  sum(point: Points.Point): LinePath\n  divide(point: Points.Point): LinePath\n  multiply(point: Points.Point): LinePath\n  subtract(point: Points.Point): LinePath\n  apply(fn: (point: Points.Point) => Points.Point): LinePath\n  midpoint(): Point\n  distance(point: Point): number\n  parallel(distance: number): Line\n  perpendicularPoint(distance: number, amount?: number): Point\n  slope(): number\n  withinRange(point: Point, maxRange: number): boolean\n  isEqual(otherLine: Line): boolean\n}\n\n/**\n * Returns a line that is rotated by `angleRad`. By default it rotates\n * around its center, but an arbitrary `origin` point can be provided.\n * If `origin` is a number, it's presumed to be a 0..1 percentage of the line.\n * \n * ```js\n * import { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * \n * // Rotates line by 0.1 radians around point 10,10\n * const r = Lines.rotate(line, 0.1, {x:10,y:10});\n * \n * // Rotate line by 5 degrees around its center\n * const r = Lines.rotate(line, degreeToRadian(5));\n * \n * // Rotate line by 5 degres around its end point\n * const r = Lines.rotate(line, degreeToRadian(5), line.b);\n * \n * // Rotate by 90 degrees at the 80% position\n * const r = Lines.rotated = rotate(line, Math.PI / 2, 0.8);\n * ```\n * @param line Line to rotate\n * @param amountRadian Angle in radians to rotate by\n * @param origin Point to rotate around. If undefined, middle of line will be used\n * @returns \n */\nexport const rotate = (line: Line, amountRadian?: number, origin?: Points.Point | number): Line => {\n  if (amountRadian === undefined || amountRadian === 0) return line;\n  if (origin === undefined) origin = 0.5;\n  if (typeof origin === `number`) {\n    origin = interpolate(origin, line.a, line.b);\n  }\n  return Object.freeze({\n    ...line,\n    a: Points.rotate(line.a, amountRadian, origin),\n    b: Points.rotate(line.b, amountRadian, origin)\n  });\n};","// Easings from https://easings.net/\nimport { interpolate } from '../data/Interpolate.js';\nimport {\n  msElapsedTimer,\n  type HasCompletion,\n  relativeTimer,\n  ticksElapsedTimer,\n  type TimerSource,\n} from '../flow/index.js';\n\nconst sqrt = Math.sqrt;\nconst pow = Math.pow;\nconst cos = Math.cos;\n//eslint-disable-next-line @typescript-eslint/naming-convention\nconst pi = Math.PI;\nconst sin = Math.sin;\n/*\ntype RelativeTimer = {\n  reset(): void\n  elapsed(): number\n  isDone(): boolean\n}\n\ntype TimerSource = (upperBound: number) => RelativeTimer;\n\nconst msRelativeTimer = function (upperBound: number): RelativeTimer {\n  let start = performance.now();\n  return {\n    reset: () => {\n      start = performance.now();\n    },\n    elapsed: () => clamp((performance.now() - start) / upperBound),\n    isDone: () => (performance.now() - start) >= upperBound,\n  };\n};\n\nconst tickRelativeTimer = function (upperBound: number): RelativeTimer {\n  let start = 0;\n  return {\n    reset: () => {\n      start = 0;\n    },\n    elapsed: () => clamp(start++ / upperBound),\n    isDone: () => start >= upperBound,\n  };\n};\n*/\n\nexport type EasingFn = (x: number) => number;\n\n/**\n * Creates an easing based on clock time. Time\n * starts being counted when easing function is created.\n * @example Time based easing\n * ```\n * import { Easings } from \"https://unpkg.com/ixfx/dist/modulation.js\";\n * const t = Easings.time(`quintIn`, 5*1000); // Will take 5 seconds to complete\n * ...\n * t.compute(); // Get current value of easing\n * t.reset();   // Reset to 0\n * t.isDone;    // _True_ if finished\n * ```\n * @param nameOrFn Name of easing, or an easing function\n * @param durationMs Duration in milliseconds\n * @returns Easing\n */\nexport const time = function (\n  nameOrFn: EasingName | EasingFn,\n  durationMs: number\n): Easing {\n  return create(nameOrFn, durationMs, msElapsedTimer);\n};\n\n/**\n * Creates an easing based on ticks\n *\n * @example Tick-based easing\n * ```\n * import { Easings } from \"https://unpkg.com/ixfx/dist/modulation.js\";\n * const t = Easings.tick(`sineIn`, 1000);   // Will take 1000 ticks to complete\n * t.compute(); // Each call to `compute` progresses the tick count\n * t.reset();   // Reset to 0\n * t.isDone;    // _True_ if finished\n * ```\n * @param nameOrFn Name of easing, or an easing function\n * @param durationTicks Duration in ticks\n * @returns Easing\n */\nexport const tick = function (\n  nameOrFn: EasingName | EasingFn,\n  durationTicks: number\n): Easing {\n  return create(nameOrFn, durationTicks, ticksElapsedTimer);\n};\n\n/**\n * 'Ease' from `0` to `1` over a delicious curve. Commonly used for animation\n * and basic modelling of phyical motion.\n *\n * Create via {@link tick} or {@link time}, call `compute` to calculate the next\n * value in the progression, until you reach `1` or `isDone` returns true.\n *\n */\nexport type Easing = HasCompletion & {\n  /**\n   * Computes the current value of the easing\n   *\n   * @returns {number}\n   */\n  compute(): number;\n\n  /**\n   * Reset the easing\n   */\n  reset(): void;\n  /**\n   * Returns true if the easing is complete\n   *\n   * @returns {boolean}\n   */\n  get isDone(): boolean;\n};\n\n/**\n * Creates a new easing by name\n *\n * ```js\n * import { Easings } from \"https://unpkg.com/ixfx/dist/modulation.js\";\n * const e = Easings.create(`circInOut`, 1000, msElapsedTimer);\n * ```\n * @param nameOrFn Name of easing, or an easing function\n * @param duration Duration (meaning depends on timer source)\n * @param timerSource Timer source. Eg {@link tickRelativeTimer}, {@link msRelativeTimer}\n * @returns\n */\nconst create = function (\n  nameOrFn: EasingName | EasingFn,\n  duration: number,\n  timerSource: TimerSource\n): Easing {\n  //eslint-disable-next-line functional/no-let\n  let fn: EasingFn | undefined;\n  if (typeof nameOrFn === `function`) fn = nameOrFn;\n  else fn = get(nameOrFn);\n  if (fn === undefined) {\n    throw new Error(`Easing function not found: ${nameOrFn}`);\n  }\n\n  // Get a relative version of timer\n  const timer = relativeTimer(duration, {\n    timer: timerSource(),\n    clampValue: true,\n  });\n\n  return {\n    get isDone() {\n      return timer.isDone;\n    },\n    compute: () => {\n      const relative = timer.elapsed;\n      //eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return fn!(relative);\n    },\n    reset: () => {\n      timer.reset();\n    },\n  };\n};\n\n/**\n * Creates an easing function using a simple cubic bezier defined by two points.\n *\n * Eg: https://cubic-bezier.com/#0,1.33,1,-1.25\n *  a:0, b: 1.33, c: 1, d: -1.25\n *\n * ```js\n * import { Easings } from \"https://unpkg.com/ixfx/dist/modulation.js\";\n * // Time-based easing using bezier\n * const e = Easings.time(fromCubicBezier(1.33, -1.25), 1000);\n * e.compute();\n * ```\n * @param b\n * @param d\n * @param t\n * @returns Value\n */\nexport const fromCubicBezier =\n  (b: number, d: number): EasingFn =>\n  (t: number) => {\n    const s = 1 - t;\n    const s2 = s * s;\n    const t2 = t * t;\n    const t3 = t2 * t;\n    return 3 * b * s2 * t + 3 * d * s * t2 + t3;\n  };\n\n/**\n * Returns a mix of two easing functions.\n *\n * ```js\n * import { Easings } from \"https://unpkg.com/ixfx/dist/modulation.js\";\n * // Get a 50/50 mix of two easing functions at t=0.25\n * Easings.mix(0.5, 0.25, Easings.functions.sineIn, Easings.functions.sineOut);\n *\n * // 10% of sineIn, 90% of sineOut\n * Easings.mix(0.90, 0.25, Easings.functions.sineIn, Easings.functions.sineOut);\n * ```\n * @param amt 'Progress' value passed to the easing functions\n * @param balance Mix between a and b\n * @param easingA\n * @param easingB\n * @returns Numeric value\n */\nexport const mix = (\n  amt: number,\n  balance: number,\n  easingA: EasingFn,\n  easingB: EasingFn\n) => interpolate(balance, easingA(amt), easingB(amt));\n\n/**\n * Returns a 'crossfade' of two easing functions, synchronised with the progress through the easing. That is:\n * * 0.0 will yield 100% of easingA at its `easing(0)` value.\n * * 0.2 will yield 80% of a, 20% of b, with both at their `easing(0.2)` values\n * * 0.5 will yield 50% of both functions both at their `easing(0.5)` values\n * * 0.8 will yield 20% of a, 80% of a, with both at their `easing(0.8)` values\n * * 1.0 will yield 100% of easingB at its `easing(1)` value.\n *\n * So easingB will only ever kick in at higher `amt` values and `easingA` will only be present in lower valus.\n *\n * ```js\n * import { Easings } from \"https://unpkg.com/ixfx/dist/modulation.js\";\n * Easings.crossFade(0.5, Easings.functions.sineIn, Easings.functions.sineOut);\n * ```\n * @param amt\n * @param easingA\n * @param easingB\n * @returns Numeric value\n */\nexport const crossfade = (amt: number, easingA: EasingFn, easingB: EasingFn) =>\n  mix(amt, amt, easingA, easingB);\n\n/**\n * Easing name\n */\nexport type EasingName = keyof typeof functions;\n\n/**\n * Returns an easing function by name, or _undefined_ if not found.\n * This is a manual way of working with easing functions. If you want to\n * ease over time or ticks, use `Flow.Timer.msElapsedTimer` or `Flow.Timer.ticksElapsedTimer`.\n *\n * ```js\n * const fn = Easings.get(`sineIn`);\n * // Returns 'eased' transformation of 0.5\n * fn(0.5);\n * ```\n *\n * This function is useful if trying to resolve an easing by string. If you\n * know in advance what easing to use, you could also access it via\n * `Easings.functions.NAME`, eg `Easings.functions.sineIn`.\n * @param easingName eg `sineIn`\n * @returns Easing function\n */\nexport const get = function (easingName: EasingName): EasingFn | undefined {\n  if (easingName === null) throw new Error(`easingName is null`);\n  if (easingName === undefined) throw new Error(`easingName is undefined`);\n  const name = easingName.toLocaleLowerCase();\n  const found = Object.entries(functions).find(\n    ([k, _v]) => k.toLocaleLowerCase() === name\n  );\n\n  if (found === undefined) return found;\n  return found[1];\n};\n\n/**\n *\n * @private\n * @returns Returns list of available easing names\n */\nexport const getEasings = function (): readonly string[] {\n  return Array.from(Object.keys(functions));\n};\n\n/**\n * Returns a roughly gaussian easing function\n * ```js\n * import { Easings } from \"https://unpkg.com/ixfx/dist/modulation.js\";\n * const fn = Easings.gaussian();\n * ```\n *\n * Try different positive and negative values for `stdDev` to pinch\n * or flatten the bell shape.\n * @param stdDev\n * @returns\n */\nexport const gaussian = (stdDev: number = 0.4): EasingFn => {\n  const a = 1 / sqrt(2 * pi);\n  const mean = 0.5;\n\n  return (t: number) => {\n    const f = a / stdDev;\n    // p:-8 pinched\n    //eslint-disable-next-line functional/no-let\n    let p = -2.5; // -1/1.25;\n    //eslint-disable-next-line functional/no-let\n    let c = (t - mean) / stdDev;\n    c *= c;\n    p *= c;\n    const v = f * pow(Math.E, p); // * (2/pi);//0.62;\n    if (v > 1) return 1;\n    if (v < 0) return 0;\n\n    //if (v >1) console.log(v);\n    //if (v < 0) console.log(v);\n    return v;\n  };\n};\n\nconst bounceOut = function (x: number): number {\n  const n1 = 7.5625;\n  const d1 = 2.75;\n\n  if (x < 1 / d1) {\n    return n1 * x * x;\n  } else if (x < 2 / d1) {\n    return n1 * (x -= 1.5 / d1) * x + 0.75;\n  } else if (x < 2.5 / d1) {\n    return n1 * (x -= 2.25 / d1) * x + 0.9375;\n  } else {\n    return n1 * (x -= 2.625 / d1) * x + 0.984375;\n  }\n};\n\nconst quintIn = (x: number): number => x * x * x * x * x;\nconst quintOut = (x: number): number => 1 - pow(1 - x, 5);\nconst arch = (x: number): number => x * (1 - x) * 4;\n\nexport const functions = {\n  arch,\n  bell: gaussian(),\n  sineIn: (x: number): number => 1 - cos((x * pi) / 2),\n  sineOut: (x: number): number => sin((x * pi) / 2),\n  quadIn: (x: number): number => x * x,\n  quadOut: (x: number): number => 1 - (1 - x) * (1 - x),\n  sineInOut: (x: number): number => -(cos(pi * x) - 1) / 2,\n  quadInOut: (x: number): number =>\n    x < 0.5 ? 2 * x * x : 1 - pow(-2 * x + 2, 2) / 2,\n  cubicIn: (x: number): number => x * x * x,\n  cubicOut: (x: number): number => 1 - pow(1 - x, 3),\n  quartIn: (x: number): number => x * x * x * x,\n  quartOut: (x: number): number => 1 - pow(1 - x, 4),\n  quintIn,\n  quintOut, //: (x: number): number => 1 - pow(1 - x, 5),\n  expoIn: (x: number): number => (x === 0 ? 0 : pow(2, 10 * x - 10)),\n  expoOut: (x: number): number => (x === 1 ? 1 : 1 - pow(2, -10 * x)),\n  quintInOut: (x: number): number =>\n    x < 0.5 ? 16 * x * x * x * x * x : 1 - pow(-2 * x + 2, 5) / 2,\n  expoInOut: (x: number): number =>\n    x === 0\n      ? 0\n      : x === 1\n      ? 1\n      : x < 0.5\n      ? pow(2, 20 * x - 10) / 2\n      : (2 - pow(2, -20 * x + 10)) / 2,\n  circIn: (x: number): number => 1 - sqrt(1 - pow(x, 2)),\n  circOut: (x: number): number => sqrt(1 - pow(x - 1, 2)),\n  backIn: (x: number): number => {\n    const c1 = 1.70158;\n    const c3 = c1 + 1;\n\n    return c3 * x * x * x - c1 * x * x;\n  },\n  backOut: (x: number): number => {\n    const c1 = 1.70158;\n    const c3 = c1 + 1;\n\n    return 1 + c3 * pow(x - 1, 3) + c1 * pow(x - 1, 2);\n  },\n  circInOut: (x: number): number =>\n    x < 0.5\n      ? (1 - sqrt(1 - pow(2 * x, 2))) / 2\n      : (sqrt(1 - pow(-2 * x + 2, 2)) + 1) / 2,\n  backInOut: (x: number): number => {\n    const c1 = 1.70158;\n    const c2 = c1 * 1.525;\n\n    return x < 0.5\n      ? (pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n      : (pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2;\n  },\n  elasticIn: (x: number): number => {\n    const c4 = (2 * pi) / 3;\n\n    return x === 0\n      ? 0\n      : x === 1\n      ? 1\n      : -pow(2, 10 * x - 10) * sin((x * 10 - 10.75) * c4);\n  },\n  elasticOut: (x: number): number => {\n    const c4 = (2 * pi) / 3;\n\n    return x === 0\n      ? 0\n      : x === 1\n      ? 1\n      : pow(2, -10 * x) * sin((x * 10 - 0.75) * c4) + 1;\n  },\n  bounceIn: (x: number): number => 1 - bounceOut(1 - x),\n  bounceOut: bounceOut,\n  elasticInOut: (x: number): number => {\n    const c5 = (2 * pi) / 4.5;\n\n    return x === 0\n      ? 0\n      : x === 1\n      ? 1\n      : x < 0.5\n      ? -(pow(2, 20 * x - 10) * sin((20 * x - 11.125) * c5)) / 2\n      : (pow(2, -20 * x + 10) * sin((20 * x - 11.125) * c5)) / 2 + 1;\n  },\n  bounceInOut: (x: number): number =>\n    x < 0.5 ? (1 - bounceOut(1 - 2 * x)) / 2 : (1 + bounceOut(2 * x - 1)) / 2,\n};\n","export * as Normalise from './Normalise.js';\nexport * from './FrequencyMutable.js';\nexport * from './MovingAverage.js';\nexport * from './NumberTracker.js';\nexport * from './IntervalTracker.js';\nexport * from './PointTracker.js';\nexport * from './TrackedValue.js';\nexport * from './TrackerBase.js';\n\nexport * from './Clamp.js';\nexport * from './Scale.js';\nexport * from './Flip.js';\nexport * from './Interpolate.js';\nexport * from './Wrap.js';\nexport * as Correlate from './Correlate.js';\nexport * as Pool from './Pool.js';\n\nexport const piPi = Math.PI * 2;\nexport type NumberFunction = () => number;\n","import { minMaxAvg } from '../collections/NumericArrays.js';\nimport { clamp } from './Clamp.js';\nimport { scale } from './Scale.js';\nimport { number as guardNumber } from '../Guards.js';\n/**\n * Normalises numbers, adjusting min/max as new values are processed.\n * Normalised return values will be in the range of 0-1 (inclusive).\n *\n * [Read more in the docs](https://clinth.github.io/ixfx-docs/data/normalising/)\n *\n * @example\n * ```js\n * import {Normalise} from 'https://unpkg.com/ixfx/dist/data.js'\n * const s = Normalise.stream();\n * s(2);    // 1 (because 2 is highest seen)\n * s(1);    // 0 (because 1 is the lowest so far)\n * s(1.5);  // 0.5 (50% of range 1-2)\n * s(0.5);  // 0 (because it's the new lowest)\n * ```\n *\n * Since normalisation is being adjusted as new min/max are encountered, it might\n * be that value normalised to 1 at one time is different to what normalises to 1\n * at a later time.\n *\n * If you already know what to expect of the number range, passingin `minDefault`\n * and `maxDefault` primes the normalisation.\n * ```js\n * const s = Normalise.stream();\n * s(5); // 1, because it's the highest seen\n *\n * // With priming:\n * const s = Normalise.stream(0, 10);\n * s(5); // 0.5, because we're expecting range 0-10\n * ```\n *\n * Note that if a value exceeds the default range, normalisation adjusts.\n * Errors are thrown if min/max defaults are NaN or if one attempts to\n * normalise NaN.\n * @returns\n */\nexport const stream = (minDefault?: number, maxDefault?: number) => {\n  //eslint-disable-next-line functional/no-let\n  let min = minDefault ?? Number.MAX_SAFE_INTEGER;\n  //eslint-disable-next-line functional/no-let\n  let max = maxDefault ?? Number.MIN_SAFE_INTEGER;\n\n  guardNumber(minDefault);\n  guardNumber(maxDefault);\n\n  return (v: number): number => {\n    guardNumber(v);\n    min = Math.min(min, v);\n    max = Math.max(max, v);\n    return scale(v, min, max);\n  };\n};\n\n/**\n * Normalises an array. By default uses the actual min/max of the array\n * as the normalisation range. [Read more in the docs](https://clinth.github.io/ixfx-docs/data/normalising/)\n *\n * ```js\n * import {Normalise} from 'https://unpkg.com/ixfx/dist/data.js'\n * // Yields: [0.5, 0.1, 0.0, 0.9, 1]\n * Normalise.array([5,1,0,9,10]);\n * ```\n *\n * `minForced` and/or `maxForced` can\n * be provided to use an arbitrary range.\n * ```js\n * // Forced range 0-100\n * // Yields: [0.05, 0.01, 0.0, 0.09, 0.10]\n * Normalise.array([5,1,0,9,10], 0, 100);\n * ```\n *\n * Return values are clamped to always be 0-1, inclusive.\n *\n * @param values Values\n * @param minForced If provided, this will be min value used\n * @param maxForced If provided, this will be the max value used\n */\nexport const array = (\n  values: readonly number[],\n  minForced?: number,\n  maxForced?: number\n) => {\n  if (!Array.isArray(values)) {\n    throw new Error(`values param should be an array`);\n  }\n  const mma = minMaxAvg(values);\n\n  const min = minForced ?? mma.min;\n  const max = maxForced ?? mma.max;\n\n  return values.map((v) => clamp(scale(v, min, max)));\n};\n","/**\n * Clamps a value between min and max (both inclusive)\n * Defaults to a 0-1 range, useful for percentages.\n *\n * @example Usage\n * ```js\n * // 0.5 - just fine, within default of 0 to 1\n * clamp(0.5);\n * // 1 - above default max of 1\n * clamp(1.5);\n * // 0 - below range\n * clamp(-50, 0, 100);\n * // 50 - within range\n * clamp(50, 0, 50);\n * ```\n *\n * For clamping integer ranges, consider {@link clampIndex }\n * For clamping `{ x, y }` points, consider {@link Geometry.Points.clamp | Geometry.Points.clamp}.\n *\n * @param v Value to clamp\n * @param Minimum value (inclusive)\n * @param Maximum value (inclusive)\n * @returns Clamped value\n */\nexport const clamp = (v: number, min = 0, max = 1) => {\n  // ✔ UNIT TESTED\n  if (Number.isNaN(v)) throw new Error(`v parameter is NaN`);\n  if (Number.isNaN(min)) throw new Error(`min parameter is NaN`);\n  if (Number.isNaN(max)) throw new Error(`max parameter is NaN`);\n\n  if (v < min) return min;\n  if (v > max) return max;\n  return v;\n};\n\n/**\n * Clamps integer `v` between 0 (inclusive) and array length or length (exclusive).\n * Returns value then will always be at least zero, and a valid array index.\n *\n * @example Usage\n * ```js\n * // Array of length 4\n * const myArray = [`a`, `b`, `c`, `d`];\n * clampIndex(0, myArray);    // 0\n * clampIndex(4, myArray);    // 3\n * clampIndex(-1, myArray);   // 0\n *\n * clampIndex(5, 3); // 2\n * ```\n *\n * Throws an error if `v` is not an integer.\n *\n * For some data it makes sense that data might 'wrap around' if it exceeds the\n * range. For example rotation angle. Consider using {@link wrap} for this.\n *\n * @param v Value to clamp (must be an interger)\n * @param arrayOrLength Array, or length of bounds (must be an integer)\n * @returns Clamped value, minimum will be 0, maximum will be one less than `length`.\n */\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const clampIndex = (\n  v: number,\n  arrayOrLength: number | readonly any[]\n): number => {\n  // ✔ UNIT TESTED\n  if (!Number.isInteger(v)) {\n    throw new Error(`v parameter must be an integer (${v})`);\n  }\n  const length = Array.isArray(arrayOrLength)\n    ? arrayOrLength.length\n    : (arrayOrLength as number);\n\n  if (!Number.isInteger(length)) {\n    throw new Error(\n      `length parameter must be an integer (${length}, ${typeof length})`\n    );\n  }\n  v = Math.round(v);\n  if (v < 0) return 0;\n  if (v >= length) return length - 1;\n  return v;\n};\n","import { clamp } from './Clamp.js';\nimport { number as guardNumber } from '../Guards.js';\n\n/**\n * Scales `v` from an input range to an output range (aka `map`)\n *\n * For example, if a sensor's useful range is 100-500, scale it to a percentage:\n *\n * ```js\n * import { scale } from 'https://unpkg.com/ixfx/dist/data.js';\n *\n * scale(sensorReading, 100, 500, 0, 1);\n * ```\n *\n * `scale` defaults to a percentage-range output, so you can get away with:\n * ```js\n * scale(sensorReading, 100, 500);\n * ```\n *\n * If `v` is outside of the input range, it will likewise be outside of the output range.\n * Use {@link scaleClamped} to clip value to range.\n *\n * If inMin and inMax are equal, outMax will be returned.\n *\n * An easing function can be provided for non-linear scaling. In this case\n * the input value is 'pre scaled' using the function before it is applied to the\n * output range.\n *\n * ```js\n * scale(sensorReading, 100, 500, 0, 1, Easings.gaussian());\n * ```\n * @param v Value to scale\n * @param inMin Input minimum\n * @param inMax Input maximum\n * @param outMin Output minimum. If not specified, 0\n * @param outMax Output maximum. If not specified, 1\n * @param easing Easing function\n * @returns Scaled value\n */\nexport const scale = (\n  v: number,\n  inMin: number,\n  inMax: number,\n  outMin?: number,\n  outMax?: number,\n  easing?: (v: number) => number\n): number => {\n  if (outMax === undefined) outMax = 1;\n  if (outMin === undefined) outMin = 0;\n  if (inMin === inMax) return outMax;\n\n  //eslint-disable-next-line functional/no-let\n  let a = (v - inMin) / (inMax - inMin);\n  if (easing !== undefined) a = easing(a);\n  return a * (outMax - outMin) + outMin;\n};\n\n/**\n * As {@link scale}, but result is clamped to be\n * within `outMin` and `outMax`.\n * @param v\n * @param inMin\n * @param inMax\n * @param outMin\n * @param outMax\n * @param easing\n * @returns\n */\nexport const scaleClamped = (\n  v: number,\n  inMin: number,\n  inMax: number,\n  outMin?: number,\n  outMax?: number,\n  easing?: (v: number) => number\n): number => {\n  if (outMax === undefined) outMax = 1;\n  if (outMin === undefined) outMin = 0;\n  if (inMin === inMax) return outMax;\n\n  const x = scale(v, inMin, inMax, outMin, outMax, easing);\n  return clamp(x, outMin, outMax);\n};\n\n/**\n * Scales an input percentage to a new percentage range.\n *\n * If you have an input percentage (0-1), `scalePercentageOutput` maps it to an\n * _output_ percentage of `outMin`-`outMax`.\n *\n * ```js\n * import { scalePercentages } from 'https://unpkg.com/ixfx/dist/data.js';\n *\n * // Scales 50% to a range of 0-10%\n * scalePercentages(0.5, 0, 0.10); // 0.05 - 5%\n * ```\n *\n * An error is thrown if any parameter is outside of percentage range. This added\n * safety is useful for catching bugs. Otherwise, you could just as well call\n * `scale(percentage, 0, 1, outMin, outMax)`.\n *\n * If you want to scale some input range to percentage output range, just use `scale`:\n * ```js\n * import { scale } from 'https://unpkg.com/ixfx/dist/data.js';\n *\n * // Yields 0.5\n * scale(2.5, 0, 5);\n * ```\n * @param percentage Input value, within percentage range\n * @param outMin Output minimum, between 0-1\n * @param outMax Output maximum, between 0-1\n * @returns Scaled value between outMin-outMax.\n */\nexport const scalePercentages = (\n  percentage: number,\n  outMin: number,\n  outMax: number = 1\n): number => {\n  guardNumber(percentage, `percentage`, `v`);\n  guardNumber(outMin, `percentage`, `outMin`);\n  guardNumber(outMax, `percentage`, `outMax`);\n  return scale(percentage, 0, 1, outMin, outMax);\n};\n\n/**\n * Scales an input percentage value to an output range\n * If you have an input percentage (0-1), `scalePercent` maps it to an output range of `outMin`-`outMax`.\n * ```js\n * import { scalePercent } from 'https://unpkg.com/ixfx/dist/data.js';\n * scalePercent(0.5, 10, 20); // 15\n * ```\n *\n * @param v Value to scale\n * @param outMin Minimum for output\n * @param outMax Maximum for output\n * @returns\n */\nexport const scalePercent = (\n  v: number,\n  outMin: number,\n  outMax: number\n): number => {\n  guardNumber(v, `percentage`, `v`);\n  return scale(v, 0, 1, outMin, outMax);\n};\n","import { sort } from 'fp-ts/lib/Array.js';\nimport { pipe } from 'fp-ts/lib/function.js';\nimport * as S from 'fp-ts/lib/string.js';\nimport * as N from 'fp-ts/lib/number.js';\nimport { reverse as reverseOrd, contramap } from 'fp-ts/lib/Ord.js';\nimport {minMaxAvg as arrayMinMaxAg} from './collections/Arrays.js';\n\n/// ✔ Sorting functions are unit tested\n\nexport type Primitive = string | number;\nexport type KeyValue = readonly [key: string, value: Primitive];\n\nconst byKey = (reverse:boolean = false) => pipe(\n  reverse ? reverseOrd(S.Ord) : S.Ord, \n  contramap((v:KeyValue) => v[0])\n);\n\nexport const byValueString = (reverse:boolean = false) => pipe(\n  reverse ? reverseOrd(S.Ord) : S.Ord, \n  contramap((v:KeyValue) => v[1] as string)\n);\n\nconst byValueNumber = (reverse:boolean = false) => pipe(\n  reverse ? reverseOrd(N.Ord) : N.Ord, \n  contramap((v:KeyValue) => v[1] as number)\n);\n\nexport const sortByKey = (reverse:boolean = false) => sort<KeyValue>(byKey(reverse));\nexport const sortByValueString = (reverse:boolean = false) => sort<KeyValue>(byValueString(reverse));\nexport const sortByValueNumber = (reverse:boolean = false) => sort<KeyValue>(byValueNumber(reverse));\n\n// eslint-disable-next-line functional/prefer-readonly-type\nexport type SortingFn = (data:KeyValue[]) => KeyValue[];\n\nexport const getSorter = (sortStyle:`value` | `valueReverse` | `key` | `keyReverse`) => {\n  switch (sortStyle) {\n  case `value`:\n    return sortByValueNumber(false);\n  case `valueReverse`:\n    return sortByValueNumber(true);\n  case `key`:\n    return sortByKey(false);\n  case `keyReverse`:\n    return sortByKey(true);\n  default:\n    throw new Error(`Unknown sorting value '${sortStyle}'. Expecting: value, valueReverse, key or keyReverse`);\n  }\n};\n\n\nexport const minMaxAvg = (entries:readonly KeyValue[], conversionFn?:(v:KeyValue) => number) => {\n  if (conversionFn === undefined) conversionFn = (v:KeyValue) => v[1] as number;\n  const values = entries.map<number>(conversionFn);\n  return arrayMinMaxAg(values);\n};","import * as NumericArrays from './collections/NumericArrays.js';\nimport { numberTracker } from './data/NumberTracker.js';\nimport { type TrackedValueOpts } from './data/TrackedValue.js';\nimport { Easings } from './modulation/index.js';\nimport { number as guard, integer as guardInteger } from './Guards.js';\n\n/**\n * Calculates the average of all numbers in an array.\n * Array items which aren't a valid number are ignored and do not factor into averaging.\n\n * @example\n * ```\n * import * as Numbers from 'https://unpkg.com/ixfx/dist/numbers.js';\n * \n * // Average of a list\n * const avg = Numbers.average(1, 1.4, 0.9, 0.1);\n * \n * // Average of a variable\n * let data = [100,200];\n * Numbers.average(...data);\n * ```\n * \n * See also: [Arrays.average](Collections.Arrays.average.html) which takes an array.\n * @param data Data to average.\n * @returns Average of array\n */\nexport const average = (...numbers: readonly number[]) =>\n  NumericArrays.average(numbers);\n\n/**\n * See [Arrays.averageWeighted](Collections.Arrays.averageWeighted.html)\n * @param weightings\n * @param numbers\n * @returns\n */\nexport const averageWeighted = (\n  weightings: readonly number[] | Easings.EasingFn,\n  ...numbers: readonly number[]\n): number => NumericArrays.averageWeighted(numbers, weightings);\n\n/**\n * Returns the minimum number out of `data`.\n * Undefined and non-numbers are silently ignored.\n *\n * ```js\n * import * as Numbers from 'https://unpkg.com/ixfx/dist/numbers.js';\n * Numbers.min(10, 20, 0); // Yields 0\n * ```\n * @param data\n * @returns Minimum number\n */\nexport const min = (...data: readonly number[]): number =>\n  NumericArrays.min(data);\n\n/**\n * Returns the maximum number out of `data`.\n * Undefined and non-numbers are silently ignored.\n *\n * ```js\n * import * as Numbers from 'https://unpkg.com/ixfx/dist/numbers.js';\n * Numbers.max(10, 20, 0); // Yields 20\n * ```\n * @param data\n * @returns Maximum number\n */\nexport const max = (...data: readonly number[]): number =>\n  NumericArrays.max(data);\n\n/**\n * Returns the total of `data`.\n * Undefined and non-numbers are silently ignored.\n *\n * ```js\n * import * as Numbers from 'https://unpkg.com/ixfx/dist/numbers.js';\n * Numbers.total(10, 20, 0); // Yields 30\n * ```\n * @param data\n * @returns Total\n */\nexport const total = (...data: readonly number[]): number =>\n  NumericArrays.total(data);\n\n/**\n * Returns true if `possibleNumber` is a number and not NaN\n * @param possibleNumber\n * @returns\n */\nexport const isValid = (possibleNumber: number | unknown) => {\n  if (typeof possibleNumber !== `number`) return false;\n  if (Number.isNaN(possibleNumber)) return false;\n  return true;\n};\n\n/**\n * Alias for [Data.numberTracker](Data.numberTracker.html)\n */\nexport const tracker = (opts?: TrackedValueOpts) => numberTracker(opts);\n\n/**\n * Filters an iterator of values, only yielding\n * those that are valid numbers\n *\n * ```js\n * import * as Numbers from 'https://unpkg.com/ixfx/dist/numbers.js';\n *\n * const data = [true, 10, '5', { x: 5 }];\n * for (const n of Numbers.filter(data)) {\n *  // 5\n * }\n * ```\n * @param it\n */\n//eslint-disable-next-line func-style\nexport function* filter(it: Iterable<unknown>) {\n  for (const v of it) {\n    if (isValid(v)) yield v;\n  }\n}\n\n/**\n * Rounds `v` by `every`. Middle values are rounded up by default.\n *\n * ```js\n * quantiseEvery(11, 10);  // 10\n * quantiseEvery(25, 10);  // 30\n * quantiseEvery(0, 10);   // 0\n * quantiseEvery(4, 10);   // 0\n * quantiseEvery(100, 10); // 100\n * ```\n *\n * @param v\n * @param every\n * @param middleRoundsUp\n * @returns\n */\nexport const quantiseEvery = (\n  v: number,\n  every: number,\n  middleRoundsUp = true\n) => {\n  // Unit tested!\n  guard(v, ``, `v`);\n  guardInteger(every, ``, `every`);\n\n  //eslint-disable-next-line functional/no-let\n  let div = v / every;\n  const divMod = div % 1;\n  div = Math.floor(div);\n  if ((divMod === 0.5 && middleRoundsUp) || divMod > 0.5) div++;\n  return every * div;\n};\n\n/**\n * Generates a `step`-length series of values between `start` and `end` (inclusive).\n * Each value will be equally spaced.\n *\n * ```js\n * for (const v of linearSpace(1, 5, 6)) {\n *  // Yields: 1, 2, 3, 4, 5, 6\n * }\n * ```\n *\n * Numbers can be produced from large to small as well\n * ```js\n * const values = [...linearSpace(10, 5, 3)];\n * // Yields: [10, 7.5, 5]\n * ```\n * @param start Start number (inclusive)\n * @param end  End number (inclusive)\n * @param steps How many steps to make from start -> end\n * @param precision Number of decimal points to round to\n */\nexport function* linearSpace(\n  start: number,\n  end: number,\n  steps: number,\n  precision?: number\n): IterableIterator<number> {\n  guard(start, ``, `start`);\n  guard(end, ``, `end`);\n\n  guard(steps, ``, `steps`);\n\n  const r = precision ? round(precision) : (v: number) => v;\n  const step = (end - start) / (steps - 1);\n\n  guard(step, ``, `step`);\n  if (!Number.isFinite(step)) {\n    throw new Error(`Calculated step value is infinite`);\n  }\n\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < steps; i++) {\n    const v = start + step * i;\n    yield r(v);\n  }\n}\n\nexport function round(decimalPlaces: number, v: number): number;\nexport function round(decimalPlaces: number): (v: number) => number;\n\n/**\n * Rounds a number.\n *\n * If one parameter is given, it's the decimal places,\n * and a rounding function is returned:\n * ```js\n * const r = round(2);\n * r(10.12355); // 10.12\n * ```\n *\n * If two parameters are given, the first is decimal places,\n * the second the value to round.\n * ```js\n * round(2, 10.12355); // 10.12\n * ```\n * @param decimalPlaces\n * @returns\n */\nexport function round(a: number, b?: number) {\n  guardInteger(a, `positive`, `decimalPlaces`);\n\n  //eslint-disable-next-line functional/no-let\n  let rounder;\n  if (a === 0) rounder = Math.round;\n  else {\n    const p = Math.pow(10, a);\n    rounder = (v: number) => Math.floor(v * p) / p;\n  }\n\n  if (typeof b === 'undefined') return rounder;\n  else return rounder(b);\n}\n\nexport function isApproximately(\n  baseValue: number,\n  rangePercent: number\n): (v: number) => boolean;\n\nexport function isApproximately(\n  baseValue: number,\n  rangePercent: number,\n  v: number\n): boolean;\n\n/**\n * Returns a function that yields _true_ if a value is within\n * a percentage range of a base value.\n *\n * ```js\n * // Allow 10% above or below\n * const closeTo100 = isApproximately(100, 0.1); // returns a function\n * closeTo100(100); // true\n * closeTo100(101); // true;\n * closeTo100(90); // true;\n * closeTo100(80); // false;\n * ```\n *\n * `isApproximately` returns a function, but if a third value is provided,\n * it returns true/false, testing the value:\n * ```js\n * isApproximately(100, 0.1, 101); // True\n * ```\n * If the tested value is not a number, _false_ is returned\n * (because it is not, in fact approximately `baseValue`).\n *\n * For baseValues between -2 and 2, the calculated difference is rounded down\n * to 5 decimal places to avoid weird JS floating point math.\n * @param baseValue\n * @param rangePercent\n * @returns\n */\nexport function isApproximately(\n  baseValue: number,\n  rangePercent: number,\n  v?: number\n) {\n  guard(rangePercent, 'percentage', 'rangePercent');\n  guard(baseValue, '', 'baseValue');\n\n  const diff = baseValue * rangePercent;\n  const test = (v: number): boolean => {\n    try {\n      guard(v, '', 'v');\n\n      //eslint-disable-next-line functional/no-let\n      let diffV = Math.abs(v - baseValue);\n      if (Math.abs(baseValue) <= 2) {\n        diffV = round(5, diffV);\n      }\n      return diffV <= diff;\n    } catch (ex) {\n      return false;\n    }\n  };\n\n  if (typeof v !== 'undefined') {\n    return test(v);\n  } else {\n    return test;\n  }\n}\n","export type AsyncPromiseOrGenerator<V> =\n  | (() => Promise<V> | Promise<undefined>)\n  | (() => V | undefined)\n  | Generator<V>\n  | IterableIterator<V>\n  | AsyncIterableIterator<V>\n  | AsyncGenerator<V>\n  | AsyncIterable<V>\n  | Iterable<V>;\n\nimport { number as guardNumber } from '../Guards.js';\nimport { sleep } from './Sleep.js';\n\nimport * as StateMachine from './StateMachine.js';\nimport * as Timer from './Timer.js';\n\n/**\n * State Machine\n * See [here for usage](../classes/Flow.StateMachine.StateMachine.html).\n *\n * * {@link StateMachine.driver}: Drive a state machine\n * * {@link StateMachine.init}: Create a state machine from initial state and machine description\n * * {@link fromList}: Create a state machine from a simple list of states\n */\nexport { StateMachine };\nexport * from './Timer.js';\n\nexport * from './Interval.js';\nexport * from './Timeout.js';\nexport * from './UpdateOutdated.js';\nexport * from './Continuously.js';\nexport * from './Debounce.js';\nexport * from './Throttle.js';\nexport * from './Sleep.js';\nexport * from './WaitFor.js';\nexport * from './Delay.js';\nexport * from './Every.js';\nexport * from './RunOnce.js';\nexport * from './Retry.js';\n//export * from './Poll.js';\n\nimport * as Elapsed from './Elapsed.js';\nexport { Elapsed };\nexport { TaskQueue } from './TaskQueue.js';\n\nexport type HasCompletion = {\n  get isDone(): boolean;\n};\n\n/**\n * Iterates over `iterator` (iterable/array), calling `fn` for each value.\n * If `fn` returns _false_, iterator cancels.\n *\n * Over the default JS `forEach` function, this one allows you to exit the\n * iteration early.\n *\n * @example\n * ```js\n * forEach(count(5), () => console.log(`Hi`));  // Prints `Hi` 5x\n * forEach(count(5), i => console.log(i));      // Prints 0 1 2 3 4\n * forEach([0,1,2,3,4], i => console.log(i));   // Prints 0 1 2 3 4\n * ```\n *\n * Use {@link forEachAsync} if you want to use an async `iterator` and async `fn`.\n * @param iterator Iterable or array\n * @typeParam V Type of iterable\n * @param fn Function to call for each item. If function returns _false_, iteration cancels\n */\nexport const forEach = <V>(\n  iterator: IterableIterator<V> | ReadonlyArray<V>,\n  fn: (v?: V) => boolean | void\n) => {\n  for (const x of iterator) {\n    const r = fn(x);\n    if (typeof r === `boolean` && !r) break;\n  }\n};\n\n/**\n * Iterates over an async iterable or array, calling `fn` for each value, with optional\n * interval between each loop. If the async `fn` returns _false_, iterator cancels.\n *\n * Use {@link forEach} for a synchronous version.\n *\n * ```\n * // Prints items from array every second\n * await forEachAsync([0,1,2,3], i => console.log(i), 1000);\n * ```\n *\n * @example Retry `doSomething` up to five times, with 5 seconds between each attempt\n * ```\n * await forEachAsync(count(5), i=> {\n *  try {\n *    await doSomething();\n *    return false; // Succeeded, exit early\n *  } catch (ex) {\n *    console.log(ex);\n *    return true; // Keep trying\n *  }\n * }, 5000);\n * ```\n * @param iterator Iterable thing to loop over\n * @param fn Function to invoke on each item. If it returns _false_ loop ends.\n * @typeParam V Type of iterable\n */\nexport const forEachAsync = async function <V>(\n  iterator: AsyncIterableIterator<V> | ReadonlyArray<V>,\n  fn: (v?: V) => Promise<boolean> | Promise<void>,\n  intervalMs?: number\n) {\n  if (Array.isArray(iterator)) {\n    // Handle array\n    for (const x of iterator) {\n      const r = await fn(x);\n      if (intervalMs) await sleep(intervalMs);\n      if (typeof r === `boolean` && !r) break;\n    }\n  } else {\n    // Handle an async iterator\n    for await (const x of iterator) {\n      const r = await fn(x);\n      if (intervalMs) await sleep(intervalMs);\n      if (typeof r === `boolean` && !r) break;\n    }\n  }\n};\n\nexport type RepeatPredicate = (\n  repeats: number,\n  valuesProduced: number\n) => boolean;\n/**\n * Runs `fn` a certain number of times, yielding results.\n * If `fn` returns undefined, the result is ignored, but loop continues.\n *\n * ```js\n * // Results will be an array with five random numbers\n * const results = [...repeat(5, () => Math.random())];\n *\n * // Or as an generator (note also the simpler expression form)\n * for (const result of repeat(5, Math.random)) {\n * }\n * ```\n *\n * Repeats can be specified as an integer (eg. 5 for five repeats), or a function\n * that gives _false_ when repeating should stop.\n *\n * ```js\n * // Keep running `fn` until we've accumulated 10 values\n * // Useful if `fn` sometimes returns _undefined_\n * const results = repeat((repeats, valuesProduced) => valuesProduced < 10, fn);\n * ```\n *\n * If you don't need to accumulate return values, consider {@link Generators.count | Generators.count} with {@link Flow.forEach | Flow.forEach}.\n * If you want to have a waiting period between each repetition, consider {@link Flow.interval}.\n * @param countOrPredicate Number of repeats or function returning false when to stop\n * @param fn Function to run, must return a value to accumulate into array or _undefined_\n * @returns Yields results, one at a time\n */\nexport function* repeat<V>(\n  countOrPredicate: number | RepeatPredicate,\n  fn: () => V | undefined\n) {\n  // Unit tested: expected return array length\n  //eslint-disable-next-line functional/no-let\n  let repeats, valuesProduced;\n  repeats = valuesProduced = 0;\n\n  if (typeof countOrPredicate === `number`) {\n    guardNumber(countOrPredicate, `positive`, `countOrPredicate`);\n    while (countOrPredicate-- > 0) {\n      repeats++;\n      const v = fn();\n      if (v === undefined) continue;\n      yield v;\n      valuesProduced++;\n    }\n  } else if (typeof countOrPredicate === 'function') {\n    while (countOrPredicate(repeats, valuesProduced)) {\n      repeats++;\n      const v = fn();\n      if (v === undefined) continue;\n      yield v;\n      valuesProduced++;\n    }\n  } else {\n    throw new Error(\n      `countOrPredicate should be a number or function. Got: ${typeof countOrPredicate}`\n    );\n  }\n}\n\n/**\n * Repeatedly calls `fn`, reducing via `reduce`.\n *\n * ```js\n * repeatReduce(10, () => 1, (acc, v) => acc + v);\n * // Yields: 10\n *\n * // Multiplies random values against each other 10 times\n * repeatReduce(10, Math.random, (acc, v) => acc * v);\n * // Yields a single number\n * ```\n * @param countOrPredicate\n * @param fn\n * @param initial\n * @param reduce\n * @returns\n */\nexport const repeatReduce = <V>(\n  countOrPredicate: number | RepeatPredicate,\n  fn: () => V | undefined,\n  initial: V,\n  reduce: (acc: V, value: V) => V\n): V => {\n  if (typeof countOrPredicate === `number`) {\n    guardNumber(countOrPredicate, `positive`, `countOrPredicate`);\n    while (countOrPredicate-- > 0) {\n      const v = fn();\n      if (v === undefined) continue;\n      initial = reduce(initial, v);\n    }\n  } else {\n    //eslint-disable-next-line functional/no-let\n    let repeats, valuesProduced;\n    repeats = valuesProduced = 0;\n    while (countOrPredicate(repeats, valuesProduced)) {\n      repeats++;\n      const v = fn();\n      if (v === undefined) continue;\n      initial = reduce(initial, v);\n      valuesProduced++;\n    }\n  }\n  return initial;\n};\n\ntry {\n  if (typeof window !== `undefined`) {\n    //eslint-disable-next-line functional/immutable-data,@typescript-eslint/no-explicit-any\n    (window as any).ixfx = {\n      ...(window as any).ixfx,\n      Flow: { StateMachine, Timer, forEach, forEachAsync, repeat },\n    };\n  }\n} catch {\n  /* no-op */\n}\n","import { number as guardNumber } from '../Guards.js';\nimport { type Interval, intervalToMs } from './index.js';\n\nexport type SleepOpts<V> = Interval & {\n  readonly signal?: AbortSignal;\n  readonly value?: V;\n};\n\n/**\n * Returns after timeout period.\n *\n * @example In an async function\n * ```js\n * console.log(`Hello`);\n * await sleep(1000);\n * console.log(`There`); // Prints one second after\n * ```\n *\n * @example As a promise\n * ```js\n * console.log(`Hello`);\n * sleep({ millis: 1000 })\n *  .then(() => console.log(`There`)); // Prints one second after\n * ```\n *\n * If a timeout of 0 is given, `requestAnimationFrame` is used instead of `setTimeout`.\n *\n * {@link delay} and {@link sleep} are similar. `delay()` takes a parameter of what code to execute after the timeout, while `sleep()` just resolves after the timeout.\n *\n * A value can be provided, which is returned on awaking:\n * ```js\n * const v = await sleep({ seconds: 1, value: `hello`);\n * // v = `hello`\n * ```\n *\n * Provide an AbortSignal to cancel the sleep and throwing an exception\n * so code after the sleep doesn't happen.\n *\n * ```js\n * const ac = new AbortController();\n * setTimeout(() => { ac.abort(); }, 1000); // Abort after 1s\n *\n * // Sleep for 1min\n * await sleep({ minutes: 1, signal: ac.signal });\n * console.log(`Awake`); // This line doesn't get called because an exception is thrown when aborting\n * ```\n * @param optsOrMillis Milliseconds to sleep, or options\n * @param signal\n * @return\n */\nexport const sleep = <V>(\n  //eslint-disable-next-line functional/prefer-immutable-types\n  optsOrMillis: SleepOpts<V>\n): Promise<V | undefined> => {\n  const timeoutMs = intervalToMs(optsOrMillis);\n  const signal = optsOrMillis.signal;\n  const value = optsOrMillis.value;\n  guardNumber(timeoutMs, `positive`, `timeoutMs`);\n  if (timeoutMs === 0) {\n    return new Promise<V | undefined>((resolve) =>\n      requestAnimationFrame((_) => {\n        resolve(value);\n      })\n    );\n  } else {\n    return new Promise<V | undefined>((resolve, reject) => {\n      if (signal) {\n        signal.addEventListener(`abort`, () => {\n          reject(signal.reason);\n        });\n      }\n      setTimeout(() => {\n        if (signal?.aborted) {\n          reject(signal.reason);\n          return;\n        }\n        resolve(value);\n      }, timeoutMs);\n    });\n  }\n};\n","import { unique } from '../collections/Arrays.js';\nimport {\n  StateMachineWithEvents,\n  type Opts,\n  type StateMachineEventMap,\n  type StopEvent,\n} from './StateMachineWithEvents.js';\nexport {\n  StateMachineWithEvents as WithEvents,\n  type Opts as StateMachineWithEventsOpts,\n  type StateMachineEventMap,\n  type StopEvent,\n};\n\n/**\n * State machine driver\n */\nexport { init as driver } from './StateMachineDriver.js';\nexport type {\n  DriverOpts,\n  StatesHandler as DriverHandler,\n  Runner,\n  ExpressionOrResult as DriverExpression,\n  Result as DriverResult,\n} from './StateMachineDriver.js';\n\n/**\n * Transition result\n * * 'Ok': transition valid\n * * 'FromNotFound': the from state is missing from machine definition\n * * 'ToNotFound': the 'to' state is missing from machine definition\n * * 'Invalid': not allowed to transition to target state from the current state\n * * 'Terminal':  not allowed to transition because from state is the final state\n */\nexport type TransitionResult =\n  | 'Ok'\n  | 'FromNotFound'\n  | 'ToNotFound'\n  | 'Invalid'\n  | 'Terminal';\n\nexport type TransitionCondition<V extends Transitions> = {\n  readonly hasPriorState: readonly StateNames<V>[];\n  readonly isInState: StateNames<V>;\n};\n\nexport type StateTargetStrict<V extends Transitions> = {\n  readonly state: StateNames<V> | null;\n  readonly preconditions?: readonly TransitionCondition<V>[];\n};\n\n/**\n * Possible state transitions, or _null_ if final state.\n */\n//export type StateTarget<V extends Transitions> = StateTargetExt<V> | null;\n\nexport type StateTarget<V extends Transitions> =\n  | string\n  //eslint-disable-next-line functional/prefer-readonly-type\n  | string[]\n  | readonly string[]\n  | null\n  | StateTargetStrict<V>;\n//eslint-disable-next-line functional/prefer-readonly-type\n// | StateTargetStrict<V>[]\n// | readonly StateTargetStrict<V>[];\n\n/**\n * Maps state to allowable next states\n */\nexport type Transitions = {\n  readonly [key: string]: StateTarget<Transitions>;\n};\n\nexport type TransitionsStrict = {\n  readonly [key: string]: readonly StateTargetStrict<Transitions>[];\n};\n/**\n * List of possible states\n */\nexport type StateNames<V extends Transitions> = keyof V & string;\n\nexport type Machine<V extends Transitions> = {\n  /**\n   * Allowable state transitions\n   */\n  readonly states: V;\n};\n\n/**\n * Encapsulation of a 'running' machine description and state.\n *\n * See:\n * - {@link cloneState}\n */\nexport type MachineState<V extends Transitions> = {\n  /**\n   * Current state\n   */\n  readonly value: StateNames<V>;\n  /**\n   * List of unique states visited. Won't contain the current\n   * state unless it has already been visited.\n   */\n  readonly visited: readonly StateNames<V>[];\n\n  //readonly machine: Machine<V>;\n  readonly machine: {\n    readonly [key in StateNames<V>]: readonly StateTargetStrict<V>[];\n  };\n};\n\n/**\n * Clones machine state\n * @param toClone\n * @returns Cloned of `toClone`\n */\nexport const cloneState = <V extends Transitions>(\n  toClone: MachineState<V>\n): MachineState<V> => {\n  return Object.freeze({\n    value: toClone.value,\n    visited: [...toClone.visited],\n    machine: toClone.machine,\n  });\n};\n/**\n * Initialises a state machine\n * ```js\n * const desc = {\n *  pants: ['shoes','socks'],\n *  socks: ['shoes', 'pants'],\n *  shoes: 'shirt',\n *  shirt: null\n * }\n * // Defaults to first key, 'pants'\n * let sm = StateMachine.init(descr);\n * // Move to 'shoes' state\n * sm = StateMachine.to(sm, 'shoes');\n * sm.state; // 'shoes'\n * sm.visited; // [ 'pants' ]\n * StateMachineLight.done(sm); // false\n * StateMachineLight.possible(sm); // [ 'shirt' ]\n * ```\n * @param sm\n * @param initialState\n * @returns\n */\nexport const init = <V extends Transitions>(\n  stateMachine: Machine<V> | Transitions | TransitionsStrict,\n  initialState?: StateNames<V>\n): MachineState<V> => {\n  const [machine, machineValidationError] = validateMachine(stateMachine);\n  if (!machine) throw new Error(machineValidationError);\n\n  const state: StateNames<V> =\n    (initialState as StateNames<V>) ?? Object.keys(machine.states)[0];\n  if (typeof machine.states[state] === 'undefined') {\n    throw new Error(`Initial state not found`);\n  }\n\n  // Normalise states\n  const transitions = validateAndNormaliseTransitions(machine.states);\n  if (transitions === undefined) {\n    throw new Error(`Could not normalise transitions`);\n  }\n  // @ts-ignore\n  return Object.freeze({\n    value: state,\n    visited: [],\n    machine: Object.fromEntries(transitions),\n  });\n};\n\nexport const reset = <V extends Transitions>(\n  sm: MachineState<V>\n): MachineState<V> => {\n  // @ts-ignore\n  return init<V>(sm.machine);\n};\n\nexport const validateMachine = <V extends Transitions>(\n  smOrTransitions: Machine<V> | Transitions | TransitionsStrict\n): [machine: Machine<V> | undefined, msg: string] => {\n  if (typeof smOrTransitions === 'undefined') {\n    return [undefined, 'Parameter undefined'];\n  }\n  if (smOrTransitions === null) {\n    return [undefined, 'Parameter null'];\n  }\n  if (`states` in smOrTransitions) {\n    // Assume Machine type\n    return [smOrTransitions as Machine<V>, ''];\n  }\n  if (typeof smOrTransitions === `object`) {\n    return [\n      {\n        // @ts-ignore\n        states: smOrTransitions,\n      },\n      '',\n    ];\n  }\n  return [\n    undefined,\n    `Unexpected type: ${typeof smOrTransitions}. Expected object`,\n  ];\n};\n\n// export const validateMachine = <V extends Transitions>(\n//   sm: Machine<V>\n// ): [machine: Machine<V> | undefined, msg: string] => {\n//   if (typeof sm === 'undefined') {\n//     return [undefined, `Parameter 'sm' is undefined`];\n//   }\n//   if (sm === null) return [undefined, `Parameter 'sm' is null`];\n//   if (`states` in sm) {\n//     const [transitions, validationError] = validateAndNormaliseTransitions(\n//       sm.states\n//     );\n//     if (transitions) {\n//       const machine: Machine<V> = {\n//         // @ts-ignore\n//         states: Object.fromEntries(transitions),\n//       };\n//       return [machine, ''];\n//     } else {\n//       return [undefined, validationError];\n//     }\n//   } else {\n//     return [undefined, `Parameter 'sm.states' is undefined`];\n//   }\n// };\n\n/**\n * Returns _true_ if `sm` is in its final state.\n * @param sm\n * @returns\n */\nexport const done = <V extends Transitions>(sm: MachineState<V>): boolean => {\n  return possible(sm).length === 0;\n};\n\n/**\n * Returns a list of possible state targets for `sm`, or\n * an empty list if no transitions are possible.\n * @param sm\n * @returns\n */\nexport const possibleTargets = <V extends Transitions>(\n  sm: MachineState<V>\n): readonly StateTargetStrict<V>[] => {\n  // Validate current state\n  validateMachineState(sm);\n  // get list of possible targets\n  const fromS = sm.machine[sm.value];\n\n  if (fromS.length === 1 && fromS[0].state === null) return [];\n  return fromS;\n};\n\n/**\n * Returns a list of possible state names for `sm`, or\n * an empty list if no transitions are possible.\n *\n * @param sm\n * @returns\n */\nexport const possible = <V extends Transitions>(\n  sm: MachineState<V>\n): (StateNames<V> | null)[] => {\n  const targets = possibleTargets(sm);\n  return targets.map((v) => v.state);\n};\n\nexport const normaliseTargets = <V extends Transitions>(\n  targets:\n    | StateTarget<V>\n    | readonly StateTargetStrict<V>[]\n    //eslint-disable-next-line functional/prefer-readonly-type\n    | StateTargetStrict<V>\n): StateTargetStrict<V>[] | null | undefined => {\n  const normaliseSingleTarget = (\n    target: string | undefined | null | object\n  ): StateTargetStrict<V> | undefined => {\n    // Terminal target\n    if (target === null) return { state: null };\n    // String is the target state\n    if (typeof target === 'string') {\n      return {\n        state: target,\n      };\n    } else if (typeof target === 'object' && 'state' in target) {\n      const targetState = target.state;\n      if (typeof targetState !== 'string') {\n        throw new Error(\n          `Target 'state' field is not a string. Got: ${typeof targetState}`\n        );\n      }\n      if (`preconditions` in target) {\n        return {\n          state: targetState,\n          preconditions: target.preconditions as TransitionCondition<V>[],\n        };\n      }\n      return { state: targetState };\n    } else {\n      throw new Error(\n        `Unexpected type: ${typeof target}. Expected string or object with 'state' field.`\n      );\n    }\n  };\n\n  // Array of targets (either strings or objects)\n  if (Array.isArray(targets)) {\n    //eslint-disable-next-line functional/no-let\n    let containsNull = false;\n    const mapResults = targets.map((t) => {\n      const r = normaliseSingleTarget(t);\n      if (!r) throw new Error(`Invalid target`);\n      containsNull = containsNull || r.state === null;\n      return r;\n    });\n    if (containsNull && mapResults.length > 1) {\n      throw new Error(`Cannot have null as an possible state`);\n    }\n    return mapResults;\n  } else {\n    const target = normaliseSingleTarget(targets);\n    if (!target) return;\n    return [target];\n  }\n};\n\nconst validateAndNormaliseTransitions = (\n  d: Transitions\n): Map<string, StateTargetStrict<typeof d>[]> | undefined => {\n  const returnMap = new Map<string, StateTargetStrict<typeof d>[]>();\n\n  // 1. Index top-level states\n  for (const [topLevelState, topLevelTargets] of Object.entries(d)) {\n    if (typeof topLevelState === `undefined`) {\n      throw new Error(`Top-level undefined state`);\n    }\n    if (typeof topLevelTargets === `undefined`) {\n      throw new Error(`Undefined target state for ${topLevelState}`);\n    }\n    if (returnMap.has(topLevelState)) {\n      throw new Error(`State defined twice: ${topLevelState}`);\n    }\n    if (topLevelState.includes(' ')) {\n      throw new Error('State names cannot contain spaces');\n    }\n    returnMap.set(topLevelState, []);\n  }\n\n  // 2. Normalise target\n  for (const [topLevelState, topLevelTargets] of Object.entries(d)) {\n    const targets = normaliseTargets(topLevelTargets);\n    if (targets === undefined) throw new Error(`Could not normalise target`);\n    if (targets !== null) {\n      // Check that they all exist as top-level states\n      const seenStates = new Set();\n      for (const target of targets) {\n        if (seenStates.has(target.state)) {\n          throw new Error(\n            `Target state '${target.state}' already exists for '${topLevelState}'`\n          );\n        }\n        seenStates.add(target.state);\n        if (target.state === null) continue;\n        if (!returnMap.has(target.state as string)) {\n          throw new Error(\n            `Target state '${target.state}' is not defined as a top-level state. Defined under: '${topLevelState}'`\n          );\n        }\n      }\n      returnMap.set(topLevelState, targets);\n    }\n  }\n  return returnMap;\n};\n\n/**\n * Validates machine state, throwing an exception if not valid\n * and returning `StateTargetStrict`\n * @param state\n * @returns\n */\nconst validateMachineState = <V extends Transitions>(\n  state: MachineState<V>\n): void => {\n  if (typeof state === 'undefined') {\n    throw new Error(`Parameter 'state' is undefined`);\n  }\n  if (typeof state.value !== 'string') {\n    throw new Error('Existing state is not a string');\n  }\n};\n\n/**\n * Attempts to transition to a new state. Either a new\n * `MachineState` is returned reflecting the change, or\n * an exception is thrown.\n * @param sm\n * @param toState\n * @returns\n */\nexport const to = <V extends Transitions>(\n  sm: MachineState<V>,\n  toState: StateNames<V>\n): MachineState<V> => {\n  validateMachineState(sm); // throws if not OK\n  validateTransition(sm, toState); // throws if not OK\n  return Object.freeze({\n    value: toState,\n    machine: sm.machine,\n    visited: unique<string>([sm.visited as string[], [sm.value] as string[]]),\n  });\n};\n\nexport const next = <V extends Transitions>(\n  sm: MachineState<V>\n): MachineState<V> => {\n  //validateMachineState(sm);\n  const first = possibleTargets(sm).at(0);\n  if (!first || first.state === null) {\n    throw new Error(\n      `Not possible to move to a next state from '${sm.value as string}`\n    );\n  }\n  return to(sm, first.state);\n};\n\n/**\n * Returns _true_ if `toState` is a valid transition from current state of `sm`\n * @param sm\n * @param toState\n * @returns\n */\nexport const isValidTransition = <V extends Transitions>(\n  sm: MachineState<V>,\n  toState: StateNames<V>\n): boolean => {\n  try {\n    validateTransition(sm, toState);\n    return true;\n  } catch (ex) {\n    return false;\n  }\n};\n\nexport const validateTransition = <V extends Transitions>(\n  sm: MachineState<V>,\n  toState: StateNames<V>\n): void => {\n  if (toState === null) throw new Error(`Cannot transition to null state`);\n  if (toState === undefined) {\n    throw new Error(`Cannot transition to undefined state`);\n  }\n  if (typeof toState !== 'string') {\n    throw new Error(\n      `Parameter 'toState' should be a string. Got: ${typeof toState}`\n    );\n  }\n\n  //const toS = sm.machine[toState];\n  //if (typeof toS === 'undefined') throw new Error(`Target state '${toState}' not defined`);\n\n  const p = possible(sm);\n  if (p.length === 0) throw new Error('Machine is in terminal state');\n  if (!p.includes(toState)) {\n    throw new Error(\n      `Target state '${toState}' not available at current state '${\n        sm.value\n      }'. Possible states: ${p.join(', ')}`\n    );\n  }\n};\n\n/**\n * Returns state transitions based on a list of strings.\n * The last string is the terminal state.\n *  A -> B -> C -> D\n *\n * ```js\n * const transitions = [`a`, `b`, `c`, `d`];\n * // Object state machine with events\n * const sm = new StateMachine.WithEvents(transitions);\n * // OR, immutable state machine\n * const sm = StateMachine.init(transitions);\n * ```\n * @param states List of states\n * @return MachineDescription\n */\nexport const fromList = (...states: readonly string[]): Transitions => {\n  const t = {};\n  if (!Array.isArray(states)) throw new Error(`Expected array of strings`);\n  if (states.length <= 2) throw new Error(`Expects at least two states`);\n  for (let i = 0; i < states.length; i++) {\n    const s = states[i];\n    if (typeof s !== `string`) {\n      throw new Error(\n        `Expected array of strings. Got type '${typeof s}' at index ${i}`\n      );\n    }\n    if (i === states.length - 1) {\n      /** @ts-ignore */\n      //eslint-disable-next-line functional/immutable-data\n      t[s] = null;\n    } else {\n      /** @ts-ignore */\n      //eslint-disable-next-line functional/immutable-data\n      t[s] = states[i + 1];\n    }\n  }\n  return t;\n};\n\n/**\n * Returns a machine description based on a list of strings. Machine\n * can go back and forth between states:\n *  A <-> B <-> C <-> D\n * ```js\n * const transitions = [`a`, `b`, `c`, `d`];\n * // Object state machine with events\n * const sm = new StateMachine.WithEvents(transitions);\n * // OR, immutable state machine\n * const sm = StateMachine.init(transitions);\n * ```\n * @param states\n * @returns\n */\nexport const bidirectionalFromList = (\n  ...states: readonly string[]\n): Transitions => {\n  const t = {};\n  if (!Array.isArray(states)) throw new Error(`Expected array of strings`);\n  if (states.length < 2) throw new Error(`Expects at least two states`);\n\n  for (let i = 0; i < states.length; i++) {\n    const s = states[i];\n    if (typeof s !== `string`) {\n      throw new Error(\n        `Expected array of strings. Got type '${typeof s}' at index ${i}`\n      );\n    }\n\n    /** @ts-ignore */\n    //eslint-disable-next-line functional/immutable-data\n    t[s] = [];\n  }\n\n  for (let i = 0; i < states.length; i++) {\n    /** @ts-ignore */\n    const v = t[states[i]] as string[];\n    if (i === states.length - 1) {\n      if (states.length > 1) {\n        //eslint-disable-next-line functional/immutable-data\n        v.push(states[i - 1]);\n      } else {\n        /** @ts-ignore */\n        //eslint-disable-next-line functional/immutable-data\n        t[states[i]] = null;\n      }\n    } else {\n      //eslint-disable-next-line functional/immutable-data\n      v.push(states[i + 1]);\n      //eslint-disable-next-line functional/immutable-data\n      if (i > 0) v.push(states[i - 1]);\n    }\n  }\n  return t;\n};\n","import { SimpleEventEmitter } from '../Events.js';\nimport * as StateMachine from './StateMachine.js';\n\nimport type { StateNames, Transitions, MachineState } from './StateMachine.js';\nimport { Elapsed } from './index.js';\n\nexport type StateChangeEvent<V extends Transitions> = {\n  readonly newState: StateNames<V>;\n  readonly priorState: StateNames<V>;\n};\n\nexport type StopEvent<V extends Transitions> = {\n  readonly state: StateNames<V>;\n};\n\nexport type StateMachineEventMap<V extends Transitions> = {\n  readonly change: StateChangeEvent<V>;\n  readonly stop: StopEvent<V>;\n};\n\nexport type Opts<V extends Transitions> = {\n  readonly debug?: boolean;\n  readonly initial?: StateNames<V>;\n};\n\nexport class StateMachineWithEvents<\n  V extends Transitions,\n> extends SimpleEventEmitter<StateMachineEventMap<V>> {\n  #sm: MachineState<V>;\n  #smInitial: MachineState<V>;\n\n  #debug: boolean;\n  #isDoneNeedsFiring = false;\n  #isDone = false;\n  #changedAt = Elapsed.infinity();\n\n  /**\n   * Create a state machine with initial state, description and options\n   * @param string initial Initial state\n   * @param MachineDescription m Machine description\n   * @param Options Options for machine (defaults to `{debug:false}`)\n   * @memberof StateMachine\n   */\n  constructor(m: V, opts: Opts<V> = {}) {\n    super();\n\n    this.#debug = opts.debug ?? false;\n    this.#sm = StateMachine.init(m, opts.initial);\n    this.#smInitial = StateMachine.cloneState(this.#sm);\n  }\n\n  #setIsDone(v: boolean) {\n    if (this.#isDone === v) return;\n    this.#isDone = v;\n    if (v) {\n      this.#isDoneNeedsFiring = true;\n      setTimeout(() => {\n        if (!this.#isDoneNeedsFiring) return;\n        this.#isDoneNeedsFiring = false;\n        //console.log(`StateMachine isDone (${this.#state}), firing stop.`);\n        this.fireEvent(`stop`, { state: this.#sm.value as string });\n      }, 2);\n    } else {\n      this.#isDoneNeedsFiring = false;\n    }\n  }\n\n  /**\n   * Return a list of possible states from current state.\n   *\n   * If list is empty, no states are possible. Otherwise lists\n   * possible states, including 'null' for terminal\n   */\n  get statesPossible(): readonly (StateNames<V> | null)[] {\n    return StateMachine.possible(this.#sm);\n  }\n\n  /**\n   * Return a list of all defined states\n   */\n  get statesDefined(): readonly StateNames<V>[] {\n    return Object.keys(this.#sm.machine);\n  }\n\n  /**\n   * Moves to the next state if possible. If multiple states are possible, it will use the first.\n   * If machine is finalised, no error is thrown and null is returned.\n   *\n   * @returns {(string|null)} Returns new state, or null if machine is finalised\n   * @memberof StateMachine\n   */\n  next(): string | null {\n    const p = StateMachine.possible(this.#sm);\n    if (p.length === 0) return null;\n    this.state = p[0] as string;\n    return p[0] as string;\n  }\n\n  /**\n   * Returns true if state machine is in its final state\n   *\n   * @returns\n   * @memberof StateMachine\n   */\n  get isDone(): boolean {\n    return StateMachine.done(this.#sm);\n  }\n\n  /**\n   * Resets machine to initial state\n   *\n   * @memberof StateMachine\n   */\n  reset() {\n    this.#setIsDone(false);\n    this.#sm = StateMachine.cloneState(this.#smInitial);\n\n    //eslint-disable-next-line functional/immutable-data\n    this.#changedAt = Elapsed.since();\n  }\n\n  /**\n   * Throws if it's not valid to transition to `newState`\n   * @param newState\n   * @returns\n   */\n  validateTransition(newState: StateNames<V>): void {\n    StateMachine.validateTransition(this.#sm, newState);\n  }\n\n  /**\n   * Returns _true_ if `newState` is valid transition from current state.\n   * Use {@link validateTransition} if you want an explanation for the _false_ results.\n   * @param newState\n   * @returns\n   */\n  isValid(newState: StateNames<V>): boolean {\n    return StateMachine.isValidTransition(this.#sm, newState);\n  }\n\n  /**\n   * Gets or sets state. Throws an error if an invalid transition is attempted.\n   * Use `StateMachine.isValid` to check validity without changing.\n   *\n   * If `newState` is the same as current state, the request is ignored silently.\n   *\n   * @memberof StateMachine\n   */\n  set state(newState: StateNames<V>) {\n    const priorState = this.#sm.value as string;\n    if (newState === this.#sm.value) return;\n\n    // Try to change state\n    this.#sm = StateMachine.to(this.#sm, newState);\n    if (this.#debug) {\n      console.log(`StateMachine: ${priorState} -> ${newState as string}`);\n    }\n    this.#changedAt = Elapsed.since();\n    setTimeout(() => {\n      this.fireEvent(`change`, { newState: newState, priorState: priorState });\n    }, 1);\n\n    if (StateMachine.done(this.#sm)) this.#setIsDone(true);\n  }\n\n  get state(): string {\n    return this.#sm.value as string;\n  }\n\n  /**\n   * Returns timestamp when state was last changed.\n   * See also `elapsed`\n   */\n  //eslint-disable-next-line functional/prefer-tacit\n  get changedAt(): number {\n    return this.#changedAt();\n  }\n\n  /**\n   * Returns milliseconds elapsed since last state change.\n   * See also `changedAt`\n   */\n  //eslint-disable-next-line functional/prefer-tacit\n  get elapsed(): number {\n    return this.#changedAt();\n  }\n}\n","import { defaultComparer, type Comparer } from '../Util.js';\nimport { shuffle } from '../collections/Arrays.js';\n\nexport type ExpressionOrResult<ArgsType, ResultType> =\n  | ResultType\n  | ((\n      args: ArgsType | undefined\n    ) => Promise<ResultType | undefined> | ResultType | undefined | void);\n\n//eslint-disable-next-line functional/no-mixed-types\nexport type RunOpts<ResultType> = {\n  /**\n   * If provided, filters the set of results prior to returning.\n   * @param result\n   * @returns\n   */\n  readonly filter?: (result: ResultType) => boolean;\n  /**\n   * If true, execution order is shuffled each time\n   */\n  readonly shuffle?: boolean;\n  /**\n   * Function to rank results. By default uses {@link defaultComparer} which orders\n   * by numeric value or alphabetical.\n   */\n  readonly rank?: Comparer<ResultType>;\n  /**\n   * If provided, stops execution if _true_ is returned.\n   * Result(s) include most recent execution.\n   * @param latest Latest result\n   * @param sorted Sorted list of current results, not including latest\n   * @returns\n   */\n  readonly stop?: (\n    latest: ResultType | undefined,\n    sorted: readonly ResultType[]\n  ) => boolean;\n};\n\nexport type RunSingleOpts<V> = RunOpts<V> & {\n  readonly at?: number;\n};\n/**\n * Runs a series of async expressions, returning the results.\n * Use {@link runSingle} if it's only a single result you care about.\n *\n * @example Run three functions, returning the highest-ranked result.\n * ```js\n * const result = run([\n *  () => 10,\n *  () => 2,\n *  () => 3\n * ]);\n * // Yields: 10\n * ```\n *\n * Options can be passed for evaluation:\n * ```js\n * const result = run([\n *  (args) => {\n *    if (args === 'apple') return 100;\n *  },\n *  () => {\n *    return 10;\n *  }\n * ])\n * ```\n *\n * ```js\n * const expr = [\n *  (opts) => 10,\n *  (opts) => 2,\n *  (opts) => 3\n * ];\n * const opts = {\n *  rank: (a, b) => {\n *    if (a < b) return -1;\n *    if (a > b) return 1;\n *    return 0;\n *  }\n * }\n * const result = await run(expr, opts);\n * // Returns: 2\n * ```\n *\n * In terms of typing, it takes an generic arguments `ArgsType` and `ResultType`:\n * - `ArgsType`: type of expression arguments. This might be `void` if no arguments are used.\n * - `ResultType`:  return type of expression functions\n *\n * Thus the `expressions` parameter is an array of functions:\n * ```js\n * (args:ArgsType|undefined) => ResultType|undefined\n * // or\n * (args:ArgsType|undefined) => Promise<ResultType|undefined>\n * ```\n *\n * Example:\n * ```js\n * const expressions = [\n *  // Function takes a string arg\n *  (args:string) => return true; // boolean is the necessary return type\n * ];\n * const run<string,boolean>(expressions, opts, 'hello');\n * ```\n * @param expressions\n * @param opts\n * @param args\n * @returns\n */\nexport const run = async <ArgsType, ResultType>(\n  expressions: //eslint-disable-next-line functional/prefer-readonly-type\n  | ExpressionOrResult<ArgsType, ResultType>[]\n    | ExpressionOrResult<ArgsType, ResultType>\n    | readonly ExpressionOrResult<ArgsType, ResultType>[],\n  opts: RunOpts<ResultType> = {},\n  args?: ArgsType\n): Promise<ResultType[]> => {\n  const results: ResultType[] = [];\n  const compareFn = opts.rank ?? defaultComparer;\n  //eslint-disable-next-line functional/no-let\n  let expressionsArray = Array.isArray(expressions)\n    ? (expressions as ExpressionOrResult<ArgsType, ResultType>[])\n    : [expressions as ExpressionOrResult<ArgsType, ResultType>];\n  if (opts.shuffle) expressionsArray = shuffle(expressionsArray);\n\n  for (let i = 0; i < expressionsArray.length; i++) {\n    const exp = expressionsArray[i];\n    //eslint-disable-next-line functional/no-let\n    let r: ResultType;\n    if (typeof exp === 'function') {\n      // @ts-ignore\n      r = await exp(args);\n    } else {\n      r = exp;\n    }\n    if (r !== undefined) {\n      //eslint-disable-next-line functional/immutable-data\n      results.push(r);\n      //eslint-disable-next-line functional/immutable-data\n      results.sort(compareFn);\n    }\n\n    if (typeof opts.stop !== 'undefined') {\n      if (opts.stop(r, results)) {\n        break;\n      }\n    }\n  }\n\n  if (opts.filter) {\n    return results.filter(opts.filter);\n  }\n  return results;\n};\n\n/**\n * Like {@link run}, but it returns a single result or _undefined_.\n * Use the `at` option to specify which index of results to use.\n * By default it's -1, which is the presumably the highest-ranked result.\n *\n * @param expressions\n * @param opts\n * @param args\n * @returns\n */\nexport const runSingle = async <ArgsType, ResultType>(\n  expressions: readonly ExpressionOrResult<ArgsType, ResultType>[],\n  opts: RunSingleOpts<ResultType> = {},\n  args?: ArgsType\n): Promise<ResultType | undefined> => {\n  const results = await run(expressions, opts, args);\n  if (!results) return;\n  if (results.length === 0) return;\n  const at = opts.at ?? -1;\n  return results.at(at);\n};\n","import * as StateMachine from './StateMachine.js';\nimport * as Execute from './Execute.js';\nimport { type MachineState } from './StateMachine.js';\nimport { defaultComparer } from '../Util.js';\nimport { randomElement } from '../collections/Arrays.js';\nimport { resolveLogOption, type LogOption } from '../Debug.js';\n\nexport type Result<V extends StateMachine.Transitions> = {\n  /**\n   * Score of this result. This is used when a state\n   * has multiple handlers returning results separately.\n   * If not defined, 0 is used.\n   */\n  readonly score?: number;\n\n  //readonly state?: StateMachine.StateNames<V>;\n  /**\n   * If specified,the state to transition to. Use\n   * _true_ to attempt to automatically advance machine.\n   * This field is 2nd priority.\n   */\n  readonly next?: StateMachine.StateNames<V> | boolean;\n  /**\n   * If true, resets the machine.\n   * This flag is 1st priority, taking precedence over the `next` field.\n   */\n  readonly reset?: boolean;\n};\n\n//eslint-disable-next-line functional/no-mixed-types\nexport type Runner<V extends StateMachine.Transitions> = {\n  readonly run: () => Promise<StateMachine.MachineState<V> | undefined>;\n  readonly getValue: () => StateMachine.StateNames<V>;\n  readonly reset: () => void;\n  readonly to: (\n    state: StateMachine.StateNames<V>\n  ) => StateMachine.MachineState<V>;\n};\n\nexport type StatesHandler<V extends StateMachine.Transitions> = {\n  readonly if:\n    | readonly StateMachine.StateNames<V>[]\n    //eslint-disable-next-line functional/prefer-readonly-type\n    | StateMachine.StateNames<V>[]\n    | StateMachine.StateNames<V>;\n  readonly then: readonly ExpressionOrResult<V>[] | ExpressionOrResult<V>;\n  /**\n   * Logic for choosing which result, if there are multiple expressions.\n   * By default 'highest' (for highest ranked result)\n   */\n  readonly resultChoice?: `first` | `highest` | `lowest` | `random`;\n};\n\n// export type Prerequisite<V extends StateMachine.Transitions> =\n//   | readonly StateMachine.StateNames<V>[]\n//   | ((\n//       potentialState: StateMachine.StateNames<V>,\n//       state: StateMachine.MachineState<V>\n//     ) => boolean);\n\n// export type StatePrerequisites<V extends StateMachine.Transitions> = {\n//   readonly states:\n//     | readonly StateMachine.StateNames<V>[]\n//     | StateMachine.StateNames<V>;\n//   readonly condition?: Prerequisite<V>;\n// };\n\nexport type DriverOpts<V extends StateMachine.Transitions> = {\n  readonly handlers: readonly StatesHandler<V>[];\n  //readonly prereqs?: StatePrerequisites<V>;\n  readonly debug?: LogOption;\n  /**\n   * If _true_ execution of handlers is shuffled each time\n   */\n  readonly shuffleHandlers?: boolean;\n};\n\n// async function run<V extends StateMachine.Transitions>(\n//   machine: StateMachine.Machine<V>,\n//   handlers: readonly StatesHandler<V>[]\n// );\n\nexport type ExpressionOrResult<Transitions extends StateMachine.Transitions> =\n  | Result<Transitions>\n  | ((\n      machine?: MachineState<Transitions>\n    ) => Result<Transitions> | undefined | void);\n\n/**\n * Drives a state machine.\n *\n * Defaults to selecting the highest-ranked result to determine\n * what to do next.\n * @param machine\n * @param handlersOrOpts\n * @returns\n */\nexport async function init<V extends StateMachine.Transitions>(\n  machine: StateMachine.Machine<V> | StateMachine.Transitions,\n  handlersOrOpts: readonly StatesHandler<V>[] | DriverOpts<V>\n): Promise<Runner<V>> {\n  const opts: DriverOpts<V> = Array.isArray(handlersOrOpts)\n    ? {\n        handlers: handlersOrOpts as readonly StatesHandler<V>[],\n      }\n    : (handlersOrOpts as DriverOpts<V>);\n\n  const debug = resolveLogOption(opts.debug, {\n    category: 'StateMachineDriver',\n  });\n\n  // Index handlers by state, making sure there are not multiple\n  // handlers for a given state.\n  const byState = new Map<string, StatesHandler<V>>();\n  for (const h of opts.handlers) {\n    const ifBlock = Array.isArray(h.if) ? h.if : [h.if];\n    ifBlock.forEach((state) => {\n      if (typeof state !== 'string') {\n        throw new Error(\n          `Expected single or array of strings for the 'if' field. Got: '${typeof state}'.`\n        );\n      }\n\n      if (byState.has(state as string)) {\n        throw new Error(\n          `Multiple handlers defined for state '${\n            state as string\n          }'. There should be at most one.`\n        );\n      }\n      byState.set(state as string, h);\n    });\n  }\n\n  // const expressions: Expression<V>[] = [\n  //   (_machine) => {\n  //     const r: Result<V> = {\n  //       next: 'hello',\n  //     };\n  //     return r;\n  //   },\n  // ];\n\n  const runOpts: Execute.RunOpts<Result<V>> = {\n    // Rank results by score\n    rank: (a, b) => {\n      return defaultComparer(a.score ?? 0, b.score ?? 0);\n    },\n    shuffle: opts.shuffleHandlers ?? false,\n  };\n\n  //eslint-disable-next-line functional/no-let\n  let sm = StateMachine.init(machine);\n\n  // Check that all 'if' states are actually defined on machine\n  for (const [ifState] of byState) {\n    // Check if state is defined\n    if (\n      typeof sm.machine[ifState] === `undefined` &&\n      ifState !== '__fallback'\n    ) {\n      throw new Error(\n        `StateMachineDriver handler references a state ('${ifState}') which is not defined on the machine. Therefore this handler will never run.'`\n      );\n    }\n  }\n\n  const run = async (): Promise<StateMachine.MachineState<V> | undefined> => {\n    debug(`Run. State: ${sm.value as string}`);\n    const state = sm.value as string;\n    //eslint-disable-next-line functional/no-let\n    let handler = byState.get(state);\n    if (handler === undefined) {\n      debug(`  No handler for state '${state}', trying __fallback`);\n\n      // Is there a fallback?\n      handler = byState.get('__fallback');\n    }\n    if (handler === undefined) {\n      debug(`  No __fallback handler`);\n      return;\n    }\n\n    // If the `first` option is given, stop executing fns as soon as we get\n    // a valid result.\n    const runOptsForHandler =\n      handler.resultChoice === `first`\n        ? {\n            ...runOpts,\n            stop: (latest: Result<V> | undefined) => {\n              if (!latest) return false;\n              if (`reset` in latest) return true;\n              if (`next` in latest) {\n                if (latest.next !== undefined) return true;\n              }\n              return false;\n            },\n          }\n        : runOpts;\n\n    const results = await Execute.run<MachineState<V>, Result<V>>(\n      handler.then,\n      runOptsForHandler,\n      sm\n    );\n    debug(\n      `  In state '${sm.value as string}' results: ${results.length}. Choice: ${\n        handler.resultChoice\n      }`\n    );\n\n    // Apply selection logic\n    //eslint-disable-next-line functional/no-let\n    let r: Result<V> | undefined;\n    switch (handler.resultChoice ?? 'highest') {\n      case 'highest':\n        r = results.at(-1);\n        break;\n      case 'first':\n        r = results[0]; // Since we break on the first result\n        break;\n      case 'lowest':\n        r = results.at(0);\n        break;\n      case 'random':\n        r = randomElement(results);\n        break;\n      default:\n        throw new Error(\n          `Unknown 'resultChoice' option: ${handler.resultChoice}. Expected highest, first, lowest or random`\n        );\n    }\n\n    debug(`  Chosen result: ${JSON.stringify(r)}`);\n    // Apply result\n    if (r && r.reset) {\n      sm = StateMachine.reset(sm);\n    } else if (r && r.next) {\n      if (typeof r.next === 'boolean') {\n        sm = StateMachine.next(sm);\n      } else {\n        debug(JSON.stringify(results));\n        sm = StateMachine.to(sm, r.next);\n      }\n    }\n    return sm;\n  };\n\n  return {\n    reset: () => {\n      sm = StateMachine.reset(sm);\n    },\n    getValue: () => sm.value,\n    run,\n    to: (state: StateMachine.StateNames<V>) => {\n      sm = StateMachine.to(sm, state);\n      return sm;\n    },\n  };\n}\n","import { clamp } from '../data/Clamp.js';\nimport { type HasCompletion } from './index.js';\n/**\n * Creates a timer\n */\nexport type TimerSource = () => Timer;\n\n/**\n * A timer instance.\n * See {@link msElapsedTimer}, {@link ticksElapsedTimer}, {@link frequencyTimer}\n */\nexport type Timer = {\n  reset(): void;\n  get elapsed(): number;\n};\n\nexport type ModTimer = Timer & {\n  mod(amt: number): void;\n};\n\nexport type TimerOpts = {\n  /**\n   * Timer to use. By default {@link msElapsedTimer}.\n   */\n  readonly timer?: Timer;\n};\n\n/**\n * Options for relative timer\n */\nexport type RelativeTimerOpts = TimerOpts & {\n  /**\n   * If true, returned value will be clamped to 0..1. False by default\n   */\n  readonly clampValue?: boolean;\n};\n\n/**\n * Returns a function that returns true if timer is complete\n *\n * ```js\n * const timer = hasElapsedMs(1000);\n * timer(); // Returns true if timer is done\n * ```\n *\n * See also {@link Elapsed.progress}.\n * @param totalMs\n * @returns\n */\nexport function hasElapsedMs(totalMs: number): () => boolean {\n  const t = relativeTimer(totalMs, { timer: msElapsedTimer() });\n  return () => t.isDone;\n}\n\nexport const frequencyTimerSource =\n  (frequency: number): TimerSource =>\n  () =>\n    frequencyTimer(frequency, { timer: msElapsedTimer() });\n\n/**\n * Wraps a timer, returning a relative elapsed value based on\n * a given total. ie. percentage complete toward a total duration.\n *\n * If no timer is specified, milliseconds-based timer is used.\n *\n * ```js\n * const t = relativeTimer(1000);\n * t.isDone;\n * t.reset();\n * t.elapsed;\n * ```\n *\n * With options\n * ```js\n * // Total duration of 1000 ticks\n * const t = relativeTimer(1000, { timer: ticksElapsedTimer(); clampValue:true });\n *\n * t.isDone;  // true if total has elapsed\n * t.reset(); // reset timer to 0\n * t.elapsed; // 0..1 scale of how close to completion\n * ```\n *\n * @private\n * @param total Total\n * @param opts Options\n * @returns Timer\n */\nexport const relativeTimer = (\n  total: number,\n  opts: RelativeTimerOpts = {}\n): ModTimer & HasCompletion => {\n  const timer = opts.timer ?? msElapsedTimer();\n  const clampValue = opts.clampValue ?? false;\n\n  //eslint-disable-next-line functional/no-let\n  let done = false;\n  //eslint-disable-next-line functional/no-let\n  let modAmt = 1;\n\n  return {\n    mod(amt: number) {\n      modAmt = amt;\n    },\n    get isDone() {\n      return done;\n    },\n    reset: () => {\n      done = false;\n      timer.reset();\n    },\n    get elapsed() {\n      //eslint-disable-next-line functional/no-let\n      let v = timer.elapsed / (total * modAmt);\n      if (clampValue) v = clamp(v);\n      if (v >= 1) done = true;\n      return v;\n    },\n  };\n};\n\n/**\n * A timer based on frequency: cycles per unit of time. These timers return a number from\n * 0..1 indicating position with a cycle.\n *\n * In practice, timers are used to 'drive' something like an Oscillator.\n *\n * @example Init a spring oscillator, with a half a cycle per second\n * ```js\n * import { Oscillators } from \"https://unpkg.com/ixfx/dist/modulation.js\"\n * import { frequencyTimer } from \"https://unpkg.com/ixfx/dist/flow.js\"\n * Oscillators.spring({}, frequencyTimer(0.5));\n * ```\n *\n * By default it uses elapsed clock time as a basis for frequency. ie., cycles per second.\n *\n * It returns a `ModTimer`, which allows for a modulation amount to be continually applied\n * to the calculation of the 'position' within a cycle.\n *\n * @example Prints around 0/0.5 each second, as timer is half a cycle per second\n * ```js\n * import { frequencyTimer } from \"https://unpkg.com/ixfx/dist/flow.js\"\n * const t = frequencyTimer(0.5);\n * setInterval(() => {\n *  console.log(t.elapsed);\n * }, 1000);\n * ```\n * @param frequency\n * @param timer\n * @returns\n */\nexport const frequencyTimer = (\n  frequency: number,\n  opts: TimerOpts = {}\n): ModTimer => {\n  const timer = opts.timer ?? msElapsedTimer();\n  const cyclesPerSecond = frequency / 1000;\n  //eslint-disable-next-line functional/no-let\n  let modAmt = 1;\n  return {\n    mod: (amt: number) => {\n      modAmt = amt;\n    },\n    reset: () => {\n      timer.reset();\n    },\n    get elapsed() {\n      // Get position in a cycle\n      const v = timer.elapsed * (cyclesPerSecond * modAmt);\n\n      // Get fractional part\n      const f = v - Math.floor(v);\n      if (f < 0) {\n        throw new Error(\n          `Unexpected cycle fraction less than 0. Elapsed: ${v} f: ${f}`\n        );\n      }\n      if (f > 1) {\n        throw new Error(\n          `Unexpected cycle fraction more than 1. Elapsed: ${v} f: ${f}`\n        );\n      }\n      return f;\n    },\n  };\n};\n\n/**\n * A timer that uses clock time. Start time is from the point of invocation.\n *\n * ```js\n * const t = msElapsedTimer();\n * t.reset(); // reset start\n * t.elapsed; // ms since start\n * ```\n * @returns {Timer}\n * @see {ticksElapsedTimer}\n */\nexport const msElapsedTimer = (): Timer => {\n  // eslint-disable-next-line functional/no-let\n  let start = performance.now();\n  return {\n    reset: () => {\n      start = performance.now();\n    },\n    get elapsed() {\n      return performance.now() - start;\n    },\n  };\n};\n\n/**\n * A timer that progresses with each call to `elapsed`.\n *\n * The first call to elapsed will return 1.\n *\n * ```js\n * const timer = ticksElapsedTimer();\n * timer.reset(); // Reset to 0\n * timer.elapsed; // Number of ticks\n * ```\n * @returns {Timer}\n * @see {msElapsedTimer}\n */\nexport const ticksElapsedTimer = (): Timer => {\n  // eslint-disable-next-line functional/no-let\n  let start = 0;\n  return {\n    reset: () => {\n      start = 0;\n    },\n    get elapsed() {\n      return ++start;\n    },\n  };\n};\n","import { sleep } from './Sleep.js';\nimport { numberTry } from '../Guards.js';\nimport { type AsyncPromiseOrGenerator } from './index.js';\n\n/**\n * Interval types allows for more expressive coding, rather than embedding millisecond values.\n *\n * eg: { mins: 5} rather than 5*60*1000 or worse, 300000\n *\n * Fields are cumulative. { secs: 2, millis: 1 } will equal 2001 milliseconds.\n *\n * Use {@link intervalToMs} to resolve an {@link Interval} to milliseconds. Use {@link Elapsed.toString} to get a human-readable version.\n */\nexport type Interval =\n  | number\n  | {\n      readonly millis?: number;\n      readonly secs?: number;\n      readonly hours?: number;\n      readonly mins?: number;\n    };\n\nexport function intervalToMs(i: Interval | undefined): number | undefined;\nexport function intervalToMs(\n  i: Interval | undefined,\n  defaultNumber: number\n): number;\n/**\n * Return the millisecond value of an Interval.\n * ```js\n * intervalToMs(100); // 100\n * intervalToMs({ millis: 100 }); // 100\n * ```\n *\n * Use `defaultNumber` to return a default in the case of\n * undefined or invalid input.\n *\n * ```js\n * intervalToMs(undefined); // undefined\n * intervalToMs(undefined, 100); // 100\n * ```\n *\n * If no default is provided, an exception is thrown.\n * @param i Interval\n * @param defaultNumber Default value if `i` is undefined\n * @returns Milliseconds, or undefined\n */\nexport function intervalToMs(\n  i: Interval | undefined,\n  defaultNumber?: number\n): number | undefined {\n  if (isInterval(i)) {\n    // Number given, must be millis?\n    if (typeof i === 'number') return i;\n\n    //eslint-disable-next-line functional/no-let\n    let ms = i.millis ?? 0;\n    ms += (i.hours ?? 0) * 60 * 60 * 1000;\n    ms += (i.mins ?? 0) * 60 * 1000;\n    ms += (i.secs ?? 0) * 1000;\n    return ms;\n  } else {\n    if (typeof defaultNumber !== 'undefined') return defaultNumber;\n    throw new Error(`Not a valid interval: ${i}`);\n  }\n}\n\nexport function isInterval(i: number | Interval | undefined): i is Interval {\n  if (i === undefined) return false;\n  if (i === null) return false;\n  if (typeof i === `number`) {\n    if (Number.isNaN(i)) return false;\n    if (!Number.isFinite(i)) return false;\n    return true;\n  } else if (typeof i !== 'object') return false;\n\n  const hasMillis = 'millis' in i;\n  const hasSecs = 'secs' in i;\n  const hasMins = 'mins' in i;\n  const hasHours = 'hours' in i;\n  if (hasMillis) {\n    if (!numberTry(i.millis)) return false;\n  }\n  if (hasSecs) {\n    if (!numberTry(i.secs)) return false;\n  }\n  if (hasMins) {\n    if (!numberTry(i.mins)) return false;\n  }\n  if (hasHours) {\n    if (!numberTry(i.hours)) return false;\n  }\n  if (hasMillis || hasSecs || hasHours || hasMins) return true;\n  return false;\n}\n\nexport type IntervalOpts = {\n  /**\n   * Sleep a fixed period of time regardless of how long each invocation of 'produce' takes\n   */\n  readonly fixed?: Interval;\n  /**\n   * Minimum interval. That is, only sleep if there is time left over after 'produce'\n   * is invoked.\n   */\n  readonly minimum?: Interval;\n  /**\n   * Optional signal to abort\n   */\n  readonly signal?: AbortSignal;\n  /**\n   * When to perform delay. Default is before 'produce' is invoked.\n   */\n  readonly delay?: 'before' | 'after';\n};\n/**\n * Generates values from `produce` with a time delay.\n * `produce` can be a simple function that returns a value, an async function, or a generator.\n *\n * @example Produce a random number every 500ms:\n * ```\n * const randomGenerator = interval(() => Math.random(), 500);\n * for await (const r of randomGenerator) {\n *  // Random value every 1 second\n *  // Warning: does not end by itself, a `break` statement is needed\n * }\n * ```\n *\n * @example Return values from a generator every 500ms:\n * ```js\n * import { interval } from 'https://unpkg.com/ixfx/dist/flow.js'\n * import { count } from 'https://unpkg.com/ixfx/dist/generators.js'\n * for await (const v of interval(count(10), { fixed: 1000 })) {\n *  // Do something with `v`\n * }\n * ```\n *\n * Options allow either fixed interval (wait this long between iterations), or a minimum interval (wait at least this long).\n * The latter is useful if `produce` takes some time - it will only wait the remaining time or not at all.\n *\n * If you just want to loop at a certain speed, consider using {@link continuously} instead.\n *\n * If the AbortSignal is triggered, an exception will be thrown, stopping iteration.\n * @template V Returns value of `produce` function\n * @param produce Function, generator to use\n * @param opts Options\n * @template V Data type\n * @returns\n */\nexport const interval = async function* <V>(\n  produce: AsyncPromiseOrGenerator<V> | ArrayLike<V>,\n  optsOrFixedMs: IntervalOpts | number = {}\n): AsyncGenerator<V> {\n  //eslint-disable-next-line functional/no-let\n  let cancelled = false;\n  const opts =\n    typeof optsOrFixedMs === 'number'\n      ? { fixed: optsOrFixedMs }\n      : optsOrFixedMs;\n\n  const signal = opts.signal;\n  const when = opts.delay ?? 'before';\n  //eslint-disable-next-line functional/no-let\n  let sleepMs = intervalToMs(opts.fixed) ?? intervalToMs(opts.minimum, 0);\n  //eslint-disable-next-line functional/no-let\n  let started = performance.now();\n\n  const minIntervalMs = opts.minimum ? intervalToMs(opts.minimum) : undefined;\n  const doDelay = async () => {\n    const elapsed = performance.now() - started;\n    if (typeof minIntervalMs !== 'undefined') {\n      sleepMs = Math.max(0, minIntervalMs - elapsed);\n    }\n    if (sleepMs) {\n      await sleep({ millis: sleepMs, signal });\n    }\n    started = performance.now();\n    if (signal?.aborted) throw new Error(`Signal aborted ${signal?.reason}`);\n  };\n\n  // Get an iterator over array\n  if (Array.isArray(produce)) produce = produce.values();\n\n  const isGenerator =\n    typeof produce === `object` &&\n    `next` in produce &&\n    typeof produce.next === `function`;\n\n  try {\n    while (!cancelled) {\n      if (when === 'before') await doDelay();\n      if (cancelled) return;\n      if (typeof produce === `function`) {\n        // Returns V or Promise<V>\n        const result = await produce();\n        if (typeof result === 'undefined') return; // Done\n        yield result;\n      } else if (isGenerator) {\n        // Generator\n        const result = await (produce as any).next();\n        if (result.done) return;\n        yield result.value;\n      } else {\n        throw new Error(\n          `produce param does not seem to return a value/Promise and is not a generator?`\n        );\n      }\n\n      if (when === 'after') await doDelay();\n    }\n  } finally {\n    cancelled = true;\n  }\n};\n","import { integer as guardInteger } from '../Guards.js';\nimport { type HasCompletion } from './index.js';\nimport { intervalToMs, type Interval } from './Interval.js';\nexport type TimeoutSyncCallback = (\n  elapsedMs?: number,\n  ...args: readonly unknown[]\n) => void;\nexport type TimeoutAsyncCallback = (\n  elapsedMs?: number,\n  ...args: readonly unknown[]\n) => Promise<void>;\n\n/**\n * A resettable timeout, returned by {@link timeout}\n */\nexport type Timeout = HasCompletion & {\n  start(altTimeoutMs?: number, args?: readonly unknown[]): void;\n  cancel(): void;\n  get isDone(): boolean;\n};\n\n/**\n * Returns a {@link Timeout} that can be triggered, cancelled and reset. Use {@link continuously} for interval-\n * based loops.\n *\n * Once `start()` is called, `callback` will be scheduled to execute after `timeoutMs`.\n * If `start()` is called again, the waiting period will be reset to `timeoutMs`.\n *\n * @example Essential functionality\n * ```js\n * const fn = () => {\n *  console.log(`Executed`);\n * };\n * const t = timeout(fn, 60*1000);\n * t.start();   // After 1 minute `fn` will run, printing to the console\n * ```\n *\n * @example Control execution functionality\n * ```\n * t.cancel();  // Cancel it from running\n * t.start();   // Schedule again after 1 minute\n * t.start(30*1000); // Cancel that, and now scheduled after 30s\n * t.isDone;    // True if a scheduled event is pending\n * ```\n *\n * Callback function receives any additional parameters passed in from start.\n * This can be useful for passing through event data:\n *\n * @example\n * ```js\n * const t = timeout( (elapsedMs, ...args) => {\n *  // args contains event data\n * }, 1000);\n * el.addEventListener(`click`, t.start);\n * ```\n *\n * Asynchronous callbacks can be used as well:\n * ```js\n * timeout(async () => {...}, 100);\n * ```\n *\n * If you don't expect to need to control the timeout, consider using {@link delay},\n * which can run a given function after a specified delay.\n * @param callback\n * @param timeoutMs\n * @returns {@link Timeout}\n */\nexport const timeout = (\n  callback: TimeoutSyncCallback | TimeoutAsyncCallback,\n  interval: Interval\n): Timeout => {\n  if (callback === undefined) {\n    throw new Error(`callback parameter is undefined`);\n  }\n  const intervalMs = intervalToMs(interval);\n  guardInteger(intervalMs, `aboveZero`, `interval`);\n\n  //eslint-disable-next-line functional/no-let\n  let timer = 0;\n  //eslint-disable-next-line functional/no-let\n  let startedAt = 0;\n  const start = async (\n    altInterval: Interval = interval,\n    args: unknown[]\n  ): Promise<void> => {\n    const p = new Promise<void>((resolve, reject) => {\n      startedAt = performance.now();\n      const altTimeoutMs = intervalToMs(altInterval);\n      try {\n        guardInteger(altTimeoutMs, `aboveZero`, `altTimeoutMs`);\n      } catch (e) {\n        reject(e);\n        return;\n      }\n      if (timer !== 0) cancel();\n      timer = window.setTimeout(async () => {\n        await callback(performance.now() - startedAt, ...args);\n        timer = 0;\n        resolve(undefined);\n      }, altTimeoutMs);\n    });\n    return p;\n  };\n\n  const cancel = () => {\n    if (timer === 0) return;\n    startedAt = 0;\n    window.clearTimeout(timer);\n  };\n\n  return {\n    start,\n    cancel,\n    get isDone() {\n      return timer !== 0;\n    },\n  };\n};\n","export type UpdateFailPolicy = `fast` | `slow` | `backoff`;\n/**\n * Calls the async `fn` to generate a value if there is no prior value or\n * `intervalMs` has elapsed since value was last generated.\n * @example\n * ```js\n * const f = updateOutdated(async () => {\n *  const r = await fetch(`blah`);\n *  return await r.json();\n * }, 60*1000);\n *\n * // Result will be JSON from fetch. If fetch happened already in the\n * // last 60s, return cached result. Otherwise it will fetch data\n * const result = await f();\n * ```\n *\n * Callback `fn` is passed how many milliseconds have elapsed since last update. It's\n * minimum value will be `intervalMs`.\n *\n * ```js\n * const f = updateOutdated(async elapsedMs => {\n *  // Do something with elapsedMs?\n * }, 60*1000;\n * ```\n *\n * There are different policies for what to happen if `fn` fails. `slow` is the default.\n * * `fast`: Invocation will happen immediately on next attempt\n * * `slow`: Next invocation will wait `intervalMs` as if it was successful\n * * `backoff`: Attempts will get slower and slower until next success. Interval is multipled by 1.2 each time.\n *\n * @param fn Async function to call. Must return a value.\n * @param intervalMs Maximum age of cached result\n * @param updateFail `slow` by default\n * @returns Value\n */\nexport const updateOutdated = <V>(\n  fn: (elapsedMs?: number) => Promise<V>,\n  intervalMs: number,\n  updateFail: UpdateFailPolicy = `slow`\n): (() => Promise<V>) => {\n  //eslint-disable-next-line functional/no-let\n  let lastRun = 0;\n  //eslint-disable-next-line functional/no-let\n  let lastValue: V | undefined;\n  //eslint-disable-next-line functional/no-let\n  let intervalMsCurrent = intervalMs;\n\n  //eslint-disable-next-line no-async-promise-executor\n  return () =>\n    new Promise(async (resolve, reject) => {\n      const elapsed = performance.now() - lastRun;\n      if (lastValue === undefined || elapsed > intervalMsCurrent) {\n        try {\n          lastRun = performance.now();\n          lastValue = await fn(elapsed);\n          intervalMsCurrent = intervalMs;\n        } catch (ex) {\n          if (updateFail === `fast`) {\n            lastValue = undefined;\n            lastRun = 0;\n          } else if (updateFail === `backoff`) {\n            intervalMsCurrent = Math.floor(intervalMsCurrent * 1.2);\n          }\n          reject(ex);\n          return;\n        }\n      }\n      resolve(lastValue);\n    });\n};\n","import { integer as guardInteger } from '../Guards.js';\nimport { intervalToMs, type HasCompletion, type Interval } from './index.js';\n\n/**\n * Runs a function continuously, returned by {@link Continuously}\n */\nexport type Continuously = HasCompletion & {\n  /**\n   * Starts loop. If already running, does nothing\n   */\n  start(): void;\n\n  /**\n   * (Re-)starts the loop. If an existing iteration has been\n   * scheduled, this is cancelled and started again.\n   *\n   * This can be useful when adjusting the interval\n   */\n  reset(): void;\n  /**\n   * How many milliseconds since start() was last called\n   */\n  get elapsedMs(): number;\n  /**\n   * How many iterations of the loop since start() was last called\n   */\n  get ticks(): number;\n  /**\n   * Returns true if the loop is not running (for some reason or another)\n   */\n  get isDone(): boolean;\n  /**\n   * If disposed, the continuously instance won't be re-startable\n   */\n  get isDisposed(): boolean;\n  /**\n   * Stops loop. It can be restarted using .start()\n   */\n  cancel(): void;\n  /**\n   * Set interval. Change will take effect on next loop. For it to kick\n   * in earlier, call .reset() after changing the value.\n   */\n  set interval(interval: Interval);\n  get interval(): Interval;\n};\n\nexport type ContinuouslySyncCallback = (\n  ticks?: number,\n  elapsedMs?: number\n) => boolean | void;\nexport type ContinuouslyAsyncCallback = (\n  ticks?: number,\n  elapsedMs?: number\n) => Promise<boolean | void>;\n\nconst raf =\n  typeof window !== `undefined`\n    ? (cb: () => void) => window.requestAnimationFrame(cb)\n    : (cb: () => void) => window.setTimeout(cb, 1);\n\nexport type OnStartCalled = `continue` | `cancel` | `reset` | `dispose`;\n\n//eslint-disable-next-line functional/no-mixed-types\nexport type ContinuouslyOpts = {\n  readonly fireBeforeWait?: boolean;\n  /**\n   * Called whenever .start() is invoked.\n   * If this function returns:\n   *  - `continue`: the loop starts if it hasn't started yet, or continues if already started\n   *  - `cancel`: loop stops, but can be re-started if .start() is called again\n   *  - `dispose`: loop stops and will throw an error if .start() is attempted to be called\n   *  - `reset`: loop resets (ie. existing scheduled task is cancelled)\n   *\n   */\n  readonly onStartCalled?: (\n    ticks?: number,\n    elapsedMs?: number\n  ) => OnStartCalled;\n};\n\n/**\n * Returns a {@link Continuously} that continuously at `intervalMs`, executing `callback`.\n * By default, first the sleep period happens and then the callback happens.\n * Use {@link Timeout} for a single event.\n *\n * If callback returns _false_, loop exits.\n *\n * Call `start` to begin/reset loop. `cancel` stops loop.\n *\n * @example Animation loop\n * ```js\n * const draw = () => {\n *  // Draw on canvas\n * }\n *\n * // Run draw() synchronised with monitor refresh rate via `window.requestAnimationFrame`\n * continuously(draw).start();\n * ```\n *\n * @example With delay\n * ```js\n * const fn = () => {\n *  console.log(`1 minute`);\n * }\n * const c = continuously(fn, 60*1000);\n * c.start(); // Runs `fn` every minute\n * ```\n *\n * @example Control a 'continuously'\n * ```js\n * c.cancel();   // Stop the loop, cancelling any up-coming calls to `fn`\n * c.elapsedMs;  // How many milliseconds have elapsed since start\n * c.ticks;      // How many iterations of loop since start\n * c.intervalMs; // Get/set speed of loop. Change kicks-in at next loop.\n *               // Use .start() to reset to new interval immediately\n * ```\n *\n * Asynchronous callback functions are supported too:\n * ```js\n * continuously(async () => { ..});\n * ```\n *\n * The `callback` function can receive a few arguments:\n * ```js\n * continuously( (ticks, elapsedMs) => {\n *  // ticks: how many times loop has run\n *  // elapsedMs:  how long since last loop\n * }).start();\n * ```\n *\n * If the callback explicitly returns _false_, the loop will be cancelled\n * ```js\n * continuously(ticks => {\n *  // Stop after 100 iterations\n *  if (ticks > 100) return false;\n * }).start();\n * ```\n *\n * You can intercept the logic for calls to `start()` with `onStartCalled`. It can determine\n * whether the `start()` proceeds, if the loop is cancelled, or the whole thing disposed,\n * so it can't run any longer.\n * ```js\n * continuously(callback, intervalMs, {\n *  onStartCalled:(ticks, elapsedMs) => {\n *    if (elapsedMs > 1000) return `cancel`;\n *  }\n * }).start();\n * ```\n *\n * To run `callback` *before* the sleep happens, set `fireBeforeWait`:\n * ```js\n * continuously(callback, intervalMs, { fireBeforeWait: true });\n * ```\n * @param callback Function to run. If it returns false, loop exits.\n * @param opts Additional options\n * @param intervalMs\n * @returns\n */\nexport const continuously = (\n  callback: ContinuouslyAsyncCallback | ContinuouslySyncCallback,\n  interval?: Interval,\n  opts: ContinuouslyOpts = {}\n): Continuously => {\n  //eslint-disable-next-line functional/no-let\n  let intervalMs = intervalToMs(interval, 0);\n  guardInteger(intervalMs, `positive`, `interval`);\n\n  const fireBeforeWait = opts.fireBeforeWait ?? false;\n  const onStartCalled = opts.onStartCalled;\n\n  //eslint-disable-next-line functional/no-let\n  let disposed = false;\n  //eslint-disable-next-line functional/no-let\n  let running = false;\n  //eslint-disable-next-line functional/no-let\n  let ticks = 0;\n  //eslint-disable-next-line functional/no-let\n  let startedAt = performance.now();\n  //eslint-disable-next-line functional/no-let\n  let intervalUsed = interval ?? 0;\n  //eslint-disable-next-line functional/no-let\n  let currentTimer = 0;\n\n  const schedule =\n    intervalMs === 0\n      ? raf\n      : (cb: () => void) => window.setTimeout(cb, intervalMs);\n  const deschedule =\n    intervalMs === 0\n      ? (_: number) => {\n          /** no-op */\n        }\n      : (timer: number) => window.clearTimeout(timer);\n\n  const cancel = () => {\n    if (!running) return;\n    running = false;\n    ticks = 0;\n    if (currentTimer !== 0) deschedule(currentTimer);\n    currentTimer = 0;\n  };\n\n  const loop = async () => {\n    if (!running) return;\n    const valOrPromise = callback(ticks++, performance.now() - startedAt);\n    //eslint-disable-next-line functional/no-let\n    let val;\n    if (typeof valOrPromise === `object`) {\n      val = await valOrPromise;\n    } else {\n      val = valOrPromise;\n    }\n    if (val !== undefined && !val) {\n      cancel();\n      return;\n    }\n    currentTimer = schedule(loop);\n  };\n\n  const start = () => {\n    if (disposed) throw new Error(`Disposed`);\n\n    if (onStartCalled !== undefined) {\n      // Function governs whether to allow .start() to go ahead\n      const doWhat = onStartCalled(ticks, performance.now() - startedAt);\n      if (doWhat === `cancel`) {\n        cancel();\n        return;\n      } else if (doWhat === `reset`) {\n        reset();\n        return;\n      } else if (doWhat === `dispose`) {\n        disposed = true;\n        cancel();\n        return;\n      }\n    }\n\n    if (!running) {\n      // Start running\n      startedAt = performance.now();\n      running = true;\n      if (fireBeforeWait) {\n        loop(); // Exec first, then wait\n      } else {\n        currentTimer = schedule(loop); // Wait first, then exec\n      }\n    }\n  };\n\n  const reset = () => {\n    if (disposed) throw new Error(`Disposed`);\n\n    // Cancel scheduled iteration\n    if (running) {\n      cancel();\n    }\n    start();\n  };\n\n  return {\n    start,\n    reset,\n    cancel,\n    get interval() {\n      return intervalUsed;\n    },\n    set interval(interval: Interval) {\n      const ms = intervalToMs(interval, 0);\n      guardInteger(ms, `positive`, `interval`);\n      intervalMs = ms;\n      intervalUsed = interval;\n    },\n    get isDone() {\n      return !running;\n    },\n    get isDisposed() {\n      return disposed;\n    },\n    get ticks() {\n      return ticks;\n    },\n    get elapsedMs() {\n      return performance.now() - startedAt;\n    },\n  };\n};\n","import {\n  timeout,\n  type TimeoutSyncCallback,\n  type TimeoutAsyncCallback,\n} from './Timeout.js';\n\n/**\n * Returns a debounce function which acts to filter calls to a given function `fn`.\n *\n * Eg, Let's create a debounced wrapped for a function:\n * ```js\n * const fn = () => console.log('Hello');\n * const debouncedFn = debounce(fn, 1000);\n * ```\n *\n * Now we can call `debouncedFn()` as often as we like, but it will only execute\n * `fn()` after 1 second has elapsed since the last invocation. It essentially filters\n * many calls to fewer calls. Each time `debounceFn()` is called, the timeout is\n * reset, so potentially `fn` could never be called if the rate of `debounceFn` being called\n * is faster than the provided timeout.\n *\n * Remember that to benefit from `debounce`, you must call the debounced wrapper, not the original function.\n *\n * ```js\n * // Create\n * const d = debounce(fn, 1000);\n *\n * // Don't do this if we want to benefit from the debounce\n * fn();\n *\n * // Use the debounced wrapper\n * d(); // Only calls fn after 1000s\n * ```\n *\n * A practical use for this is handling high-frequency streams of data, where we don't really\n * care about processing every event, only last event after a period. Debouncing is commonly\n * used on microcontrollers to prevent button presses being counted twice.\n *\n * @example Handle most recent pointermove event after 1000ms\n * ```js\n * // Set up debounced handler\n * const moveDebounced = debounce((elapsedMs, evt) => {\n *    // Handle event\n * }, 500);\n *\n * // Wire up event\n * el.addEventListener(`pointermove`, moveDebounced);\n * ```\n *\n * Arguments can be passed to the debounced function:\n *\n * ```js\n * const fn = (x) => console.log(x);\n * const d = debounce(fn, 1000);\n * d(10);\n * ```\n *\n * If the provided function is asynchronous, it's possible to await the debounced\n * version as well. If the invocation was filtered, it returns instantly.\n *\n * ```js\n * const d = debounce(fn, 1000);\n * await d();\n * ```\n * @param callback Function to filter access to\n * @param timeoutMs Minimum time between invocations\n * @returns Debounce function\n */\nexport const debounce = (\n  callback: TimeoutSyncCallback | TimeoutAsyncCallback,\n  timeoutMs: number\n): DebouncedFunction => {\n  const t = timeout(callback, timeoutMs);\n  //eslint-disable-next-line functional/prefer-immutable-types\n  return (...args: unknown[]) => t.start(undefined, args);\n};\n\n/**\n * Debounced function\n */\nexport type DebouncedFunction = (...args: readonly unknown[]) => void;\n","/***\n * Throttles a function. Callback only allowed to run after minimum of `intervalMinMs`.\n *\n * @example Only handle move event every 500ms\n * ```js\n * const moveThrottled = throttle( (elapsedMs, args) => {\n *  // Handle ar\n * }, 500);\n * el.addEventListener(`pointermove`, moveThrottled)\n * ```\n *\n * Note that `throttle` does not schedule invocations, but rather acts as a filter that\n * sometimes allows follow-through to `callback`, sometimes not. There is an expectation then\n * that the return function from `throttle` is repeatedly called, such as the case for handling\n * a stream of data/events.\n *\n * @example Manual trigger\n * ```js\n * // Set up once\n * const t = throttle( (elapsedMs, args) => { ... }, 5000);\n *\n * // Later, trigger throttle. Sometimes the callback will run,\n * // with data passed in to args[0]\n * t(data);\n * ```\n */\nexport const throttle = (\n  callback: (\n    elapsedMs: number,\n    ...args: readonly unknown[]\n  ) => void | Promise<unknown>,\n  intervalMinMs: number\n) => {\n  //eslint-disable-next-line functional/no-let\n  let trigger = 0;\n  //eslint-disable-next-line functional/prefer-immutable-types\n  return async (...args: unknown[]) => {\n    const elapsed = performance.now() - trigger;\n    if (elapsed >= intervalMinMs) {\n      const r = callback(elapsed, ...args);\n      if (typeof r === `object`) await r;\n      trigger = performance.now();\n    }\n  };\n};\n","/**\n * Helper function for calling code that should fail after a timeout.\n * In short, it allows you to signal when the function succeeded, to cancel it, or\n * to be notified if it was canceled or completes.\n *\n * @example Verbose example\n * ```js\n * // This function is called by `waitFor` if it was cancelled\n * const onAborted = (reason:string) => {\n *  // 'reason' is a string describing why it has aborted.\n *  // ie: due to timeout or because done() was called with an error\n * };\n *\n * // This function is called by `waitFor` if it completed\n * const onComplete = (success:boolean) => {\n *  // Called if we were aborted or finished succesfully.\n *  // onComplete will be called after onAborted, if it was an error case\n * }\n *\n * // If done() is not called after 1000, onAborted will be called\n * // if done() is called or there was a timeout, onComplete is called\n * const done = waitFor(1000, onAborted, onComplete);\n *\n * // Signal completed successfully (thus calling onComplete(true))\n * done();\n *\n * // Signal there was an error (thus calling onAborted and onComplete(false))\n * done(`Some error`);\n * ```\n *\n * The completion handler is useful for removing event handlers.\n *\n * @example Compact example\n * ```js\n * const done = waitFor(1000,\n *  (reason) => {\n *    console.log(`Aborted: ${reason}`);\n *  },\n *  (success) => {\n *    console.log(`Completed. Success: ${success ?? `Yes!` : `No`}`)\n *  });\n *\n * try {\n *  runSomethingThatMightScrewUp();\n *  done(); // Signal it succeeded\n * } catch (e) {\n *  done(e); // Signal there was an error\n * }\n * ```\n * @param timeoutMs\n * @param onAborted\n * @param onComplete\n * @returns\n */\nexport const waitFor = (\n  timeoutMs: number,\n  onAborted: (reason: string) => void,\n  onComplete?: (success: boolean) => void\n) => {\n  //eslint-disable-next-line functional/no-let\n  let success = false;\n  const done = (error?: string) => {\n    if (t !== 0) {\n      window.clearTimeout(t);\n      t = 0;\n    }\n    if (error) {\n      onAborted(error);\n    } else {\n      success = true;\n    }\n    if (onComplete !== undefined) onComplete(success);\n  };\n\n  //eslint-disable-next-line functional/no-let\n  let t = window.setTimeout(() => {\n    t = 0;\n    try {\n      onAborted(`Timeout after ${timeoutMs}ms`);\n    } finally {\n      if (onComplete !== undefined) onComplete(success);\n    }\n  }, timeoutMs);\n\n  return done;\n};\n","import { intervalToMs, type Interval } from './Interval.js';\nimport { sleep } from './Sleep.js';\n\n/**\n * Delay options\n */\nexport type DelayOpts = Interval & {\n  /**\n   * Signal for cancelling delay\n   */\n  readonly signal?: AbortSignal;\n  /**\n   * When delay is applied. \"before\" is default.\n   */\n  readonly delay?: 'before' | 'after' | 'both';\n};\n\n/**\n * Pauses execution for interval after which the asynchronous `callback` is executed and awaited.\n * Must be called with `await` if you want the pause effect.\n *\n * @example Pause and wait for function\n * ```js\n * const result = await delay(async () => Math.random(), 1000);\n * console.log(result); // Prints out result after one second\n * ```\n *\n * If the `interval` option is a number its treated as milliseconds. {@link Interval} can also be used:\n * ```js\n * const result = await delay(async () => Math.random(), { mins: 1 });\n * ```\n *\n * If `await` is omitted, the function will run after the provided timeout, and code will continue to run.\n *\n * @example Schedule a function without waiting\n * ```js\n * await delay(async () => {\n *  console.log(Math.random())\n * }, 1000);\n * // Prints out a random number after 1 second.\n * ```\n *\n * {@link delay} and {@link sleep} are similar. `delay()` takes a parameter of what code to execute after the timeout, while `sleep()` just resolves after the timeout.\n *\n * Optionally takes an AbortSignal to cancel delay.\n * ```js\n * const ac = new AbortController();\n * // Super long wait\n * await delay(someFn, { signal: ac.signal, hours: 1 }}\n * ...\n * ac.abort(); // Cancels long delay\n * ```\n *\n * It also allows choice of when delay should happen.\n * If you want to be able to cancel or re-run a delayed function, consider using\n * {@link timeout} instead.\n *\n * @template V\n * @param callback What to run after interval\n * @param opts Options for delay. By default delay is before `callback` is executed.\n * @return Returns result of `callback`.\n */\nexport const delay = async <V>(\n  callback: () => Promise<V>,\n  //eslint-disable-next-line functional/prefer-immutable-types\n  optsOrMillis: DelayOpts | number\n): Promise<V> => {\n  const opts =\n    typeof optsOrMillis === 'number' ? { millis: optsOrMillis } : optsOrMillis;\n  const delayWhen = opts.delay ?? 'before';\n  if (delayWhen === `before` || delayWhen === `both`) {\n    await sleep(opts);\n  }\n  const r = Promise.resolve(await callback());\n  if (delayWhen === `after` || delayWhen === `both`) {\n    await sleep(opts);\n  }\n  return r;\n};\n\n/**\n * Iterate over a source iterable with some delay between results.\n * Delay can be before, after or both before and after each result from the\n * source iterable.\n *\n * Since it's an async iterable, `for await ... of` is needed.\n *\n * ```js\n * const opts = { intervalMs: 1000, delay: 'before' };\n * const iterable = count(10);\n * for await (const i of delayIterable(iterable, opts)) {\n *  // Prints 0..9 with one second between\n * }\n * ```\n *\n * Use {@link delay} to return a result after some delay\n *\n * @param iter\n * @param opts\n */\n// export async function* delayIterable<V>(\n//   iter: AsyncIterable<V> | Iterable<V>,\n//   //eslint-disable-next-line functional/prefer-immutable-types\n//   opts: DelayOpts\n// ) {\n//   const intervalMs = intervalToMs(opts);\n//   const delayWhen = opts.delay;\n//   const signal = opts.signal;\n\n//   for await (const v of iter) {\n//     // Pre-delay\n//     if (delayWhen === 'before' || delayWhen === 'both') {\n//       await sleep({ millis: intervalMs, signal });\n//       if (signal?.aborted) break;\n//     }\n\n//     // Yield value\n//     yield v;\n\n//     // Post-delay\n//     if (delayWhen === 'after' || delayWhen === 'both') {\n//       await sleep({ millis: intervalMs, signal });\n//       if (signal?.aborted) break;\n//     }\n//   }\n// }\n\n/**\n * Async generator that loops via `requestAnimationFrame`.\n *\n * ```\n * // Loop forever\n * (async () => {\n *  const loop = delayAnimationLoop();\n *  while (true) {\n *    await loop.next();\n *\n *    // Do something...\n *    // Warning: loops forever\n *  }\n * })();\n * ```\n *\n * ```\n * const loop = delayAnimationLoop();\n * for await (const o of loop) {\n *  // Do something...\n *  // Warning: loops forever\n * }\n * ```\n */\n//eslint-disable-next-line func-style\nasync function* delayAnimationLoop() {\n  //eslint-disable-next-line functional/no-let,@typescript-eslint/no-explicit-any\n  let resolve: any;\n  //eslint-disable-next-line functional/no-let\n  let p = new Promise<undefined>((r) => (resolve = r));\n  //eslint-disable-next-line functional/no-let\n  let timer = 0;\n  const callback = () => {\n    resolve();\n    p = new Promise<undefined>((r) => (resolve = r));\n  };\n\n  try {\n    while (true) {\n      timer = window.requestAnimationFrame(callback);\n      yield await p;\n    }\n  } finally {\n    resolve();\n    window.cancelAnimationFrame(timer);\n  }\n}\n\n/**\n * Async generator that loops at a given interval.\n * Alternatives:\n * * {@link delay} to run a single function after a delay\n * * {@link sleep} pause execution\n * * {@link interval} iterate over an iterable with a given delay\n * * {@link continuously} to start/stop/adjust a constantly running loop\n *\n * @example Loop runs every second\n * ```\n * // Loop forever\n * (async () => {\n *  const loop = delayLoop(1000);\n *  // or: loop = delayLoop({ secs: 1 });\n *  while (true) {\n *    await loop.next();\n *\n *    // Do something...\n *    // Warning: loops forever\n *  }\n * })();\n * ```\n *\n * @example For Await loop every second\n * ```\n * const loop = delayLoop(1000);\n * // Or: const loop = delayLoop({ secs: 1 });\n * for await (const o of loop) {\n *  // Do something...\n *  // Warning: loops forever\n * }\n * ```\n * @param timeout Delay. If 0 is given, `requestAnimationFrame` is used over `setTimeout`.\n */\n//eslint-disable-next-line func-style\nexport async function* delayLoop(timeout: Interval) {\n  const timeoutMs = intervalToMs(timeout);\n  if (!timeoutMs) throw new Error(`timeout is undefined`);\n  if (timeoutMs < 0) throw new Error('Timeout is less than zero');\n  if (timeoutMs === 0) return yield* delayAnimationLoop();\n\n  //eslint-disable-next-line functional/no-let,@typescript-eslint/no-explicit-any\n  let resolve: any;\n  //eslint-disable-next-line functional/no-let\n  let p = new Promise<undefined>((r) => (resolve = r));\n  //eslint-disable-next-line functional/no-let\n  let timer = 0;\n  const callback = () => {\n    resolve();\n    p = new Promise<undefined>((r) => (resolve = r));\n  };\n\n  try {\n    while (true) {\n      timer = window.setTimeout(callback, timeoutMs);\n      yield await p;\n    }\n  } finally {\n    resolve();\n    window.clearTimeout(timer);\n  }\n}\n","import { integer as guardInteger } from '../Guards.js';\n\n/**\n * Returns true for every _n_th call, eg 2 for every second call.\n *\n * If `nth` is 1, returns true for everything. 0 will be false for everything.\n *\n * Usage:\n * ```js\n * const tenth = everyNth(10);\n * window.addEventListener(`pointermove`, evt => {\n *  if (!tenth(evt)) return; // Filter out\n *  // Continue processing, it is the 10th thing.\n *\n * });\n * ```\n *\n * Alternative:\n * ```js\n * window.addEventListener(`pointermove`, everyNth(10, evt => {\n *  // Do something with tenth item...\n * });\n * ```\n * @param nth Every nth item\n * @param callback\n * @returns Function which in turn returns true if nth call has been hit, false otherwise\n */\nexport const everyNth = (\n  nth: number,\n  callback?: (...args: readonly unknown[]) => void\n) => {\n  guardInteger(nth, `positive`, `nth`);\n\n  //eslint-disable-next-line functional/no-let\n  let counter = 0;\n  //eslint-disable-next-line functional/prefer-immutable-types\n  return (...args: unknown[]): boolean => {\n    if (++counter === nth) {\n      counter = 0;\n      if (callback) callback(...args);\n      return true;\n    }\n    return false;\n  };\n};\n","/**\n * Runs a function once\n *\n * ```js\n * const init = runOnce(() => {\n *  // do some initialisation\n * });\n *\n * init(); // Runs once\n * init(); // no-op\n * ```\n * @param onRun\n * @returns\n */\nexport const runOnce = (onRun: () => boolean): (() => boolean) => {\n  //eslint-disable-next-line functional/no-let\n  let run = false;\n  //eslint-disable-next-line functional/no-let\n  let success = false;\n  return () => {\n    if (run) return success;\n    run = true;\n    success = onRun();\n    return success;\n  };\n};\n","import { intervalToMs, type Interval } from './Interval.js';\nimport { msElapsedTimer, relativeTimer } from './Timer.js';\n\nexport type SinceFn = () => number;\n\n/**\n * Returns elapsed time since initial call.\n * ```js\n * // Record start\n * const elapsed = Elapsed.since();\n *\n * // Get elapsed time in millis\n * elapsed(); // Yields number\n * ```\n *\n * If you want to initialise a elapsed timer, but not yet start it, consider:\n * ```js\n * // Init\n * let state = {\n *  clicked: Elapsed.infinity()\n * };\n *\n * state.click(); // Returns a giant value\n *\n * // Later, when click happens:\n * state = { click: Elapsed.since() }\n * ```\n *\n * Use {@link once} if you want to measure a single period, and stop it.\n * @returns\n */\nexport const since = (): SinceFn => {\n  const start = Date.now();\n  return (): number => {\n    return Date.now() - start;\n  };\n};\n\n/**\n * Returns elapsed time since initial call, however\n * timer stops when first invoked.\n *\n * ```js\n * const elapsed = Elapsed.once();\n * // ...do stuff\n * elapsed(); // Yields time since Elapsed.once() was called\n * // ...do more stuff\n * elapsed(); // Is still the same number as above\n * ```\n *\n * Use {@link since} to not have this stopping behaviour.\n * @returns\n */\nexport const once = (): SinceFn => {\n  const start = Date.now();\n  //eslint-disable-next-line functional/no-let\n  let stoppedAt = 0;\n  return (): number => {\n    if (stoppedAt === 0) {\n      stoppedAt = Date.now() - start;\n    }\n    return stoppedAt;\n  };\n};\n/**\n * Returns a function that reports an 'infinite' elapsed time.\n * this can be useful as an initialiser for `elapsedSince`.\n *\n * ```js\n * // Init clicked to be an infinite time\n * let clicked = Elapsed.infinity();\n *\n * document.addEventListener('click', () => {\n *  // Now that click has happened, we can assign it properly\n *  clicked = Elapsed.since();\n * });\n * ```\n * @returns\n */\nexport const infinity = (): SinceFn => {\n  return (): number => {\n    return Number.POSITIVE_INFINITY;\n  };\n};\n\n/**\n * Returns a function that returns the percentage of timer completion.\n * Starts timing immediately.\n *\n * ```js\n * const timer = Elapsed.progress(1000);\n * timer(); // Returns 0..1\n * ```\n *\n * Note that timer can exceed 1 (100%). To cap it:\n * ```js\n * Elapsed.progress(1000, { clampValue: true });\n * ```\n *\n * Takes an {@link Interval} for more expressive time:\n * ```js\n * const timer = Elapsed.progress({ mins: 4 });\n * ```\n * See also {@link hasElapsedMs}.\n * @param totalMs\n * @returns\n */\nexport function progress(\n  duration: Interval,\n  opts: { readonly clampValue?: boolean } = {}\n): () => number {\n  const totalMs = intervalToMs(duration);\n  if (!totalMs) throw new Error(`duration invalid`);\n  const timerOpts = {\n    ...opts,\n    timer: msElapsedTimer(),\n  };\n  const t = relativeTimer(totalMs, timerOpts);\n  return () => t.elapsed;\n}\n\nexport const toString = (millisOrFn: number | SinceFn | Interval): string => {\n  //eslint-disable-next-line functional/no-let\n  let interval = 0;\n  if (typeof millisOrFn === `function`) {\n    const intervalResult = millisOrFn();\n    if (typeof intervalResult === `object`) interval = intervalToMs(interval)!;\n    else interval = intervalResult;\n  } else if (typeof millisOrFn === `number`) {\n    interval = millisOrFn;\n  } else if (typeof millisOrFn === `object`) {\n    interval = intervalToMs(interval)!;\n  }\n\n  //eslint-disable-next-line functional/no-let\n  let ms = intervalToMs(interval);\n  if (typeof ms === 'undefined') return '(undefined)';\n  if (ms < 1000) return `${ms}ms`;\n  ms /= 1000;\n  if (ms < 120) return `${ms.toFixed(1)}secs`;\n  ms /= 60;\n  if (ms < 60) return `${ms.toFixed(2)}mins`;\n  ms /= 60;\n  return `${ms.toFixed(2)}hrs`;\n};\n","import { sleep } from './Sleep.js';\nimport { getErrorMessage, resolveLogOption } from '../Debug.js';\nimport { since, toString as elapsedToString } from './Elapsed.js';\nimport { integer as integerGuard } from '../Guards.js';\n/**\n * Result of backoff\n */\nexport type RetryResult<V> = {\n  /**\n   * Message describing outcome.\n   *\n   * If retry was aborted, message will be abort reason.\n   */\n  readonly message?: string;\n  /**\n   * True if callback function was invoked once where it returned _true_\n   */\n  readonly success: boolean;\n  /**\n   * Number of times callback was attempted\n   */\n  readonly attempts: number;\n  /**\n   * Total elapsed time since beginning of call to `retry`\n   */\n  readonly elapsed: number;\n\n  /**\n   * Value returned by succeeding function,\n   * or _undefined_ if it failed\n   */\n  readonly value: V | undefined;\n};\n\n/**\n * Backoff options\n */\nexport type RetryOpts<V> = {\n  /**\n   * Maximum number of attempts to make\n   */\n  readonly count: number;\n  /**\n   * Starting milliseconds for sleeping after failure\n   * Defaults to 1000.\n   * Must be above zero.\n   */\n  readonly startMs?: number;\n  /**\n   * Initial waiting period before first attempt (optional)\n   */\n  readonly predelayMs?: number;\n  /**\n   * Optional abort signal\n   */\n  readonly abort?: AbortSignal;\n  /**\n   * Log: _true_ logs to console\n   */\n  readonly log?: boolean;\n  /**\n   * Math.pow factor. Defaults to 1.1. How much slower to\n   * get with each retry.\n   */\n  readonly power?: number;\n\n  /***\n   * Default value to return if it fails\n   */\n  readonly defaultValue?: V;\n};\n\n/**\n * Keeps calling `cb` until it returns something other than _undefined_. If it throws an exception,\n * it will cancel the retry, bubbling the exception and cancelling the retry.\n *\n * ```js\n * // A function that only works some of the time\n * const flakyFn = async () => {\n *  // do the thing\n *  if (Math.random() > 0.9) return true; // success\n *  return; // 'failed'\n * };\n *\n * // Retry it up to five times,\n * // starting with 1000ms interval\n * const result = await retry(flakyFn, {\n *  count: 5\n * });\n *\n * if (result.success) {\n *  // Yay\n * } else {\n *  console.log(`Failed after ${result.attempts} attempts. Elapsed: ${result.elapsed}`);\n *  console.log(result.message);\n * }\n * ```\n *\n * An `AbortSignal` can be used to cancel process.\n * ```js\n * const abort = new AbortController();\n * const result = await retry(cb, { startMs: 6000, count: 1000, signal: abort.signal });\n *\n * // Somewhere else...\n * abort('Cancel!'); // Trigger abort\n * ```\n * @param cb Function to run\n * @param opts Options\n * @returns\n */\nexport const retry = async <V>(\n  cb: () => Promise<V | undefined>,\n  //eslint-disable-next-line functional/prefer-immutable-types\n  opts: RetryOpts<V>\n): Promise<RetryResult<V>> => {\n  const signal = opts.abort;\n  const log = resolveLogOption(opts.log);\n  const power = opts.power ?? 1.1;\n  const predelayMs = opts.predelayMs ?? 0;\n  const startedAt = since();\n\n  //eslint-disable-next-line functional/no-let\n  let t = opts.startMs ?? 1000;\n  const count = opts.count;\n  //eslint-disable-next-line functional/no-let\n  let attempts = 0;\n\n  integerGuard(count, 'aboveZero', 'count');\n  if (t <= 0) throw new Error(`startMs must be above zero`);\n\n  if (predelayMs > 0) await sleep({ millis: predelayMs, signal: signal });\n  if (signal?.aborted) {\n    return {\n      success: false,\n      attempts,\n      value: opts.defaultValue,\n      elapsed: startedAt(),\n      message: `Aborted during predelay`,\n    };\n  }\n  while (attempts < count) {\n    attempts++;\n    const cbResult = await cb();\n    if (cbResult !== undefined) {\n      return { value: cbResult, success: true, attempts, elapsed: startedAt() };\n    }\n    log({\n      msg: `retry attempts: ${attempts} t: ${elapsedToString(t)}`,\n    });\n\n    // Did not succeed.\n    if (attempts >= count) {\n      break; // Out of attempts, no point sleeping again\n    }\n    // Sleep\n    try {\n      await sleep({ millis: t, signal });\n    } catch (ex) {\n      // Eg if abort signal fires\n      return {\n        success: false,\n        attempts,\n        value: opts.defaultValue,\n        message: getErrorMessage(ex),\n        elapsed: startedAt(),\n      };\n    }\n\n    // Increase sleep time for next fail\n    t = Math.floor(Math.pow(t, power));\n  }\n\n  return {\n    message: `Giving up after ${attempts} attempts.`,\n    success: false,\n    attempts,\n    value: opts.defaultValue,\n    elapsed: startedAt(),\n  };\n};\n","import { QueueMutable } from '../collections/queue/QueueMutable.js';\n\ntype Task = () => void;\n\nexport type TaskQueueOpts = {\n  /**\n   * How long to wait before starting the queue 'thread'\n   * when something is added.\n   *\n   * Default: 500ms\n   */\n  readonly startDelayMs?: number;\n\n  /**\n   * Once running, sleeping period between each item\n   * being processed.\n   *\n   * Default: 100ms\n   */\n  readonly intervalMs?: number;\n};\n\n/**\n * Simple task queue. Each task is awaited and run\n * in turn.\n *\n * @example Usage\n * ```js\n * const q = new TaskQueue();\n * q.add(async () => {\n *  // Takes one second to run\n *  await sleep(1000);\n * });\n * ```\n */\nexport class TaskQueue {\n  static instance = new TaskQueue();\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _timer: any = 0;\n  private _queue;\n  private readonly _startDelayMs;\n  private readonly _intervalMs;\n\n  private constructor(opts: TaskQueueOpts = {}) {\n    this._startDelayMs = opts.startDelayMs ?? 500;\n    this._intervalMs = opts.intervalMs ?? 100;\n    this._queue = new QueueMutable<Task>();\n  }\n\n  /**\n   * Adds a task. This triggers processing loop if not already started.\n   *\n   * ```js\n   * queue.add(async () => {\n   *  await sleep(1000);\n   * });\n   * ```\n   * @param task Task to run\n   */\n  add(task: () => void) {\n    this._queue.enqueue(task);\n    if (this._timer === 0) this.schedule(this._startDelayMs);\n  }\n\n  private schedule(intervalMs: number) {\n    // If the queue is empty, allow loop to stop\n    if (this._queue.length === 0) {\n      //eslint-disable-next-line functional/immutable-data\n      this._timer = 0;\n      return;\n    }\n\n    if (this._timer !== 0) {\n      // Seems to be running\n      return;\n    }\n\n    // Start the processing loop\n    //eslint-disable-next-line functional/immutable-data\n    this._timer = setTimeout(() => {\n      this.processQueue();\n    }, intervalMs);\n  }\n\n  private async processQueue() {\n    const task = this._queue.dequeue();\n\n    //eslint-disable-next-line functional/immutable-data\n    this._timer = 0;\n    if (task !== undefined) {\n      try {\n        await task();\n        //eslint-disable-next-line functional/immutable-data\n        this._timer = 0;\n        this.schedule(this._intervalMs);\n      } catch (ex) {\n        console.error(ex);\n      }\n    }\n  }\n}\n","import { type GetOrGenerate, getOrGenerate } from '../collections/map/index.js';\nimport { TrackerBase } from './TrackerBase.js';\n\nexport type Timestamped<V> = V & {\n  readonly at: number;\n};\n\n/**\n * Options\n */\nexport type TrackedValueOpts = {\n  readonly id?: string;\n\n  /**\n   * If true, intermediate points are stored. False by default\n   */\n  readonly storeIntermediate?: boolean;\n  /**\n   * If above zero, tracker will reset after this many samples\n   */\n  readonly resetAfterSamples?: number;\n\n  /**\n   * If above zero, there will be a limit to intermediate values kept.\n   *\n   * When the seen values is twice `sampleLimit`, the stored values will be trimmed down\n   * to `sampleLimit`. We only do this when the values are double the size so that\n   * the collections do not need to be trimmed repeatedly whilst we are at the limit.\n   *\n   * Automatically implies storeIntermediate\n   */\n  readonly sampleLimit?: number;\n};\n\n/**\n * Keeps track of keyed values of type `V` (eg Point) It stores occurences in type `T`, which\n * must extend from `TrackerBase<V>`, eg `PointTracker`.\n *\n * The `creator` function passed in to the constructor is responsible for instantiating\n * the appropriate `TrackerBase` sub-class.\n *\n * @example Sub-class\n * ```js\n * export class TrackedPointMap extends TrackedValueMap<Points.Point> {\n *  constructor(opts:TrackOpts = {}) {\n *   super((key, start) => {\n *    if (start === undefined) throw new Error(`Requires start point`);\n *    const p = new PointTracker(key, opts);\n *    p.seen(start);\n *    return p;\n *   });\n *  }\n * }\n * ```\n *\n */\nexport class TrackedValueMap<V, T extends TrackerBase<V>> {\n  store: Map<string, T>;\n  gog: GetOrGenerate<string, T, V>;\n\n  constructor(creator: (key: string, start: V | undefined) => T) {\n    this.store = new Map();\n    this.gog = getOrGenerate<string, T, V>(this.store, creator);\n  }\n\n  /**\n   * Number of named values being tracked\n   */\n  get size() {\n    return this.store.size;\n  }\n\n  /**\n   * Returns _true_ if `id` is stored\n   * @param id\n   * @returns\n   */\n  has(id: string) {\n    return this.store.has(id);\n  }\n\n  /**\n   * For a given id, note that we have seen one or more values.\n   * @param id Id\n   * @param values Values(s)\n   * @returns Information about start to last value\n   */\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\n  //eslint-disable-next-line functional/prefer-immutable-types\n  public async seen(id: string, ...values: V[]): Promise<any> {\n    const trackedValue = await this.getTrackedValue(id, ...values);\n\n    // Pass it over to the TrackedValue\n    return trackedValue.seen(...values);\n  }\n\n  /**\n   * Creates or returns a TrackedValue instance for `id`.\n   * @param id\n   * @param values\n   * @returns\n   */\n  //eslint-disable-next-line functional/prefer-immutable-types\n  protected async getTrackedValue(id: string, ...values: V[]) {\n    if (id === null) throw new Error(`id parameter cannot be null`);\n    if (id === undefined) throw new Error(`id parameter cannot be undefined`);\n\n    // Create or recall TrackedValue by id\n    const trackedValue = await this.gog(id, values[0]);\n    return trackedValue;\n  }\n\n  /**\n   * Remove a tracked value by id.\n   * Use {@link reset} to clear them all.\n   * @param id\n   */\n  delete(id: string) {\n    this.store.delete(id);\n  }\n\n  /**\n   * Remove all tracked values.\n   * Use {@link delete} to remove a single value by id.\n   */\n  reset() {\n    this.store = new Map();\n  }\n\n  /**\n   * Enumerate ids\n   */\n  *ids() {\n    yield* this.store.keys();\n  }\n\n  /**\n   * Enumerate tracked values\n   */\n  *tracked() {\n    yield* this.store.values();\n  }\n\n  /**\n   * Iterates TrackedValues ordered with oldest first\n   * @returns\n   */\n  *trackedByAge() {\n    const tp = Array.from(this.store.values());\n    tp.sort((a, b) => {\n      const aa = a.elapsed;\n      const bb = b.elapsed;\n      if (aa === bb) return 0;\n      if (aa > bb) return -1;\n      return 1;\n    });\n\n    for (const t of tp) {\n      yield t;\n    }\n  }\n\n  /**\n   * Iterates underlying values, ordered by age (oldest first)\n   * First the named values are sorted by their `elapsed` value, and then\n   * we return the last value for that group.\n   */\n  *valuesByAge() {\n    for (const tb of this.trackedByAge()) {\n      yield tb.last;\n    }\n  }\n\n  /**\n   * Enumerate last received values\n   *\n   * @example Calculate centroid of latest-received values\n   * ```js\n   * const pointers = pointTracker();\n   * const c = Points.centroid(...Array.from(pointers.lastPoints()));\n   * ```\n   */\n  *last() {\n    for (const p of this.store.values()) {\n      yield p.last;\n    }\n  }\n\n  /**\n   * Enumerate starting values\n   */\n  *initialValues() {\n    for (const p of this.store.values()) {\n      yield p.initial;\n    }\n  }\n\n  /**\n   * Returns a tracked value by id, or undefined if not found\n   * @param id\n   * @returns\n   */\n  get(id: string): TrackerBase<V> | undefined {\n    return this.store.get(id);\n  }\n}\n","import { type TrackedValueOpts } from './TrackedValue.js';\n\n/**\n * Base tracker class\n */\nexport abstract class TrackerBase<V> {\n  /**\n   * @ignore\n   */\n  seenCount: number;\n\n  /**\n   * @ignore\n   */\n  protected storeIntermediate: boolean;\n\n  /**\n   * @ignore\n   */\n  protected resetAfterSamples: number;\n\n  /**\n   * @ignore\n   */\n  protected sampleLimit: number;\n\n  public readonly id: string;\n\n  constructor(opts: TrackedValueOpts = {}) {\n    this.id = opts.id ?? `tracker`;\n    this.sampleLimit = opts.sampleLimit ?? -1;\n    this.resetAfterSamples = opts.resetAfterSamples ?? -1;\n\n    this.storeIntermediate =\n      opts.storeIntermediate ??\n      (this.sampleLimit > -1 || this.resetAfterSamples > -1);\n    this.seenCount = 0;\n  }\n\n  /**\n   * Reset tracker\n   */\n  reset() {\n    this.seenCount = 0;\n    this.onReset();\n  }\n\n  //eslint-disable-next-line functional/prefer-immutable-types\n  seen(...p: V[]) {\n    if (this.resetAfterSamples > 0 && this.seenCount > this.resetAfterSamples) {\n      this.reset();\n    } else if (this.sampleLimit > 0 && this.seenCount > this.sampleLimit * 2) {\n      this.seenCount = this.trimStore(this.sampleLimit);\n      this.onTrimmed();\n    }\n\n    this.seenCount += p.length;\n    const t = this.seenImpl(p);\n    this.onSeen(t);\n  }\n\n  /**\n   * @ignore\n   * @param p\n   */\n  //eslint-disable-next-line functional/prefer-immutable-types\n  abstract seenImpl(p: V[]): V[];\n\n  abstract get last(): V | undefined;\n\n  /**\n   * Returns the initial value, or undefined\n   */\n  abstract get initial(): V | undefined;\n\n  /**\n   * Returns the elapsed milliseconds since the initial value\n   */\n  abstract get elapsed(): number;\n\n  /**\n   * @ignore\n   */\n  //eslint-disable-next-line @typescript-eslint/no-empty-function\n  //eslint-disable-next-line functional/prefer-immutable-types\n  onSeen(_p: V[]) {\n    /** no-op */\n  }\n\n  /**\n   * @ignore\n   */\n  abstract onReset(): void;\n\n  abstract onTrimmed(): void;\n  abstract trimStore(limit: number): number;\n}\n","import { repeat } from '../flow/index.js';\nimport type { TrackedValueOpts, Timestamped } from './TrackedValue.js';\nimport { TrackerBase } from './TrackerBase.js';\n\nexport class PrimitiveTracker<\n  V extends number | string\n> extends TrackerBase<V> {\n  values: V[];\n  timestamps: number[];\n\n  constructor(opts?: TrackedValueOpts) {\n    super(opts);\n    this.values = [];\n    this.timestamps = [];\n  }\n\n  /**\n   * Reduces size of value store to `limit`. Returns\n   * number of remaining items\n   * @param limit\n   */\n  trimStore(limit: number): number {\n    if (limit >= this.values.length) return this.values.length;\n    this.values = this.values.slice(-limit);\n    this.timestamps = this.timestamps.slice(-limit);\n    return this.values.length;\n  }\n\n  onTrimmed() {\n    // no-op\n  }\n\n  get last(): V | undefined {\n    return this.values.at(-1);\n  }\n\n  get initial(): V | undefined {\n    return this.values.at(0);\n  }\n\n  /**\n   * Returns number of recorded values (this can include the initial value)\n   */\n  get size() {\n    return this.values.length;\n  }\n\n  /**\n   * Returns the elapsed time, in milliseconds since the instance was created\n   */\n  get elapsed(): number {\n    if (this.values.length < 0) throw new Error(`No values seen yet`);\n    return Date.now() - this.timestamps[0];\n  }\n\n  onReset() {\n    this.values = [];\n    this.timestamps = [];\n  }\n\n  /**\n   * Tracks a value\n   */\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\n  //eslint-disable-next-line functional/prefer-immutable-types\n  seenImpl(p: V[]): V[] {\n    const last = p.at(-1) as Timestamped<V>;\n    const now = Date.now();\n    if (this.storeIntermediate) {\n      this.values.push(...p);\n      this.timestamps.push(...repeat(p.length, () => now));\n    } else if (this.values.length === 0) {\n      // Add as initial value\n      this.values.push(last);\n      this.timestamps.push(now);\n    } else if (this.values.length === 2) {\n      // Replace last value\n      this.values[1] = last;\n      this.timestamps[1] = now;\n    } else if (this.values.length === 1) {\n      // Add last value\n      this.values.push(last);\n      this.timestamps.push(now);\n    }\n\n    return p;\n  }\n}\n","import { PrimitiveTracker } from './PrimitiveTracker.js';\nimport {\n  type TrackedValueOpts as TrackOpts,\n  type Timestamped,\n} from './TrackedValue.js';\nimport { minFast, maxFast, totalFast } from '../collections/NumericArrays.js';\n\nexport class NumberTracker extends PrimitiveTracker<number> {\n  total = 0;\n  min = Number.MAX_SAFE_INTEGER;\n  max = Number.MIN_SAFE_INTEGER;\n\n  get avg() {\n    return this.total / this.seenCount;\n  }\n\n  /**\n   * Difference between last value and initial.\n   * Eg. if last value was 10 and initial value was 5, 5 is returned (10 - 5)\n   * If either of those is missing, undefined is returned\n   */\n  difference(): number | undefined {\n    if (this.last === undefined) return;\n    if (this.initial === undefined) return;\n    return this.last - this.initial;\n  }\n\n  /**\n   * Relative difference between last value and initial.\n   * Eg if last value was 10 and initial value was 5, 2 is returned (200%)\n   */\n  relativeDifference(): number | undefined {\n    if (this.last === undefined) return;\n    if (this.initial === undefined) return;\n    return this.last / this.initial;\n  }\n\n  onReset() {\n    this.min = Number.MAX_SAFE_INTEGER;\n    this.max = Number.MIN_SAFE_INTEGER;\n    this.total = 0;\n    super.onReset();\n  }\n\n  onTrimmed() {\n    this.min = minFast(this.values);\n    this.max = maxFast(this.values);\n    this.total = totalFast(this.values);\n  }\n\n  //eslint-disable-next-line functional/prefer-immutable-types\n  onSeen(values: Timestamped<number>[]) {\n    if (values.some((v) => Number.isNaN(v))) throw Error(`Cannot add NaN`);\n    this.total = values.reduce((acc, v) => acc + v, this.total);\n    this.min = Math.min(...values, this.min);\n    this.max = Math.max(...values, this.max);\n  }\n\n  getMinMaxAvg() {\n    return {\n      min: this.min,\n      max: this.max,\n      avg: this.avg,\n    };\n  }\n}\n\n/**\n * Keeps track of the total, min, max and avg in a stream of values. By default values\n * are not stored.\n *\n * Usage:\n *\n * ```js\n * import { numberTracker } from 'https://unpkg.com/ixfx/dist/data.js';\n *\n * const t = numberTracker();\n * t.seen(10);\n *\n * t.avg / t.min/ t.max\n * t.initial; // initial value\n * t.size;    // number of seen values\n * t.elapsed; // milliseconds since intialisation\n * t.last;    // last value\n * ```\n *\n * To get `{ avg, min, max, total }`\n * ```\n * t.getMinMax()\n * ```\n *\n * Use `t.reset()` to clear everything.\n *\n * Trackers can automatically reset after a given number of samples\n * ```\n * // reset after 100 samples\n * const t = numberTracker({ resetAfterSamples: 100 });\n * ```\n *\n * To store values, use the `storeIntermediate` option:\n *\n * ```js\n * const t = numberTracker({ storeIntermediate: true });\n * ```\n *\n * Difference between last value and initial value:\n * ```js\n * t.relativeDifference();\n * ```\n *\n * Get raw data (if it is being stored):\n * ```js\n * t.values; // array of numbers\n * t.timestampes; // array of millisecond times, indexes correspond to t.values\n * ```\n * @class NumberTracker\n */\nexport const numberTracker = (opts: TrackOpts = {}) => new NumberTracker(opts);\n","import * as Easings from './Easing.js';\nimport * as Envelopes from './Envelope.js';\nimport * as Forces from './Forces.js';\nimport * as Oscillators from './Oscillator.js';\nimport { type JitterFn, type JitterOpts, jitter } from './Jitter.js';\nexport * from './PingPong.js';\n\n/**\n * Jitter\n */\nexport { jitter };\n\nexport type { JitterFn, JitterOpts };\n\n/**\n * Easings module\n *\n * [See the guide](https://clinth.github.io/ixfx-docs/modulation/easing/)\n *\n * Overview:\n * * {@link Easings.time}: Ease by time\n * * {@link Easings.tick}: Ease by tick\n * * {@link Easings.get}: Get an easing function by name\n * * {@link Easings.crossfade}: Mix two synchronised easing functions (a slight shortcut over `mix`)\n * * {@link Easings.mix}: Mix two easing functions\n * * {@link Easings.gaussian}: Gaussian distribution (rough bell curve)\n *\n * @example Importing\n * ```js\n * // If library is stored two directories up under `ixfx/`\n * import { Easings } from '../../ixfx/dist/modulation.js';\n * Easings.time(...);\n *\n * // Import from web\n * import { Easings } from 'https://unpkg.com/ixfx/dist/modulation.js'\n * Easings.time(...);\n * ```\n */\nexport { Easings };\n\n/**\n * Envelope\n */\nexport * from './Envelope.js';\n\n/**\n * Forces module can help to compute basic physical forces like gravity, friction, springs etc.\n *\n * @example Importing\n * ```js\n * // If library is stored two directories up under `ixfx/`\n * import { Forces } from '../../ixfx/dist/modulation.js';\n * Forces.attractionForce(...);\n *\n * // Import from web\n * import { Forces } from 'https://unpkg.com/ixfx/dist/modulation.js'\n * Forces.attractionForce(...);\n * ```\n *\n */\nexport { Forces };\n\n/**\n * Oscillators module has waveshapes for producing values with a specified frequency.\n *\n * Overview\n * * {@link Oscillators.saw}: 'Sawtooth' wave\n * * {@link Oscillators.sine}: Sine wave\n * * {@link Oscillators.sineBipolar}: Sine wave with range of -1 to 1\n * * {@link Oscillators.square}: Square wave\n * * {@link Oscillators.triangle}: Triangle wave\n * * {@link Oscillators.spring}: Spring oscillator\n *\n * @example On-demand sampling\n * ```js\n * // Saw wave with frequency of 0.10hZ\n * const osc = Oscillators.saw(0.1);\n *\n * // Whever we need to sample from the oscillator...\n * const v = osc.next().value;\n * ```\n *\n * @example Importing\n * ```js\n * // If library is stored two directories up under `ixfx/`\n * import { Oscillators } from '../../ixfx/dist/modulation.js';\n * Oscillators.saw(...);\n *\n * // Import from web\n * import { Oscillators } from 'https://unpkg.com/ixfx/dist/modulation.js'\n * Oscillators.saw(...);\n * ```\n *\n */\nexport { Oscillators };\n\ntry {\n  if (typeof window !== `undefined`) {\n    //eslint-disable-next-line functional/immutable-data,@typescript-eslint/no-explicit-any\n    (window as any).ixfx = {\n      ...(window as any).ixfx,\n      Modulation: { Forces, jitter, Envelopes, Oscillators, Easings },\n    };\n  }\n} catch {\n  /* no-op */\n}\n","import { SimpleEventEmitter } from '../Events.js';\nimport { msElapsedTimer, type TimerSource } from '../flow/index.js';\nimport { type Timer } from '../flow/Timer.js';\nimport { type Path } from '../geometry/Path.js';\nimport * as Bezier from '../geometry/Bezier.js';\nimport { scale } from '../data/Scale.js';\nimport { interval } from '../flow/Interval.js';\nimport { StateMachineWithEvents } from '../flow/StateMachineWithEvents.js';\n\n/**\n * @returns Returns a full set of default ADSR options\n */\nexport const defaultAdsrOpts = (): EnvelopeOpts => ({\n  attackBend: -1,\n  decayBend: -0.3,\n  releaseBend: -0.3,\n  peakLevel: 1,\n  initialLevel: 0,\n  sustainLevel: 0.6,\n  releaseLevel: 0,\n  attackDuration: 600,\n  decayDuration: 200,\n  releaseDuration: 800,\n  shouldLoop: false,\n});\n\nexport type EnvelopeOpts = AdsrOpts & AdsrTimingOpts;\n/**\n * Options for the ADSR envelope.\n *\n * Use {@link defaultAdsrOpts} to get an initial default:\n * @example\n * ```js\n * let env = adsr({\n *  ...defaultAdsrOpts(),\n *  attackDuration: 2000,\n *  releaseDuration: 5000,\n *  sustainLevel: 1,\n *  retrigger: false\n * });\n * ```\n */\nexport type AdsrOpts = {\n  /**\n   * Attack bezier 'bend'. Bend from -1 to 1. 0 for a straight line\n   */\n  readonly attackBend: number;\n  /**\n   * Decay bezier 'bend'. Bend from -1 to 1. 0 for a straight line\n   */\n  readonly decayBend: number;\n  /**\n   * Release bezier 'bend'. Bend from -1 to 1. 0 for a straight line\n   */\n  readonly releaseBend: number;\n\n  /**\n   * Peak level (maximum of attack stage)\n   */\n  readonly peakLevel: number;\n\n  /**\n   * Starting level (usually 0)\n   */\n  readonly initialLevel?: number;\n  /**\n   * Sustain level. Only valid if trigger and hold happens\n   */\n  readonly sustainLevel: number;\n  /**\n   * Release level, when envelope is done (usually 0)\n   */\n  readonly releaseLevel?: number;\n\n  /**\n   * When _false_, envelope starts from it's current level when being triggered.\n   * _True_ by default.\n   */\n  readonly retrigger?: boolean;\n};\n\nexport type AdsrTimingOpts = {\n  /**\n   * If true, envelope indefinately returns to attack stage after release\n   *\n   * @type {boolean}\n   */\n  readonly shouldLoop: boolean;\n\n  /**\n   * Duration for attack stage\n   * Unit depends on timer source\n   * @type {number}\n   */\n  readonly attackDuration: number;\n  /**\n   * Duration for decay stage\n   * Unit depends on timer source\n   * @type {number}\n   */\n  readonly decayDuration: number;\n  /**\n   * Duration for release stage\n   * Unit depends on timer source\n   * @type {number}\n   */\n  readonly releaseDuration: number;\n};\n\n/**\n * State change event\n */\nexport interface StateChangeEvent {\n  readonly newState: string;\n  readonly priorState: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface CompleteEvent {\n  /* no-op */\n}\n\nexport type Events = {\n  readonly change: StateChangeEvent;\n  readonly complete: CompleteEvent;\n};\n\nconst adsrTransitionsInstance = Object.freeze({\n  attack: [`decay`, `release`],\n  decay: [`sustain`, `release`],\n  sustain: [`release`],\n  release: [`complete`],\n  complete: null,\n});\ntype AdsrStateTransitions = Readonly<typeof adsrTransitionsInstance>;\n\nclass AdsrBase extends SimpleEventEmitter<Events> {\n  readonly #sm: StateMachineWithEvents<AdsrStateTransitions>;\n  readonly #timeSource: TimerSource;\n  #timer: Timer | undefined;\n\n  #holding: boolean;\n  #holdingInitial: boolean;\n\n  attackDuration: number;\n  decayDuration: number;\n  releaseDuration: number;\n  decayDurationTotal: number;\n  shouldLoop: boolean;\n\n  constructor(opts: AdsrTimingOpts) {\n    super();\n\n    this.attackDuration = opts.attackDuration ?? 300;\n    this.decayDuration = opts.decayDuration ?? 500;\n    this.releaseDuration = opts.releaseDuration ?? 1000;\n    this.shouldLoop = opts.shouldLoop ?? false;\n\n    this.#sm = new StateMachineWithEvents<AdsrStateTransitions>(\n      adsrTransitionsInstance,\n      { initial: `attack` }\n    );\n\n    this.#sm.addEventListener(`change`, (ev) => {\n      // Reset timer on release\n      if (ev.newState === `release` && this.#holdingInitial) {\n        this.#timer?.reset();\n      }\n      super.fireEvent(`change`, ev);\n    });\n    this.#sm.addEventListener(`stop`, (ev) => {\n      super.fireEvent(`complete`, ev);\n    });\n\n    this.#timeSource = msElapsedTimer;\n    this.#holding = this.#holdingInitial = false;\n\n    this.decayDurationTotal = this.attackDuration + this.decayDuration;\n  }\n\n  protected switchState(): boolean {\n    if (this.#timer === undefined) return false;\n    // eslint-disable-next-line functional/no-let\n    let elapsed = this.#timer.elapsed;\n    const wasHeld = this.#holdingInitial && !this.#holding;\n\n    // Change through states for as long as needed\n    // eslint-disable-next-line functional/no-let\n    let hasChanged = false;\n    do {\n      hasChanged = false;\n      switch (this.#sm.state) {\n        case `attack`:\n          if (elapsed > this.attackDuration || wasHeld) {\n            this.#sm.next();\n            hasChanged = true;\n          }\n          break;\n        case `decay`:\n          if (elapsed > this.decayDurationTotal || wasHeld) {\n            this.#sm.next();\n            hasChanged = true;\n          }\n          break;\n        case `sustain`:\n          if (!this.#holding || wasHeld) {\n            elapsed = 0;\n            this.#sm.next();\n            this.#timer?.reset();\n            hasChanged = true;\n          }\n          break;\n        case `release`:\n          if (elapsed > this.releaseDuration) {\n            this.#sm.next();\n            hasChanged = true;\n          }\n          break;\n        case `complete`:\n          if (this.shouldLoop) {\n            this.trigger(this.#holdingInitial);\n          }\n      }\n    } while (hasChanged);\n    return hasChanged;\n  }\n\n  /**\n   * Computes a stage progress from 0-1\n   * @param allowStateChange\n   * @returns\n   */\n  protected computeRaw(\n    allowStateChange = true\n  ): [stage: string | undefined, amount: number, prevStage: string] {\n    if (this.#timer === undefined) return [undefined, 0, this.#sm.state];\n\n    // Change state if necessary based on elapsed time\n    if (allowStateChange) this.switchState();\n\n    const prevStage = this.#sm.state;\n\n    const elapsed = this.#timer.elapsed;\n    // eslint-disable-next-line functional/no-let\n    let relative = 0;\n    const state = this.#sm.state;\n    switch (state) {\n      case `attack`:\n        relative = elapsed / this.attackDuration;\n        break;\n      case `decay`:\n        relative = (elapsed - this.attackDuration) / this.decayDuration;\n        break;\n      case `sustain`:\n        relative = 1;\n        break;\n      case `release`:\n        relative = Math.min(elapsed / this.releaseDuration, 1);\n        break;\n      case `complete`:\n        return [undefined, 1, prevStage];\n      default:\n        throw new Error(`State machine in unknown state: ${state}`);\n    }\n    return [state, relative, prevStage];\n  }\n\n  get isDone(): boolean {\n    return this.#sm.isDone;\n  }\n\n  onTrigger(): void {\n    /* no op */\n  }\n\n  trigger(hold: boolean = false) {\n    this.onTrigger();\n\n    this.#sm.reset();\n    this.#timer = this.#timeSource();\n    this.#holding = hold;\n    this.#holdingInitial = hold;\n  }\n\n  compute(): void {\n    /* no-op */\n  }\n\n  release() {\n    if (this.isDone || !this.#holdingInitial) return; // Was never holding or done\n\n    // Setting holding flag to false, computeRaw will change state\n    this.#holding = false;\n    this.compute();\n  }\n}\n\n/**\n * ADSR (Attack Decay Sustain Release) envelope. An envelope is a value that changes over time,\n * usually in response to an intial trigger.\n *\n * Created with the {@link adsr} function. [See the ixfx Guide on Envelopes](https://clinth.github.io/ixfx-docs/modulation/envelope/).\n *\n * @example Setup\n * ```js\n * import {adsr, defaultAdsrOpts} from 'https://unpkg.com/ixfx/dist/modulation.js'\n * const opts = {\n *  ...defaultAdsrOpts(),\n *  attackDuration: 1000,\n *  decayDuration: 200,\n *  sustainDuration: 100\n * }\n * const env = adsr(opts);\n * ```\n *\n * [Options for envelope](https://clinth.github.io/ixfx/types/Modulation.EnvelopeOpts.html) are as follows:\n *\n * ```js\n * initialLevel?: number\n * attackBend: number\n * attackDuration: number\n * decayBend: number\n * decayDuration:number\n * sustainLevel: number\n * releaseBend: number\n * releaseDuration: number\n * releaseLevel?: number\n * peakLevel: number\n * retrigger?: boolean\n * shouldLoop: boolean\n * ```\n *\n * If `retrigger` is false, re-triggers will continue at current level\n * rather than resetting to `initialLevel`.\n *\n * If `shouldLoop` is true, envelope loops until `release()` is called.\n *\n * @example Using\n * ```js\n * env.trigger(); // Start envelope\n * ...\n * // Get current value of envelope\n * const [state, scaled, raw] = env.compute();\n * ```\n *\n * * `state` is a string, one of the following: 'attack', 'decay', 'sustain', 'release', 'complete'\n * * `scaled` is a value scaled according to the stage's _levels_\n * * `raw` is the progress from 0 to 1 within a stage. ie. 0.5 means we're halfway through a stage.\n *\n * Instead of `compute()`, most usage of the envelope is just fetching the `value` property, which returns the same scaled value of `compute()`:\n *\n * ```js\n * const value = env.value; // Get scaled number\n * ```\n *\n * @example Hold & release\n * ```js\n * env.trigger(true);   // Pass in true to hold\n * ...envelope will stop at sustain stage...\n * env.release();      // Release into decay\n * ```\n *\n * Check if it's done:\n *\n * ```js\n * env.isDone; // True if envelope is completed\n * ```\n *\n * Envelope has events to track activity: 'change' and 'complete':\n *\n * ```\n * env.addEventListener(`change`, ev => {\n *  console.log(`Old: ${evt.oldState} new: ${ev.newState}`);\n * })\n * ```\n */\nexport interface Adsr extends SimpleEventEmitter<Events> {\n  /**\n   * Compute value of envelope at this point in time.\n   *\n   * Returns an array of [stage, scaled, raw]. Most likely you want to use {@link value} to just get the scaled value.\n   * @param allowStateChange If true (default) envelope will be allowed to change state if necessary before returning value\n   */\n  compute(\n    allowStateChange?: boolean\n  ): readonly [stage: string | undefined, scaled: number, raw: number];\n\n  /**\n   * Returns the scaled value\n   * Same as .compute()[1]\n   */\n  get value(): number;\n  /**\n   * Releases a held envelope. Has no effect if envelope was not held or is complete.\n   */\n  release(): void;\n  /**\n   * Triggers envelope.\n   *\n   * If event is already trigged,\n   * it will be _retriggered_. If`opts.retriggered` is false (default)\n   * envelope starts again at `opts.initialValue`. Otherwise it starts at\n   * the current value.\n   *\n   * @param hold If _true_ envelope will hold at sustain stage\n   */\n  trigger(hold?: boolean): void;\n  /**\n   * _True_ if envelope is completed\n   */\n  get isDone(): boolean;\n}\n\nclass AdsrImpl extends AdsrBase implements Adsr {\n  readonly attackPath: Path;\n  readonly decayPath: Path;\n  readonly releasePath: Path;\n\n  readonly initialLevel;\n  readonly peakLevel;\n  readonly releaseLevel;\n  readonly sustainLevel;\n\n  readonly attackBend;\n  readonly decayBend;\n  readonly releaseBend;\n\n  protected initialLevelOverride: number | undefined;\n  readonly retrigger: boolean;\n  private releasedAt: number | undefined;\n\n  constructor(opts: EnvelopeOpts) {\n    super(opts);\n    this.initialLevel = opts.initialLevel ?? 0;\n    this.peakLevel = opts.peakLevel ?? 1;\n    this.releaseLevel = opts.releaseLevel ?? 0;\n    this.sustainLevel = opts.sustainLevel ?? 0.75;\n    this.retrigger = opts.retrigger ?? true;\n\n    this.attackBend = opts.attackBend ?? 0;\n    this.releaseBend = opts.releaseBend ?? 0;\n    this.decayBend = opts.decayBend ?? 0;\n\n    const max = 1;\n    this.attackPath = Bezier.toPath(\n      Bezier.quadraticSimple(\n        { x: 0, y: this.initialLevel },\n        { x: max, y: this.peakLevel },\n        -this.attackBend\n      )\n    );\n    this.decayPath = Bezier.toPath(\n      Bezier.quadraticSimple(\n        { x: 0, y: this.peakLevel },\n        { x: max, y: this.sustainLevel },\n        -this.decayBend\n      )\n    );\n    this.releasePath = Bezier.toPath(\n      Bezier.quadraticSimple(\n        { x: 0, y: this.sustainLevel },\n        { x: max, y: this.releaseLevel },\n        -this.releaseBend\n      )\n    );\n  }\n\n  onTrigger() {\n    this.initialLevelOverride = undefined;\n    if (!this.retrigger) {\n      const [_stage, scaled, _raw] = this.compute();\n      if (!Number.isNaN(scaled) && scaled > 0) {\n        this.initialLevelOverride = scaled;\n      }\n    }\n  }\n\n  get value(): number {\n    return this.compute(true)[1];\n  }\n\n  compute(\n    allowStateChange = true\n  ): [stage: string | undefined, scaled: number, raw: number] {\n    const [stage, amt] = super.computeRaw(allowStateChange);\n    if (stage === undefined) return [undefined, NaN, NaN];\n    // eslint-disable-next-line functional/no-let\n    let v;\n    switch (stage) {\n      case `attack`:\n        v = this.attackPath.interpolate(amt).y;\n        if (this.initialLevelOverride !== undefined) {\n          v = scale(v, 0, 1, this.initialLevelOverride, 1);\n        }\n        this.releasedAt = v;\n        break;\n      case `decay`:\n        v = this.decayPath.interpolate(amt).y;\n        this.releasedAt = v;\n        break;\n      case `sustain`:\n        v = this.sustainLevel;\n        this.releasedAt = v;\n        break;\n      case `release`:\n        v = this.releasePath.interpolate(amt).y;\n        // Bound release level to the amp level that we released at.\n        // ie. when release happens before a stage completes\n        if (this.releasedAt !== undefined) {\n          v = scale(v, 0, this.sustainLevel, 0, this.releasedAt);\n        }\n        break;\n      case `complete`:\n        v = this.releaseLevel;\n        this.releasedAt = undefined;\n        break;\n      default:\n        throw new Error(`Unknown state: ${stage}`);\n    }\n    return [stage, v, amt];\n  }\n}\n\n/**\n * Creates an {@link Adsr} envelope.\n * @param opts\n * @returns New {@link Adsr} Envelope\n */\nexport const adsr = (opts: EnvelopeOpts): Adsr => new AdsrImpl(opts);\n\n/**\n * Creates and runs an envelope, sampling its values at `sampleRateMs`.\n * Note that if the envelope loops, iterator never returns.\n *\n * @example Init\n * ```js\n * import { adsrIterable, defaultAdsrOpts } from 'https://unpkg.com/ixfx/dist/modulation.js';\n * import { IterableAsync } from  'https://unpkg.com/ixfx/dist/util.js';\n *\n * const opts = {\n *  ...defaultAdsrOpts(),\n *  attackDuration: 1000,\n *  releaseDuration: 1000,\n *  sustainLevel: 1,\n *  attackBend: 1,\n *  decayBend: -1\n * };\n * ```\n *\n * @example Add data to array\n * ```js\n * // Sample an envelope every 20ms into an array\n * const data = await IterableAsync.toArray(adsrIterable(opts, 20));\n * ```\n *\n * @example Iterate with `for await`\n * ```js\n * // Work with values as sampled\n * for await (const v of adsrIterable(opts, 5)) {\n *  // Work with envelope value `v`...\n * }\n * ```\n * @param opts Envelope options\n * @param sampleRateMs Sample rate\n * @returns\n */\nexport async function* adsrIterable(\n  opts: AdsrIterableOpts\n): AsyncGenerator<number> {\n  const env = adsr(opts.env);\n  const sampleRateMs = opts.sampleRateMs ?? 100;\n  env.trigger();\n\n  for await (const v of interval<number>(\n    () => {\n      if (env.isDone) return;\n      return env.value;\n    },\n    {\n      fixed: sampleRateMs,\n      signal: opts.signal,\n    }\n  )) {\n    yield v;\n  }\n}\n\nexport type AdsrIterableOpts = {\n  readonly signal?: AbortSignal;\n  readonly sampleRateMs?: number;\n  readonly env: EnvelopeOpts;\n};\n\n// const iterableSwap = <V>() => {\n//   let current:AsyncIterableIterator<V>|IterableIterator<V>|undefined;\n\n//   const set = (it:AsyncIterableIterator<V>|IterableIterator<V>) => {\n//     current = it;\n//   }\n\n//   return {\n//     set,\n//     [Symbol.asyncIterator]() {\n//       return {\n//         async next() {\n//           if (!current) return { done: true, value: undefined};\n//           const v = await current.next();\n//           return { value: v.value, done: v.done };\n//         }\n//       };\n//     }}\n// }\n\n// export type IterableDrainOpts =  {\n//   minIntervalMs?:number\n// }\n// const iterableDrain = <V>(opts:IterableDrainOpts = {}) => {\n//   const minIntervalMs = opts.minIntervalMs ?? 0;\n\n//   const swap = iterableSwap<V>();\n//   const timer = continuously(() => {\n\n//   }, )\n//   const set = (it:AsyncIterableIterator<V>|IterableIterator<V>) => {\n//     swap.set(it);\n//   }\n\n// }\n\n// const delayedCount = delayIterable(count(5), { intervalMs: 500, delay: 'both'});\n// const i = interval(delayedCount, { minIntervalMs: 1500, delay: 'after'});\n// for await (const v of i) {\n//   console.log(v);\n// }\n// console.log('x test');\n// const xx = iterableSwap();\n\n// setInterval(async () => {\n//   for await (const v of xx) {\n//     console.log(`v: ${v}`);\n//   }\n//   console.log(`For await done`);\n// }, 1000);\n\n// xx.set(count(10, 1));\n// setTimeout(() => {\n//   xx.set(count(20, 2000));\n// }, 2000);\n","import { Lines, Beziers, Rects, Points } from './index.js';\n\n//eslint-disable-next-line  functional/no-mixed-type\nexport type Path = {\n  length():number\n/**\n   * Returns a point at a relative (0.0-1.0) position along the path\n   *\n   * @param {number} t Relative position (0.0-1.0)\n   * @returns {Point} Point\n   */\n  interpolate(t:number):Points.Point\n  bbox():Rects.RectPositioned\n  /**\n   * Returns the nearest point on path to `point`\n   * @param point \n   */\n  nearest(point:Points.Point):Points.Point\n  toString():string\n  toSvgString():readonly string[]\n  readonly kind:`compound` | `elliptical` | `circular` | `arc` | `bezier/cubic` | `bezier/quadratic` | `line`\n}\n/**\n * Return the start point of a path\n *\n * @param path\n * @return Point\n */\nexport const getStart = function (path:Path):Points.Point {\n  if (Beziers.isQuadraticBezier(path)) return path.a;\n  else if (Lines.isLine(path)) return path.a;\n  else throw new Error(`Unknown path type ${JSON.stringify(path)}`);\n};\n\n/**\n * Return the end point of a path\n *\n * @param path\n * @return Point\n */\nexport const getEnd = function (path:Path):Points.Point {\n  if (Beziers.isQuadraticBezier(path)) return path.b;\n  else if (Lines.isLine(path)) return path.b;\n  else throw new Error(`Unknown path type ${JSON.stringify(path)}`);\n};\n\nexport type WithBeziers = {\n  //eslint-disable-next-line  functional/no-method-signature\n  getBeziers():readonly Path[]\n};","import { Bezier as BezierLib } from 'bezier-js';\nimport { Paths, Points, Rects, Lines } from './index.js';\n\nexport type QuadraticBezier = {\n  readonly a:Points.Point,\n  readonly b:Points.Point,\n  readonly quadratic:Points.Point\n}\n\nexport type QuadraticBezierPath = Paths.Path & QuadraticBezier;\nexport type CubicBezier = {\n  readonly a:Points.Point,\n  readonly b:Points.Point,\n  readonly cubic1:Points.Point,\n  readonly cubic2:Points.Point,\n}\n\nexport type CubicBezierPath = Paths.Path & CubicBezier;\n\nexport const isQuadraticBezier = (path:Paths.Path | QuadraticBezier | CubicBezier):path is QuadraticBezier => (path as QuadraticBezier).quadratic !== undefined;\nexport const isCubicBezier = (path:Paths.Path | CubicBezier | QuadraticBezier):path is CubicBezier => (path as CubicBezier).cubic1 !== undefined && (path as CubicBezier).cubic2 !== undefined;\n\n/**\n * Returns a new quadratic bezier with specified bend amount\n *\n * @param {QuadraticBezier} b Curve\n * @param {number} [bend=0] Bend amount, from -1 to 1\n * @returns {QuadraticBezier}\n */\nexport const quadraticBend = (a:Points.Point, b:Points.Point, bend = 0):QuadraticBezier => quadraticSimple(a, b, bend);\n\n/**\n * Creates a simple quadratic bezier with a specified amount of 'bend'.\n * Bend of -1 will pull curve down, 1 will pull curve up. 0 is no curve\n * @param {Points.Point} start Start of curve\n * @param {Points.Point} end End of curve\n * @param {number} [bend=0] Bend amount, -1 to 1\n * @returns {QuadraticBezier}\n */\nexport const quadraticSimple = (start:Points.Point, end:Points.Point, bend = 0):QuadraticBezier => {\n  if (isNaN(bend)) throw Error(`bend is NaN`);\n  if (bend < -1 || bend > 1) throw Error(`Expects bend range of -1 to 1`);\n\n  const middle = Lines.interpolate(0.5, start, end);\n  // eslint-disable-next-line functional/no-let\n  let target = middle;\n  if (end.y < start.y) {\n    // Upward slope\n    target = bend > 0 ? { x: Math.min(start.x, end.x), y: Math.min(start.y, end.y) } :\n      { x: Math.max(start.x, end.x), y: Math.max(start.y, end.y) };\n  } else {\n    // Downward slope\n    target = bend > 0 ? { x: Math.max(start.x, end.x), y: Math.min(start.y, end.y) } :\n      { x: Math.min(start.x, end.x), y: Math.max(start.y, end.y) };\n  }\n\n  const handle = Lines.interpolate(Math.abs(bend), middle, target,);\n  return quadratic(start, end, handle);\n};\n\n/**\n * Returns a relative point on a simple quadratic \n * @param start Start\n * @param end  End\n * @param bend Bend (-1 to 1)\n * @param amt Amount\n * @returns Point\n */\nexport const computeQuadraticSimple = (start:Points.Point, end:Points.Point, bend:number, amt:number):Points.Point => {\n  const q = quadraticSimple(start, end, bend);\n  const bzr = new BezierLib(q.a, q.quadratic, q.b);\n  return bzr.compute(amt);\n};\n\n//https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths\nexport const quadraticToSvgString = (start:Points.Point, end:Points.Point, handle:Points.Point):readonly string[] => [`M ${start.x} ${start.y} Q ${handle.x} ${handle.y} ${end.x} ${end.y}`];\n\nexport const toPath = (cubicOrQuadratic:CubicBezier|QuadraticBezier):CubicBezierPath|QuadraticBezierPath => {\n  if (isCubicBezier(cubicOrQuadratic)) {\n    return cubicToPath(cubicOrQuadratic);\n  } else if (isQuadraticBezier(cubicOrQuadratic)) {\n    return quadratictoPath(cubicOrQuadratic);\n  } else {\n    throw new Error(`Unknown bezier type`);\n  }\n};\n\nexport const cubic = (start:Points.Point, end:Points.Point, cubic1:Points.Point, cubic2:Points.Point):CubicBezier => (\n  {\n    a: Object.freeze(start),\n    b: Object.freeze(end),\n    cubic1: Object.freeze(cubic1),\n    cubic2: Object.freeze(cubic2) \n  });\n\nconst cubicToPath = (cubic:CubicBezier):CubicBezierPath => {\n  const { a, cubic1, cubic2, b } = cubic;\n\n  const bzr = new BezierLib(a, cubic1, cubic2, b);\n  return Object.freeze({\n    ...cubic,\n    length: () => bzr.length(),\n    interpolate: (t:number) => bzr.compute(t),\n    nearest: (_:Points.Point) => { throw new Error(`not implemented`); },\n    bbox: () => {\n      const { x, y } = bzr.bbox();\n      const xSize = x.size;\n      const ySize = y.size;\n      if (xSize === undefined) throw new Error(`x.size not present on calculated bbox`);\n      if (ySize === undefined) throw new Error(`x.size not present on calculated bbox`);\n\n      return Rects.fromTopLeft({ x: x.min, y: y.min }, xSize, ySize);\n    },\n    toString: () => bzr.toString(),\n    toSvgString: () => [`brrup`],\n    kind: `bezier/cubic`\n  });\n};\n\nexport const quadratic = (start:Points.Point, end:Points.Point, handle:Points.Point):QuadraticBezier => ({\n  a: Object.freeze(start),\n  b: Object.freeze(end),\n  quadratic: Object.freeze(handle)\n});\n\n\nconst quadratictoPath = (quadraticBezier:QuadraticBezier):QuadraticBezierPath => {\n  const { a, b, quadratic } = quadraticBezier;\n  const bzr = new BezierLib(a, quadratic, b);\n  return Object.freeze({\n    ...quadraticBezier,\n    length: () => bzr.length(),\n    interpolate: (t:number) => bzr.compute(t),\n    nearest: (_:Points.Point) => { throw new Error(`not implemented`); },\n    bbox: () => {\n      const { x, y } = bzr.bbox();\n      const xSize = x.size;\n      const ySize = y.size;\n      if (xSize === undefined) throw new Error(`x.size not present on calculated bbox`);\n      if (ySize === undefined) throw new Error(`x.size not present on calculated bbox`);\n      return Rects.fromTopLeft({ x: x.min, y: y.min }, xSize, ySize);\n    },\n    toString: () => bzr.toString(),\n    toSvgString: () => quadraticToSvgString(a, b, quadratic),\n    kind: `bezier/quadratic`\n  });\n};\n\n","import { Bezier } from \"./bezier.js\";\n\n// math-inlining.\nconst { abs, cos, sin, acos, atan2, sqrt, pow } = Math;\n\n// cube root function yielding real roots\nfunction crt(v) {\n  return v < 0 ? -pow(-v, 1 / 3) : pow(v, 1 / 3);\n}\n\n// trig constants\nconst pi = Math.PI,\n  tau = 2 * pi,\n  quart = pi / 2,\n  // float precision significant decimal\n  epsilon = 0.000001,\n  // extremas used in bbox calculation and similar algorithms\n  nMax = Number.MAX_SAFE_INTEGER || 9007199254740991,\n  nMin = Number.MIN_SAFE_INTEGER || -9007199254740991,\n  // a zero coordinate, which is surprisingly useful\n  ZERO = { x: 0, y: 0, z: 0 };\n\n// Bezier utility functions\nconst utils = {\n  // Legendre-Gauss abscissae with n=24 (x_i values, defined at i=n as the roots of the nth order Legendre polynomial Pn(x))\n  Tvalues: [\n    -0.0640568928626056260850430826247450385909,\n    0.0640568928626056260850430826247450385909,\n    -0.1911188674736163091586398207570696318404,\n    0.1911188674736163091586398207570696318404,\n    -0.3150426796961633743867932913198102407864,\n    0.3150426796961633743867932913198102407864,\n    -0.4337935076260451384870842319133497124524,\n    0.4337935076260451384870842319133497124524,\n    -0.5454214713888395356583756172183723700107,\n    0.5454214713888395356583756172183723700107,\n    -0.6480936519369755692524957869107476266696,\n    0.6480936519369755692524957869107476266696,\n    -0.7401241915785543642438281030999784255232,\n    0.7401241915785543642438281030999784255232,\n    -0.8200019859739029219539498726697452080761,\n    0.8200019859739029219539498726697452080761,\n    -0.8864155270044010342131543419821967550873,\n    0.8864155270044010342131543419821967550873,\n    -0.9382745520027327585236490017087214496548,\n    0.9382745520027327585236490017087214496548,\n    -0.9747285559713094981983919930081690617411,\n    0.9747285559713094981983919930081690617411,\n    -0.9951872199970213601799974097007368118745,\n    0.9951872199970213601799974097007368118745,\n  ],\n\n  // Legendre-Gauss weights with n=24 (w_i values, defined by a function linked to in the Bezier primer article)\n  Cvalues: [\n    0.1279381953467521569740561652246953718517,\n    0.1279381953467521569740561652246953718517,\n    0.1258374563468282961213753825111836887264,\n    0.1258374563468282961213753825111836887264,\n    0.121670472927803391204463153476262425607,\n    0.121670472927803391204463153476262425607,\n    0.1155056680537256013533444839067835598622,\n    0.1155056680537256013533444839067835598622,\n    0.1074442701159656347825773424466062227946,\n    0.1074442701159656347825773424466062227946,\n    0.0976186521041138882698806644642471544279,\n    0.0976186521041138882698806644642471544279,\n    0.086190161531953275917185202983742667185,\n    0.086190161531953275917185202983742667185,\n    0.0733464814110803057340336152531165181193,\n    0.0733464814110803057340336152531165181193,\n    0.0592985849154367807463677585001085845412,\n    0.0592985849154367807463677585001085845412,\n    0.0442774388174198061686027482113382288593,\n    0.0442774388174198061686027482113382288593,\n    0.0285313886289336631813078159518782864491,\n    0.0285313886289336631813078159518782864491,\n    0.0123412297999871995468056670700372915759,\n    0.0123412297999871995468056670700372915759,\n  ],\n\n  arcfn: function (t, derivativeFn) {\n    const d = derivativeFn(t);\n    let l = d.x * d.x + d.y * d.y;\n    if (typeof d.z !== \"undefined\") {\n      l += d.z * d.z;\n    }\n    return sqrt(l);\n  },\n\n  compute: function (t, points, _3d) {\n    // shortcuts\n    if (t === 0) {\n      points[0].t = 0;\n      return points[0];\n    }\n\n    const order = points.length - 1;\n\n    if (t === 1) {\n      points[order].t = 1;\n      return points[order];\n    }\n\n    const mt = 1 - t;\n    let p = points;\n\n    // constant?\n    if (order === 0) {\n      points[0].t = t;\n      return points[0];\n    }\n\n    // linear?\n    if (order === 1) {\n      const ret = {\n        x: mt * p[0].x + t * p[1].x,\n        y: mt * p[0].y + t * p[1].y,\n        t: t,\n      };\n      if (_3d) {\n        ret.z = mt * p[0].z + t * p[1].z;\n      }\n      return ret;\n    }\n\n    // quadratic/cubic curve?\n    if (order < 4) {\n      let mt2 = mt * mt,\n        t2 = t * t,\n        a,\n        b,\n        c,\n        d = 0;\n      if (order === 2) {\n        p = [p[0], p[1], p[2], ZERO];\n        a = mt2;\n        b = mt * t * 2;\n        c = t2;\n      } else if (order === 3) {\n        a = mt2 * mt;\n        b = mt2 * t * 3;\n        c = mt * t2 * 3;\n        d = t * t2;\n      }\n      const ret = {\n        x: a * p[0].x + b * p[1].x + c * p[2].x + d * p[3].x,\n        y: a * p[0].y + b * p[1].y + c * p[2].y + d * p[3].y,\n        t: t,\n      };\n      if (_3d) {\n        ret.z = a * p[0].z + b * p[1].z + c * p[2].z + d * p[3].z;\n      }\n      return ret;\n    }\n\n    // higher order curves: use de Casteljau's computation\n    const dCpts = JSON.parse(JSON.stringify(points));\n    while (dCpts.length > 1) {\n      for (let i = 0; i < dCpts.length - 1; i++) {\n        dCpts[i] = {\n          x: dCpts[i].x + (dCpts[i + 1].x - dCpts[i].x) * t,\n          y: dCpts[i].y + (dCpts[i + 1].y - dCpts[i].y) * t,\n        };\n        if (typeof dCpts[i].z !== \"undefined\") {\n          dCpts[i].z = dCpts[i].z + (dCpts[i + 1].z - dCpts[i].z) * t;\n        }\n      }\n      dCpts.splice(dCpts.length - 1, 1);\n    }\n    dCpts[0].t = t;\n    return dCpts[0];\n  },\n\n  computeWithRatios: function (t, points, ratios, _3d) {\n    const mt = 1 - t,\n      r = ratios,\n      p = points;\n\n    let f1 = r[0],\n      f2 = r[1],\n      f3 = r[2],\n      f4 = r[3],\n      d;\n\n    // spec for linear\n    f1 *= mt;\n    f2 *= t;\n\n    if (p.length === 2) {\n      d = f1 + f2;\n      return {\n        x: (f1 * p[0].x + f2 * p[1].x) / d,\n        y: (f1 * p[0].y + f2 * p[1].y) / d,\n        z: !_3d ? false : (f1 * p[0].z + f2 * p[1].z) / d,\n        t: t,\n      };\n    }\n\n    // upgrade to quadratic\n    f1 *= mt;\n    f2 *= 2 * mt;\n    f3 *= t * t;\n\n    if (p.length === 3) {\n      d = f1 + f2 + f3;\n      return {\n        x: (f1 * p[0].x + f2 * p[1].x + f3 * p[2].x) / d,\n        y: (f1 * p[0].y + f2 * p[1].y + f3 * p[2].y) / d,\n        z: !_3d ? false : (f1 * p[0].z + f2 * p[1].z + f3 * p[2].z) / d,\n        t: t,\n      };\n    }\n\n    // upgrade to cubic\n    f1 *= mt;\n    f2 *= 1.5 * mt;\n    f3 *= 3 * mt;\n    f4 *= t * t * t;\n\n    if (p.length === 4) {\n      d = f1 + f2 + f3 + f4;\n      return {\n        x: (f1 * p[0].x + f2 * p[1].x + f3 * p[2].x + f4 * p[3].x) / d,\n        y: (f1 * p[0].y + f2 * p[1].y + f3 * p[2].y + f4 * p[3].y) / d,\n        z: !_3d\n          ? false\n          : (f1 * p[0].z + f2 * p[1].z + f3 * p[2].z + f4 * p[3].z) / d,\n        t: t,\n      };\n    }\n  },\n\n  derive: function (points, _3d) {\n    const dpoints = [];\n    for (let p = points, d = p.length, c = d - 1; d > 1; d--, c--) {\n      const list = [];\n      for (let j = 0, dpt; j < c; j++) {\n        dpt = {\n          x: c * (p[j + 1].x - p[j].x),\n          y: c * (p[j + 1].y - p[j].y),\n        };\n        if (_3d) {\n          dpt.z = c * (p[j + 1].z - p[j].z);\n        }\n        list.push(dpt);\n      }\n      dpoints.push(list);\n      p = list;\n    }\n    return dpoints;\n  },\n\n  between: function (v, m, M) {\n    return (\n      (m <= v && v <= M) ||\n      utils.approximately(v, m) ||\n      utils.approximately(v, M)\n    );\n  },\n\n  approximately: function (a, b, precision) {\n    return abs(a - b) <= (precision || epsilon);\n  },\n\n  length: function (derivativeFn) {\n    const z = 0.5,\n      len = utils.Tvalues.length;\n\n    let sum = 0;\n\n    for (let i = 0, t; i < len; i++) {\n      t = z * utils.Tvalues[i] + z;\n      sum += utils.Cvalues[i] * utils.arcfn(t, derivativeFn);\n    }\n    return z * sum;\n  },\n\n  map: function (v, ds, de, ts, te) {\n    const d1 = de - ds,\n      d2 = te - ts,\n      v2 = v - ds,\n      r = v2 / d1;\n    return ts + d2 * r;\n  },\n\n  lerp: function (r, v1, v2) {\n    const ret = {\n      x: v1.x + r * (v2.x - v1.x),\n      y: v1.y + r * (v2.y - v1.y),\n    };\n    if (v1.z !== undefined && v2.z !== undefined) {\n      ret.z = v1.z + r * (v2.z - v1.z);\n    }\n    return ret;\n  },\n\n  pointToString: function (p) {\n    let s = p.x + \"/\" + p.y;\n    if (typeof p.z !== \"undefined\") {\n      s += \"/\" + p.z;\n    }\n    return s;\n  },\n\n  pointsToString: function (points) {\n    return \"[\" + points.map(utils.pointToString).join(\", \") + \"]\";\n  },\n\n  copy: function (obj) {\n    return JSON.parse(JSON.stringify(obj));\n  },\n\n  angle: function (o, v1, v2) {\n    const dx1 = v1.x - o.x,\n      dy1 = v1.y - o.y,\n      dx2 = v2.x - o.x,\n      dy2 = v2.y - o.y,\n      cross = dx1 * dy2 - dy1 * dx2,\n      dot = dx1 * dx2 + dy1 * dy2;\n    return atan2(cross, dot);\n  },\n\n  // round as string, to avoid rounding errors\n  round: function (v, d) {\n    const s = \"\" + v;\n    const pos = s.indexOf(\".\");\n    return parseFloat(s.substring(0, pos + 1 + d));\n  },\n\n  dist: function (p1, p2) {\n    const dx = p1.x - p2.x,\n      dy = p1.y - p2.y;\n    return sqrt(dx * dx + dy * dy);\n  },\n\n  closest: function (LUT, point) {\n    let mdist = pow(2, 63),\n      mpos,\n      d;\n    LUT.forEach(function (p, idx) {\n      d = utils.dist(point, p);\n      if (d < mdist) {\n        mdist = d;\n        mpos = idx;\n      }\n    });\n    return { mdist: mdist, mpos: mpos };\n  },\n\n  abcratio: function (t, n) {\n    // see ratio(t) note on http://pomax.github.io/bezierinfo/#abc\n    if (n !== 2 && n !== 3) {\n      return false;\n    }\n    if (typeof t === \"undefined\") {\n      t = 0.5;\n    } else if (t === 0 || t === 1) {\n      return t;\n    }\n    const bottom = pow(t, n) + pow(1 - t, n),\n      top = bottom - 1;\n    return abs(top / bottom);\n  },\n\n  projectionratio: function (t, n) {\n    // see u(t) note on http://pomax.github.io/bezierinfo/#abc\n    if (n !== 2 && n !== 3) {\n      return false;\n    }\n    if (typeof t === \"undefined\") {\n      t = 0.5;\n    } else if (t === 0 || t === 1) {\n      return t;\n    }\n    const top = pow(1 - t, n),\n      bottom = pow(t, n) + top;\n    return top / bottom;\n  },\n\n  lli8: function (x1, y1, x2, y2, x3, y3, x4, y4) {\n    const nx =\n        (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n      ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n      d = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n    if (d == 0) {\n      return false;\n    }\n    return { x: nx / d, y: ny / d };\n  },\n\n  lli4: function (p1, p2, p3, p4) {\n    const x1 = p1.x,\n      y1 = p1.y,\n      x2 = p2.x,\n      y2 = p2.y,\n      x3 = p3.x,\n      y3 = p3.y,\n      x4 = p4.x,\n      y4 = p4.y;\n    return utils.lli8(x1, y1, x2, y2, x3, y3, x4, y4);\n  },\n\n  lli: function (v1, v2) {\n    return utils.lli4(v1, v1.c, v2, v2.c);\n  },\n\n  makeline: function (p1, p2) {\n    return new Bezier(\n      p1.x,\n      p1.y,\n      (p1.x + p2.x) / 2,\n      (p1.y + p2.y) / 2,\n      p2.x,\n      p2.y\n    );\n  },\n\n  findbbox: function (sections) {\n    let mx = nMax,\n      my = nMax,\n      MX = nMin,\n      MY = nMin;\n    sections.forEach(function (s) {\n      const bbox = s.bbox();\n      if (mx > bbox.x.min) mx = bbox.x.min;\n      if (my > bbox.y.min) my = bbox.y.min;\n      if (MX < bbox.x.max) MX = bbox.x.max;\n      if (MY < bbox.y.max) MY = bbox.y.max;\n    });\n    return {\n      x: { min: mx, mid: (mx + MX) / 2, max: MX, size: MX - mx },\n      y: { min: my, mid: (my + MY) / 2, max: MY, size: MY - my },\n    };\n  },\n\n  shapeintersections: function (\n    s1,\n    bbox1,\n    s2,\n    bbox2,\n    curveIntersectionThreshold\n  ) {\n    if (!utils.bboxoverlap(bbox1, bbox2)) return [];\n    const intersections = [];\n    const a1 = [s1.startcap, s1.forward, s1.back, s1.endcap];\n    const a2 = [s2.startcap, s2.forward, s2.back, s2.endcap];\n    a1.forEach(function (l1) {\n      if (l1.virtual) return;\n      a2.forEach(function (l2) {\n        if (l2.virtual) return;\n        const iss = l1.intersects(l2, curveIntersectionThreshold);\n        if (iss.length > 0) {\n          iss.c1 = l1;\n          iss.c2 = l2;\n          iss.s1 = s1;\n          iss.s2 = s2;\n          intersections.push(iss);\n        }\n      });\n    });\n    return intersections;\n  },\n\n  makeshape: function (forward, back, curveIntersectionThreshold) {\n    const bpl = back.points.length;\n    const fpl = forward.points.length;\n    const start = utils.makeline(back.points[bpl - 1], forward.points[0]);\n    const end = utils.makeline(forward.points[fpl - 1], back.points[0]);\n    const shape = {\n      startcap: start,\n      forward: forward,\n      back: back,\n      endcap: end,\n      bbox: utils.findbbox([start, forward, back, end]),\n    };\n    shape.intersections = function (s2) {\n      return utils.shapeintersections(\n        shape,\n        shape.bbox,\n        s2,\n        s2.bbox,\n        curveIntersectionThreshold\n      );\n    };\n    return shape;\n  },\n\n  getminmax: function (curve, d, list) {\n    if (!list) return { min: 0, max: 0 };\n    let min = nMax,\n      max = nMin,\n      t,\n      c;\n    if (list.indexOf(0) === -1) {\n      list = [0].concat(list);\n    }\n    if (list.indexOf(1) === -1) {\n      list.push(1);\n    }\n    for (let i = 0, len = list.length; i < len; i++) {\n      t = list[i];\n      c = curve.get(t);\n      if (c[d] < min) {\n        min = c[d];\n      }\n      if (c[d] > max) {\n        max = c[d];\n      }\n    }\n    return { min: min, mid: (min + max) / 2, max: max, size: max - min };\n  },\n\n  align: function (points, line) {\n    const tx = line.p1.x,\n      ty = line.p1.y,\n      a = -atan2(line.p2.y - ty, line.p2.x - tx),\n      d = function (v) {\n        return {\n          x: (v.x - tx) * cos(a) - (v.y - ty) * sin(a),\n          y: (v.x - tx) * sin(a) + (v.y - ty) * cos(a),\n        };\n      };\n    return points.map(d);\n  },\n\n  roots: function (points, line) {\n    line = line || { p1: { x: 0, y: 0 }, p2: { x: 1, y: 0 } };\n\n    const order = points.length - 1;\n    const aligned = utils.align(points, line);\n    const reduce = function (t) {\n      return 0 <= t && t <= 1;\n    };\n\n    if (order === 2) {\n      const a = aligned[0].y,\n        b = aligned[1].y,\n        c = aligned[2].y,\n        d = a - 2 * b + c;\n      if (d !== 0) {\n        const m1 = -sqrt(b * b - a * c),\n          m2 = -a + b,\n          v1 = -(m1 + m2) / d,\n          v2 = -(-m1 + m2) / d;\n        return [v1, v2].filter(reduce);\n      } else if (b !== c && d === 0) {\n        return [(2 * b - c) / (2 * b - 2 * c)].filter(reduce);\n      }\n      return [];\n    }\n\n    // see http://www.trans4mind.com/personal_development/mathematics/polynomials/cubicAlgebra.htm\n    const pa = aligned[0].y,\n      pb = aligned[1].y,\n      pc = aligned[2].y,\n      pd = aligned[3].y;\n\n    let d = -pa + 3 * pb - 3 * pc + pd,\n      a = 3 * pa - 6 * pb + 3 * pc,\n      b = -3 * pa + 3 * pb,\n      c = pa;\n\n    if (utils.approximately(d, 0)) {\n      // this is not a cubic curve.\n      if (utils.approximately(a, 0)) {\n        // in fact, this is not a quadratic curve either.\n        if (utils.approximately(b, 0)) {\n          // in fact in fact, there are no solutions.\n          return [];\n        }\n        // linear solution:\n        return [-c / b].filter(reduce);\n      }\n      // quadratic solution:\n      const q = sqrt(b * b - 4 * a * c),\n        a2 = 2 * a;\n      return [(q - b) / a2, (-b - q) / a2].filter(reduce);\n    }\n\n    // at this point, we know we need a cubic solution:\n\n    a /= d;\n    b /= d;\n    c /= d;\n\n    const p = (3 * b - a * a) / 3,\n      p3 = p / 3,\n      q = (2 * a * a * a - 9 * a * b + 27 * c) / 27,\n      q2 = q / 2,\n      discriminant = q2 * q2 + p3 * p3 * p3;\n\n    let u1, v1, x1, x2, x3;\n    if (discriminant < 0) {\n      const mp3 = -p / 3,\n        mp33 = mp3 * mp3 * mp3,\n        r = sqrt(mp33),\n        t = -q / (2 * r),\n        cosphi = t < -1 ? -1 : t > 1 ? 1 : t,\n        phi = acos(cosphi),\n        crtr = crt(r),\n        t1 = 2 * crtr;\n      x1 = t1 * cos(phi / 3) - a / 3;\n      x2 = t1 * cos((phi + tau) / 3) - a / 3;\n      x3 = t1 * cos((phi + 2 * tau) / 3) - a / 3;\n      return [x1, x2, x3].filter(reduce);\n    } else if (discriminant === 0) {\n      u1 = q2 < 0 ? crt(-q2) : -crt(q2);\n      x1 = 2 * u1 - a / 3;\n      x2 = -u1 - a / 3;\n      return [x1, x2].filter(reduce);\n    } else {\n      const sd = sqrt(discriminant);\n      u1 = crt(-q2 + sd);\n      v1 = crt(q2 + sd);\n      return [u1 - v1 - a / 3].filter(reduce);\n    }\n  },\n\n  droots: function (p) {\n    // quadratic roots are easy\n    if (p.length === 3) {\n      const a = p[0],\n        b = p[1],\n        c = p[2],\n        d = a - 2 * b + c;\n      if (d !== 0) {\n        const m1 = -sqrt(b * b - a * c),\n          m2 = -a + b,\n          v1 = -(m1 + m2) / d,\n          v2 = -(-m1 + m2) / d;\n        return [v1, v2];\n      } else if (b !== c && d === 0) {\n        return [(2 * b - c) / (2 * (b - c))];\n      }\n      return [];\n    }\n\n    // linear roots are even easier\n    if (p.length === 2) {\n      const a = p[0],\n        b = p[1];\n      if (a !== b) {\n        return [a / (a - b)];\n      }\n      return [];\n    }\n\n    return [];\n  },\n\n  curvature: function (t, d1, d2, _3d, kOnly) {\n    let num,\n      dnm,\n      adk,\n      dk,\n      k = 0,\n      r = 0;\n\n    //\n    // We're using the following formula for curvature:\n    //\n    //              x'y\" - y'x\"\n    //   k(t) = ------------------\n    //           (x'² + y'²)^(3/2)\n    //\n    // from https://en.wikipedia.org/wiki/Radius_of_curvature#Definition\n    //\n    // With it corresponding 3D counterpart:\n    //\n    //          sqrt( (y'z\" - y\"z')² + (z'x\" - z\"x')² + (x'y\" - x\"y')²)\n    //   k(t) = -------------------------------------------------------\n    //                     (x'² + y'² + z'²)^(3/2)\n    //\n\n    const d = utils.compute(t, d1);\n    const dd = utils.compute(t, d2);\n    const qdsum = d.x * d.x + d.y * d.y;\n\n    if (_3d) {\n      num = sqrt(\n        pow(d.y * dd.z - dd.y * d.z, 2) +\n          pow(d.z * dd.x - dd.z * d.x, 2) +\n          pow(d.x * dd.y - dd.x * d.y, 2)\n      );\n      dnm = pow(qdsum + d.z * d.z, 3 / 2);\n    } else {\n      num = d.x * dd.y - d.y * dd.x;\n      dnm = pow(qdsum, 3 / 2);\n    }\n\n    if (num === 0 || dnm === 0) {\n      return { k: 0, r: 0 };\n    }\n\n    k = num / dnm;\n    r = dnm / num;\n\n    // We're also computing the derivative of kappa, because\n    // there is value in knowing the rate of change for the\n    // curvature along the curve. And we're just going to\n    // ballpark it based on an epsilon.\n    if (!kOnly) {\n      // compute k'(t) based on the interval before, and after it,\n      // to at least try to not introduce forward/backward pass bias.\n      const pk = utils.curvature(t - 0.001, d1, d2, _3d, true).k;\n      const nk = utils.curvature(t + 0.001, d1, d2, _3d, true).k;\n      dk = (nk - k + (k - pk)) / 2;\n      adk = (abs(nk - k) + abs(k - pk)) / 2;\n    }\n\n    return { k: k, r: r, dk: dk, adk: adk };\n  },\n\n  inflections: function (points) {\n    if (points.length < 4) return [];\n\n    // FIXME: TODO: add in inflection abstraction for quartic+ curves?\n\n    const p = utils.align(points, { p1: points[0], p2: points.slice(-1)[0] }),\n      a = p[2].x * p[1].y,\n      b = p[3].x * p[1].y,\n      c = p[1].x * p[2].y,\n      d = p[3].x * p[2].y,\n      v1 = 18 * (-3 * a + 2 * b + 3 * c - d),\n      v2 = 18 * (3 * a - b - 3 * c),\n      v3 = 18 * (c - a);\n\n    if (utils.approximately(v1, 0)) {\n      if (!utils.approximately(v2, 0)) {\n        let t = -v3 / v2;\n        if (0 <= t && t <= 1) return [t];\n      }\n      return [];\n    }\n\n    const d2 = 2 * v1;\n\n    if (utils.approximately(d2, 0)) return [];\n\n    const trm = v2 * v2 - 4 * v1 * v3;\n\n    if (trm < 0) return [];\n\n    const sq = Math.sqrt(trm);\n\n    return [(sq - v2) / d2, -(v2 + sq) / d2].filter(function (r) {\n      return 0 <= r && r <= 1;\n    });\n  },\n\n  bboxoverlap: function (b1, b2) {\n    const dims = [\"x\", \"y\"],\n      len = dims.length;\n\n    for (let i = 0, dim, l, t, d; i < len; i++) {\n      dim = dims[i];\n      l = b1[dim].mid;\n      t = b2[dim].mid;\n      d = (b1[dim].size + b2[dim].size) / 2;\n      if (abs(l - t) >= d) return false;\n    }\n    return true;\n  },\n\n  expandbox: function (bbox, _bbox) {\n    if (_bbox.x.min < bbox.x.min) {\n      bbox.x.min = _bbox.x.min;\n    }\n    if (_bbox.y.min < bbox.y.min) {\n      bbox.y.min = _bbox.y.min;\n    }\n    if (_bbox.z && _bbox.z.min < bbox.z.min) {\n      bbox.z.min = _bbox.z.min;\n    }\n    if (_bbox.x.max > bbox.x.max) {\n      bbox.x.max = _bbox.x.max;\n    }\n    if (_bbox.y.max > bbox.y.max) {\n      bbox.y.max = _bbox.y.max;\n    }\n    if (_bbox.z && _bbox.z.max > bbox.z.max) {\n      bbox.z.max = _bbox.z.max;\n    }\n    bbox.x.mid = (bbox.x.min + bbox.x.max) / 2;\n    bbox.y.mid = (bbox.y.min + bbox.y.max) / 2;\n    if (bbox.z) {\n      bbox.z.mid = (bbox.z.min + bbox.z.max) / 2;\n    }\n    bbox.x.size = bbox.x.max - bbox.x.min;\n    bbox.y.size = bbox.y.max - bbox.y.min;\n    if (bbox.z) {\n      bbox.z.size = bbox.z.max - bbox.z.min;\n    }\n  },\n\n  pairiteration: function (c1, c2, curveIntersectionThreshold) {\n    const c1b = c1.bbox(),\n      c2b = c2.bbox(),\n      r = 100000,\n      threshold = curveIntersectionThreshold || 0.5;\n\n    if (\n      c1b.x.size + c1b.y.size < threshold &&\n      c2b.x.size + c2b.y.size < threshold\n    ) {\n      return [\n        (((r * (c1._t1 + c1._t2)) / 2) | 0) / r +\n          \"/\" +\n          (((r * (c2._t1 + c2._t2)) / 2) | 0) / r,\n      ];\n    }\n\n    let cc1 = c1.split(0.5),\n      cc2 = c2.split(0.5),\n      pairs = [\n        { left: cc1.left, right: cc2.left },\n        { left: cc1.left, right: cc2.right },\n        { left: cc1.right, right: cc2.right },\n        { left: cc1.right, right: cc2.left },\n      ];\n\n    pairs = pairs.filter(function (pair) {\n      return utils.bboxoverlap(pair.left.bbox(), pair.right.bbox());\n    });\n\n    let results = [];\n\n    if (pairs.length === 0) return results;\n\n    pairs.forEach(function (pair) {\n      results = results.concat(\n        utils.pairiteration(pair.left, pair.right, threshold)\n      );\n    });\n\n    results = results.filter(function (v, i) {\n      return results.indexOf(v) === i;\n    });\n\n    return results;\n  },\n\n  getccenter: function (p1, p2, p3) {\n    const dx1 = p2.x - p1.x,\n      dy1 = p2.y - p1.y,\n      dx2 = p3.x - p2.x,\n      dy2 = p3.y - p2.y,\n      dx1p = dx1 * cos(quart) - dy1 * sin(quart),\n      dy1p = dx1 * sin(quart) + dy1 * cos(quart),\n      dx2p = dx2 * cos(quart) - dy2 * sin(quart),\n      dy2p = dx2 * sin(quart) + dy2 * cos(quart),\n      // chord midpoints\n      mx1 = (p1.x + p2.x) / 2,\n      my1 = (p1.y + p2.y) / 2,\n      mx2 = (p2.x + p3.x) / 2,\n      my2 = (p2.y + p3.y) / 2,\n      // midpoint offsets\n      mx1n = mx1 + dx1p,\n      my1n = my1 + dy1p,\n      mx2n = mx2 + dx2p,\n      my2n = my2 + dy2p,\n      // intersection of these lines:\n      arc = utils.lli8(mx1, my1, mx1n, my1n, mx2, my2, mx2n, my2n),\n      r = utils.dist(arc, p1);\n\n    // arc start/end values, over mid point:\n    let s = atan2(p1.y - arc.y, p1.x - arc.x),\n      m = atan2(p2.y - arc.y, p2.x - arc.x),\n      e = atan2(p3.y - arc.y, p3.x - arc.x),\n      _;\n\n    // determine arc direction (cw/ccw correction)\n    if (s < e) {\n      // if s<m<e, arc(s, e)\n      // if m<s<e, arc(e, s + tau)\n      // if s<e<m, arc(e, s + tau)\n      if (s > m || m > e) {\n        s += tau;\n      }\n      if (s > e) {\n        _ = e;\n        e = s;\n        s = _;\n      }\n    } else {\n      // if e<m<s, arc(e, s)\n      // if m<e<s, arc(s, e + tau)\n      // if e<s<m, arc(s, e + tau)\n      if (e < m && m < s) {\n        _ = e;\n        e = s;\n        s = _;\n      } else {\n        e += tau;\n      }\n    }\n    // assign and done.\n    arc.s = s;\n    arc.e = e;\n    arc.r = r;\n    return arc;\n  },\n\n  numberSort: function (a, b) {\n    return a - b;\n  },\n};\n\nexport { utils };\n","import { utils } from \"./utils.js\";\n\n/**\n * Poly Bezier\n * @param {[type]} curves [description]\n */\nclass PolyBezier {\n  constructor(curves) {\n    this.curves = [];\n    this._3d = false;\n    if (!!curves) {\n      this.curves = curves;\n      this._3d = this.curves[0]._3d;\n    }\n  }\n\n  valueOf() {\n    return this.toString();\n  }\n\n  toString() {\n    return (\n      \"[\" +\n      this.curves\n        .map(function (curve) {\n          return utils.pointsToString(curve.points);\n        })\n        .join(\", \") +\n      \"]\"\n    );\n  }\n\n  addCurve(curve) {\n    this.curves.push(curve);\n    this._3d = this._3d || curve._3d;\n  }\n\n  length() {\n    return this.curves\n      .map(function (v) {\n        return v.length();\n      })\n      .reduce(function (a, b) {\n        return a + b;\n      });\n  }\n\n  curve(idx) {\n    return this.curves[idx];\n  }\n\n  bbox() {\n    const c = this.curves;\n    var bbox = c[0].bbox();\n    for (var i = 1; i < c.length; i++) {\n      utils.expandbox(bbox, c[i].bbox());\n    }\n    return bbox;\n  }\n\n  offset(d) {\n    const offset = [];\n    this.curves.forEach(function (v) {\n      offset.push(...v.offset(d));\n    });\n    return new PolyBezier(offset);\n  }\n}\n\nexport { PolyBezier };\n","/**\n  A javascript Bezier curve library by Pomax.\n\n  Based on http://pomax.github.io/bezierinfo\n\n  This code is MIT licensed.\n**/\n\nimport { utils } from \"./utils.js\";\nimport { PolyBezier } from \"./poly-bezier.js\";\n\n// math-inlining.\nconst { abs, min, max, cos, sin, acos, sqrt } = Math;\nconst pi = Math.PI;\n// a zero coordinate, which is surprisingly useful\nconst ZERO = { x: 0, y: 0, z: 0 };\n\n/**\n * Bezier curve constructor.\n *\n * ...docs pending...\n */\nclass Bezier {\n  constructor(coords) {\n    let args =\n      coords && coords.forEach ? coords : Array.from(arguments).slice();\n    let coordlen = false;\n\n    if (typeof args[0] === \"object\") {\n      coordlen = args.length;\n      const newargs = [];\n      args.forEach(function (point) {\n        [\"x\", \"y\", \"z\"].forEach(function (d) {\n          if (typeof point[d] !== \"undefined\") {\n            newargs.push(point[d]);\n          }\n        });\n      });\n      args = newargs;\n    }\n\n    let higher = false;\n    const len = args.length;\n\n    if (coordlen) {\n      if (coordlen > 4) {\n        if (arguments.length !== 1) {\n          throw new Error(\n            \"Only new Bezier(point[]) is accepted for 4th and higher order curves\"\n          );\n        }\n        higher = true;\n      }\n    } else {\n      if (len !== 6 && len !== 8 && len !== 9 && len !== 12) {\n        if (arguments.length !== 1) {\n          throw new Error(\n            \"Only new Bezier(point[]) is accepted for 4th and higher order curves\"\n          );\n        }\n      }\n    }\n\n    const _3d = (this._3d =\n      (!higher && (len === 9 || len === 12)) ||\n      (coords && coords[0] && typeof coords[0].z !== \"undefined\"));\n\n    const points = (this.points = []);\n    for (let idx = 0, step = _3d ? 3 : 2; idx < len; idx += step) {\n      var point = {\n        x: args[idx],\n        y: args[idx + 1],\n      };\n      if (_3d) {\n        point.z = args[idx + 2];\n      }\n      points.push(point);\n    }\n    const order = (this.order = points.length - 1);\n\n    const dims = (this.dims = [\"x\", \"y\"]);\n    if (_3d) dims.push(\"z\");\n    this.dimlen = dims.length;\n\n    // is this curve, practically speaking, a straight line?\n    const aligned = utils.align(points, { p1: points[0], p2: points[order] });\n    const baselength = utils.dist(points[0], points[order]);\n    this._linear = aligned.reduce((t, p) => t + abs(p.y), 0) < baselength / 50;\n\n    this._lut = [];\n    this._t1 = 0;\n    this._t2 = 1;\n    this.update();\n  }\n\n  static quadraticFromPoints(p1, p2, p3, t) {\n    if (typeof t === \"undefined\") {\n      t = 0.5;\n    }\n    // shortcuts, although they're really dumb\n    if (t === 0) {\n      return new Bezier(p2, p2, p3);\n    }\n    if (t === 1) {\n      return new Bezier(p1, p2, p2);\n    }\n    // real fitting.\n    const abc = Bezier.getABC(2, p1, p2, p3, t);\n    return new Bezier(p1, abc.A, p3);\n  }\n\n  static cubicFromPoints(S, B, E, t, d1) {\n    if (typeof t === \"undefined\") {\n      t = 0.5;\n    }\n    const abc = Bezier.getABC(3, S, B, E, t);\n    if (typeof d1 === \"undefined\") {\n      d1 = utils.dist(B, abc.C);\n    }\n    const d2 = (d1 * (1 - t)) / t;\n\n    const selen = utils.dist(S, E),\n      lx = (E.x - S.x) / selen,\n      ly = (E.y - S.y) / selen,\n      bx1 = d1 * lx,\n      by1 = d1 * ly,\n      bx2 = d2 * lx,\n      by2 = d2 * ly;\n    // derivation of new hull coordinates\n    const e1 = { x: B.x - bx1, y: B.y - by1 },\n      e2 = { x: B.x + bx2, y: B.y + by2 },\n      A = abc.A,\n      v1 = { x: A.x + (e1.x - A.x) / (1 - t), y: A.y + (e1.y - A.y) / (1 - t) },\n      v2 = { x: A.x + (e2.x - A.x) / t, y: A.y + (e2.y - A.y) / t },\n      nc1 = { x: S.x + (v1.x - S.x) / t, y: S.y + (v1.y - S.y) / t },\n      nc2 = {\n        x: E.x + (v2.x - E.x) / (1 - t),\n        y: E.y + (v2.y - E.y) / (1 - t),\n      };\n    // ...done\n    return new Bezier(S, nc1, nc2, E);\n  }\n\n  static getUtils() {\n    return utils;\n  }\n\n  getUtils() {\n    return Bezier.getUtils();\n  }\n\n  static get PolyBezier() {\n    return PolyBezier;\n  }\n\n  valueOf() {\n    return this.toString();\n  }\n\n  toString() {\n    return utils.pointsToString(this.points);\n  }\n\n  toSVG() {\n    if (this._3d) return false;\n    const p = this.points,\n      x = p[0].x,\n      y = p[0].y,\n      s = [\"M\", x, y, this.order === 2 ? \"Q\" : \"C\"];\n    for (let i = 1, last = p.length; i < last; i++) {\n      s.push(p[i].x);\n      s.push(p[i].y);\n    }\n    return s.join(\" \");\n  }\n\n  setRatios(ratios) {\n    if (ratios.length !== this.points.length) {\n      throw new Error(\"incorrect number of ratio values\");\n    }\n    this.ratios = ratios;\n    this._lut = []; //  invalidate any precomputed LUT\n  }\n\n  verify() {\n    const print = this.coordDigest();\n    if (print !== this._print) {\n      this._print = print;\n      this.update();\n    }\n  }\n\n  coordDigest() {\n    return this.points\n      .map(function (c, pos) {\n        return \"\" + pos + c.x + c.y + (c.z ? c.z : 0);\n      })\n      .join(\"\");\n  }\n\n  update() {\n    // invalidate any precomputed LUT\n    this._lut = [];\n    this.dpoints = utils.derive(this.points, this._3d);\n    this.computedirection();\n  }\n\n  computedirection() {\n    const points = this.points;\n    const angle = utils.angle(points[0], points[this.order], points[1]);\n    this.clockwise = angle > 0;\n  }\n\n  length() {\n    return utils.length(this.derivative.bind(this));\n  }\n\n  static getABC(order = 2, S, B, E, t = 0.5) {\n    const u = utils.projectionratio(t, order),\n      um = 1 - u,\n      C = {\n        x: u * S.x + um * E.x,\n        y: u * S.y + um * E.y,\n      },\n      s = utils.abcratio(t, order),\n      A = {\n        x: B.x + (B.x - C.x) / s,\n        y: B.y + (B.y - C.y) / s,\n      };\n    return { A, B, C, S, E };\n  }\n\n  getABC(t, B) {\n    B = B || this.get(t);\n    let S = this.points[0];\n    let E = this.points[this.order];\n    return Bezier.getABC(this.order, S, B, E, t);\n  }\n\n  getLUT(steps) {\n    this.verify();\n    steps = steps || 100;\n    if (this._lut.length === steps + 1) {\n      return this._lut;\n    }\n    this._lut = [];\n    // n steps means n+1 points\n    steps++;\n    this._lut = [];\n    for (let i = 0, p, t; i < steps; i++) {\n      t = i / (steps - 1);\n      p = this.compute(t);\n      p.t = t;\n      this._lut.push(p);\n    }\n    return this._lut;\n  }\n\n  on(point, error) {\n    error = error || 5;\n    const lut = this.getLUT(),\n      hits = [];\n    for (let i = 0, c, t = 0; i < lut.length; i++) {\n      c = lut[i];\n      if (utils.dist(c, point) < error) {\n        hits.push(c);\n        t += i / lut.length;\n      }\n    }\n    if (!hits.length) return false;\n    return (t /= hits.length);\n  }\n\n  project(point) {\n    // step 1: coarse check\n    const LUT = this.getLUT(),\n      l = LUT.length - 1,\n      closest = utils.closest(LUT, point),\n      mpos = closest.mpos,\n      t1 = (mpos - 1) / l,\n      t2 = (mpos + 1) / l,\n      step = 0.1 / l;\n\n    // step 2: fine check\n    let mdist = closest.mdist,\n      t = t1,\n      ft = t,\n      p;\n    mdist += 1;\n    for (let d; t < t2 + step; t += step) {\n      p = this.compute(t);\n      d = utils.dist(point, p);\n      if (d < mdist) {\n        mdist = d;\n        ft = t;\n      }\n    }\n    ft = ft < 0 ? 0 : ft > 1 ? 1 : ft;\n    p = this.compute(ft);\n    p.t = ft;\n    p.d = mdist;\n    return p;\n  }\n\n  get(t) {\n    return this.compute(t);\n  }\n\n  point(idx) {\n    return this.points[idx];\n  }\n\n  compute(t) {\n    if (this.ratios) {\n      return utils.computeWithRatios(t, this.points, this.ratios, this._3d);\n    }\n    return utils.compute(t, this.points, this._3d, this.ratios);\n  }\n\n  raise() {\n    const p = this.points,\n      np = [p[0]],\n      k = p.length;\n    for (let i = 1, pi, pim; i < k; i++) {\n      pi = p[i];\n      pim = p[i - 1];\n      np[i] = {\n        x: ((k - i) / k) * pi.x + (i / k) * pim.x,\n        y: ((k - i) / k) * pi.y + (i / k) * pim.y,\n      };\n    }\n    np[k] = p[k - 1];\n    return new Bezier(np);\n  }\n\n  derivative(t) {\n    return utils.compute(t, this.dpoints[0], this._3d);\n  }\n\n  dderivative(t) {\n    return utils.compute(t, this.dpoints[1], this._3d);\n  }\n\n  align() {\n    let p = this.points;\n    return new Bezier(utils.align(p, { p1: p[0], p2: p[p.length - 1] }));\n  }\n\n  curvature(t) {\n    return utils.curvature(t, this.dpoints[0], this.dpoints[1], this._3d);\n  }\n\n  inflections() {\n    return utils.inflections(this.points);\n  }\n\n  normal(t) {\n    return this._3d ? this.__normal3(t) : this.__normal2(t);\n  }\n\n  __normal2(t) {\n    const d = this.derivative(t);\n    const q = sqrt(d.x * d.x + d.y * d.y);\n    return { t, x: -d.y / q, y: d.x / q };\n  }\n\n  __normal3(t) {\n    // see http://stackoverflow.com/questions/25453159\n    const r1 = this.derivative(t),\n      r2 = this.derivative(t + 0.01),\n      q1 = sqrt(r1.x * r1.x + r1.y * r1.y + r1.z * r1.z),\n      q2 = sqrt(r2.x * r2.x + r2.y * r2.y + r2.z * r2.z);\n    r1.x /= q1;\n    r1.y /= q1;\n    r1.z /= q1;\n    r2.x /= q2;\n    r2.y /= q2;\n    r2.z /= q2;\n    // cross product\n    const c = {\n      x: r2.y * r1.z - r2.z * r1.y,\n      y: r2.z * r1.x - r2.x * r1.z,\n      z: r2.x * r1.y - r2.y * r1.x,\n    };\n    const m = sqrt(c.x * c.x + c.y * c.y + c.z * c.z);\n    c.x /= m;\n    c.y /= m;\n    c.z /= m;\n    // rotation matrix\n    const R = [\n      c.x * c.x,\n      c.x * c.y - c.z,\n      c.x * c.z + c.y,\n      c.x * c.y + c.z,\n      c.y * c.y,\n      c.y * c.z - c.x,\n      c.x * c.z - c.y,\n      c.y * c.z + c.x,\n      c.z * c.z,\n    ];\n    // normal vector:\n    const n = {\n      t,\n      x: R[0] * r1.x + R[1] * r1.y + R[2] * r1.z,\n      y: R[3] * r1.x + R[4] * r1.y + R[5] * r1.z,\n      z: R[6] * r1.x + R[7] * r1.y + R[8] * r1.z,\n    };\n    return n;\n  }\n\n  hull(t) {\n    let p = this.points,\n      _p = [],\n      q = [],\n      idx = 0;\n    q[idx++] = p[0];\n    q[idx++] = p[1];\n    q[idx++] = p[2];\n    if (this.order === 3) {\n      q[idx++] = p[3];\n    }\n    // we lerp between all points at each iteration, until we have 1 point left.\n    while (p.length > 1) {\n      _p = [];\n      for (let i = 0, pt, l = p.length - 1; i < l; i++) {\n        pt = utils.lerp(t, p[i], p[i + 1]);\n        q[idx++] = pt;\n        _p.push(pt);\n      }\n      p = _p;\n    }\n    return q;\n  }\n\n  split(t1, t2) {\n    // shortcuts\n    if (t1 === 0 && !!t2) {\n      return this.split(t2).left;\n    }\n    if (t2 === 1) {\n      return this.split(t1).right;\n    }\n\n    // no shortcut: use \"de Casteljau\" iteration.\n    const q = this.hull(t1);\n    const result = {\n      left:\n        this.order === 2\n          ? new Bezier([q[0], q[3], q[5]])\n          : new Bezier([q[0], q[4], q[7], q[9]]),\n      right:\n        this.order === 2\n          ? new Bezier([q[5], q[4], q[2]])\n          : new Bezier([q[9], q[8], q[6], q[3]]),\n      span: q,\n    };\n\n    // make sure we bind _t1/_t2 information!\n    result.left._t1 = utils.map(0, 0, 1, this._t1, this._t2);\n    result.left._t2 = utils.map(t1, 0, 1, this._t1, this._t2);\n    result.right._t1 = utils.map(t1, 0, 1, this._t1, this._t2);\n    result.right._t2 = utils.map(1, 0, 1, this._t1, this._t2);\n\n    // if we have no t2, we're done\n    if (!t2) {\n      return result;\n    }\n\n    // if we have a t2, split again:\n    t2 = utils.map(t2, t1, 1, 0, 1);\n    return result.right.split(t2).left;\n  }\n\n  extrema() {\n    const result = {};\n    let roots = [];\n\n    this.dims.forEach(\n      function (dim) {\n        let mfn = function (v) {\n          return v[dim];\n        };\n        let p = this.dpoints[0].map(mfn);\n        result[dim] = utils.droots(p);\n        if (this.order === 3) {\n          p = this.dpoints[1].map(mfn);\n          result[dim] = result[dim].concat(utils.droots(p));\n        }\n        result[dim] = result[dim].filter(function (t) {\n          return t >= 0 && t <= 1;\n        });\n        roots = roots.concat(result[dim].sort(utils.numberSort));\n      }.bind(this)\n    );\n\n    result.values = roots.sort(utils.numberSort).filter(function (v, idx) {\n      return roots.indexOf(v) === idx;\n    });\n\n    return result;\n  }\n\n  bbox() {\n    const extrema = this.extrema(),\n      result = {};\n    this.dims.forEach(\n      function (d) {\n        result[d] = utils.getminmax(this, d, extrema[d]);\n      }.bind(this)\n    );\n    return result;\n  }\n\n  overlaps(curve) {\n    const lbbox = this.bbox(),\n      tbbox = curve.bbox();\n    return utils.bboxoverlap(lbbox, tbbox);\n  }\n\n  offset(t, d) {\n    if (typeof d !== \"undefined\") {\n      const c = this.get(t),\n        n = this.normal(t);\n      const ret = {\n        c: c,\n        n: n,\n        x: c.x + n.x * d,\n        y: c.y + n.y * d,\n      };\n      if (this._3d) {\n        ret.z = c.z + n.z * d;\n      }\n      return ret;\n    }\n    if (this._linear) {\n      const nv = this.normal(0),\n        coords = this.points.map(function (p) {\n          const ret = {\n            x: p.x + t * nv.x,\n            y: p.y + t * nv.y,\n          };\n          if (p.z && nv.z) {\n            ret.z = p.z + t * nv.z;\n          }\n          return ret;\n        });\n      return [new Bezier(coords)];\n    }\n    return this.reduce().map(function (s) {\n      if (s._linear) {\n        return s.offset(t)[0];\n      }\n      return s.scale(t);\n    });\n  }\n\n  simple() {\n    if (this.order === 3) {\n      const a1 = utils.angle(this.points[0], this.points[3], this.points[1]);\n      const a2 = utils.angle(this.points[0], this.points[3], this.points[2]);\n      if ((a1 > 0 && a2 < 0) || (a1 < 0 && a2 > 0)) return false;\n    }\n    const n1 = this.normal(0);\n    const n2 = this.normal(1);\n    let s = n1.x * n2.x + n1.y * n2.y;\n    if (this._3d) {\n      s += n1.z * n2.z;\n    }\n    return abs(acos(s)) < pi / 3;\n  }\n\n  reduce() {\n    // TODO: examine these var types in more detail...\n    let i,\n      t1 = 0,\n      t2 = 0,\n      step = 0.01,\n      segment,\n      pass1 = [],\n      pass2 = [];\n    // first pass: split on extrema\n    let extrema = this.extrema().values;\n    if (extrema.indexOf(0) === -1) {\n      extrema = [0].concat(extrema);\n    }\n    if (extrema.indexOf(1) === -1) {\n      extrema.push(1);\n    }\n\n    for (t1 = extrema[0], i = 1; i < extrema.length; i++) {\n      t2 = extrema[i];\n      segment = this.split(t1, t2);\n      segment._t1 = t1;\n      segment._t2 = t2;\n      pass1.push(segment);\n      t1 = t2;\n    }\n\n    // second pass: further reduce these segments to simple segments\n    pass1.forEach(function (p1) {\n      t1 = 0;\n      t2 = 0;\n      while (t2 <= 1) {\n        for (t2 = t1 + step; t2 <= 1 + step; t2 += step) {\n          segment = p1.split(t1, t2);\n          if (!segment.simple()) {\n            t2 -= step;\n            if (abs(t1 - t2) < step) {\n              // we can never form a reduction\n              return [];\n            }\n            segment = p1.split(t1, t2);\n            segment._t1 = utils.map(t1, 0, 1, p1._t1, p1._t2);\n            segment._t2 = utils.map(t2, 0, 1, p1._t1, p1._t2);\n            pass2.push(segment);\n            t1 = t2;\n            break;\n          }\n        }\n      }\n      if (t1 < 1) {\n        segment = p1.split(t1, 1);\n        segment._t1 = utils.map(t1, 0, 1, p1._t1, p1._t2);\n        segment._t2 = p1._t2;\n        pass2.push(segment);\n      }\n    });\n    return pass2;\n  }\n\n  translate(v, d1, d2) {\n    d2 = typeof d2 === \"number\" ? d2 : d1;\n\n    // TODO: make this take curves with control points outside\n    //       of the start-end interval into account\n\n    const o = this.order;\n    let d = this.points.map((_, i) => (1 - i / o) * d1 + (i / o) * d2);\n    return new Bezier(\n      this.points.map((p, i) => ({\n        x: p.x + v.x * d[i],\n        y: p.y + v.y * d[i],\n      }))\n    );\n  }\n\n  scale(d) {\n    const order = this.order;\n    let distanceFn = false;\n    if (typeof d === \"function\") {\n      distanceFn = d;\n    }\n    if (distanceFn && order === 2) {\n      return this.raise().scale(distanceFn);\n    }\n\n    // TODO: add special handling for non-linear degenerate curves.\n\n    const clockwise = this.clockwise;\n    const points = this.points;\n\n    if (this._linear) {\n      return this.translate(\n        this.normal(0),\n        distanceFn ? distanceFn(0) : d,\n        distanceFn ? distanceFn(1) : d\n      );\n    }\n\n    const r1 = distanceFn ? distanceFn(0) : d;\n    const r2 = distanceFn ? distanceFn(1) : d;\n    const v = [this.offset(0, 10), this.offset(1, 10)];\n    const np = [];\n    const o = utils.lli4(v[0], v[0].c, v[1], v[1].c);\n\n    if (!o) {\n      throw new Error(\"cannot scale this curve. Try reducing it first.\");\n    }\n\n    // move all points by distance 'd' wrt the origin 'o',\n    // and move end points by fixed distance along normal.\n    [0, 1].forEach(function (t) {\n      const p = (np[t * order] = utils.copy(points[t * order]));\n      p.x += (t ? r2 : r1) * v[t].n.x;\n      p.y += (t ? r2 : r1) * v[t].n.y;\n    });\n\n    if (!distanceFn) {\n      // move control points to lie on the intersection of the offset\n      // derivative vector, and the origin-through-control vector\n      [0, 1].forEach((t) => {\n        if (order === 2 && !!t) return;\n        const p = np[t * order];\n        const d = this.derivative(t);\n        const p2 = { x: p.x + d.x, y: p.y + d.y };\n        np[t + 1] = utils.lli4(p, p2, o, points[t + 1]);\n      });\n      return new Bezier(np);\n    }\n\n    // move control points by \"however much necessary to\n    // ensure the correct tangent to endpoint\".\n    [0, 1].forEach(function (t) {\n      if (order === 2 && !!t) return;\n      var p = points[t + 1];\n      var ov = {\n        x: p.x - o.x,\n        y: p.y - o.y,\n      };\n      var rc = distanceFn ? distanceFn((t + 1) / order) : d;\n      if (distanceFn && !clockwise) rc = -rc;\n      var m = sqrt(ov.x * ov.x + ov.y * ov.y);\n      ov.x /= m;\n      ov.y /= m;\n      np[t + 1] = {\n        x: p.x + rc * ov.x,\n        y: p.y + rc * ov.y,\n      };\n    });\n    return new Bezier(np);\n  }\n\n  outline(d1, d2, d3, d4) {\n    d2 = d2 === undefined ? d1 : d2;\n\n    if (this._linear) {\n      // TODO: find the actual extrema, because they might\n      //       be before the start, or past the end.\n\n      const n = this.normal(0);\n      const start = this.points[0];\n      const end = this.points[this.points.length - 1];\n      let s, mid, e;\n\n      if (d3 === undefined) {\n        d3 = d1;\n        d4 = d2;\n      }\n\n      s = { x: start.x + n.x * d1, y: start.y + n.y * d1 };\n      e = { x: end.x + n.x * d3, y: end.y + n.y * d3 };\n      mid = { x: (s.x + e.x) / 2, y: (s.y + e.y) / 2 };\n      const fline = [s, mid, e];\n\n      s = { x: start.x - n.x * d2, y: start.y - n.y * d2 };\n      e = { x: end.x - n.x * d4, y: end.y - n.y * d4 };\n      mid = { x: (s.x + e.x) / 2, y: (s.y + e.y) / 2 };\n      const bline = [e, mid, s];\n\n      const ls = utils.makeline(bline[2], fline[0]);\n      const le = utils.makeline(fline[2], bline[0]);\n      const segments = [ls, new Bezier(fline), le, new Bezier(bline)];\n      return new PolyBezier(segments);\n    }\n\n    const reduced = this.reduce(),\n      len = reduced.length,\n      fcurves = [];\n\n    let bcurves = [],\n      p,\n      alen = 0,\n      tlen = this.length();\n\n    const graduated = typeof d3 !== \"undefined\" && typeof d4 !== \"undefined\";\n\n    function linearDistanceFunction(s, e, tlen, alen, slen) {\n      return function (v) {\n        const f1 = alen / tlen,\n          f2 = (alen + slen) / tlen,\n          d = e - s;\n        return utils.map(v, 0, 1, s + f1 * d, s + f2 * d);\n      };\n    }\n\n    // form curve oulines\n    reduced.forEach(function (segment) {\n      const slen = segment.length();\n      if (graduated) {\n        fcurves.push(\n          segment.scale(linearDistanceFunction(d1, d3, tlen, alen, slen))\n        );\n        bcurves.push(\n          segment.scale(linearDistanceFunction(-d2, -d4, tlen, alen, slen))\n        );\n      } else {\n        fcurves.push(segment.scale(d1));\n        bcurves.push(segment.scale(-d2));\n      }\n      alen += slen;\n    });\n\n    // reverse the \"return\" outline\n    bcurves = bcurves\n      .map(function (s) {\n        p = s.points;\n        if (p[3]) {\n          s.points = [p[3], p[2], p[1], p[0]];\n        } else {\n          s.points = [p[2], p[1], p[0]];\n        }\n        return s;\n      })\n      .reverse();\n\n    // form the endcaps as lines\n    const fs = fcurves[0].points[0],\n      fe = fcurves[len - 1].points[fcurves[len - 1].points.length - 1],\n      bs = bcurves[len - 1].points[bcurves[len - 1].points.length - 1],\n      be = bcurves[0].points[0],\n      ls = utils.makeline(bs, fs),\n      le = utils.makeline(fe, be),\n      segments = [ls].concat(fcurves).concat([le]).concat(bcurves);\n\n    return new PolyBezier(segments);\n  }\n\n  outlineshapes(d1, d2, curveIntersectionThreshold) {\n    d2 = d2 || d1;\n    const outline = this.outline(d1, d2).curves;\n    const shapes = [];\n    for (let i = 1, len = outline.length; i < len / 2; i++) {\n      const shape = utils.makeshape(\n        outline[i],\n        outline[len - i],\n        curveIntersectionThreshold\n      );\n      shape.startcap.virtual = i > 1;\n      shape.endcap.virtual = i < len / 2 - 1;\n      shapes.push(shape);\n    }\n    return shapes;\n  }\n\n  intersects(curve, curveIntersectionThreshold) {\n    if (!curve) return this.selfintersects(curveIntersectionThreshold);\n    if (curve.p1 && curve.p2) {\n      return this.lineIntersects(curve);\n    }\n    if (curve instanceof Bezier) {\n      curve = curve.reduce();\n    }\n    return this.curveintersects(\n      this.reduce(),\n      curve,\n      curveIntersectionThreshold\n    );\n  }\n\n  lineIntersects(line) {\n    const mx = min(line.p1.x, line.p2.x),\n      my = min(line.p1.y, line.p2.y),\n      MX = max(line.p1.x, line.p2.x),\n      MY = max(line.p1.y, line.p2.y);\n    return utils.roots(this.points, line).filter((t) => {\n      var p = this.get(t);\n      return utils.between(p.x, mx, MX) && utils.between(p.y, my, MY);\n    });\n  }\n\n  selfintersects(curveIntersectionThreshold) {\n    // \"simple\" curves cannot intersect with their direct\n    // neighbour, so for each segment X we check whether\n    // it intersects [0:x-2][x+2:last].\n\n    const reduced = this.reduce(),\n      len = reduced.length - 2,\n      results = [];\n\n    for (let i = 0, result, left, right; i < len; i++) {\n      left = reduced.slice(i, i + 1);\n      right = reduced.slice(i + 2);\n      result = this.curveintersects(left, right, curveIntersectionThreshold);\n      results.push(...result);\n    }\n    return results;\n  }\n\n  curveintersects(c1, c2, curveIntersectionThreshold) {\n    const pairs = [];\n    // step 1: pair off any overlapping segments\n    c1.forEach(function (l) {\n      c2.forEach(function (r) {\n        if (l.overlaps(r)) {\n          pairs.push({ left: l, right: r });\n        }\n      });\n    });\n    // step 2: for each pairing, run through the convergence algorithm.\n    let intersections = [];\n    pairs.forEach(function (pair) {\n      const result = utils.pairiteration(\n        pair.left,\n        pair.right,\n        curveIntersectionThreshold\n      );\n      if (result.length > 0) {\n        intersections = intersections.concat(result);\n      }\n    });\n    return intersections;\n  }\n\n  arcs(errorThreshold) {\n    errorThreshold = errorThreshold || 0.5;\n    return this._iterate(errorThreshold, []);\n  }\n\n  _error(pc, np1, s, e) {\n    const q = (e - s) / 4,\n      c1 = this.get(s + q),\n      c2 = this.get(e - q),\n      ref = utils.dist(pc, np1),\n      d1 = utils.dist(pc, c1),\n      d2 = utils.dist(pc, c2);\n    return abs(d1 - ref) + abs(d2 - ref);\n  }\n\n  _iterate(errorThreshold, circles) {\n    let t_s = 0,\n      t_e = 1,\n      safety;\n    // we do a binary search to find the \"good `t` closest to no-longer-good\"\n    do {\n      safety = 0;\n\n      // step 1: start with the maximum possible arc\n      t_e = 1;\n\n      // points:\n      let np1 = this.get(t_s),\n        np2,\n        np3,\n        arc,\n        prev_arc;\n\n      // booleans:\n      let curr_good = false,\n        prev_good = false,\n        done;\n\n      // numbers:\n      let t_m = t_e,\n        prev_e = 1,\n        step = 0;\n\n      // step 2: find the best possible arc\n      do {\n        prev_good = curr_good;\n        prev_arc = arc;\n        t_m = (t_s + t_e) / 2;\n        step++;\n\n        np2 = this.get(t_m);\n        np3 = this.get(t_e);\n\n        arc = utils.getccenter(np1, np2, np3);\n\n        //also save the t values\n        arc.interval = {\n          start: t_s,\n          end: t_e,\n        };\n\n        let error = this._error(arc, np1, t_s, t_e);\n        curr_good = error <= errorThreshold;\n\n        done = prev_good && !curr_good;\n        if (!done) prev_e = t_e;\n\n        // this arc is fine: we can move 'e' up to see if we can find a wider arc\n        if (curr_good) {\n          // if e is already at max, then we're done for this arc.\n          if (t_e >= 1) {\n            // make sure we cap at t=1\n            arc.interval.end = prev_e = 1;\n            prev_arc = arc;\n            // if we capped the arc segment to t=1 we also need to make sure that\n            // the arc's end angle is correct with respect to the bezier end point.\n            if (t_e > 1) {\n              let d = {\n                x: arc.x + arc.r * cos(arc.e),\n                y: arc.y + arc.r * sin(arc.e),\n              };\n              arc.e += utils.angle({ x: arc.x, y: arc.y }, d, this.get(1));\n            }\n            break;\n          }\n          // if not, move it up by half the iteration distance\n          t_e = t_e + (t_e - t_s) / 2;\n        } else {\n          // this is a bad arc: we need to move 'e' down to find a good arc\n          t_e = t_m;\n        }\n      } while (!done && safety++ < 100);\n\n      if (safety >= 100) {\n        break;\n      }\n\n      // console.log(\"L835: [F] arc found\", t_s, prev_e, prev_arc.x, prev_arc.y, prev_arc.s, prev_arc.e);\n\n      prev_arc = prev_arc ? prev_arc : arc;\n      circles.push(prev_arc);\n      t_s = prev_e;\n    } while (t_e < 1);\n    return circles;\n  }\n}\n\nexport { Bezier };\n","/**\n * Acknowledgements: much of the work here is an adapation from Daniel Shiffman's excellent _The Nature of Code_ website.\n */\nimport { Points, Polar } from '../geometry/index.js';\nimport { type Point } from '../geometry/Point.js';\nimport { clamp } from '../data/Clamp.js';\nimport { interpolateAngle } from '../data/Interpolate.js';\nimport { type Rect, getEdgeX, getEdgeY } from '../geometry/Rect.js';\n\n/**\n * Logic for applying mass\n */\nexport type MassApplication = `dampen` | `multiply` | `ignored`;\n\n/**\n * Basic properties of a thing that can be\n * affected by forces\n */\nexport type ForceAffected = {\n  /**\n   * Position. Probably best to use relative coordinates\n   */\n  readonly position?: Point;\n  /**\n   * Velocity vector.\n   * Probably don't want to assign this yourself, but rather have it computed based on acceleration and applied forces\n   */\n  readonly velocity?: Point;\n  /**\n   * Acceleration vector. Most applied forces will alter the acceleration, culminating in a new velocity being set and the\n   * acceleraton value zeroed\n   */\n  readonly acceleration?: Point;\n  /**\n   * Mass. The unit is undefined, again best to think of this being on a 0..1 scale. Mass is particularly important\n   * for the attraction/repulsion force, but other forces can incorporate mass too.\n   */\n  readonly mass?: number;\n\n  readonly angularAcceleration?: number;\n\n  readonly angularVelocity?: number;\n\n  readonly angle?: number;\n};\n\n/**\n * A function that updates values of a thing.\n *\n * These can be created using the xxxForce functions, eg {@link attractionForce}, {@link accelerationForce}, {@link magnitudeForce}, {@link velocityForce}\n */\nexport type ForceFn = (t: ForceAffected) => ForceAffected;\n\n/**\n * A vector to apply to acceleration or a force function\n */\nexport type ForceKind = Points.Point | ForceFn | null;\n\n/**\n * Throws an error if `t` is not of the `ForceAffected` shape.\n * @param t\n * @param name\n */\nexport const guard = (t: ForceAffected, name: string = `t`) => {\n  if (t === undefined) {\n    throw new Error(`Parameter ${name} is undefined. Expected ForceAffected`);\n  }\n  if (t === null) {\n    throw new Error(`Parameter ${name} is null. Expected ForceAffected`);\n  }\n  if (typeof t !== `object`) {\n    throw new Error(\n      `Parameter ${name} is type ${typeof t}. Expected object of shape ForceAffected`\n    );\n  }\n};\n\n/**\n * `constrainBounce` yields a function that affects `t`'s position and velocity such that it\n * bounces within bounds.\n *\n * ```js\n * // Setup bounce with area constraints\n * // Reduce velocity by 10% with each impact\n * const b = constrainBounce({ width:200, height:500 }, 0.9);\n *\n * // Thing\n * const t = {\n *  position: { x: 50,  y: 50 },\n *  velocity: { x: 0.3, y: 0.01 }\n * };\n *\n * // `b` returns an altereted version of `t`, with the\n * // bounce logic applied.\n * const bounced = b(t);\n * ```\n *\n * `dampen` parameter allows velocity to be dampened with each bounce. A value\n * of 0.9 for example reduces velocity by 10%. A value of 1.1 will increase velocity by\n * 10% with each bounce.\n * @param bounds Constraints of area\n * @params dampen How much to dampen velocity by. Defaults to 1 meaning there is no damping.\n * @returns A function that can perform bounce logic\n */\nexport const constrainBounce = (\n  bounds: Rect = { width: 1, height: 1 },\n  dampen = 1\n) => {\n  const minX = getEdgeX(bounds, `left`);\n  const maxX = getEdgeX(bounds, `right`);\n  const minY = getEdgeY(bounds, `top`);\n  const maxY = getEdgeY(bounds, `bottom`);\n\n  return (t: ForceAffected): ForceAffected => {\n    const position = computePositionFromVelocity(\n      t.position ?? Points.Empty,\n      t.velocity ?? Points.Empty\n    );\n    //eslint-disable-next-line functional/no-let\n    let velocity = t.velocity ?? Points.Empty;\n    //eslint-disable-next-line functional/no-let\n    let { x, y } = position;\n\n    if (x > maxX) {\n      x = maxX;\n      velocity = Points.invert(Points.multiply(velocity, dampen), `x`);\n    } else if (x < minX) {\n      x = minX;\n      velocity = Points.invert(Points.multiply(velocity, dampen), `x`);\n    }\n\n    if (y > maxY) {\n      y = maxY;\n      velocity = Points.multiply(Points.invert(velocity, `y`), dampen);\n    } else if (position.y < minY) {\n      y = minY;\n      velocity = Points.invert(Points.multiply(velocity, dampen), `y`);\n    }\n\n    return Object.freeze({\n      ...t,\n      position: { x, y },\n      velocity,\n    });\n  };\n};\n\n/**\n * For a given set of attractors, returns a function that a sets acceleration of attractee.\n * Keep note though that this bakes-in the values of the attractor, it won't reflect changes to their state. For dynamic\n * attractors, it might be easier to use `computeAttractionForce`.\n *\n * @example Force\n * ```js\n * const f = Forces.attractionForce(sun, gravity);\n * earth = Forces.apply(earth, f);\n * ```\n *\n * @example Everything mutually attracted\n * ```js\n * // Create a force with all things as attractors.\n * const f = Forces.attractionForce(things, gravity);\n * // Apply force to all things.\n * // The function returned by attractionForce will automatically ignore self-attraction\n * things = things.map(a => Forces.apply(a, f));\n * ```\n * @param attractors\n * @param gravity\n * @param distanceRange\n * @returns\n */\nexport const attractionForce =\n  (\n    attractors: readonly ForceAffected[],\n    gravity: number,\n    distanceRange: { readonly min?: number; readonly max?: number } = {}\n  ) =>\n  (attractee: ForceAffected): ForceAffected => {\n    //eslint-disable-next-line functional/no-let\n    let accel = attractee.acceleration ?? Points.Empty;\n    attractors.forEach((a) => {\n      if (a === attractee) return;\n\n      const f = computeAttractionForce(a, attractee, gravity, distanceRange);\n      accel = Points.sum(accel, f);\n    });\n    return {\n      ...attractee,\n      acceleration: accel,\n    };\n  };\n\n/**\n * Computes the attraction force between two things.\n * Value for `gravity` will depend on what range is used for `mass`. It's probably a good idea\n * to keep mass to mean something relative - ie 1 is 'full' mass, and adjust the `gravity`\n * value until it behaves as you like. Keeping mass in 0..1 range makes it easier to apply to\n * visual properties later.\n *\n * @example Attractee and attractor, gravity 0.005\n * ```js\n * const attractor = { position: { x:0.5, y:0.5 }, mass: 1 };\n * const attractee = { position: Points.random(), mass: 0.01 };\n * attractee = Forces.apply(attractee, Forces.computeAttractionForce(attractor, attractee, 0.005));\n * ```\n *\n * @example Many attractees for one attractor, gravity 0.005\n * ```js\n * attractor =  { position: { x:0.5, y:0.5 }, mass: 1 };\n * attractees = attractees.map(a => Forces.apply(a, Forces.computeAttractionForce(attractor, a, 0.005)));\n * ```\n *\n * @example Everything mutually attracted\n * ```js\n * // Create a force with all things as attractors.\n * const f = Forces.attractionForce(things, gravity);\n * // Apply force to all things.\n * // The function returned by attractionForce will automatically ignore self-attraction\n * things = things.map(a => Forces.apply(a, f));\n * ```\n *\n * `attractor` thing attracting (eg, earth)\n * `attractee` thing being attracted (eg. satellite)\n *\n *\n * `gravity` will have to be tweaked to taste.\n * `distanceRange` clamps the computed distance. This affects how tightly the particles will orbit and can also determine speed. By default it is 0.001-0.7\n * @param attractor Attractor (eg earth)\n * @param attractee Attractee (eg satellite)\n * @param gravity Gravity constant\n * @param distanceRange Min/max that distance is clamped to.\n * @returns\n */\nexport const computeAttractionForce = (\n  attractor: ForceAffected,\n  attractee: ForceAffected,\n  gravity: number,\n  distanceRange: { readonly min?: number; readonly max?: number } = {}\n): Points.Point => {\n  if (attractor.position === undefined) {\n    throw new Error(`attractor.position not set`);\n  }\n  if (attractee.position === undefined) {\n    throw new Error(`attractee.position not set`);\n  }\n\n  const distRangeMin = distanceRange.min ?? 0.01;\n  const distRangeMax = distanceRange.max ?? 0.7;\n\n  // Vector between objects\n  const f = Points.normalise(\n    Points.subtract(attractor.position, attractee.position)\n  );\n\n  // Distance\n  const d = clamp(Points.distance(f), distRangeMin, distRangeMax);\n\n  // Multiply vector by gravity, scaled by mass of things and distance\n  return Points.multiply(\n    f,\n    (gravity * (attractor.mass ?? 1) * (attractee.mass ?? 1)) / (d * d)\n  );\n};\n\nexport type TargetOpts = {\n  /**\n   * Acceleration scaling. Defaults to 0.001\n   */\n  readonly diminishBy?: number;\n  /**\n   * If distance is less than this range, don't move.\n   * If undefined (default), will try to get an exact position\n   */\n  readonly range?: Points.Point;\n};\n/**\n * A force that moves a thing toward `targetPos`.\n *\n * ```js\n * const t = Forces.apply(t, Forces.targetForce(targetPos));\n * ```\n * @param targetPos\n * @param diminishBy Scales acceleration. Defaults to 0.001.\n * @returns\n */\nexport const targetForce = (targetPos: Points.Point, opts: TargetOpts = {}) => {\n  const fn = (t: ForceAffected): ForceAffected => {\n    const accel = computeAccelerationToTarget(\n      targetPos,\n      t.position ?? { x: 0.5, y: 0.5 },\n      opts\n    );\n    return {\n      ...t,\n      acceleration: Points.sum(t.acceleration ?? Points.Empty, accel),\n    };\n  };\n  return fn;\n};\n\n/**\n * Returns `pt` with x and y set to `setpoint` if either's absolute value is below `v`\n * @param pt\n * @param v\n * @returns\n */\n// const roundTo = (pt: Point, v: number, setpoint: number): Point => {\n//   const x = Math.abs(pt.x);\n//   const y = Math.abs(pt.y);\n\n//   if (x < v && y < v) return { x: setpoint, y: setpoint };\n//   if (x < v) return { x: setpoint, y: pt.y };\n//   if (y < v) return { x: pt.x, y: setpoint };\n//   return pt;\n// };\n\n/**\n * Apply a series of force functions or forces to `t`. Null/undefined entries are skipped silently.\n * It also updates the velocity and position of the returned version of `t`.\n *\n * ```js\n * // Wind adds acceleration. Force is dampened by mass\n * const wind = Forces.accelerationForce({ x: 0.00001, y: 0 }, `dampen`);\n *\n * // Gravity adds acceleration. Force is magnified by mass\n * const gravity = Forces.accelerationForce({ x: 0, y: 0.0001 }, `multiply`);\n *\n * // Friction is calculated based on velocity. Force is magnified by mass\n * const friction = Forces.velocityForce(0.00001, `multiply`);\n *\n *  // Flip movement velocity if we hit a wall. And dampen it by 10%\n * const bouncer = Forces.constrainBounce({ width: 1, height: 1 }, 0.9);\n *\n * let t = {\n *  position: Points.random(),\n *  mass: 0.1\n * };\n *\n * // Apply list of forces, returning a new version of the thing\n * t = Forces.apply(t,\n *   gravity,\n *   wind,\n *   friction,\n *   bouncer\n * );\n * ```\n */\nexport const apply = (\n  t: ForceAffected,\n  ...accelForces: readonly ForceKind[]\n): ForceAffected => {\n  if (t === undefined) throw new Error(`t parameter is undefined`);\n\n  accelForces.forEach((f) => {\n    if (f === null || f === undefined) return;\n    if (typeof f === `function`) {\n      t = f(t);\n    } else {\n      t = {\n        ...t,\n        acceleration: Points.sum(t.acceleration ?? Points.Empty, f),\n      };\n    }\n  });\n\n  // Integate velocity from acceleration\n  const velo = computeVelocity(\n    t.acceleration ?? Points.Empty,\n    t.velocity ?? Points.Empty\n  );\n\n  // Compute position\n  const pos = computePositionFromVelocity(t.position ?? Points.Empty, velo);\n\n  const ff: ForceAffected = {\n    ...t,\n    position: pos,\n    velocity: velo,\n    // Clear accel, because it has been integrated into velocity\n    acceleration: Points.Empty,\n  };\n  return ff;\n};\n\n/**\n * Apples `vector` to acceleration, scaling according to mass, based on the `mass` option.\n * It returns a function which can later be applied to a thing.\n *\n * ```js\n * import { Forces } from \"https://unpkg.com/ixfx/dist/modulation.js\"\n * // Acceleration vector of (0.1, 0), ie moving straight on horizontal axis\n * const f = Forces.accelerationForce({ x:0.1, y:0 }, `dampen`);\n *\n * // Thing to move\n * let t = { position: ..., acceleration: ... }\n *\n * // Apply force\n * t = f(t);\n * ```\n * @param vector\n * @returns Force function\n */\nexport const accelerationForce =\n  (vector: Points.Point, mass: MassApplication = `ignored`): ForceFn =>\n  (t: ForceAffected) =>\n    Object.freeze({\n      ...t,\n      acceleration: massApplyAccel(vector, t, mass), //Points.sum(t.acceleration ?? Points.Empty, op(t.mass ?? 1))\n    });\n\n/**\n * Returns an acceleration vector with mass either dampening or multiplying it.\n * The passed-in `thing` is not modified.\n *\n * ```js\n * // Initial acceleration vector\n * const accel = { x: 0.1, y: 0};\n *\n * // Thing being moved\n * const thing = { mass: 0.5, position: ..., acceleration: ... }\n *\n * // New acceleration vector, affected by mass of `thing`\n * const accelWithMass = massApplyAccel(accel, thing, `dampen`);\n * ```\n * Mass of thing can be factored in, according to `mass` setting. Use `dampen`\n * to reduce acceleration with greater mass of thing. Use `multiply` to increase\n * the effect of acceleration with a greater mass of thing. `ignored` means\n * mass is not taken into account.\n *\n * If `t` has no mass, the `mass` setting is ignored.\n *\n * This function is used internally by the predefined forces.\n *\n * @param vector Vector force\n * @param thing Thing being affected\n * @param mass How to factor in mass of thing (default ignored)\n * @returns Acceleration vector\n */\nconst massApplyAccel = (\n  vector: Points.Point,\n  thing: ForceAffected,\n  mass: MassApplication = `ignored`\n) => {\n  //eslint-disable-next-line functional/no-let\n  let op;\n  if (mass === `dampen`) {\n    op = (mass: number) => Points.divide(vector, mass, mass);\n  } else if (mass === `multiply`) {\n    op = (mass: number) => Points.multiply(vector, mass, mass);\n  } else if (mass === `ignored`) {\n    op = (_mass: number) => vector;\n  } else {\n    throw new Error(\n      `Unknown 'mass' parameter '${mass}. Expected 'dampen', 'multiply' or 'ignored'`\n    );\n  }\n  return Points.sum(thing.acceleration ?? Points.Empty, op(thing.mass ?? 1));\n  // if (t.mass) {\n  //   if (dampen) return Points.sum(t.acceleration ?? Points.Empty, Points.divide(v, t.mass ?? 1));\n  //   else return Points.sum(t.acceleration ?? Points.Empty, Points.multiply(v, t.mass ?? 1));\n  // }\n  // return v;\n};\n\n/**\n * A force based on the square of the thing's velocity.\n * It's like {@link velocityForce}, but here the velocity has a bigger impact.\n *\n * ```js\n * const thing = {\n *  position: { x: 0.5, y:0.5 },\n *  velocity: { x: 0.001, y:0 }\n * };\n * const drag = magnitudeForce(0.1);\n *\n * // Apply drag force to thing, returning result\n * const t = Forces.apply(thing, drag);\n * ```\n * @param force Force value\n * @param mass How to factor in mass\n * @returns Function that computes force\n */\nexport const magnitudeForce =\n  (force: number, mass: MassApplication = `ignored`): ForceFn =>\n  (t: ForceAffected): ForceAffected => {\n    if (t.velocity === undefined) return t;\n\n    const mag = Points.distance(Points.normalise(t.velocity));\n    const magSq = force * mag * mag;\n    const vv = Points.multiply(Points.invert(t.velocity), magSq);\n    return Object.freeze({\n      ...t,\n      acceleration: massApplyAccel(vv, t, mass),\n    });\n  };\n\n/**\n * Null force does nothing\n * @returns A force that does nothing\n */\nexport const nullForce = (t: ForceAffected): ForceAffected => t;\n\n/**\n * Force calculated from velocity of object. Reads velocity and influences acceleration.\n *\n * ```js\n * let t = { position: Points.random(), mass: 0.1 };\n * const friction = velocityForce(0.1, `dampen`);\n *\n * // Apply force, updating position and velocity\n * t = Forces.apply(t, friction);\n * ```\n * @param force Force\n * @param mass How to factor in mass\n * @returns Function that computes force\n */\nexport const velocityForce = (\n  force: number,\n  mass: MassApplication\n): ForceFn => {\n  // Invert velocity and then multiply by force\n  const pipeline = Points.pipeline(\n    // Points.normalise,\n    Points.invert,\n    (v: Point) => Points.multiply(v, force)\n  );\n\n  return (t: ForceAffected): ForceAffected => {\n    if (t.velocity === undefined) return t;\n\n    // Apply pipeline\n    const v = pipeline(t.velocity);\n    return Object.freeze({\n      ...t,\n      acceleration: massApplyAccel(v, t, mass),\n    });\n  };\n};\n\n/**\n * Sets angle, angularVelocity and angularAcceleration based on\n *  angularAcceleration, angularVelocity, angle\n * @returns\n */\nexport const angularForce = () => (t: ForceAffected) => {\n  const acc = t.angularAcceleration ?? 0;\n  const vel = t.angularVelocity ?? 0;\n  const angle = t.angle ?? 0;\n\n  const v = vel + acc;\n  const a = angle + v;\n\n  return Object.freeze({\n    ...t,\n    angle: a,\n    angularVelocity: v,\n    angularAcceleration: 0,\n  });\n};\n\n// export const positionFromAngleForce = () => (t:ForceAffected) => {\n//   return Object.freeze({\n//     ...t,\n//     position: computePositionFromAngle()\n//   });\n// };\n\n/**\n * Yields a force function that applies the thing's acceleration.x to its angular acceleration.\n * @param scaling Use this to scale the accel.x value. Defaults to 20 (ie accel.x*20). Adjust if rotation is too much or too little\n * @returns\n */\nexport const angleFromAccelerationForce =\n  (scaling: number = 20) =>\n  (t: ForceAffected) => {\n    const accel = t.acceleration ?? Points.Empty;\n    return Object.freeze({\n      ...t,\n      angularAcceleration: accel.x * scaling,\n    });\n  };\n\n/**\n * Yields a force function that applies the thing's velocity to its angular acceleration.\n * This will mean it points in the direction of travel.\n * @param interpolateAmt If provided, the angle will be interpolated toward by this amount. Defaults to 1, no interpolation\n * @returns\n */\nexport const angleFromVelocityForce =\n  (interpolateAmt: number = 1) =>\n  (t: ForceAffected) => {\n    const a = Points.angle(t.velocity ?? Points.Empty);\n    return Object.freeze({\n      ...t,\n      angle:\n        interpolateAmt < 1\n          ? interpolateAngle(interpolateAmt, t.angle ?? 0, a)\n          : a,\n    });\n  };\n\n/**\n * Spring force\n *\n *  * ```js\n * // End of spring that moves\n * let thing = {\n *   position: { x: 1, y: 0.5 },\n *   mass: 0.1\n * };\n *\n * // Anchored other end of spring\n * const pinnedAt = {x: 0.5, y: 0.5};\n *\n * // Create force: length of 0.4\n * const springForce = Forces.springForce(pinnedAt, 0.4);\n *\n * continuously(() => {\n *  // Apply force\n *  thing = Forces.apply(thing, springForce);\n * }).start();\n * ```\n * [Read more](https://www.joshwcomeau.com/animation/a-friendly-introduction-to-spring-physics/)\n *\n * @param pinnedAt Anchored end of the spring\n * @param restingLength Length of spring-at-rest (default: 0.5)\n * @param k Spring stiffness (default: 0.0002)\n * @param damping Damping factor to apply, so spring slows over time. (default: 0.995)\n * @returns\n */\nexport const springForce =\n  (\n    pinnedAt: Points.Point,\n    restingLength: number = 0.5,\n    k = 0.0002,\n    damping = 0.999\n  ) =>\n  (t: ForceAffected): ForceAffected => {\n    const dir = Points.subtract(t.position ?? Points.Empty, pinnedAt);\n    const mag = Points.distance(dir);\n    const stretch = Math.abs(restingLength - mag);\n\n    const f = Points.pipelineApply(dir, Points.normalise, (p) =>\n      Points.multiply(p, -k * stretch)\n    );\n\n    const accel = massApplyAccel(f, t, `dampen`);\n    const velo = computeVelocity(\n      accel ?? Points.Empty,\n      t.velocity ?? Points.Empty\n    );\n    const veloDamped = Points.multiply(velo, damping, damping);\n    return {\n      ...t,\n      velocity: veloDamped,\n      acceleration: Points.Empty,\n    };\n  };\n\n/**\n * Pendulum force options\n */\nexport type PendulumOpts = {\n  /**\n   * Length of 'string' thing is hanging from. If\n   * undefined, the current length between thing and\n   * pinnedAt is used.\n   */\n  readonly length?: number;\n  /**\n   * Max speed of swing. Slower speed can reach equilibrium faster, since it\n   * might not swing past resting point.\n   * Default 0.001.\n   */\n  readonly speed?: number;\n  /**\n   * Damping, how much to reduce velocity. Default 0.995 (ie 0.5% loss)\n   */\n  readonly damping?: number;\n};\n/**\n * The pendulum force swings something back and forth.\n *\n * ```js\n * // Swinger\n * let thing = {\n *   position: { x: 1, y: 0.5 },\n *   mass: 0.1\n * };\n *\n * // Position thing swings from (middle of screen)\n * const pinnedAt = {x: 0.5, y: 0.5};\n *\n * // Create force: length of 0.4\n * const pendulumForce = Forces.pendulumForce(pinnedAt, { length: 0.4 });\n *\n * continuously(() => {\n *  // Apply force\n *  // Returns a new thing with recalculated angularVelocity, angle and position.\n *  thing = Forces.apply(thing, pendulumForce);\n * }).start();\n * ```\n *\n * [Read more](https://natureofcode.com/book/chapter-3-oscillation/)\n *\n * @param pinnedAt Location to swing from (x:0.5, y:0.5 default)\n * @param opts Options\n * @returns\n */\nexport const pendulumForce =\n  (pinnedAt: Points.Point = { x: 0.5, y: 0 }, opts: PendulumOpts = {}) =>\n  (t: ForceAffected): ForceAffected => {\n    const length =\n      opts.length ?? Points.distance(pinnedAt, t.position ?? Points.Empty);\n    const speed = opts.speed ?? 0.001;\n    const damping = opts.damping ?? 0.995;\n\n    //eslint-disable-next-line functional/no-let\n    let angle = t.angle;\n    if (angle === undefined) {\n      if (t.position) {\n        angle = Points.angle(pinnedAt, t.position) - Math.PI / 2;\n      } else {\n        angle = 0; // Position wherever\n      }\n    }\n    const accel = ((-1 * speed) / length) * Math.sin(angle);\n    const v = (t.angularVelocity ?? 0) + accel;\n    angle += v;\n\n    return Object.freeze({\n      angularVelocity: v * damping,\n      angle,\n      position: computePositionFromAngle(length, angle + Math.PI / 2, pinnedAt),\n    });\n  };\n\n/**\n * Compute velocity based on acceleration and current velocity\n * @param acceleration Acceleration\n * @param velocity Velocity\n * @param velocityMax If specified, velocity will be capped at this value\n * @returns\n */\nexport const computeVelocity = (\n  acceleration: Points.Point,\n  velocity: Points.Point,\n  velocityMax?: number\n): Points.Point => {\n  const p = Points.sum(velocity, acceleration);\n  if (velocityMax !== undefined) return Points.clampMagnitude(p, velocityMax);\n  else return p;\n};\n\n/**\n * Returns the acceleration to get from `currentPos` to `targetPos`.\n *\n * @example Barebones usage:\n * ```js\n * const accel = Forces.computeAccelerationToTarget(targetPos, currentPos);\n * const vel = Forces.computeVelocity(accel, currentVelocity);\n *\n * // New position:\n * const pos = Points.sum(currentPos, vel);\n * ```\n *\n * @example Implementation:\n * ```js\n * const direction = Points.subtract(targetPos, currentPos);\n * const accel = Points.multiply(direction, diminishBy);\n * ```\n * @param currentPos Current position\n * @param targetPos Target position\n * @param opts Options\n * @returns\n */\nexport const computeAccelerationToTarget = (\n  targetPos: Points.Point,\n  currentPos: Points.Point,\n  opts: TargetOpts = {}\n) => {\n  const diminishBy = opts.diminishBy ?? 0.001;\n\n  // Compare to current position of thing to get vector direction\n  const direction = Points.subtract(targetPos, currentPos);\n\n  if (opts.range) {\n    // If direction is less than range, return { x: 0, y: 0}\n    if (Points.compare(Points.abs(direction), opts.range) === -2) {\n      return Points.Empty;\n    }\n  }\n\n  // Diminish vector to make a meaningful acceleration\n  return Points.multiply(direction, diminishBy);\n};\n\n/**\n * Compute a new position based on existing position and velocity vector\n * @param position Position Current position\n * @param velocity Velocity vector\n * @returns Point\n */\nexport const computePositionFromVelocity = (\n  position: Points.Point,\n  velocity: Points.Point\n): Points.Point => Points.sum(position, velocity);\n\n/**\n * Compute a position based on distance and angle from origin\n * @param distance Distance from origin\n * @param angleRadians Angle, in radians from origin\n * @param origin Origin point\n * @returns Point\n */\nexport const computePositionFromAngle = (\n  distance: number,\n  angleRadians: number,\n  origin: Points.Point\n) => Polar.toCartesian(distance, angleRadians, origin);\n\nconst _angularForce = angularForce();\nconst _angleFromAccelerationForce = angleFromAccelerationForce();\n\n/**\n * A force that orients things according to direction of travel.\n *\n * Under the hood, it applies:\n * * angularForce,\n * * angleFromAccelerationForce, and\n * * angleFromVelocityForce\n * @param interpolationAmt\n * @returns\n */\nexport const orientationForce = (interpolationAmt = 0.5): ForceFn => {\n  const angleFromVel = angleFromVelocityForce(interpolationAmt);\n\n  return (t: ForceAffected) => {\n    t = _angularForce(t);\n    t = _angleFromAccelerationForce(t);\n    t = angleFromVel(t);\n    return t;\n  };\n};\n","import { Points, Lines } from './index.js';\nimport { type RandomSource, defaultRandom } from '../Random.js';\nimport { type CirclePositioned, isCirclePositioned } from './Circle.js';\nimport * as Intersects from './Intersects.js';\nimport type { CardinalDirection } from './Grid.js';\n\nexport type Rect = {\n  readonly width: number;\n  readonly height: number;\n};\nexport type RectPositioned = Points.Point & Rect;\n\nexport const empty = Object.freeze({ width: 0, height: 0 });\nexport const emptyPositioned = Object.freeze({\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n});\n\nexport const placeholder = Object.freeze({\n  width: Number.NaN,\n  height: Number.NaN,\n});\nexport const placeholderPositioned = Object.freeze({\n  x: Number.NaN,\n  y: Number.NaN,\n  width: Number.NaN,\n  height: Number.NaN,\n});\n\nexport const isEmpty = (rect: Rect): boolean =>\n  rect.width === 0 && rect.height === 0;\nexport const isPlaceholder = (rect: Rect): boolean =>\n  Number.isNaN(rect.width) && Number.isNaN(rect.height);\n\n/**\n * Returns _true_ if `p` has a position (x,y)\n * @param p Point, Rect or RectPositiond\n * @returns\n */\nexport const isPositioned = (\n  p: Points.Point | Rect | RectPositioned\n): p is Points.Point =>\n  (p as Points.Point).x !== undefined && (p as Points.Point).y !== undefined;\n\n/**\n * Returns _true_ if `p` has width and height.\n * @param p\n * @returns\n */\nexport const isRect = (p: number | unknown): p is Rect => {\n  if (p === undefined) return false;\n  if ((p as Rect).width === undefined) return false;\n  if ((p as Rect).height === undefined) return false;\n  return true;\n};\n\n/**\n * Returns _true_ if `p` is a positioned rectangle\n * Having width, height, x and y properties.\n * @param p\n * @returns\n */\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const isRectPositioned = (\n  p: Rect | RectPositioned | any\n): p is RectPositioned => isRect(p) && isPositioned(p);\n\n/**\n * Initialise a rectangle based on the width and height of a HTML element.\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\"\n * Rects.fromElement(document.querySelector(`body`));\n * ```\n * @param el\n * @returns\n */\nexport const fromElement = (el: HTMLElement): Rect => ({\n  width: el.clientWidth,\n  height: el.clientHeight,\n});\n\n/**\n * Returns _true_ if the width & height of the two rectangles is the same.\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * const rectA = { width: 10, height: 10, x: 10, y: 10 };\n * const rectB = { width: 10, height: 10, x: 20, y: 20 };\n *\n * // True, even though x,y are different\n * Rects.isEqualSize(rectA, rectB);\n *\n * // False, because coordinates are different\n * Rects.isEqual(rectA, rectB)\n * ```\n * @param a\n * @param b\n * @returns\n */\nexport const isEqualSize = (a: Rect, b: Rect): boolean => {\n  if (a === undefined) throw new Error(`a undefined`);\n  if (b === undefined) throw new Error(`b undefined`);\n  return a.width === b.width && a.height === b.height;\n};\n\n/**\n * Returns a rectangle from width, height\n * ```js\n * const r = Rects.fromNumbers(100, 200);\n * // {width: 100, height: 200}\n * ```\n *\n * Use {@link toArray} for the opposite conversion.\n *\n * @param width\n * @param height\n */\nexport function fromNumbers(width: number, height: number): Rect;\n\n/**\n * Returns a rectangle from x,y,width,height\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * const r = Rects.fromNumbers(10, 20, 100, 200);\n * // {x: 10, y: 20, width: 100, height: 200}\n * ```\n *\n * Use the spread operator (...) if the source is an array:\n * ```js\n * const r3 = Rects.fromNumbers(...[10, 20, 100, 200]);\n * ```\n *\n * Use {@link toArray} for the opposite conversion.\n *\n * @param x\n * @param y\n * @param width\n * @param height\n */\nexport function fromNumbers(\n  x: number,\n  y: number,\n  width: number,\n  height: number\n): RectPositioned;\n\n/**\n * Returns a rectangle from a series of numbers: x, y, width, height OR width, height\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * const r1 = Rects.fromNumbers(100, 200);\n * // {width: 100, height: 200}\n *\n * const r2 = Rects.fromNumbers(10, 20, 100, 200);\n * // {x: 10, y: 20, width: 100, height: 200}\n * ```\n * Use the spread operator (...) if the source is an array:\n *\n * ```js\n * const r3 = Rects.fromNumbers(...[10, 20, 100, 200]);\n * ```\n *\n * Use {@link toArray} for the opposite conversion.\n *\n * @see toArray\n * @param xOrWidth\n * @param yOrHeight\n * @param width\n * @param height\n * @returns\n */\n//eslint-disable-next-line func-style\nexport function fromNumbers(\n  xOrWidth: number,\n  yOrHeight: number,\n  width?: number,\n  height?: number\n): Rect | RectPositioned {\n  if (width === undefined || height === undefined) {\n    if (typeof xOrWidth !== `number`) throw new Error(`width is not an number`);\n    if (typeof yOrHeight !== `number`) {\n      throw new Error(`height is not an number`);\n    }\n    return Object.freeze({ width: xOrWidth, height: yOrHeight });\n  }\n  if (typeof xOrWidth !== `number`) throw new Error(`x is not an number`);\n  if (typeof yOrHeight !== `number`) throw new Error(`y is not an number`);\n  if (typeof width !== `number`) throw new Error(`width is not an number`);\n  if (typeof height !== `number`) throw new Error(`height is not an number`);\n\n  return Object.freeze({ x: xOrWidth, y: yOrHeight, width, height });\n}\n\n/**\n * Rectangle as array: `[width, height]`\n */\nexport type RectArray = readonly [width: number, height: number];\n\n/**\n * Positioned rectangle as array: `[x, y, width, height]`\n */\nexport type RectPositionedArray = readonly [\n  x: number,\n  y: number,\n  width: number,\n  height: number\n];\n\n/**\n * Converts a rectangle to an array of numbers. See {@link fromNumbers} for the opposite conversion.\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n *\n * const r1 = Rects.toArray({ x: 10, y:20, width: 100, height: 200 });\n * // [10, 20, 100, 200]\n * const r2 = Rects.toArray({ width: 100, height: 200 });\n * // [100, 200]\n * ```\n * @param rect\n * @see fromNumbers\n */\nexport function toArray(rect: Rect): RectArray;\n\n/**\n * Converts a rectangle to an array of numbers. See {@link fromNumbers} for the opposite conversion.\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n *\n * const r1 = Rects.toArray({ x: 10, y:20, width: 100, height: 200 });\n * // [10, 20, 100, 200]\n * const r2 = Rects.toArray({ width: 100, height: 200 });\n * // [100, 200]\n * ```\n * @param rect\n * @see fromNumbers\n */\nexport function toArray(rect: RectPositioned): RectPositionedArray;\n\n/**\n * Converts a rectangle to an array of numbers. See {@link fromNumbers} for the opposite conversion.\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * const r1 = Rects.toArray({ x: 10, y:20, width: 100, height: 200 });\n * // [10, 20, 100, 200]\n * const r2 = Rects.toArray({ width: 100, height: 200 });\n * // [100, 200]\n * ```\n * @param rect\n * @see fromNumbers\n */\n// eslint-disable-next-line func-style\nexport function toArray(\n  rect: Rect | RectPositioned\n): RectArray | RectPositionedArray {\n  if (isPositioned(rect)) {\n    return [rect.x, rect.y, rect.width, rect.height];\n  } else if (isRect(rect)) {\n    return [rect.width, rect.height];\n  } else {\n    throw new Error(\n      `rect param is not a rectangle. Got: ${JSON.stringify(rect)}`\n    );\n  }\n}\n\n/**\n * Returns _true_ if two rectangles have identical values.\n * Both rectangles must be positioned or not.\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * const rectA = { width: 10, height: 10, x: 10, y: 10 };\n * const rectB = { width: 10, height: 10, x: 20, y: 20 };\n *\n * // False, because coordinates are different\n * Rects.isEqual(rectA, rectB)\n *\n * // True, even though x,y are different\n * Rects.isEqualSize(rectA, rectB);\n * ```\n * @param a\n * @param b\n * @returns\n */\nexport const isEqual = (\n  a: Rect | RectPositioned,\n  b: Rect | RectPositioned\n): boolean => {\n  if (isPositioned(a) && isPositioned(b)) {\n    if (!Points.isEqual(a, b)) return false;\n    return a.width === b.width && a.height === b.height;\n  } else if (!isPositioned(a) && !isPositioned(b)) {\n    return a.width === b.width && a.height === b.height;\n  } else {\n    // One param is positioned, the other is not\n    return false;\n  }\n};\n\n/**\n * Subtracts width/height of `b` from `a` (ie: a - b), returning result.\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * const rectA = { width: 100, height: 100 };\n * const rectB = { width: 200, height: 200 };\n *\n * // Yields: { width: -100, height: -100 }\n * Rects.subtract(rectA, rectB);\n * ```\n * @param a\n * @param b\n */\nexport function subtract(a: Rect, b: Rect): Rect;\n/**\n * Subtracts a width/height from `a`, returning result.\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * const rect = { width: 100, height: 100 };\n *\n * // Yields: { width: -100, height: -100 }\n * Rects.subtract(rect, 200, 200);\n * ```\n * @param a\n * @param width\n * @param height\n */\nexport function subtract(a: Rect, width: number, height?: number): Rect;\n\n/**\n * Subtracts width/height from `a`.\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * const rectA = { width: 100, height: 100 };\n * const rectB = { width: 200, height: 200 };\n *\n * // Yields: { width: -100, height: -100 }\n * Rects.subtract(rectA, rectB);\n * Rects.subtract(rectA, 200, 200);\n * ```\n * @param a\n * @param b\n * @param c\n * @returns\n */\n//eslint-disable-next-line func-style\nexport function subtract(a: Rect, b: Rect | number, c?: number): Rect {\n  if (a === undefined) throw new Error(`First parameter undefined`);\n  if (typeof b === `number`) {\n    const height = c === undefined ? 0 : c;\n    return Object.freeze({\n      ...a,\n      width: a.width - b,\n      height: a.height - height,\n    });\n  } else {\n    return Object.freeze({\n      ...a,\n      width: a.width - b.width,\n      height: a.height - b.height,\n    });\n  }\n}\n\n/**\n * Sums width/height of `b` with `a` (ie: a + b), returning result.\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * const rectA = { width: 100, height: 100 };\n * const rectB = { width: 200, height: 200 };\n *\n * // Yields: { width: 300, height: 300 }\n * Rects.sum(rectA, rectB);\n * ```\n * @param a\n * @param b\n */\nexport function sum(a: Rect, b: Rect): Rect;\n/**\n * Sums width/height of `b` with `a` (ie: a + b), returning result.\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * const rect = { width: 100, height: 100 };\n *\n * // Yields: { width: 300, height: 300 }\n * Rects.subtract(rect, 200, 200);\n * ```\n * @param a\n * @param width\n * @param height\n */\nexport function sum(a: Rect, width: number, height?: number): Rect;\n\n/**\n * Sums width/height of `b` with `a` (ie: a + b), returning result.\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * const rectA = { width: 100, height: 100 };\n * const rectB = { width: 200, height: 200 };\n *\n * // Yields: { width: 300, height: 300 }\n * Rects.sum(rectA, rectB);\n * Rects.sum(rectA, 200, 200);\n * ```\n * @param a\n * @param b\n * @param c\n * @returns\n */\n//eslint-disable-next-line func-style\nexport function sum(a: Rect, b: Rect | number, c?: number): Rect {\n  if (a === undefined) throw new Error(`First parameter undefined`);\n  if (typeof b === `number`) {\n    const height = c === undefined ? 0 : c;\n    return Object.freeze({\n      ...a,\n      width: a.width + b,\n      height: a.height + height,\n    });\n  } else {\n    return Object.freeze({\n      ...a,\n      width: a.width + b.width,\n      height: a.height + b.height,\n    });\n  }\n}\n\n/**\n * Returns _true_ if `point` is within, or on boundary of `rect`.\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * Rects.intersectsPoint(rect, { x: 100, y: 100});\n * ```\n * @param rect\n * @param point\n */\nexport function intersectsPoint(\n  rect: Rect | RectPositioned,\n  point: Points.Point\n): boolean;\n\n/**\n * Returns true if x,y coordinate is within, or on boundary of `rect`.\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * Rects.intersectsPoint(rect, 100, 100);\n * ```\n * @param rect\n * @param x\n * @param y\n */\nexport function intersectsPoint(\n  rect: Rect | RectPositioned,\n  x: number,\n  y: number\n): boolean;\n\n/**\n * Returns true if point is within or on boundary of `rect`.\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * Rects.intersectsPoint(rect, { x: 100, y: 100});\n * Rects.intersectsPoint(rect, 100, 100);\n * ```\n * @param rect\n * @param a\n * @param b\n * @returns\n */\n//eslint-disable-next-line func-style\nexport function intersectsPoint(\n  rect: Rect | RectPositioned,\n  a: Points.Point | number,\n  b?: number\n): boolean {\n  guard(rect, `rect`);\n  //eslint-disable-next-line functional/no-let\n  let x = 0;\n  //eslint-disable-next-line functional/no-let\n  let y = 0;\n  if (typeof a === `number`) {\n    if (b === undefined) throw new Error(`x and y coordinate needed`);\n    x = a;\n    y = b;\n  } else {\n    x = a.x;\n    y = a.y;\n  }\n  if (isPositioned(rect)) {\n    if (x - rect.x > rect.width || x < rect.x) return false;\n    if (y - rect.y > rect.height || y < rect.y) return false;\n  } else {\n    // Assume 0,0\n    if (x > rect.width || x < 0) return false;\n    if (y > rect.height || y < 0) return false;\n  }\n  return true;\n}\n\n/**\n * Initialises a rectangle based on its center, a width and height\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n *\n * // Rectangle with center at 50,50, width 100 height 200\n * Rects.fromCenter({x: 50, y:50}, 100, 200);\n * ```\n * @param origin\n * @param width\n * @param height\n * @returns\n */\nexport const fromCenter = (\n  origin: Points.Point,\n  width: number,\n  height: number\n): RectPositioned => {\n  Points.guard(origin, `origin`);\n\n  guardDim(width, `width`);\n  guardDim(height, `height`);\n\n  const halfW = width / 2;\n  const halfH = height / 2;\n  return {\n    x: origin.x - halfW,\n    y: origin.y - halfH,\n    width: width,\n    height: height,\n  };\n};\n\n/**\n * Returns the distance from the perimeter of `rect` to `pt`.\n * If the point is within the rectangle, 0 is returned.\n *\n * If `rect` does not have an x,y it's assumed to be 0,0\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * const rect = { width: 100, height: 100, x: 0, y: 0 };\n * Rects.distanceFromExterior(rect, { x: 20, y: 20 });\n * ```\n * @param rect Rectangle\n * @param pt Point\n * @returns Distance\n */\nexport const distanceFromExterior = (\n  rect: RectPositioned,\n  pt: Points.Point\n): number => {\n  guardPositioned(rect, `rect`);\n  Points.guard(pt, `pt`);\n  if (intersectsPoint(rect, pt)) return 0;\n  const dx = Math.max(rect.x - pt.x, 0, pt.x - rect.x + rect.width);\n  const dy = Math.max(rect.y - pt.y, 0, pt.y - rect.y + rect.height);\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\n/**\n * Return the distance of `pt` to the center of `rect`.\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * const rect = { width: 100, height: 100, x: 0, y: 0 };\n * Rects.distanceFromCenter(rect, { x: 20, y: 20 });\n * ```\n * @param rect\n * @param pt\n * @returns\n */\nexport const distanceFromCenter = (\n  rect: RectPositioned,\n  pt: Points.Point\n): number => Points.distance(center(rect), pt);\n\n/**\n * Returns a rectangle based on provided four corners.\n *\n * To create a rectangle that contains an arbitary set of points, use {@link Geometry.Points.bbox | Geometry.Points.bbox}.\n *\n * Does some sanity checking such as:\n *  - x will be smallest of topLeft/bottomLeft\n *  - y will be smallest of topRight/topLeft\n *  - width will be largest between top/bottom left and right\n *  - height will be largest between left and right top/bottom\n *\n */\nexport const maxFromCorners = (\n  topLeft: Points.Point,\n  topRight: Points.Point,\n  bottomRight: Points.Point,\n  bottomLeft: Points.Point\n): RectPositioned => {\n  if (topLeft.y > bottomRight.y) {\n    throw new Error(`topLeft.y greater than bottomRight.y`);\n  }\n  if (topLeft.y > bottomLeft.y) {\n    throw new Error(`topLeft.y greater than bottomLeft.y`);\n  }\n\n  const w1 = topRight.x - topLeft.x;\n  const w2 = bottomRight.x - bottomLeft.x;\n  const h1 = Math.abs(bottomLeft.y - topLeft.y);\n  const h2 = Math.abs(bottomRight.y - topRight.y);\n  return {\n    x: Math.min(topLeft.x, bottomLeft.x),\n    y: Math.min(topRight.y, topLeft.y),\n    width: Math.max(w1, w2),\n    height: Math.max(h1, h2),\n  };\n};\n\nconst guardDim = (d: number, name: string = `Dimension`) => {\n  if (d === undefined) throw Error(`${name} is undefined`);\n  if (isNaN(d)) throw Error(`${name} is NaN`);\n  if (d < 0) throw Error(`${name} cannot be negative`);\n};\n\n/**\n * Throws an error if rectangle is missing fields or they\n * are not valid.\n * @param rect\n * @param name\n */\nexport const guard = (rect: Rect, name: string = `rect`) => {\n  if (rect === undefined) throw Error(`{$name} undefined`);\n  if (isPositioned(rect)) Points.guard(rect, name);\n  guardDim(rect.width, name + `.width`);\n  guardDim(rect.height, name + `.height`);\n};\n\nconst guardPositioned = (rect: RectPositioned, name: string = `rect`) => {\n  if (!isPositioned(rect)) throw new Error(`Expected ${name} to have x,y`);\n  guard(rect, name);\n};\n\n/**\n * Creates a rectangle from its top-left coordinate, a width and height.\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n *\n * // Rectangle at 50,50 with width of 100, height of 200.\n * const rect = Rects.fromTopLeft({ x: 50, y:50 }, 100, 200);\n * ```\n * @param origin\n * @param width\n * @param height\n * @returns\n */\nexport const fromTopLeft = (\n  origin: Points.Point,\n  width: number,\n  height: number\n): RectPositioned => {\n  guardDim(width, `width`);\n  guardDim(height, `height`);\n  Points.guard(origin, `origin`);\n\n  return { x: origin.x, y: origin.y, width: width, height: height };\n};\n\n/**\n * Returns the four corners of a rectangle as an array of Points.\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * const rect = { width: 100, height: 100, x: 0, y: 0};\n * const pts = Rects.corners(rect);\n * ```\n *\n * If the rectangle is not positioned, is origin can be provided.\n * @param rect\n * @param origin\n * @returns\n */\nexport const corners = (\n  rect: RectPositioned | Rect,\n  origin?: Points.Point\n): readonly Points.Point[] => {\n  guard(rect);\n  if (origin === undefined && Points.isPoint(rect)) origin = rect;\n  else if (origin === undefined) {\n    throw new Error(`Unpositioned rect needs origin param`);\n  }\n\n  return [\n    { x: origin.x, y: origin.y },\n    { x: origin.x + rect.width, y: origin.y },\n    { x: origin.x + rect.width, y: origin.y + rect.height },\n    { x: origin.x, y: origin.y + rect.height },\n  ];\n};\n\n/**\n * Returns a point on cardinal direction, or 'center' for the middle.\n *\n * ```js\n * cardinal({x: 10, y:10, width:100, height: 20}, 'center');\n * ```\n * @param rect Rectangle\n * @param card Cardinal direction or 'center'\n * @returns Point\n */\nexport const cardinal = (\n  rect: RectPositioned,\n  card: CardinalDirection | 'center'\n): Points.Point => {\n  const { x, y, width, height } = rect;\n  switch (card) {\n    case 'nw':\n      return Object.freeze({ x, y });\n    case 'n':\n      return Object.freeze({\n        x: x + width / 2,\n        y,\n      });\n    case 'ne':\n      return Object.freeze({\n        x: x + width,\n        y,\n      });\n    case 'sw':\n      return Object.freeze({ x, y: y + height });\n    case 's':\n      return Object.freeze({\n        x: x + width / 2,\n        y: y + height,\n      });\n    case 'se':\n      return Object.freeze({\n        x: x + width,\n        y: y + height,\n      });\n    case 'w':\n      return Object.freeze({ x, y: y + height / 2 });\n    case 'e':\n      return Object.freeze({ x: x + width, y: y + height / 2 });\n    case 'center':\n      return Object.freeze({\n        x: x + width / 2,\n        y: y + height / 2,\n      });\n    default:\n      throw new Error(`Unknown direction: ${card}`);\n  }\n};\n\n/**\n * Returns a point on the edge of rectangle\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n *\n * const r1 = {x: 10, y: 10, width: 100, height: 50};\n * Rects.getEdgeX(r1, `right`);  // Yields: 110\n * Rects.getEdgeX(r1, `bottom`); // Yields: 10\n *\n * const r2 = {width: 100, height: 50};\n * Rects.getEdgeX(r2, `right`);  // Yields: 100\n * Rects.getEdgeX(r2, `bottom`); // Yields: 0\n * ```\n * @param rect\n * @param edge Which edge: right, left, bottom, top\n * @returns\n */\nexport const getEdgeX = (\n  rect: RectPositioned | Rect,\n  edge: `right` | `bottom` | `left` | `top`\n): number => {\n  guard(rect);\n  switch (edge) {\n    case `top`:\n      return Points.isPoint(rect) ? rect.x : 0;\n    case `bottom`:\n      return Points.isPoint(rect) ? rect.x : 0;\n    case `left`:\n      return Points.isPoint(rect) ? rect.y : 0;\n    case `right`:\n      return Points.isPoint(rect) ? rect.x + rect.width : rect.width;\n  }\n};\n\n/**\n * Returns a point on the edge of rectangle\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n *\n * const r1 = {x: 10, y: 10, width: 100, height: 50};\n * Rects.getEdgeY(r1, `right`);  // Yields: 10\n * Rects.getEdgeY(r1, `bottom`); // Yields: 60\n *\n * const r2 = {width: 100, height: 50};\n * Rects.getEdgeY(r2, `right`);  // Yields: 0\n * Rects.getEdgeY(r2, `bottom`); // Yields: 50\n * ```\n * @param rect\n * @param edge Which edge: right, left, bottom, top\n * @returns\n */\nexport const getEdgeY = (\n  rect: RectPositioned | Rect,\n  edge: `right` | `bottom` | `left` | `top`\n): number => {\n  guard(rect);\n  switch (edge) {\n    case `top`:\n      return Points.isPoint(rect) ? rect.y : 0;\n    case `bottom`:\n      return Points.isPoint(rect) ? rect.y + rect.height : rect.height;\n    case `left`:\n      return Points.isPoint(rect) ? rect.y : 0;\n    case `right`:\n      return Points.isPoint(rect) ? rect.y : 0;\n  }\n};\n\n/**\n * Returns `rect` divided by the width,height of `normaliseBy`.\n * This can be useful for normalising based on camera frame.\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n *\n * const frameSize = {width: 640, height: 320};\n * const object = { x: 320, y: 160, width: 64, height: 32};\n *\n * const n = Rects.normaliseByRect(object, frameSize);\n * // Yields: {x: 0.5, y: 0.5, width: 0.1, height: 0.1}\n * ```\n *\n * Height and width can be supplied instead of a rectangle too:\n * ```js\n * const n = Rects.normaliseByRect(object, 640, 320);\n * ```\n * @param rect\n * @param normaliseBy\n * @returns\n */\nexport const normaliseByRect = (\n  rect: Rect | RectPositioned,\n  normaliseByOrWidth: Rect | number,\n  height?: number\n): Rect | RectPositioned => {\n  //eslint-disable-next-line functional/no-let\n  let width;\n  if (height === undefined) {\n    if (isRect(normaliseByOrWidth)) {\n      height = normaliseByOrWidth.height;\n      width = normaliseByOrWidth.width;\n    } else {\n      throw new Error(\n        `Expects rectangle or width and height parameters for normaliseBy`\n      );\n    }\n  } else {\n    if (typeof normaliseByOrWidth === `number`) {\n      width = normaliseByOrWidth;\n    } else {\n      throw new Error(\n        `Expects rectangle or width and height parameters for normaliseBy`\n      );\n    }\n  }\n\n  if (isPositioned(rect)) {\n    return Object.freeze({\n      x: rect.x / width,\n      y: rect.y / height,\n      width: rect.width / width,\n      height: rect.height / height,\n    });\n  } else {\n    return Object.freeze({\n      width: rect.width / width,\n      height: rect.height / height,\n    });\n  }\n};\n\n/**\n * Multiplies `a` by rectangle or width/height. Useful for denormalising a value.\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n *\n * // Normalised rectangle of width 50%, height 50%\n * const r = {width: 0.5, height: 0.5};\n *\n * // Map to window:\n * const rr = Rects.multiply(r, window.innerWidth, window.innerHeight);\n * ```\n *\n * ```js\n * // Returns {width: someRect.width * someOtherRect.width ...}\n * Rects.multiply(someRect, someOtherRect);\n *\n * // Returns {width: someRect.width * 100, height: someRect.height * 200}\n * Rects.multiply(someRect, 100, 200);\n * ```\n *\n * Multiplication applies to the first parameter's x/y fields, if present.\n */\nexport function multiply(\n  a: RectPositioned,\n  b: Rect | number,\n  c?: number\n): RectPositioned;\n\n/**\n * Multiplies `a` by rectangle or width/height. Useful for denormalising a value.\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n *\n * // Normalised rectangle of width 50%, height 50%\n * const r = {width: 0.5, height: 0.5};\n *\n * // Map to window:\n * const rr = Rects.multiply(r, window.innerWidth, window.innerHeight);\n * ```\n *\n * ```js\n * // Returns {width: someRect.width * someOtherRect.width ...}\n * Rects.multiply(someRect, someOtherRect);\n *\n * // Returns {width: someRect.width * 100, height: someRect.height * 200}\n * Rects.multiply(someRect, 100, 200);\n * ```\n *\n * Multiplication applies to the first parameter's x/y fields, if present.\n */\nexport function multiply(a: Rect, b: Rect | number, c?: number): Rect;\nexport function multiply(a: RectPositioned, b: Rect): RectPositioned;\n\n/**\n * Multiplies `a` by rectangle or width/height. Useful for denormalising a value.\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n *\n * // Normalised rectangle of width 50%, height 50%\n * const r = {width: 0.5, height: 0.5};\n *\n * // Map to window:\n * const rr = Rects.multiply(r, window.innerWidth, window.innerHeight);\n * ```\n *\n * ```js\n * // Returns {width: someRect.width * someOtherRect.width ...}\n * Rects.multiply(someRect, someOtherRect);\n *\n * // Returns {width: someRect.width * 100, height: someRect.height * 200}\n * Rects.multiply(someRect, 100, 200);\n * ```\n *\n * Multiplication applies to the first parameter's x/y fields, if present.\n */\n//eslint-disable-next-line func-style\nexport function multiply(\n  a: RectPositioned | Rect,\n  b: Rect | number,\n  c?: number\n): RectPositioned | Rect {\n  guard(a, `a`);\n  if (isRect(b)) {\n    if (isRectPositioned(a)) {\n      return Object.freeze({\n        ...a,\n        x: a.x * b.width,\n        y: a.y * b.height,\n        width: a.width * b.width,\n        height: a.height * b.height,\n      });\n    } else {\n      return Object.freeze({\n        ...a,\n        width: a.width * b.width,\n        height: a.height * b.height,\n      });\n    }\n  } else {\n    if (typeof b !== `number`) {\n      throw new Error(\n        `Expected second parameter of type Rect or number. Got ${JSON.stringify(\n          b\n        )}`\n      );\n    }\n    if (c === undefined) c = b;\n\n    if (isRectPositioned(a)) {\n      return Object.freeze({\n        ...a,\n        x: a.x * b,\n        y: a.y * c,\n        width: a.width * b,\n        height: a.height * c,\n      });\n    } else {\n      return Object.freeze({\n        ...a,\n        width: a.width * b,\n        height: a.height * c,\n      });\n    }\n  }\n}\n\n/**\n * Multiplies all components of `rect` by `amount`\n * @param rect\n * @param amount\n */\nexport function multiplyScalar(rect: Rect, amount: number): Rect;\n/**\n * Multiplies all components of `rect` by `amount`\n * @param rect\n * @param amount\n */\nexport function multiplyScalar(\n  rect: RectPositioned,\n  amount: number\n): RectPositioned;\n/**\n * Multiplies all components of `rect` by `amount`\n * @param rect\n * @param amount\n */\nexport function multiplyScalar(\n  rect: Rect | RectPositioned,\n  amount: number\n): Rect | RectPositioned {\n  if (isPositioned(rect)) {\n    return Object.freeze({\n      ...rect,\n      x: rect.x * amount,\n      y: rect.y * amount,\n      width: rect.width * amount,\n      height: rect.height * amount,\n    });\n  } else {\n    return Object.freeze({\n      ...rect,\n      width: rect.width * amount,\n      height: rect.height * amount,\n    });\n  }\n}\n\n/**\n * Returns the center of a rectangle as a {@link Geometry.Points.Point}.\n *  If the rectangle lacks a position and `origin` parameter is not provided, 0,0 is used instead.\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n *\n * const p = Rects.center({x:10, y:20, width:100, height:50});\n * const p2 = Rects.center({width: 100, height: 50}); // Assumes 0,0 for rect x,y\n * ```\n * @param rect Rectangle\n * @param origin Optional origin. Overrides `rect` position if available. If no position is available 0,0 is used by default.\n * @returns\n */\nexport const center = (\n  rect: RectPositioned | Rect,\n  origin?: Points.Point\n): Points.Point => {\n  guard(rect);\n  if (origin === undefined && Points.isPoint(rect)) origin = rect;\n  else if (origin === undefined) origin = { x: 0, y: 0 }; // throw new Error(`Unpositioned rect needs origin param`);\n\n  return Object.freeze({\n    x: origin.x + rect.width / 2,\n    y: origin.y + rect.height / 2,\n  });\n};\n\n/**\n * Returns the length of each side of the rectangle (top, right, bottom, left)\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * const rect = { width: 100, height: 100, x: 100, y: 100 };\n * // Yields: array of length four\n * const lengths = Rects.lengths(rect);\n * ```\n * @param rect\n * @returns\n */\nexport const lengths = (rect: RectPositioned): readonly number[] => {\n  guardPositioned(rect, `rect`);\n  return edges(rect).map((l) => Lines.length(l));\n};\n\n/**\n * Returns four lines based on each corner.\n * Lines are given in order: top, right, bottom, left\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * const rect = { width: 100, height: 100, x: 100, y: 100 };\n * // Yields: array of length four\n * const lines = Rects.lines(rect);\n * ```\n *\n * @param {(RectPositioned|Rect)} rect\n * @param {Points.Point} [origin]\n * @returns {Lines.Line[]}\n */\nexport const edges = (\n  rect: RectPositioned | Rect,\n  origin?: Points.Point\n): readonly Lines.Line[] => {\n  const c = corners(rect, origin);\n\n  // Connect all the corners, back to first corner again\n  return Lines.joinPointsToLines(...c, c[0]);\n};\n\n/**\n * Returns the perimeter of `rect` (ie. sum of all edges)\n *  * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * const rect = { width: 100, height: 100, x: 100, y: 100 };\n * Rects.perimeter(rect);\n * ```\n * @param rect\n * @returns\n */\nexport const perimeter = (rect: Rect): number => {\n  guard(rect);\n  return rect.height + rect.height + rect.width + rect.width;\n};\n\n/**\n * Returns the area of `rect`\n *\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * const rect = { width: 100, height: 100, x: 100, y: 100 };\n * Rects.area(rect);\n * ```\n * @param rect\n * @returns\n */\nexport const area = (rect: Rect): number => {\n  guard(rect);\n  return rect.height * rect.width;\n};\n\n/**\n * Returns true if `a` or `b` overlap, are equal, or `a` contains `b`.\n * A rectangle can be checked for intersections with another RectPositioned, CirclePositioned or Point.\n *\n */\nexport const isIntersecting = (\n  a: RectPositioned,\n  b: CirclePositioned | Points.Point\n): boolean => {\n  if (!isRectPositioned(a)) {\n    throw new Error(`a parameter should be RectPositioned`);\n  }\n\n  if (isCirclePositioned(b)) {\n    return Intersects.circleRect(b, a);\n  } else if (Points.isPoint(b)) {\n    return intersectsPoint(a, b);\n  }\n  throw new Error(`Unknown shape for b: ${JSON.stringify(b)}`);\n};\n\n/**\n * Returns a random positioned Rect on a 0..1 scale.\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * const r = Rects.random(); // eg {x: 0.2549012, y:0.859301, width: 0.5212, height: 0.1423 }\n * ```\n *\n * A custom source of randomness can be provided:\n * ```js\n * import { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n * import { weightedFn } from \"https://unpkg.com/ixfx/dist/random.js\"\n * const r = Rects.random(weightedFn(`quadIn`));\n * ```\n * @param rando\n * @returns\n */\nexport const random = (rando?: RandomSource): RectPositioned => {\n  if (rando === undefined) rando = defaultRandom;\n\n  return Object.freeze({\n    x: rando(),\n    y: rando(),\n    width: rando(),\n    height: rando(),\n  });\n};\n\nexport type RandomPointOpts = {\n  readonly strategy?: `naive`;\n  readonly randomSource?: RandomSource;\n  readonly margin?: { readonly x: number; readonly y: number };\n};\n\n/**\n * Returns a random point within a circle.\n *\n * By default creates a uniform distribution.\n *\n * ```js\n * const pt = randomPoint({width: 5, height: 10});\n * ```'\n * @param within Circle to generate a point within\n * @param opts Options\n * @returns\n */\nexport const randomPoint = (\n  within: Rect | RectPositioned,\n  opts: RandomPointOpts = {}\n): Points.Point => {\n  // TODO: Does not implement uniform distribution\n  // See: https://math.stackexchange.com/questions/366474/find-coordinates-of-n-points-uniformly-distributed-in-a-rectangle\n  const rand = opts.randomSource ?? defaultRandom;\n  const margin = opts.margin ?? { x: 0, y: 0 };\n\n  const x = rand() * (within.width - margin.x - margin.x);\n  const y = rand() * (within.height - margin.y - margin.y);\n\n  const pos = { x: x + margin.x, y: y + margin.y };\n  if (isPositioned(within)) {\n    return Points.sum(pos, within);\n  } else return Object.freeze(pos);\n};\n","import {guard as guardPoint} from './Point.js';\nimport {type Path} from './Path.js';\nimport {type Line} from './Line.js';\nimport {Points, Polar, Rects} from './index.js';\n//import { ShapePositioned } from './Shape.js';\nimport {Arrays} from '../collections/index.js';\nimport {defaultRandom, type RandomSource} from '../Random.js';\nimport * as Intersects from './Intersects.js';\nconst piPi = Math.PI * 2;\n\n/**\n * A circle\n */\nexport type Circle = {\n  readonly radius: number\n}\n\n/**\n * A {@link Circle} with position\n */\nexport type CirclePositioned = Points.Point & Circle;\n\nexport type CircularPath = Circle & Path & {\n  readonly kind: `circular`\n};\n\n// export type CircularShape = Circle & Shape & {\n//   readonly kind:`circular`\n// }\n\n\n/**\n * Returns true if parameter has x,y. Does not verify if parameter is a circle or not\n * \n * ```js\n * import { Circles } from \"https://unpkg.com/ixfx/dist/geometry.js\" \n * \n * const circleA = { radius: 5 };\n * Circles.isPositioned(circle); // false\n * \n * const circleB = { radius: 5, x: 10, y: 10 }\n * Circles.isPositioned(circle); // true\n * ```\n * @param p Circle\n * @returns \n */\nexport const isPositioned = (p: Circle | Points.Point): p is Points.Point => (p as Points.Point).x !== undefined && (p as Points.Point).y !== undefined;\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const isCircle = (p: Circle | CirclePositioned | any): p is Circle => (p as Circle).radius !== undefined;\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const isCirclePositioned = (p: Circle | CirclePositioned | any): p is CirclePositioned => isCircle(p) && isPositioned(p);\n\n/**\n * Returns a point on a circle at a specified angle in radians\n * \n * ```js\n * import { Circles } from \"https://unpkg.com/ixfx/dist/geometry.js\" \n * \n * // Circle without position\n * const circleA = { radius: 5 };\n * \n * // Get point at angle Math.PI, passing in a origin coordinate\n * const ptA = Circles.point(circleA, Math.PI, {x: 10, y: 10 });\n * \n * // Point on circle with position\n * const circleB = { radius: 5, x: 10, y: 10};\n * const ptB = Circles.point(circleB, Math.PI);\n * ```\n * @param circle\n * @param angleRadian Angle in radians\n * @param Origin or offset of calculated point. By default uses center of circle or 0,0 if undefined\n * @returns Point oo circle\n */\nexport const point = (circle: Circle | CirclePositioned, angleRadian: number, origin?: Points.Point): Points.Point => {\n  if (origin === undefined) {\n    if (isPositioned(circle)) {\n      origin = circle;\n    } else {\n      origin = {x: 0, y: 0};\n    }\n  }\n  return {\n    x: (Math.cos(-angleRadian) * circle.radius) + origin.x,\n    y: (Math.sin(-angleRadian) * circle.radius) + origin.y\n  };\n};\n\n/**\n * Throws if radius is out of range. If x,y is present, these will be validated too.\n * @param circle \n * @param paramName \n */\nconst guard = (circle: CirclePositioned | Circle, paramName = `circle`) => {\n  if (isPositioned(circle)) {\n    guardPoint(circle, `circle`);\n  }\n\n  if (Number.isNaN(circle.radius)) throw new Error(`${paramName}.radius is NaN`);\n  if (circle.radius <= 0) throw new Error(`${paramName}.radius must be greater than zero`);\n};\n\n/**\n * Throws if `circle` is not positioned or has dodgy fields\n * @param circle \n * @param paramName \n * @returns \n */\nconst guardPositioned = (circle: CirclePositioned, paramName = `circle`) => {\n  if (!isPositioned(circle)) throw new Error(`Expected a positioned circle with x,y`);\n  return guard(circle, paramName);\n};\n\n/**\n * Returns the center of a circle\n * \n * If the circle has an x,y, that is the center.\n * If not, `radius` is used as the x and y.\n * \n * ```js\n * import { Circles } from \"https://unpkg.com/ixfx/dist/geometry.js\" \n * const circle = { radius: 5, x: 10, y: 10};\n * \n * // Yields: { x: 5, y: 10 }\n * Circles.center(circle);\n * ```\n * \n * It's a trivial function, but can make for more understandable code\n * @param circle \n * @returns Center of circle\n */\nexport const center = (circle: CirclePositioned | Circle) => {\n  if (isPositioned(circle)) return Object.freeze({x: circle.x, y: circle.y});\n  else return Object.freeze({x: circle.radius, y: circle.radius});\n};\n/**\n * Computes relative position along circle\n * \n * ```js\n * import { Circles } from \"https://unpkg.com/ixfx/dist/geometry.js\" \n * const circle = { radius: 100, x: 100, y: 100 };\n * \n * // Get a point halfway around circle\n * // Yields { x, y }\n * const pt = Circles.interpolate(circle, 0.5);\n * ```\n * @param circle \n * @param t Position, 0-1\n * @returns \n */\nexport const interpolate = (circle: CirclePositioned, t: number): Points.Point => point(circle, t * piPi);\n\n/**\n * Returns circumference of `circle` (alias of {@link circumference})\n * @param circle \n * @returns \n */\nexport const length = (circle: Circle): number => circumference(circle);\n\n/**\n * Returns circumference of `circle` (alias of {@link length})\n * @param circle \n * @returns \n */\nexport const circumference = (circle: Circle): number => {\n  guard(circle);\n  return piPi * circle.radius;\n};\n\n/**\n * Returns the area of `circle`.\n * @param circle \n * @returns \n */\nexport const area = (circle: Circle) => {\n  guard(circle);\n  return Math.PI * circle.radius * circle.radius;\n};\n\n/**\n * Computes a bounding box that encloses circle\n * @param circle\n * @returns \n */\nexport const bbox = (circle: CirclePositioned | Circle): Rects.RectPositioned | Rects.Rect => {\n  if (isPositioned(circle)) {\n    return Rects.fromCenter(circle, circle.radius * 2, circle.radius * 2);\n  } else {\n    return {width: circle.radius * 2, height: circle.radius * 2};\n  }\n};\n\n/**\n * Returns true if `b` is completely contained by `a`\n *\n * ```js\n * // Compare two points\n * isContainedBy(circleA, circleB);\n * \n * // Compare a circle with a point\n * isContainedBy(circleA, {x: 10, y: 20});\n * \n * // Define radius as third parameter\n * isContainedBy(circleA, {x: 10, y: 20}, 20);\n * ```\n * @param a Circle\n * @param b Circle or point to compare to\n * @param c Radius to accompany parameter b if it's a point\n * @returns\n */\nexport const isContainedBy = (a: CirclePositioned, b: CirclePositioned | Points.Point, c?: number): boolean => {\n  const d = distanceCenter(a, b);\n  if (isCircle(b)) {\n    return (d < Math.abs(a.radius - b.radius));\n  } else if (Points.isPoint(b)) {\n    if (c !== undefined) {\n      // Defining a circle\n      return (d < Math.abs(a.radius - c));\n    } else {\n      return d <= a.radius;\n    }\n  } else throw new Error(`b parameter is expected to be CirclePositioned or Point`);\n};\n\n/***\n * Returns true if radius, x or y are NaN\n */\nexport const isNaN = (a: Circle | CirclePositioned): boolean => {\n  if (Number.isNaN(a.radius)) return true;\n  if (isPositioned(a)) {\n    if (Number.isNaN(a.x)) return true;\n    if (Number.isNaN(a.y)) return true;\n  }\n  return false;\n};\n/**\n * Returns true if `a` or `b` overlap, are equal, or `a` contains `b`.\n * A circle can be checked for intersections with another CirclePositioned, Point or RectPositioned.\n * \n * Use `intersections` to find the points of intersection.\n *\n * @param a Circle\n * @param b Circle or point to test\n * @returns True if circle overlap\n */\nexport const isIntersecting = (a: CirclePositioned, b: CirclePositioned | Points.Point | Rects.RectPositioned, c?: number): boolean => {\n  if (Points.isEqual(a, b)) return true;\n  if (isContainedBy(a, b, c)) return true;\n  if (isCircle(b)) {\n    return Intersects.circleCircle(a, b);\n  } else if (Rects.isRectPositioned(b)) {\n    return Intersects.circleRect(a, b);\n  } else if (Points.isPoint(b) && c !== undefined) {\n    return Intersects.circleCircle(a, {...b, radius: c});\n  }\n  return false;\n};\n\n/**\n * \n * Returns the points of intersection betweeen `a` and `b`.\n * \n * Returns an empty array if circles are equal, one contains the other or if they don't touch at all.\n *\n * @param a Circle\n * @param b Circle\n * @returns Points of intersection, or an empty list if there are none\n */\nexport const intersections = (a: CirclePositioned, b: CirclePositioned): readonly Points.Point[] => {\n  const vector = Points.subtract(b, a);\n  const centerD = Math.sqrt((vector.y * vector.y) + (vector.x * vector.x));\n\n  // Do not intersect\n  if (centerD > a.radius + b.radius) return [];\n\n  // Circle contains another\n  if (centerD < Math.abs(a.radius - b.radius)) return [];\n\n  // Circles are the same\n  if (isEqual(a, b)) return [];\n\n  const centroidD = ((a.radius * a.radius) - (b.radius * b.radius) + (centerD * centerD)) / (2.0 * centerD);\n  const centroid = {\n    x: a.x + (vector.x * centroidD / centerD),\n    y: a.y + (vector.y * centroidD / centerD)\n  };\n\n  const centroidIntersectionD = Math.sqrt((a.radius * a.radius) - (centroidD * centroidD));\n\n  const intersection = {\n    x: -vector.y * (centroidIntersectionD / centerD),\n    y: vector.x * (centroidIntersectionD / centerD)\n  };\n  return [\n    Points.sum(centroid, intersection),\n    Points.subtract(centroid, intersection)\n  ];\n};\n\n/**\n * Returns true if the two objects have the same values\n *\n * ```js\n * const circleA = { radius: 10, x: 5, y: 5 };\n * const circleB = { radius: 10, x: 5, y: 5 };\n * \n * circleA === circleB; // false, because identity of objects is different\n * Circles.isEqual(circleA, circleB); // true, because values are the same\n * ```\n * \n * Circles must both be positioned or not.\n * @param a\n * @param b\n * @returns\n */\nexport const isEqual = (a: CirclePositioned | Circle, b: CirclePositioned | Circle): boolean => {\n  if (a.radius !== b.radius) return false;\n\n  if (isPositioned(a) && isPositioned(b)) {\n    if (a.x !== b.x) return false;\n    if (a.y !== b.y) return false;\n    if (a.z !== b.z) return false;\n    return true;\n  } else if (!isPositioned(a) && !isPositioned(b)) {\n    // no-op\n  } else return false; // one is positioned one not\n\n  return false;\n};\n\nexport type RandomPointOpts = {\n  readonly strategy?: `naive` | `uniform`\n  readonly randomSource?: RandomSource\n}\n\n/**\n * Returns a random point within a circle.\n * \n * By default creates a uniform distribution.\n * \n * ```js\n * const pt = randomPoint({radius: 5});\n * const pt = randomPoint({radius: 5, x: 10, y: 20});\n * ```'\n * \n * Generate points with a gaussian distribution\n * ```js\n * const pt = randomPoint(circle, {\n *  randomSource: Random.gaussian\n * })\n * ```\n * @param within Circle to generate a point within\n * @param opts Options\n * @returns \n */\nexport const randomPoint = (within: Circle | CirclePositioned, opts: RandomPointOpts = {}): Points.Point => {\n  const offset: Points.Point = isPositioned(within) ? within : {x: 0, y: 0};\n  const strategy = opts.strategy ?? `uniform`;\n  const rand = opts.randomSource ?? defaultRandom;\n  switch (strategy) {\n    case `naive`:\n      return Points.sum(offset, Polar.toCartesian(rand() * within.radius, rand() * piPi));\n    case `uniform`:\n      return Points.sum(offset, Polar.toCartesian(Math.sqrt(rand()) * within.radius, rand() * piPi));\n    default:\n      throw new Error(`Unknown strategy ${strategy}`);\n  }\n};\n\nexport function multiplyScalar(a: CirclePositioned, value: number): CirclePositioned;\n\nexport function multiplyScalar(a: Circle, value: number): Circle;\n\n/**\n * Multiplies a circle's radius and position (if provided) by `value`.\n * \n * ```js\n * multiplyScalar({ radius: 5 }, 5);\n * // Yields: { radius: 25 }\n * \n * multiplyScalar({ radius: 5, x: 10, y: 20 }, 5);\n * // Yields: { radius: 25, x: 50, y: 100 }\n * ```\n */\nexport function multiplyScalar(a: Circle | CirclePositioned, value: number): Circle | CirclePositioned {\n  if (isPositioned(a)) {\n    const pt = Points.multiplyScalar(a, value);\n    return Object.freeze({\n      ...a,\n      ...pt,\n      radius: a.radius * value\n    });\n  } else {\n    return Object.freeze({\n      ...a,\n      radius: a.radius * value\n    });\n  }\n}\n\n\n/**\n * Returns the distance between two circle centers.\n * \n * ```js\n * import { Circles } from \"https://unpkg.com/ixfx/dist/geometry.js\" \n * const circleA = { radius: 5, x: 5, y: 5 }\n * const circleB = { radius: 10, x: 20, y: 20 }\n * const distance = Circles.distanceCenter(circleA, circleB);\n * ```\n * Throws an error if either is lacking position.\n * @param a \n * @param b \n * @returns Distance\n */\nexport const distanceCenter = (a: CirclePositioned, b: CirclePositioned | Points.Point): number => {\n  guardPositioned(a, `a`);\n  if (isCirclePositioned(b)) {\n    guardPositioned(b, `b`);\n  }\n  return Points.distance(a, b);\n};\n\n/**\n * Returns the distance between the exterior of two circles, or between the exterior of a circle and point.\n * If `b` overlaps or is enclosed by `a`, distance is 0.\n * \n * ```js\n * import { Circles } from \"https://unpkg.com/ixfx/dist/geometry.js\" \n * const circleA = { radius: 5, x: 5, y: 5 }\n * const circleB = { radius: 10, x: 20, y: 20 }\n * const distance = Circles.distanceCenter(circleA, circleB);\n * ```\n * @param a\n * @param b \n */\nexport const distanceFromExterior = (a: CirclePositioned, b: CirclePositioned | Points.Point): number => {\n  guardPositioned(a, `a`);\n  if (isCirclePositioned(b)) {\n    return Math.max(0, distanceCenter(a, b) - a.radius - b.radius);\n  } else if (Points.isPoint(b)) {\n    const dist = Points.distance(a, b);\n    if (dist < a.radius) return 0;\n    return dist;\n  } else throw new Error(`Second parameter invalid type`);\n};\n\ntype ToSvg = {\n  (radius: number, sweep: boolean, origin: Points.Point): readonly string[];\n  (circle: Circle, sweep: boolean, origin: Points.Point): readonly string[];\n  (circle: CirclePositioned, sweep: boolean): readonly string[];\n};\n\n\n/**\n * Creates a SVG path segment.\n * @param a Circle or radius\n * @param sweep If true, path is 'outward'\n * @param origin Origin of path. Required if first parameter is just a radius or circle is non-positioned\n * @returns \n */\nexport const toSvg: ToSvg = (a: CirclePositioned | number | Circle, sweep: boolean, origin?: Points.Point): readonly string[] => {\n  if (isCircle(a)) {\n    if (origin !== undefined) {\n      return toSvgFull(a.radius, origin, sweep);\n    }\n    if (isPositioned(a)) {\n      return toSvgFull(a.radius, a, sweep);\n    } else throw new Error(`origin parameter needed for non-positioned circle`);\n  } else {\n    if (origin !== undefined) {\n      return toSvgFull(a, origin, sweep);\n    } else throw new Error(`origin parameter needed`);\n  }\n};\n\nconst toSvgFull = (radius: number, origin: Points.Point, sweep: boolean): readonly string[] => {\n  // https://stackoverflow.com/questions/5737975/circle-drawing-with-svgs-arc-path\n  const {x, y} = origin;\n  const s = sweep ? `1` : `0`;\n  return `\n    M ${x}, ${y}\n    m -${radius}, 0\n    a ${radius},${radius} 0 1,${s} ${radius * 2},0\n    a ${radius},${radius} 0 1,${s} -${radius * 2},0\n  `.split(`\\n`);\n};\n\n/**\n * Returns the nearest point on `circle` closest to `point`.\n * \n * ```js\n * import { Circles } from 'https://unpkg.com/ixfx/dist/geometry.js'\n * const pt = Circles.nearest(circle, {x:10,y:10});\n * ```\n * \n * If an array of circles is provided, it will be the closest point amongst all the circles\n * @param circle Circle or array of circles\n * @param point\n * @returns Point `{ x, y }`\n */\nexport const nearest = (circle: CirclePositioned | readonly CirclePositioned[], b: Points.Point): Points.Point => {\n  const n = (a: CirclePositioned): Points.Point => {\n    const l = Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n    const x = a.x + (a.radius * ((b.x - a.x) / l));\n    const y = a.y + (a.radius * ((b.y - a.y) / l));\n    return {x, y};\n  };\n\n  if (Array.isArray(circle)) {\n    const pts = circle.map(l => n(l));\n    const dists = pts.map(p => Points.distance(p, b));\n    return Object.freeze<Points.Point>(pts[Arrays.minIndex(...dists)]);\n  } else {\n    return Object.freeze<Points.Point>(n(circle as CirclePositioned));\n  }\n};\n\n/**\n * Returns a positioned version of a circle.\n * If circle is already positioned, it is returned.\n * If no default position is supplied, 0,0 is used.\n * @param circle \n * @param defaultPositionOrX \n * @param y \n * @returns \n */\nexport const toPositioned = (circle: Circle | CirclePositioned, defaultPositionOrX?: Points.Point | number, y?: number): CirclePositioned => {\n  if (isPositioned(circle)) return circle;\n\n  // Returns 0,0 if params are undefined\n  const pt = Points.getPointParam(defaultPositionOrX, y);\n  return Object.freeze({\n    ...circle,\n    ...pt\n  });\n};\n/**\n * Returns a `CircularPath` representation of a circle\n *\n * @param {CirclePositioned} circle\n * @returns {CircularPath}\n */\nexport const toPath = (circle: CirclePositioned): CircularPath => {\n  guard(circle);\n\n  return Object.freeze({\n    ...circle,\n    nearest: (point: Points.Point) => nearest(circle, point),\n    /**\n     * Returns a relative (0.0-1.0) point on a circle. 0=3 o'clock, 0.25=6 o'clock, 0.5=9 o'clock, 0.75=12 o'clock etc.\n     * @param {t} Relative (0.0-1.0) point\n     * @returns {Point} X,y\n     */\n    interpolate: (t: number) => interpolate(circle, t),\n    bbox: () => bbox(circle) as Rects.RectPositioned,\n    length: () => length(circle),\n    toSvgString: (sweep = true) => toSvg(circle, sweep),\n    kind: `circular`\n  });\n};\n\n/**\n * Returns the point(s) of intersection between a circle and line.\n * \n * ```js\n * import { Circles } from \"https://unpkg.com/ixfx/dist/geometry.js\" \n * const circle = { radius: 5, x: 5, y: 5 };\n * const line = { a: { x: 0, y: 0 }, b: { x: 10, y: 10 } };\n * const pts = Circles.intersectionLine(circle, line);\n * ```\n * @param circle \n * @param line \n * @returns Point(s) of intersection, or empty array\n */\nexport const intersectionLine = (circle: CirclePositioned, line: Line): readonly Points.Point[] => {\n  const v1 = {\n    x: line.b.x - line.a.x,\n    y: line.b.y - line.a.y\n  };\n  const v2 = {\n    x: line.a.x - circle.x,\n    y: line.a.y - circle.y\n  };\n\n  const b = (v1.x * v2.x + v1.y * v2.y) * -2;\n  const c = 2 * (v1.x * v1.x + v1.y * v1.y);\n\n  const d = Math.sqrt(b * b - 2 * c * (v2.x * v2.x + v2.y * v2.y - circle.radius * circle.radius));\n  if (Number.isNaN(d)) return []; // no intercept\n\n  const u1 = (b - d) / c;  // these represent the unit distance of point one and two on the line\n  const u2 = (b + d) / c;\n\n  const ret = [];\n  if (u1 <= 1 && u1 >= 0) {  // add point if on the line segment\n    //eslint-disable-next-line functional/immutable-data\n    ret.push({\n      x: line.a.x + v1.x * u1,\n      y: line.a.y + v1.y * u1\n    });\n  }\n  if (u2 <= 1 && u2 >= 0) {  // second add point if on the line segment\n    //eslint-disable-next-line functional/immutable-data\n    ret.push({\n      x: line.a.x + v1.x * u2,\n      y: line.a.y + v1.y * u2\n    });\n  }\n  return ret;\n};\n\n","import {type CirclePositioned, intersections as circleIntersections} from \"./Circle.js\";\nimport {type RectPositioned} from \"./Rect.js\";\n\nexport const circleRect = (a: CirclePositioned, b: RectPositioned) => {\n  // https://yal.cc/rectangle-circle-intersection-test/\n  const deltaX = a.x - Math.max(b.x, Math.min(a.x, b.x + b.width));\n  const deltaY = a.y - Math.max(b.y, Math.min(a.y, b.y + b.height));\n  return (deltaX * deltaX + deltaY * deltaY) < (a.radius * a.radius);\n};\n\nexport const circleCircle = (a: CirclePositioned, b: CirclePositioned) => circleIntersections(a, b).length === 2;","import * as Timers from '../flow/Timer.js';\n\nconst piPi = Math.PI * 2;\n\nexport type SpringOpts = {\n  /**\n   * Default: 1\n   */\n  readonly mass?: number; // = 1.0\n  /**\n   * Default: 10\n   */\n  readonly damping?: number; // = 10.0\n  /**\n   * Default: 100\n   */\n  readonly stiffness?: number; // = 100.0\n  /**\n   * Default: false\n   */\n  readonly soft?: boolean; // = false\n\n  /**\n   * Default: 0.1\n   */\n  readonly velocity?: number;\n\n  /**\n   * How many iterations to wait for spring settling (default: 10)\n   */\n  readonly countdown?: number;\n};\n\nconst springRaw = (opts: SpringOpts = {}, from: number = 0, to: number = 1) => {\n  /** MIT License github.com/pushkine/ */\n  const mass = opts.mass ?? 1;\n  const stiffness = opts.stiffness ?? 100;\n  const soft = opts.soft ?? false;\n  const damping = opts.damping ?? 10;\n  const velocity = opts.velocity ?? 0.1;\n  const delta = to - from;\n  if (true === soft || 1.0 <= damping / (2.0 * Math.sqrt(stiffness * mass))) {\n    const angularFrequency = -Math.sqrt(stiffness / mass);\n    const leftover = -angularFrequency * delta - velocity;\n    return (t: number) =>\n      to - (delta + t * leftover) * Math.E ** (t * angularFrequency);\n  } else {\n    const dampingFrequency = Math.sqrt(4.0 * mass * stiffness - damping ** 2.0);\n    const leftover =\n      (damping * delta - 2.0 * mass * velocity) / dampingFrequency;\n    const dfm = (0.5 * dampingFrequency) / mass;\n    const dm = -(0.5 * damping) / mass;\n    return (t: number) =>\n      to -\n      (Math.cos(t * dfm) * delta + Math.sin(t * dfm) * leftover) *\n        Math.E ** (t * dm);\n  }\n};\n\n/**\n * Spring-style oscillation\n *\n * ```js\n * import { Oscillators } from \"https://unpkg.com/ixfx/dist/modulation.js\"\n * const spring = Oscillators.spring();\n *\n * continuously(() => {\n *  const v = spring.next().value;\n *  // Yields values 0...1\n *  //  undefined is yielded when spring is estimated to have stopped\n * });\n * ```\n *\n * Parameters to the spring can be provided.\n * ```js\n * const spring = Oscillators.spring({\n *  mass: 5,\n *  damping: 10\n *  stiffness: 100\n * });\n * ```\n * @param opts Options for spring\n * @param timerOrFreq Timer to use, or frequency\n */\n//eslint-disable-next-line func-style\nexport function* spring(\n  opts: SpringOpts = {},\n  timerOrFreq?: Timers.Timer | number | undefined\n) {\n  if (timerOrFreq === undefined) timerOrFreq = Timers.msElapsedTimer();\n  else if (typeof timerOrFreq === `number`) {\n    timerOrFreq = Timers.frequencyTimer(timerOrFreq);\n  }\n\n  const fn = springRaw(opts, 0, 1);\n\n  // Give it some iterations to settle\n  //eslint-disable-next-line functional/no-let\n  let doneCountdown = opts.countdown ?? 10;\n\n  while (doneCountdown > 0) {\n    const s = fn(timerOrFreq.elapsed / 1000);\n    yield s;\n    if (s === 1) {\n      doneCountdown--;\n    } else {\n      doneCountdown = 100;\n    }\n  }\n}\n\n/**\n * Sine oscillator.\n *\n * ```js\n * import { Oscillators } from \"https://unpkg.com/ixfx/dist/modulation.js\"\n *\n * // Setup\n * const osc = Oscillators.sine(Timers.frequencyTimer(10));\n * const osc = Oscillators.sine(0.1);\n *\n * // Call whenever a value is needed\n * const v = osc.next().value;\n * ```\n *\n * @example Saw/tri pinch\n * ```js\n * const v = Math.pow(osc.value, 2);\n * ```\n *\n * @example Saw/tri bulge\n * ```js\n * const v = Math.pow(osc.value, 0.5);\n * ```\n *\n */\n//eslint-disable-next-line func-style\nexport function* sine(timerOrFreq: Timers.Timer | number) {\n  if (typeof timerOrFreq === `number`) {\n    timerOrFreq = Timers.frequencyTimer(timerOrFreq);\n  }\n\n  while (true) {\n    // Rather than -1 to 1, we want 0 to 1\n    yield (Math.sin(timerOrFreq.elapsed * piPi) + 1) / 2;\n  }\n}\n\n/**\n * Bipolar sine (-1 to 1)\n * @param timerOrFreq\n */\n//eslint-disable-next-line func-style\nexport function* sineBipolar(timerOrFreq: Timers.Timer | number) {\n  if (typeof timerOrFreq === `number`) {\n    timerOrFreq = Timers.frequencyTimer(timerOrFreq);\n  }\n  while (true) {\n    yield Math.sin(timerOrFreq.elapsed * piPi);\n  }\n}\n\n/**\n * Triangle oscillator\n *\n * ```js\n * // Setup\n * const osc = triangle(Timers.frequencyTimer(0.1));\n * const osc = triangle(0.1);\n *\n * // Call whenver a value is needed\n * const v = osc.next().value;\n * ```\n */\n//eslint-disable-next-line func-style\nexport function* triangle(timerOrFreq: Timers.Timer | number) {\n  if (typeof timerOrFreq === `number`) {\n    timerOrFreq = Timers.frequencyTimer(timerOrFreq);\n  }\n  while (true) {\n    // elapsed is repeatedly 0->1\n    //eslint-disable-next-line functional/no-let\n    let v = timerOrFreq.elapsed;\n    // /2 = 0->0.5\n    if (v < 0.5) {\n      // Upward\n      v *= 2;\n    } else {\n      // Downward\n      v = 2 - v * 2;\n    }\n    yield v;\n  }\n}\n\n/**\n * Saw oscillator\n *\n * ```js\n * import { Oscillators } from \"https://unpkg.com/ixfx/dist/modulation.js\"\n *\n * // Setup\n * const osc = Oscillators.saw(Timers.frequencyTimer(0.1));\n *\n * // Or\n * const osc = Oscillators.saw(0.1);\n *\n * // Call whenever a value is needed\n * const v = osc.next().value;\n * ```\n */\n//eslint-disable-next-line func-style\nexport function* saw(timerOrFreq: Timers.Timer | number) {\n  if (typeof timerOrFreq === `number`) {\n    timerOrFreq = Timers.frequencyTimer(timerOrFreq);\n  }\n  while (true) {\n    yield timerOrFreq.elapsed;\n  }\n}\n\n/**\n * Square oscillator\n *\n * ```js\n * import { Oscillators } from \"https://unpkg.com/ixfx/dist/modulation.js\"\n *\n * // Setup\n * const osc = Oscillators.square(Timers.frequencyTimer(0.1));\n * const osc = Oscillators.square(0.1);\n *\n * // Call whenever a value is needed\n * osc.next().value;\n * ```\n */\n//eslint-disable-next-line func-style\nexport function* square(timerOrFreq: Timers.Timer | number) {\n  if (typeof timerOrFreq === `number`) {\n    timerOrFreq = Timers.frequencyTimer(timerOrFreq);\n  }\n  while (true) {\n    yield timerOrFreq.elapsed < 0.5 ? 0 : 1;\n  }\n}\n","import {\n  type RandomSource,\n  floatFn as randomFloatFn,\n  float as randomFloat,\n} from '../Random.js';\nimport { clamp } from '../data/Clamp.js';\nimport { number as guardNumber } from '../Guards.js';\n\nexport type JitterOpts = {\n  readonly relative?: number;\n  readonly absolute?: number;\n  readonly clamped?: boolean;\n  readonly source?: RandomSource;\n};\n\nexport type JitterFn = (value: number) => number;\n\n/**\n * Jitters `value` by the absolute `jitter` amount. Returns a function.\n *\n * All values should be on a 0..1 scale, and the return value is by default clamped to 0..1.\n * Pass `clamped:false` as an option to allow for arbitary ranges.\n *\n * `jitter` returns a function that calculates jitter. If you only need a one-off\n * jitter, you can immediately execute the returned function:\n * ```js\n * import { jitter } from 'https://unpkg.com/ixfx/dist/modulation.js';\n * // Compute 10% jitter of input 0.5\n * const value = jitter({ relative: 0.1 })(0.5);\n * ```\n *\n * However, if the returned jitter function is to be used again,\n * assign it to a variable:\n * ```js\n * import { jitter } from 'https://unpkg.com/ixfx/dist/modulation.js';\n * const myJitter = jitter({ absolute: 0.5 });\n *\n * // Jitter an input value 1.0\n * const value = myJitter(1);\n * ```\n *\n * A custom source for random numbers can be provided. Eg, use a weighted\n * random number generator:\n *\n * ```js\n * import { weighted } from 'https://unpkg.com/ixfx/dist/random.js';\n * jitter({ relative: 0.1, source: weighted });\n * ```\n *\n * Options\n * * clamped: If false, `value`s out of percentage range can be used and return value may be beyond percentage range. True by default\n * * random: Random source (default is Math.random)\n * @param opts Options\n * @returns Function that performs jitter\n */\nexport const jitter = (opts: JitterOpts = {}): JitterFn => {\n  const clamped = opts.clamped ?? true;\n  //eslint-disable-next-line functional/no-let\n  let r = (_: number) => 0;\n  if (typeof opts.absolute !== 'undefined') {\n    guardNumber(\n      opts.absolute,\n      clamped ? `percentage` : `bipolar`,\n      `opts.absolute`\n    );\n    const absRand = randomFloatFn({\n      min: -opts.absolute!,\n      max: opts.absolute!,\n      source: opts.source,\n    });\n    r = (v: number) => v + absRand();\n  } else if (typeof opts.relative !== 'undefined') {\n    guardNumber(\n      opts.relative,\n      clamped ? `percentage` : `bipolar`,\n      `opts.relative`\n    );\n    r = (v: number) =>\n      v +\n      randomFloat({\n        min: -opts.relative! * v,\n        max: opts.relative! * v,\n        source: opts.source,\n      });\n  } else {\n    throw new Error(`Either absolute or relative jitter amount is required.`);\n  }\n\n  const compute = (value: number) => {\n    guardNumber(value, clamped ? `percentage` : `bipolar`, `value`);\n    //eslint-disable-next-line functional/no-let\n    let v = r(value);\n    if (clamped) v = clamp(v);\n    return v;\n    // let v:number;\n    // if (typeof amtRel !== 'undefined') {\n    //   const jitterAmt = value * amtRel;\n    //   const j = jitterAmt * 2 * rand();\n    //   v = value - jitterAmt + j;\n    // } else if (typeof amtAbs !== 'undefined') {\n    //   const r = randomFloat({})\n    //   const j = (amtAbs * 2 * rand()) - amtAbs;\n    //   v = value - amtAbs + j;\n    // } else {\n    //   throw new Error(`Either absolute or relative jitter amount is required.`);\n    // }\n    // if (clamped) return clamp(v);\n    // return v;\n  };\n  return compute;\n};\n","import { number as guardNumber } from '../Guards.js';\n\n/**\n * Continually loops up and down between 0 and 1 by a specified interval.\n * Looping returns start value, and is inclusive of 0 and 1.\n *\n * @example Usage\n * ```js\n * import {percentPingPong} from 'https://unpkg.com/ixfx/dist/modulation.js';\n * for (const v of percentPingPong(0.1)) {\n *  // v will go up and down. Make sure you have a break somewhere because it is infinite\n * }\n * ```\n *\n * @example Alternative:\n * ```js\n * const pp = pingPongPercent(0.1, 0.5); // Setup generator one time\n * const v = pp.next().value; // Call .next().value whenever a new value is needed\n * ```\n *\n * Because limits are capped to -1 to 1, using large intervals can produce uneven distribution. Eg an interval of 0.8 yields 0, 0.8, 1\n *\n * `upper` and `lower` define the percentage range. Eg to ping pong between 40-60%:\n * ```\n * const pp = pingPongPercent(0.1, 0.4, 0.6);\n * ```\n * @param interval Amount to increment by. Defaults to 10%\n * @param start Starting point within range. Defaults to 0 using a positive interval or 1 for negative intervals\n * @param rounding Rounding to apply. This avoids floating-point rounding errors.\n */\nexport const pingPongPercent = function (\n  interval: number = 0.1,\n  lower?: number,\n  upper?: number,\n  start?: number,\n  rounding?: number\n) {\n  if (lower === undefined) lower = 0;\n  if (upper === undefined) upper = 1;\n  if (start === undefined) start = lower;\n\n  guardNumber(interval, `bipolar`, `interval`);\n  guardNumber(upper, `bipolar`, `end`);\n  guardNumber(start, `bipolar`, `offset`);\n  guardNumber(lower, `bipolar`, `start`);\n  return pingPong(interval, lower, upper, start, rounding);\n};\n\n/**\n * Ping-pongs continually back and forth `start` and `end` with a given `interval`. Use `pingPongPercent` for 0-1 ping-ponging\n *\n * In a loop:\n * ```\n * for (const c of pingPong(10, 0, 100)) {\n *  // 0, 10, 20 .. 100, 90, 80, 70 ...\n * }\n * ```\n *\n * Manual:\n * ```\n * const pp = pingPong(10, 0, 100);\n * let v = pp.next().value; // Call .next().value whenever a new value is needed\n * ```\n * @param interval Amount to increment by. Use negative numbers to start counting down\n * @param lower Lower bound (inclusive)\n * @param upper Upper bound (inclusive, must be greater than start)\n * @param start Starting point within bounds (defaults to `lower`)\n * @param rounding Rounding is off by default. Use say 1000 if interval is a fractional amount to avoid rounding errors.\n */\nexport const pingPong = function* (\n  interval: number,\n  lower: number,\n  upper: number,\n  start?: number,\n  rounding?: number\n) {\n  if (lower === undefined) throw new Error(`Parameter 'lower' is undefined`);\n  if (interval === undefined) {\n    throw new Error(`Parameter 'interval' is undefined`);\n  }\n  if (upper === undefined) throw new Error(`Parameter 'upper' is undefined`);\n\n  if (rounding === undefined && interval <= 1 && interval >= 0) {\n    rounding = 10 / interval;\n  } else if (rounding === undefined) rounding = 1234;\n\n  if (Number.isNaN(interval)) throw new Error(`interval parameter is NaN`);\n  if (Number.isNaN(lower)) throw new Error(`lower parameter is NaN`);\n  if (Number.isNaN(upper)) throw new Error(`upper parameter is NaN`);\n  if (Number.isNaN(start)) throw new Error(`upper parameter is NaN`);\n\n  if (lower >= upper) throw new Error(`lower must be less than upper`);\n  if (interval === 0) throw new Error(`Interval cannot be zero`);\n  const distance = upper - lower;\n  if (Math.abs(interval) >= distance) {\n    throw new Error(`Interval should be between -${distance} and ${distance}`);\n  }\n\n  //eslint-disable-next-line functional/no-let\n  let incrementing = interval > 0;\n\n  // Scale up values by rounding factor\n  upper = Math.floor(upper * rounding);\n  lower = Math.floor(lower * rounding);\n  interval = Math.floor(Math.abs(interval * rounding));\n\n  if (interval === 0) {\n    throw new Error(`Interval is zero (rounding: ${rounding})`);\n  }\n  if (start === undefined) start = lower;\n  else start = Math.floor(start * rounding);\n  if (start > upper || start < lower) {\n    throw new Error(\n      `Start (${start / rounding}) must be within lower (${\n        lower / rounding\n      }) and upper (${upper / rounding})`\n    );\n  }\n\n  //eslint-disable-next-line functional/no-let\n  let v = start;\n  yield v / rounding;\n  //eslint-disable-next-line functional/no-let\n  let firstLoop = true;\n  while (true) {\n    v = v + (incrementing ? interval : -interval);\n    if (incrementing && v >= upper) {\n      incrementing = false;\n      v = upper;\n      if (v === upper && firstLoop) {\n        // Edge case where we start at upper bound and increment\n        v = lower;\n        incrementing = true;\n      }\n    } else if (!incrementing && v <= lower) {\n      incrementing = true;\n      v = lower;\n      if (v === lower && firstLoop) {\n        // Edge case where we start at lower bound and decrement\n        v = upper;\n        incrementing = false;\n      }\n    }\n    yield v / rounding;\n    firstLoop = false;\n  }\n};\n","import { type StateChangeEvent } from '../flow/StateMachineWithEvents.js';\nimport { type Transitions } from '../flow/StateMachine.js';\nexport { type StateChangeEvent };\n\n/**\n * Generic support for Bluetooth LE devices\n */\nexport * as Bluetooth from './NordicBleDevice.js';\n\nexport * as AudioAnalysers from './AudioAnalyser.js';\nexport * as AudioVisualisers from './AudioVisualiser.js';\n\nexport { StringReceiveBuffer } from './StringReceiveBuffer.js';\nexport {\n  StringWriteBuffer,\n  type Opts as StringWriteBufferOpts,\n} from './StringWriteBuffer.js';\nexport { Codec } from './Codec.js';\n\n/**\n * Espruino-based devices connected via Bluetooth LE\n *\n * See [demos](https://clinth.github.io/ixfx-demos/io/)\n *\n * Overview:\n * * {@link puck}: Connects a [Espruino BLE Device](../classes/Io.Espruino.EspruinoBleDevice.html).\n * * {@link Espruino.connectBle}: Connect to a generic Espruino via BLE\n */\nexport * as Espruino from './Espruino.js';\n\nexport * as Camera from './Camera.js';\n\nexport * as VideoFile from './VideoFile.js';\n\nexport { FrameProcessor } from './FrameProcessor.js';\nexport type { FrameProcessorOpts } from './FrameProcessor.js';\n\n/**\n * Microcontrollers such as Arduinos connected via USB serial\n *\n * Overview\n * * {@link Serial.Device}\n *\n */\nexport * as Serial from './Serial.js';\n\nexport type IoDataEvent = {\n  readonly data: string;\n};\n\nexport type IoEvents<StateMachineTransitions extends Transitions> = {\n  readonly data: IoDataEvent;\n  readonly change: StateChangeEvent<StateMachineTransitions>;\n};\n\nexport const genericStateTransitionsInstance = Object.freeze({\n  ready: `connecting`,\n  connecting: [`connected`, `closed`],\n  connected: [`closed`],\n  closed: `connecting`,\n});\n\n//eslint-disable-next-line @typescript-eslint/naming-convention\nexport type GenericStateTransitions = Readonly<\n  typeof genericStateTransitionsInstance\n>;\n","import { BleDevice } from './BleDevice.js';\n\nexport const defaultOpts = {\n  chunkSize: 20,\n  service: `6e400001-b5a3-f393-e0a9-e50e24dcca9e`,\n  txGattCharacteristic: `6e400002-b5a3-f393-e0a9-e50e24dcca9e`,\n  rxGattCharacteristic: `6e400003-b5a3-f393-e0a9-e50e24dcca9e`,\n  name: `NordicDevice`,\n  connectAttempts: 5,\n  debug: false,\n};\n\nexport type Opts = {\n  readonly chunkSize?: number;\n  readonly name?: string;\n  readonly connectAttempts?: number;\n  readonly debug?: boolean;\n};\n\nexport class NordicBleDevice extends BleDevice {\n  constructor(device: BluetoothDevice, opts: Opts = {}) {\n    super(device, { ...defaultOpts, ...opts });\n  }\n}\n","/**\n * Handles utf-8 text encoding/decoding\n */\nexport class Codec {\n  enc = new TextEncoder();\n  dec = new TextDecoder(`utf-8`);\n\n  /**\n   * Convert string to Uint8Array buffer\n   * @param str\n   * @returns\n   */\n  toBuffer(str: string) {\n    return this.enc.encode(str);\n  }\n\n  /**\n   * Returns a string from a provided buffer\n   * @param buffer\n   * @returns\n   */\n  fromBuffer(buffer: ArrayBuffer) {\n    return this.dec.decode(buffer);\n  }\n}\n","/**\n * Receives text\n */\nexport class StringReceiveBuffer {\n  buffer: string = ``;\n  stream: WritableStream<string> | undefined;\n\n  constructor(\n    private onData: (data: string) => void,\n    public separator = `\\n`\n  ) {}\n\n  async close() {\n    const s = this.stream;\n    if (!s) return;\n    await s.abort();\n\n    await s.close();\n  }\n\n  clear() {\n    this.buffer = ``;\n  }\n\n  writable() {\n    if (this.stream === undefined) this.stream = this.createWritable();\n    return this.stream;\n  }\n\n  private createWritable() {\n    //eslint-disable-next-line @typescript-eslint/no-this-alias\n    const b = this;\n    return new WritableStream<string>({\n      write(chunk) {\n        b.add(chunk);\n      },\n      close() {\n        b.clear();\n      },\n    });\n  }\n\n  addImpl(str: string): string {\n    // Look for separator in new string\n    const pos = str.indexOf(this.separator);\n    if (pos < 0) {\n      // Not found, just add to buffer and return\n      this.buffer += str;\n      return ``;\n    }\n\n    // Found! Trigger callback for existing buffer and part of new string\n    const part = str.substring(0, pos);\n    try {\n      this.onData(this.buffer + part);\n      str = str.substring(part.length + this.separator.length);\n    } catch (ex) {\n      console.warn(ex);\n    }\n\n    this.buffer = ``;\n\n    return str;\n  }\n\n  add(str: string) {\n    while (str.length > 0) {\n      str = this.addImpl(str);\n    }\n  }\n}\n","import { QueueMutable } from '../collections/queue/QueueMutable.js';\nimport {\n  type Continuously,\n  continuously,\n  type Interval,\n} from '../flow/index.js';\nimport { splitByLength } from '../Text.js';\n\nexport type Opts = {\n  readonly chunkSize?: number;\n  readonly interval?: Interval;\n};\n\n/**\n * Buffers a queue of strings.\n *\n * When text is queued via {@link add}, it is chopped up\n * into chunks and sent in serial to the `dataHandler` function.\n * Data is processed at a set rate, by default 10ms.\n *\n * ```js\n * const dataHandler = (data:string) => {\n *  // Do something with queued data.\n *  // eg. send to serial port\n * }\n *\n * // Create a buffer with a chunk size of 100 characters\n * const b = new StringWriteBuffer(dataHandler, { chunkSize: 100 });\n * b.add('some text'); // Write to buffer\n * // dataHandler will be called until queued data is empty\n * ```\n *\n * It's also possible to get the buffer as a WritableStream<string>:\n * ```js\n * const dataHandler = (data:string) => { ... }\n * const b = new StringWriteBuffer(dataHandler, 100);\n * const s = b.writable();\n * ```\n *\n * Other functions:\n * ```js\n * b.close(); // Close buffer\n * b.clear(); // Clear queued data, but don't close anything\n * ```\n */\nexport class StringWriteBuffer {\n  paused = false;\n  queue = new QueueMutable<string>();\n  writer: Continuously;\n  stream: WritableStream<string> | undefined;\n  closed = false;\n  chunkSize: number;\n\n  /**\n   * Constructor\n   * @param dataHandler Calback to 'send' data onwards\n   * @param chunkSize Size to break up strings\n   */\n  constructor(\n    private dataHandler: (data: string) => Promise<void>,\n    opts: Opts = {}\n  ) {\n    this.chunkSize = opts.chunkSize ?? -1;\n    this.writer = continuously(this.onWrite, opts.interval ?? 10);\n  }\n\n  /**\n   * Close writer (async)\n   */\n  async close() {\n    if (this.closed) return;\n    const w = this.stream?.getWriter();\n    w?.releaseLock();\n    await w?.close();\n    this.closed = true;\n  }\n\n  /**\n   * Clear queued data.\n   *\n   * Throws an error if {@link close} has been called.\n   */\n  clear() {\n    if (this.closed) throw new Error(`Buffer closed`);\n    this.queue = new QueueMutable<string>();\n  }\n\n  /**\n   * Gets the buffer as a writable stream.\n   *\n   * Do not close stream directly, use .close on this class instead.\n   *\n   * Throws an error if .close() has been called.\n   * @returns Underlying stream\n   */\n  writable() {\n    if (this.closed) throw new Error(`Buffer closed`);\n    if (this.stream === undefined) this.stream = this.createWritable();\n    return this.stream;\n  }\n\n  private createWritable() {\n    //eslint-disable-next-line @typescript-eslint/no-this-alias\n    const b = this;\n    return new WritableStream<string>({\n      write(chunk) {\n        b.add(chunk);\n      },\n      close() {\n        b.clear();\n      },\n    });\n  }\n\n  /**\n   * Run in a `continunously` loop to process queued data\n   * @returns _False_ if queue is empty and loop should stop. _True_ if it shoud continue.\n   */\n  async onWrite(): Promise<boolean> {\n    if (this.queue.isEmpty) {\n      //console.warn(`WriteBuffer.onWrite: queue empty`);\n      return false; // Stop continuously\n    }\n\n    if (this.paused) {\n      console.warn(`WriteBuffer.onWrite: paused...`);\n      return true; // Keep going tho\n    }\n\n    // Dequeue and send\n    const s = this.queue.dequeue();\n    if (s === undefined) return false;\n    await this.dataHandler(s);\n\n    return true;\n  }\n\n  /**\n   * Returns _true_ if {@link close} has been called.\n   */\n  get isClosed() {\n    return this.closed;\n  }\n\n  /**\n   * Adds some queued data to send.\n   * Longer strings are automatically chunked up according to the buffer's settings.\n   *\n   * Throws an error if {@link close} has been called.\n   * @param str\n   */\n  add(str: string) {\n    if (this.closed) throw new Error(`Buffer closed`);\n    // Add whole string or chunked string\n    if (this.chunkSize > 0) {\n      this.queue.enqueue(...splitByLength(str, this.chunkSize));\n    } else {\n      this.queue.enqueue(str);\n    }\n\n    // Run continuously loop if it's not already running\n    this.writer.start();\n  }\n}\n","import { SimpleEventEmitter } from '../Events.js';\nimport * as StateMachine from '../flow/StateMachine.js';\n\nimport { indexOfCharCode, omitChars } from '../Text.js';\nimport { Codec } from './Codec.js';\nimport { StringReceiveBuffer } from './StringReceiveBuffer.js';\nimport { StringWriteBuffer } from './StringWriteBuffer.js';\nimport { retry } from '../flow/Retry.js';\nimport {\n  genericStateTransitionsInstance,\n  type GenericStateTransitions,\n  type IoEvents,\n} from './index.js';\n\nexport type Opts = {\n  readonly service: string;\n  readonly rxGattCharacteristic: string;\n  readonly txGattCharacteristic: string;\n  readonly chunkSize: number;\n  readonly name: string;\n  readonly connectAttempts: number;\n  readonly debug: boolean;\n};\n\nconst reconnect = async () => {\n  console.log(`Connect?`);\n  if (!(`bluetooth` in navigator)) return false;\n  if (!(`getDevices` in navigator.bluetooth)) return false;\n\n  const devices = await navigator.bluetooth.getDevices();\n  console.log(devices);\n\n  for (const device of devices) {\n    console.log(device);\n    // Start a scan for each device before connecting to check that they're in\n    // range.\n    const abortController = new AbortController();\n    await device.watchAdvertisements({ signal: abortController.signal });\n    device.addEventListener(`advertisementreceived`, async (evt) => {\n      console.log(evt);\n      // Stop the scan to conserve power on mobile devices.\n      abortController.abort();\n\n      // At this point, we know that the device is in range, and we can attempt\n      // to connect to it.\n      await evt.device.gatt?.connect();\n      console.log(`Connected!`);\n    });\n  }\n};\n\nexport class BleDevice extends SimpleEventEmitter<\n  IoEvents<GenericStateTransitions>\n> {\n  states: StateMachine.WithEvents<GenericStateTransitions>;\n  codec: Codec;\n  rx: BluetoothRemoteGATTCharacteristic | undefined;\n  tx: BluetoothRemoteGATTCharacteristic | undefined;\n  gatt: BluetoothRemoteGATTServer | undefined;\n  verboseLogging = false;\n\n  rxBuffer: StringReceiveBuffer;\n  txBuffer: StringWriteBuffer;\n\n  constructor(\n    private device: BluetoothDevice,\n    private config: Opts\n  ) {\n    super();\n    this.verboseLogging = config.debug;\n    this.txBuffer = new StringWriteBuffer(async (data) => {\n      await this.writeInternal(data);\n    }, config);\n\n    this.rxBuffer = new StringReceiveBuffer((line) => {\n      this.fireEvent(`data`, { data: line });\n    });\n\n    this.codec = new Codec();\n    this.states = new StateMachine.WithEvents<GenericStateTransitions>(\n      genericStateTransitionsInstance,\n      {\n        initial: `ready`,\n      }\n    );\n    this.states.addEventListener(`change`, (evt) => {\n      this.fireEvent(`change`, evt);\n      this.verbose(`${evt.priorState} -> ${evt.newState}`);\n\n      if (evt.priorState === `connected`) {\n        // Clear out buffers\n        this.rxBuffer.clear();\n        this.txBuffer.clear();\n      }\n    });\n\n    device.addEventListener(`gattserverdisconnected`, () => {\n      if (this.isClosed) return;\n      this.verbose(`GATT server disconnected`);\n      this.states.state = `closed`;\n    });\n\n    this.verbose(`ctor ${device.name} ${device.id}`);\n  }\n\n  get isConnected(): boolean {\n    return this.states.state === `connected`;\n  }\n\n  get isClosed(): boolean {\n    return this.states.state === `closed`;\n  }\n\n  write(txt: string) {\n    if (this.states.state !== `connected`) {\n      throw new Error(`Cannot write while state is ${this.states.state}`);\n    }\n    this.txBuffer.add(txt);\n  }\n\n  private async writeInternal(txt: string) {\n    this.verbose(`writeInternal ${txt}`);\n    const tx = this.tx;\n    if (tx === undefined) {\n      throw new Error(`Unexpectedly without tx characteristic`);\n    }\n    try {\n      await tx.writeValue(this.codec.toBuffer(txt));\n    } catch (ex: unknown) {\n      this.warn(ex);\n    }\n  }\n\n  disconnect() {\n    if (this.states.state !== `connected`) return;\n    this.gatt?.disconnect();\n  }\n\n  async connect() {\n    const attempts = this.config.connectAttempts ?? 3;\n\n    this.states.state = `connecting`;\n\n    this.verbose(`connect`);\n    const gatt = this.device.gatt;\n    if (gatt === undefined) throw new Error(`Gatt not available on device`);\n\n    await retry(\n      async () => {\n        const server = await gatt.connect();\n        this.verbose(`Getting primary service`);\n        const service = await server.getPrimaryService(this.config.service);\n        this.verbose(`Getting characteristics`);\n        const rx = await service.getCharacteristic(\n          this.config.rxGattCharacteristic\n        );\n        const tx = await service.getCharacteristic(\n          this.config.txGattCharacteristic\n        );\n\n        rx.addEventListener(`characteristicvaluechanged`, (evt) =>\n          this.onRx(evt)\n        );\n        this.rx = rx;\n        this.tx = tx;\n        this.gatt = gatt;\n        this.states.state = `connected`;\n\n        await rx.startNotifications();\n        return true;\n      },\n      {\n        count: attempts,\n        startMs: 200,\n      }\n    );\n  }\n\n  private onRx(evt: Event) {\n    const rx = this.rx;\n    if (rx === undefined) return;\n\n    //eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const view = (evt.target as any).value as DataView;\n    if (view === undefined) return;\n\n    //eslint-disable-next-line functional/no-let\n    let str = this.codec.fromBuffer(view.buffer);\n\n    // Check for flow control chars\n    const plzStop = indexOfCharCode(str, 19);\n    const plzStart = indexOfCharCode(str, 17);\n\n    // Remove if found\n    if (plzStart && plzStop < plzStart) {\n      this.verbose(`Tx plz start`);\n      str = omitChars(str, plzStart, 1);\n      this.txBuffer.paused = false;\n    }\n    if (plzStop && plzStop > plzStart) {\n      this.verbose(`Tx plz stop`);\n      str = omitChars(str, plzStop, 1);\n      this.txBuffer.paused = true;\n    }\n\n    this.rxBuffer.add(str);\n  }\n\n  protected verbose(m: string) {\n    if (this.verboseLogging) console.info(`${this.config.name} `, m);\n  }\n\n  protected log(m: string) {\n    console.log(`${this.config.name} `, m);\n  }\n\n  protected warn(m: unknown) {\n    console.warn(`${this.config.name} `, m);\n  }\n}\n","import { Arrays } from '../collections/index.js';\nimport AudioVisualiser from './AudioVisualiser.js';\nimport { number as guardNumber, integer as guardInteger } from '../Guards.js';\nimport { isPowerOfTwo } from '../Util.js';\n\n/**\n * Options for audio processing\n *\n * fftSize: Must be a power of 2, from 32 - 32768. Higher number means\n * more precision and higher CPU overhead\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/fftSize\n *\n * smoothingTimeConstant: Range from 0-1, default is 0.8.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/smoothingTimeConstant\n *\n * debug: If true, additonal console logging will happen\n */\nexport type Opts = {\n  readonly showVis?: boolean;\n  /**\n   * FFT size. Must be a power of 2, from 32 - 32768. Higher number means\n   * more precision and higher CPU overhead\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/fftSize\n   */\n  readonly fftSize?: number;\n  /**\n   * Range from 0-1, default is 0.8\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/smoothingTimeConstant\n   */\n  readonly smoothingTimeConstant?: number;\n  readonly debug?: boolean;\n};\n\nexport type DataAnalyser = (\n  node: AnalyserNode,\n  analyser: AudioAnalyser\n) => void;\n\n/**\n * Basic audio analyser. Returns back waveform and FFT analysis. Use {@link peakLevel} if you want sound level, or {@link freq} if you just want FFT results.\n *\n * ```js\n * const onData = (freq, wave, analyser) => {\n *  // Demo: Get FFT results just for 100Hz-1KHz.\n *  const freqSlice = analyser.sliceByFrequency(100,1000,freq);\n *\n *  // Demo: Get FFT value for a particular frequency (1KHz)\n *  const amt = freq[analyser.getIndexForFrequency(1000)];\n * }\n * basic(onData, {fftSize: 512});\n * ```\n *\n * An `Analyser` instance is returned and can be controlled:\n * ```js\n * const analyser = basic(onData);\n * analyser.paused = true;\n * ```\n *\n * Note: Browers won't allow microphone access unless the call has come from a user-interaction, eg pointerup event handler.\n *\n * @param onData Handler for data\n * @param opts Options\n * @returns Analyser instance\n */\nexport const basic = (\n  onData: (\n    freq: Float32Array,\n    wave: Float32Array,\n    analyser: AudioAnalyser\n  ) => void,\n  opts: Opts = {}\n): AudioAnalyser =>\n  new AudioAnalyser((node, analyser) => {\n    // Get frequency and amplitude data\n    const freq = new Float32Array(node.frequencyBinCount);\n    const wave = new Float32Array(node.fftSize);\n\n    // Load arrays with data\n    node.getFloatFrequencyData(freq);\n    node.getFloatTimeDomainData(wave);\n\n    // Send back\n    onData(freq, wave, analyser);\n  }, opts);\n\n/**\n * Basic audio analyser. Returns FFT analysis. Use {@link peakLevel} if you want the sound level, or {@link basic} if you also want the waveform.\n *\n * ```js\n * const onData = (freq, analyser) => {\n *  // Demo: Print out each sound frequency (Hz) and amount of energy in that band\n *  for (let i=0;i<freq.length;i++) {\n *    const f = analyser.getFrequencyAtIndex(0);\n *    console.log(`${i}. frequency: ${f} amount: ${freq[i]}`);\n *  }\n * }\n * freq(onData, {fftSize:512});\n * ```\n *\n * Note: Browers won't allow microphone access unless the call has come from a user-interaction, eg pointerup event handler.\n *\n * @param onData\n * @param opts\n * @returns\n */\nexport const freq = (\n  onData: (freq: Float32Array, analyser: AudioAnalyser) => void,\n  opts: Opts = {}\n): AudioAnalyser =>\n  new AudioAnalyser((node, analyser) => {\n    const freq = new Float32Array(node.frequencyBinCount);\n    node.getFloatFrequencyData(freq);\n    onData(freq, analyser);\n  }, opts);\n\n/**\n * Basic audio analyser which reports the peak sound level.\n *\n * ```js\n * peakLevel(level => {\n *  console.log(level);\n * });\n * ```\n *\n * Note: Browers won't allow microphone access unless the call has come from a user-interaction, eg pointerup event handler.\n * @param onData\n * @param opts\n * @returns\n */\nexport const peakLevel = (\n  onData: (level: number, analyser: AudioAnalyser) => void,\n  opts: Opts = {}\n): AudioAnalyser =>\n  new AudioAnalyser((node, analyser) => {\n    const wave = new Float32Array(node.fftSize);\n    node.getFloatTimeDomainData(wave);\n    onData(Arrays.maxFast(wave), analyser);\n  }, opts);\n\n/**\n * Helper for doing audio analysis. It takes case of connecting the audio stream, running in a loop and pause capability.\n *\n * Provide a function which works with an [AnalyserNode](https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode), and does something with the result.\n * ```js\n * const myAnalysis = (node, analyser) => {\n *  const freq = new Float32Array(node.frequencyBinCount);\n *  node.getFloatFrequencyData(freq);\n *  // Do something with frequency data...\n * }\n * const a = new Analyser(myAnalysis);\n * ```\n *\n * Two helper functions provide ready-to-use Analysers:\n * * {@link peakLevel} peak decibel reading\n * * {@link freq} FFT results\n * * {@link basic} FFT results and waveform\n *\n * Note: Browers won't allow microphone access unless the call has come from a user-interaction, eg pointerup event handler.\n *\n */\nexport class AudioAnalyser {\n  showVis: boolean;\n  fftSize: number;\n  smoothingTimeConstant: number;\n  #isPaused = false;\n  debug: boolean;\n  #initInProgress = false;\n\n  visualiser: AudioVisualiser | undefined;\n  audioCtx: AudioContext | undefined;\n  analyserNode: AnalyserNode | undefined;\n\n  analyse: DataAnalyser;\n\n  constructor(analyse: DataAnalyser, opts: Opts = {}) {\n    this.showVis = opts.showVis ?? false;\n    this.fftSize = opts.fftSize ?? 1024;\n    this.debug = opts.debug ?? false;\n    this.smoothingTimeConstant = opts.smoothingTimeConstant ?? 0.8;\n\n    guardInteger(this.fftSize, `positive`, `opts.fftSize`);\n    guardNumber(\n      this.smoothingTimeConstant,\n      `percentage`,\n      `opts.smoothingTimeConstant`\n    );\n\n    if (!isPowerOfTwo(this.fftSize))\n      throw new Error(\n        `fftSize must be a power of two from 32 to 32768 (${this.fftSize})`\n      );\n    if (this.fftSize < 32) throw new Error(`fftSize must be at least 32`);\n    if (this.fftSize > 32768)\n      throw new Error(`fftSize must be no greater than 32768`);\n\n    this.analyse = analyse;\n    this.paused = false;\n\n    this.init();\n\n    const visualiserEl = document.getElementById(`audio-visualiser`);\n    if (visualiserEl) {\n      const visualiser = new AudioVisualiser(visualiserEl, this);\n      visualiser.setExpanded(this.showVis);\n      this.visualiser = visualiser;\n    }\n  }\n\n  init() {\n    if (this.#initInProgress) {\n      if (this.debug) console.debug(`Init already in progress`);\n      return;\n    }\n    this.#initInProgress = true;\n\n    // Initalise microphone\n    navigator.mediaDevices\n      .getUserMedia({ audio: true })\n      .then((stream) => {\n        this.onMicSuccess(stream);\n      })\n      .catch((err) => {\n        this.#initInProgress = false;\n        console.error(err);\n      });\n  }\n\n  get paused(): boolean {\n    return this.#isPaused;\n  }\n\n  set paused(v: boolean) {\n    if (v === this.#isPaused) return;\n    this.#isPaused = v;\n    if (!v) {\n      if (this.debug) console.log(`Unpaused`);\n      window.requestAnimationFrame(this.analyseLoop.bind(this));\n    } else {\n      if (this.debug) console.log(`Paused`);\n    }\n  }\n\n  private setup(audioCtx: AudioContext, stream: MediaStream) {\n    const analyser = audioCtx.createAnalyser();\n\n    // fftSize must be a power of 2. Higher values slower, more detailed\n    // Range is 32-32768\n    analyser.fftSize = this.fftSize;\n\n    // smoothingTimeConstant ranges from 0.0 to 1.0\n    // 0 = no averaging. Fast response, jittery\n    // 1 = maximum averaging. Slow response, smooth\n    analyser.smoothingTimeConstant = this.smoothingTimeConstant;\n\n    // Microphone -> analyser\n    const micSource = audioCtx.createMediaStreamSource(stream);\n    micSource.connect(analyser);\n    return analyser;\n  }\n\n  // Microphone successfully initalised, now have access to audio data\n  private onMicSuccess(stream: MediaStream) {\n    try {\n      const audioCtx = new AudioContext();\n\n      audioCtx.addEventListener(`statechange`, () => {\n        if (this.debug) console.log(`Audio context state: ${audioCtx.state}`);\n      });\n\n      this.audioCtx = audioCtx;\n      this.analyserNode = this.setup(audioCtx, stream);\n\n      // Start loop\n      window.requestAnimationFrame(this.analyseLoop.bind(this));\n    } catch (ex) {\n      this.#initInProgress = false;\n      console.error(ex);\n    }\n  }\n\n  private analyseLoop() {\n    if (this.paused) {\n      if (this.debug) console.log(`Paused`);\n      return;\n    }\n\n    const a = this.analyserNode;\n    if (a === undefined) {\n      console.warn(`Analyser undefined`);\n      return;\n    }\n\n    try {\n      // Perform analysis\n      this.analyse(a, this);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // Run again\n    window.requestAnimationFrame(this.analyseLoop.bind(this));\n  }\n\n  // visualise(wave, freq) {\n  //   if (!this.visualiser) return;\n  //   this.visualiser.renderWave(wave, true);\n  //   this.visualiser.renderFreq(freq);\n  // }\n\n  /**\n   * Returns the maximum FFT value within the given frequency range\n   */\n  getFrequencyRangeMax(\n    lowFreq: number,\n    highFreq: number,\n    freqData: readonly number[]\n  ): number {\n    const samples = this.sliceByFrequency(lowFreq, highFreq, freqData);\n    return Arrays.max(samples);\n  }\n\n  /**\n   * Returns a sub-sampling of frequency analysis data that falls between\n   * `lowFreq` and `highFreq`.\n   * @param lowFreq Low frequency\n   * @param highFreq High frequency\n   * @param freqData Full-spectrum frequency data\n   * @returns Sub-sampling of analysis\n   */\n  sliceByFrequency(\n    lowFreq: number,\n    highFreq: number,\n    freqData: readonly number[]\n  ) {\n    const lowIndex = this.getIndexForFrequency(lowFreq);\n    const highIndex = this.getIndexForFrequency(highFreq);\n\n    // Grab a 'slice' of the array between these indexes\n    const samples = freqData.slice(lowIndex, highIndex);\n    return samples;\n  }\n\n  /**\n   * Returns the starting frequency for a given binned frequency index.\n   * @param index Array index\n   * @returns Sound frequency\n   */\n  getFrequencyAtIndex(index: number): number {\n    const a = this.analyserNode;\n    const ctx = this.audioCtx;\n    if (a === undefined) throw new Error(`Analyser not available`);\n    if (ctx === undefined) throw new Error(`Audio context not available`);\n\n    guardInteger(index, `positive`, `index`);\n    if (index > a.frequencyBinCount)\n      throw new Error(\n        `Index ${index} exceeds frequency bin count ${a.frequencyBinCount}`\n      );\n\n    return (index * ctx.sampleRate) / (a.frequencyBinCount * 2);\n  }\n\n  /**\n   * Returns a binned array index for a given frequency\n   * @param freq Sound frequency\n   * @returns Array index into frequency bins\n   */\n  getIndexForFrequency(freq: number): number {\n    const a = this.analyserNode;\n    if (a === undefined) throw new Error(`Analyser not available`);\n\n    const nyquist = a.context.sampleRate / 2.0;\n    const index = Math.round((freq / nyquist) * a.frequencyBinCount);\n    if (index < 0) return 0;\n    if (index >= a.frequencyBinCount) return a.frequencyBinCount - 1;\n    return index;\n  }\n}\n","/**\n * Visualiser component\n *\n * Usage: import visualiser.js. Instantiate on document load, and pass in the\n * parent element into the constructor.\n *\n * eg: const v = new Visualiser(document.getElementById('renderer'));\n *\n * Data must be passed to the component via renderFreq or renderWave.\n *\n * Draws on https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Visualizations_with_Web_Audio_API\n */\n\nimport { Arrays } from '../collections/index.js';\nimport { Points } from '../geometry/index.js';\nimport { numberTracker } from '../data/NumberTracker.js';\nimport { AudioAnalyser } from './AudioAnalyser.js';\n\n// TODO: This is an adaption of old code. Needs to be smartened up further\nexport default class AudioVisualiser {\n  freqMaxRange = 200;\n  audio: AudioAnalyser;\n  parent: HTMLElement;\n\n  lastPointer: Points.Point = { x: 0, y: 0 };\n  pointerDown = false;\n  pointerClicking = false;\n  pointerClickDelayMs = 100;\n  pointerDelaying = false;\n\n  waveTracker;\n  freqTracker;\n  el: HTMLElement;\n\n  constructor(parentElem: HTMLElement, audio: AudioAnalyser) {\n    this.audio = audio;\n    this.parent = parentElem;\n    this.waveTracker = numberTracker();\n    this.freqTracker = numberTracker();\n\n    // Add HTML\n    parentElem.innerHTML = `\n    <section>\n      <button id=\"rendererComponentToggle\">🔼</button>\n      <div>\n        <h1>Visualiser</h1>\n        <div style=\"display:flex; flex-wrap: wrap\">\n          <div class=\"visPanel\">\n            <h2>Frequency distribution</h2>\n            <br />\n            <canvas id=\"rendererComponentFreqData\" height=\"200\" width=\"400\"></canvas>\n          </div>\n          <div class=\"visPanel\">\n            <h2>Waveform</h2>\n            <button id=\"rendererComponentWaveReset\">Reset</button>\n            <div>\n              Press and hold on wave to measure\n            </div>\n            <br />\n            <canvas id=\"rendererComponentWaveData\" height=\"200\" width=\"400\"></canvas>\n          </div>\n        </div>\n      </div>\n    </section>\n    `;\n    this.el = parentElem.children[0] as HTMLElement;\n\n    document\n      .getElementById(`rendererComponentToggle`)\n      ?.addEventListener(`click`, () => {\n        this.setExpanded(!this.isExpanded());\n      });\n    this.el.addEventListener(`pointermove`, (e) => this.onPointer(e));\n    //this.el.addEventListener(`touchbegin`, (e) => this.onPointer(e));\n    this.el.addEventListener(`pointerup`, () => {\n      this.pointerDelaying = false;\n      this.pointerDown = false;\n    });\n    this.el.addEventListener(`pointerdown`, () => {\n      this.pointerDelaying = true;\n      setTimeout(() => {\n        if (this.pointerDelaying) {\n          this.pointerDelaying = false;\n          this.pointerDown = true;\n        }\n      }, this.pointerClickDelayMs);\n    });\n    this.el.addEventListener(`pointerleave`, () => {\n      this.pointerDelaying = false;\n      this.pointerDown = false;\n    });\n\n    document\n      .getElementById(`rendererComponentWaveReset`)\n      ?.addEventListener(`click`, () => {\n        this.clear();\n      });\n  }\n\n  renderFreq(freq: readonly number[]) {\n    if (!this.isExpanded()) return; // Don't render if collapsed\n    if (!freq) return; // Data is undefined/null\n\n    const canvas = document.getElementById(\n      `rendererComponentFreqData`\n    ) as HTMLCanvasElement;\n    if (canvas === null) throw new Error(`Cannot find canvas element`);\n    const g = canvas.getContext(`2d`);\n    if (g === null) throw new Error(`Cannot create drawing context`);\n\n    const bins = freq.length;\n    const canvasWidth = canvas.clientWidth;\n    const canvasHeight = canvas.clientHeight;\n    g.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    const pointer = this.getPointerRelativeTo(canvas);\n    const width = canvasWidth / bins;\n    const minMax = Arrays.minMaxAvg(freq);\n\n    //eslint-disable-next-line functional/no-let\n    for (let i = 0; i < bins; i++) {\n      if (!Number.isFinite(freq[i])) continue;\n\n      const value = freq[i] - minMax.min;\n      const valueRelative = value / this.freqMaxRange;\n      const height = Math.abs(canvasHeight * valueRelative);\n      const offset = canvasHeight - height;\n\n      const hue = (i / bins) * 360;\n      const left = i * width;\n      g.fillStyle = `hsl(` + hue + `, 100%, 50%)`;\n\n      // Show info about data under pointer\n      if (\n        pointer.y > 0 &&\n        pointer.y <= canvasHeight &&\n        pointer.x >= left &&\n        pointer.x <= left + width\n      ) {\n        // Keep track of data\n        if (this.freqTracker.id !== i.toString()) {\n          this.freqTracker = numberTracker({ id: i.toString() });\n        }\n        this.freqTracker.seen(freq[i]);\n\n        const freqMma = this.freqTracker.getMinMaxAvg();\n\n        // Display\n        g.fillStyle = `black`;\n        if (this.audio) {\n          g.fillText(\n            `Frequency (${i}) at pointer: ${this.audio\n              .getFrequencyAtIndex(i)\n              .toLocaleString(`en`)} - ${this.audio\n              .getFrequencyAtIndex(i + 1)\n              .toLocaleString(`en`)}`,\n            2,\n            10\n          );\n        }\n        g.fillText(`Raw value: ${freq[i].toFixed(2)}`, 2, 20);\n        g.fillText(`Min: ${freqMma.min.toFixed(2)}`, 2, 40);\n        g.fillText(`Max: ${freqMma.max.toFixed(2)}`, 60, 40);\n        g.fillText(`Avg: ${freqMma.avg.toFixed(2)}`, 120, 40);\n      }\n      g.fillRect(left, offset, width, height);\n    }\n  }\n\n  isExpanded() {\n    const contentsElem = this.el.querySelector(`div`);\n    if (contentsElem === null) throw new Error(`contents div not found`);\n    return contentsElem.style.display === ``;\n  }\n\n  setExpanded(value: boolean) {\n    const contentsElem = this.el.querySelector(`div`);\n    const button = this.el.querySelector(`button`);\n\n    if (button === null) throw new Error(`Button element not found`);\n    if (contentsElem === null) throw new Error(`Contents element not found`);\n    if (value) {\n      contentsElem.style.display = ``;\n      button.innerText = `🔼`;\n    } else {\n      contentsElem.style.display = `none`;\n      button.innerText = `🔽`;\n    }\n  }\n\n  clear() {\n    this.clearCanvas(\n      document.getElementById(`rendererComponentFreqData`) as HTMLCanvasElement\n    );\n    this.clearCanvas(\n      document.getElementById(`rendererComponentWaveData`) as HTMLCanvasElement\n    );\n  }\n\n  // Clears a canvas to white\n  clearCanvas(canvas: HTMLCanvasElement | null) {\n    if (canvas === null) throw new Error(`Canvas is null`);\n    const g = canvas.getContext(`2d`);\n    if (g === null) throw new Error(`Cannot create drawing context`);\n    g.fillStyle = `white`;\n    g.fillRect(0, 0, canvas.clientWidth, canvas.clientHeight);\n  }\n\n  // Renders waveform data.\n  // Adapted from MDN's AnalyserNode.getFloatTimeDomainData() example\n  renderWave(wave: readonly number[], bipolar = true) {\n    if (!this.isExpanded()) return; // Don't render if collapsed\n    if (!wave) return; // Undefined or null data\n    const canvas = document.getElementById(\n      `rendererComponentWaveData`\n    ) as HTMLCanvasElement;\n    if (canvas === null) throw new Error(`Cannot find wave canvas`);\n\n    const g = canvas.getContext(`2d`);\n    if (g === null) throw new Error(`Cannot create drawing context for wave`);\n\n    const canvasWidth = canvas.clientWidth;\n    const canvasHeight = canvas.clientHeight;\n    const pointer = this.getPointerRelativeTo(canvas);\n    const infoAreaHeight = 20;\n    const infoAreaWidth = 60;\n    const bins = wave.length;\n    g.fillStyle = `white`;\n    g.fillRect(0, 0, infoAreaWidth, infoAreaHeight);\n\n    const width = canvasWidth / bins;\n\n    // Clears the screen with very light tint of white\n    // to fade out last waveform. Set this higher to remove effect\n    g.fillStyle = `rgba(255, 255, 255, 0.03)`;\n    g.fillRect(0, 20, canvasWidth, canvasHeight);\n\n    g.fillStyle = `red`;\n    if (bipolar) {\n      g.fillRect(0, canvasHeight / 2, canvasWidth, 1);\n    } else {\n      g.fillRect(0, canvasHeight - 1, canvasWidth, 1);\n    }\n\n    g.lineWidth = 1;\n    g.strokeStyle = `black`;\n    g.beginPath();\n\n    //eslint-disable-next-line functional/no-let\n    let x = 0;\n\n    //eslint-disable-next-line functional/no-let\n    for (let i = 0; i < bins; i++) {\n      const height = wave[i] * canvasHeight;\n      const y = bipolar ? canvasHeight / 2 - height : canvasHeight - height;\n\n      if (i === 0) {\n        g.moveTo(x, y);\n      } else {\n        g.lineTo(x, y);\n      }\n      x += width;\n\n      if (this.pointerDown) this.waveTracker.seen(wave[i]);\n    }\n    g.lineTo(canvasWidth, bipolar ? canvasHeight / 2 : canvasHeight); //canvas.height / 2);\n    g.stroke();\n\n    // Draw\n    if (this.pointerDown) {\n      const waveMma = this.waveTracker.getMinMaxAvg();\n      g.fillStyle = `rgba(255,255,0,1)`;\n      g.fillRect(infoAreaWidth, 0, 150, 20);\n      g.fillStyle = `black`;\n      g.fillText(`Min: ` + waveMma.min.toFixed(2), 60, 10);\n      g.fillText(`Max: ` + waveMma.max.toFixed(2), 110, 10);\n      g.fillText(`Avg: ` + waveMma.avg.toFixed(2), 160, 10);\n    } else {\n      this.waveTracker.reset();\n    }\n\n    // Show info about data under pointer\n    if (\n      pointer.y > 0 &&\n      pointer.y <= canvasHeight &&\n      pointer.x >= 0 &&\n      pointer.x <= canvasWidth\n    ) {\n      g.fillStyle = `black`;\n      g.fillText(\n        `Level: ` + (1.0 - pointer.y / canvasHeight).toFixed(2),\n        2,\n        10\n      );\n    }\n  }\n\n  // Yields pointer position relative to given element\n  getPointerRelativeTo(elem: HTMLElement) {\n    const rect = elem.getBoundingClientRect();\n    return {\n      x: this.lastPointer.x - rect.left - window.scrollX, //elem.offsetLeft + window.scrollX,\n      y: this.lastPointer.y - rect.top - window.scrollY, //elem.offsetTop + window.scrollY\n    };\n  }\n\n  // Keeps track of last pointer position in page coordinate space\n  onPointer(evt: MouseEvent | PointerEvent) {\n    this.lastPointer = {\n      x: evt.pageX,\n      y: evt.pageY,\n    };\n    evt.preventDefault();\n  }\n\n  // getMinMax(data, start = 0, end = data.length) {\n  //   if (end > data.length) throw new Error(`end is past size of array`);\n  //   if (start < 0) throw new Error(`start should be at least 0`);\n  //   if (end <= start) throw new Error(`end should be greater than start`);\n\n  //   let max = Number.MIN_SAFE_INTEGER;\n  //   let min = Number.MAX_SAFE_INTEGER;\n  //   for (let i = start; i < end; i++) {\n  //     max = Math.max(data[i], max);\n  //     min = Math.min(data[i], min);\n  //   }\n  //   if (!Number.isFinite(max)) max = 0;\n  //   if (!Number.isFinite(min)) min = 0;\n\n  //   return {max: max, min: min};\n  // }\n}\n","import { EspruinoBleDevice } from './EspruinoBleDevice.js';\nimport { defaultOpts as NordicDefaults } from './NordicBleDevice.js';\nimport { type StateChangeEvent } from '../flow/StateMachineWithEvents.js';\nimport { type ISimpleEventEmitter } from '../ISimpleEventEmitter.js';\nimport { string as randomString } from '../Random.js';\nimport { waitFor } from '../flow/WaitFor.js';\nimport {\n  EspruinoSerialDevice,\n  type EspruinoSerialDeviceOpts,\n} from './EspruinoSerialDevice.js';\nimport type {\n  GenericStateTransitions,\n  IoDataEvent,\n  IoEvents,\n} from './index.js';\n\nexport { EspruinoBleDevice, EspruinoSerialDevice };\nexport type { EspruinoSerialDeviceOpts };\n\nexport type EspruinoStates =\n  | `ready`\n  | `connecting`\n  | `connected`\n  | `closed`\n  | `closing`\n  | `connecting`;\n\n/**\n * Options for device\n */\nexport type Options = {\n  /**\n   * Default milliseconds to wait before giving up on a well-formed reply. 5 seconds is the default.\n   */\n  readonly evalTimeoutMs?: number;\n  /**\n   * Name of device. Only used for printing log mesages to the console\n   */\n  readonly name?: string;\n\n  /**\n   * If true, additional logging information is printed\n   */\n  readonly debug?: boolean;\n};\n\n/**\n * Options for code evaluation\n */\nexport type EvalOpts = {\n  /**\n   * Milliseconds to wait before giving up on well-formed reply. 5 seconds is the default.\n   */\n  readonly timeoutMs?: number;\n  /**\n   * If true (default), it assumes that anything received from the board\n   * is a response to the eval\n   */\n  readonly assumeExclusive?: boolean;\n\n  /**\n   * If true, executed code is traced\n   */\n  readonly debug?: boolean;\n};\n\nexport type EspruinoBleOpts = {\n  /**\n   * If the name is specified, this value is used\n   * for filtering Bluetooth devices\n   */\n  readonly name?: string;\n  /**\n   * If true, additional logging messages are\n   * displayed on the console\n   */\n  readonly debug?: boolean;\n  /**\n   * If specified, these filtering options are used instead\n   */\n  readonly filters?: readonly BluetoothLEScanFilter[];\n};\n\n/**\n * Instantiates a Puck.js. See {@link EspruinoBleDevice} for more info.\n * [Online demos](https://clinth.github.io/ixfx-demos/io/)\n *\n * If `opts.name` is specified, this will the the Bluetooth device sought.\n *\n * ```js\n * import { Espruino } from 'https://unpkg.com/ixfx/dist/io.js'\n * const e = await Espruino.puck({ name:`Puck.js a123` });\n * ```\n *\n * If no name is specified, a list of all devices starting with `Puck.js` are shown.\n *\n * To get more control over filtering, pass in `opts.filter`. `opts.name` is not used as a filter in this scenario.\n *\n * ```js\n * import { Espruino } from 'https://unpkg.com/ixfx/dist/io.js'\n * const filters = [\n *  { namePrefix: `Puck.js` },\n *  { namePrefix: `Pixl.js` },\n *  {services: [NordicDefaults.service] }\n * ]\n * const e = await Espruino.puck({ filters });\n * ```\n *\n * @returns Returns a connected instance, or throws exception if user cancelled or could not connect.\n */\nexport const puck = async (opts: EspruinoBleOpts = {}) => {\n  const name = opts.name ?? `Puck`;\n  const debug = opts.debug ?? false;\n\n  const device = await navigator.bluetooth.requestDevice({\n    filters: getFilters(opts),\n    optionalServices: [NordicDefaults.service],\n  });\n\n  console.log(device.name);\n  const d = new EspruinoBleDevice(device, { name, debug });\n  await d.connect();\n  return d;\n};\n\n/**\n * Create a serial-connected Espruino device.\n *\n * ```js\n * import { Espruino } from 'https://unpkg.com/ixfx/dist/io.js'\n * const e = await Espruio.serial();\n * e.connect();\n * ```\n *\n * Options:\n * ```js\n * import { Espruino } from 'https://unpkg.com/ixfx/dist/io.js'\n * const e = await Espruino.serial({ debug: true, evalTimeoutMs: 1000, name: `My Pico` });\n * e.connect();\n * ```\n *\n * Listen for events:\n * ```js\n * e.addEventListener(`change`, evt => {\n *  console.log(`State change ${evt.priorState} -> ${evt.newState}`);\n *  if (evt.newState === `connected`) {\n *    // Do something when connected...\n *  }\n * });\n * ```\n *\n * Reading incoming data:\n * ```\n * // Parse incoming data as JSON\n * s.addEventListener(`data`, evt => {\n *  try {\n *    const o = JSON.parse(evt.data);\n *    // If we get this far, JSON is legit\n *  } catch (ex) {\n *  }\n * });\n * ```\n *\n * Writing to the microcontroller\n * ```\n * s.write(JSON.stringify({msg:\"hello\"}));\n * ```\n * @param opts\n * @returns Returns a connected instance, or throws exception if user cancelled or could not connect.\n */\nexport const serial = async (\n  opts: {\n    readonly name?: string;\n    readonly debug?: boolean;\n    readonly evalTimeoutMs?: number;\n  } = {}\n) => {\n  const d = new EspruinoSerialDevice(opts);\n  await d.connect();\n  return d;\n};\n\n/**\n * Returns a list of BLE scan filters, given the\n * connect options.\n * @param opts\n * @returns\n */\nconst getFilters = (opts: EspruinoBleOpts) => {\n  //eslint-disable-next-line functional/no-let\n  const filters: BluetoothLEScanFilter[] = [];\n\n  if (opts.filters) {\n    //eslint-disable-next-line functional/immutable-data\n    filters.push(...opts.filters);\n  } else if (opts.name) {\n    // Name filter\n    //eslint-disable-next-line functional/immutable-data\n    filters.push({ name: opts.name });\n    console.info(`Filtering Bluetooth devices by name '${opts.name}'`);\n  } else {\n    // Default filter\n    //eslint-disable-next-line functional/immutable-data\n    filters.push({ namePrefix: `Puck.js` });\n  }\n  // {namePrefix: 'Pixl.js'},\n  // {namePrefix: 'MDBT42Q'},\n  // {namePrefix: 'RuuviTag'},\n  // {namePrefix: 'iTracker'},\n  // {namePrefix: 'Thingy'},\n  // {namePrefix: 'Espruino'},\n  //{services: [NordicDefaults.service]}\n\n  return filters;\n};\n/**\n * Connects to a generic Espruino BLE device. See  {@link EspruinoBleDevice} for more info.\n * Use {@link puck} if you're connecting to a Puck.js\n *\n * If `opts.name` is specified, only this BLE device will be shown.\n * ```js\n * const e = await connectBle({ name: `Puck.js a123` });\n * ```\n *\n * `opts.filters` overrides and sets arbitary filters.\n *\n * ```js\n * import { Espruino } from 'https://unpkg.com/ixfx/dist/io.js'\n * const filters = [\n *  { namePrefix: `Puck.js` },\n *  { namePrefix: `Pixl.js` },\n *  {services: [NordicDefaults.service] }\n * ]\n * const e = await Espruino.connectBle({ filters });\n * ```\n *\n * @returns Returns a connected instance, or throws exception if user cancelled or could not connect.\n */\nexport const connectBle = async (opts: EspruinoBleOpts = {}) => {\n  const device = await navigator.bluetooth.requestDevice({\n    filters: getFilters(opts),\n    optionalServices: [NordicDefaults.service],\n  });\n  const d = new EspruinoBleDevice(device, { name: `Espruino` });\n  await d.connect();\n  return d;\n};\n\n/**\n * EspruinoDevice\n *\n * This base interface is implemented by {@link EspruinoBleDevice} and {@link EspruinoSerialDevice}.\n */\nexport interface EspruinoDevice\n  extends ISimpleEventEmitter<IoEvents<GenericStateTransitions>> {\n  /**\n   * Sends some code to be executed on the Espruino. The result\n   * is packaged into JSON and sent back to your code. An exception is\n   * thrown if code can't be executed for some reason.\n   *\n   * ```js\n   * const sum = await e.eval(`2+2`);\n   * ```\n   *\n   * It will wait for a period of time for a well-formed response from the\n   * Espruino. This might not happen if there is a connection problem\n   * or a syntax error in the code being evaled. In cases like the latter,\n   * it will take up to `timeoutMs` (default 5 seconds) before we give up\n   * waiting for a correct response and throw an error.\n   *\n   * Tweaking of the timeout may be required if `eval()` is giving up too quickly\n   * or too slowly. A default timeout can be given when creating the class.\n   *\n   * Options:\n   *  timeoutMs: Timeout for execution. 5 seconds by default\n   *  assumeExclusive If true, eval assumes all replies from controller are in response to eval. True by default\n   *  debug: If true, execution is traced via `warn` callback\n   * @param code Code to run on the Espruino.\n   * @param opts Options\n   * @param warn Function to pass warning/trace messages to. If undefined, this.warn is used, printing to console.\n   */\n  eval(\n    code: string,\n    opts?: EvalOpts,\n    warn?: (msg: string) => void\n  ): Promise<string>;\n\n  /**\n   * Write some code for immediate execution. This is a lower-level\n   * alternative to {@link writeScript}. Be sure to include a new line character '\\n' at the end.\n   * @param m Code\n   */\n  write(m: string): void;\n\n  /**\n   * Writes a script to Espruino.\n   *\n   * It will first send a CTRL+C to cancel any previous input, `reset()` to clear the board,\n   * and then the provided `code` followed by a new line.\n   *\n   * Use {@link eval} instead to execute remote code and get the result back.\n   *\n   * ```js\n   * // Eg from https://www.espruino.com/Web+Bluetooth\n   * espruino.writeScript(`\n   *  setInterval(() => Bluetooth.println(E.getTemperature()), 1000);\n   *  NRF.on('disconnect',()=>reset());\n   * `);\n   * ```\n   *\n   * @param code Code to send. A new line is added automatically.\n   */\n  writeScript(code: string): void;\n\n  /**\n   * Disconnect\n   */\n  disconnect(): void;\n\n  /**\n   * Gets the current evaluation (millis)\n   */\n  get evalTimeoutMs(): number;\n\n  get isConnected(): boolean;\n}\n\n/**\n * Evaluates some code on an Espruino device.\n *\n * Options:\n * * timeoutMs: how many millis to wait before assuming code failed. If not specified, `device.evalTimeoutMs` is used as a default.\n * * assumeExlusive: assume device is not producing any other output than for our evaluation\n *\n * A random string is created to pair eval requests and responses. `code` will be run on the device, with the result\n * wrapped in JSON, and in turn wrapped in a object that is sent back.\n *\n * The actual code that gets sent to the device is then:\n * `\\x10${evalReplyPrefix}(JSON.stringify({reply:\"${id}\", result:JSON.stringify(${code})}))\\n`\n *\n * For example, it might end up being:\n * `\\x10Bluetooth.println(JSON.stringify({reply: \"a35gP\", result: \"{ 'x': '10' }\" }))\\n`\n *\n * @param code Code to evaluation\n * @param opts Options for evaluation\n * @param device Device to execute on\n * @param evalReplyPrefix How to send code back (eg `Bluetooth.println`, `console.log`)\n * @param debug If true, the full evaled code is printed locally to the console\n * @param warn Callback to display warnings\n * @returns\n */\nexport const deviceEval = async (\n  code: string,\n  opts: EvalOpts = {},\n  device: EspruinoDevice,\n  evalReplyPrefix: string,\n  debug: boolean,\n  warn: (m: string) => void\n): Promise<string> => {\n  const timeoutMs = opts.timeoutMs ?? device.evalTimeoutMs;\n  const assumeExclusive = opts.assumeExclusive ?? true;\n\n  if (typeof code !== `string`) {\n    throw new Error(`code parameter should be a string`);\n  }\n\n  return new Promise((resolve, reject) => {\n    // Generate a random id so reply can be matched up with this request\n    const id = randomString(5);\n\n    const onData = (d: IoDataEvent) => {\n      try {\n        //eslint-disable-next-line functional/no-let\n        let cleaned = d.data;\n\n        // Prefixed with angled bracket sometimes?\n        if (cleaned.startsWith(`>{`) && cleaned.endsWith(`}`)) {\n          cleaned = cleaned.substring(1);\n        }\n\n        // Parse reply, expecting JSON.\n        const dd = JSON.parse(cleaned);\n\n        // Check for reply field, and that it matches\n        if (`reply` in dd) {\n          if (dd.reply === id) {\n            done(); // Stop waiting for result\n            if (`result` in dd) {\n              resolve(dd.result);\n            }\n          } else {\n            warn(`Expected reply ${id}, got ${dd.reply}`);\n          }\n        } else {\n          warn(`Expected packet, missing 'reply' field. Got: ${d.data}`);\n        }\n      } catch (ex: unknown) {\n        // If there was a syntax error, response won't be JSON\n        if (assumeExclusive) {\n          // Fail with unexpected reply as the message\n          done(d.data);\n        } else {\n          // Unexpected reply, but we cannot be sure if it's in response to eval or\n          // some other code running on board. So just warn and eventually timeout\n          warn(ex as string);\n        }\n      }\n    };\n\n    const onStateChange = (evt: StateChangeEvent<GenericStateTransitions>) => {\n      if (evt.newState !== `connected`) {\n        done(`State changed to '${evt.newState}', aborting`);\n      }\n    };\n\n    device.addEventListener(`data`, onData);\n    device.addEventListener(`change`, onStateChange);\n\n    // Init waitFor\n    const done = waitFor(\n      timeoutMs,\n      (reason: string) => {\n        reject(reason);\n      },\n      () => {\n        // If we got a response or there was a timeout, remove event listeners\n        device.removeEventListener(`data`, onData);\n        device.removeEventListener(`change`, onStateChange);\n      }\n    );\n\n    const src = `\\x10${evalReplyPrefix}(JSON.stringify({reply:\"${id}\", result:JSON.stringify(${code})}))\\n`;\n    if (debug) warn(src);\n    device.write(src);\n  });\n};\n","import { type EvalOpts, type Options, deviceEval } from './Espruino.js';\nimport { NordicBleDevice } from './NordicBleDevice.js';\n\n/**\n * An Espruino BLE-connection\n *\n * See [online demos](https://clinth.github.io/ixfx-demos/io/)\n *\n * Use the `puck` function to initialise and connect to a Puck.js.\n * It must be called in a UI event handler for browser security reasons.\n *\n * ```js\n * import { Espruino } from 'https://unpkg.com/ixfx/dist/io.js'\n * const e = await Espruino.puck();\n * ```\n *\n * To connect to a particular device:\n *\n * ```js\n * import { Espruino } from 'https://unpkg.com/ixfx/dist/io.js'\n * const e = await Espruino.puck({name:`Puck.js a123`});\n * ```\n *\n * Listen for events:\n * ```js\n * // Received something\n * e.addEventListener(`data`, d => console.log(d.data));\n * // Monitor connection state\n * e.addEventListener(`change`, c => console.log(`${d.priorState} -> ${d.newState}`));\n * ```\n *\n * Write to the device (note the \\n for a new line at the end of the string). This will\n * execute the code on the Espruino.\n *\n * ```js\n * e.write(`digitalPulse(LED1,1,[10,500,10,500,10]);\\n`);\n * ```\n *\n * Run some code and return result:\n * ```js\n * const result = await e.eval(`2+2\\n`);\n * ```\n */\nexport class EspruinoBleDevice extends NordicBleDevice {\n  evalTimeoutMs: number;\n  evalReplyBluetooth = true;\n\n  /**\n   * Creates instance. You probably would rather use {@link puck} to create.\n   * @param device\n   * @param opts\n   */\n  constructor(device: BluetoothDevice, opts: Options = {}) {\n    super(device, opts);\n    this.evalTimeoutMs = opts.evalTimeoutMs ?? 5 * 1000;\n  }\n\n  /**\n   * Writes a script to Espruino.\n   *\n   * It will first send a CTRL+C to cancel any previous input, `reset()` to clear the board,\n   * and then the provided `code` followed by a new line.\n   *\n   * Use {@link eval} instead to execute remote code and get the result back.\n   *\n   * ```js\n   * // Eg from https://www.espruino.com/Web+Bluetooth\n   * writeScript(`\n   *  setInterval(() => Bluetooth.println(E.getTemperature()), 1000);\n   *  NRF.on('disconnect',()=>reset());\n   * `);\n   * ```\n   *\n   * @param code Code to send. A new line is added automatically.\n   */\n  async writeScript(code: string) {\n    this.write(`\\x03\\x10reset();\\n`);\n    this.write(`\\x10${code}\\n`);\n  }\n\n  /**\n   * Sends some code to be executed on the Espruino. The result\n   * is packaged into JSON and sent back to your code. An exception is\n   * thrown if code can't be executed for some reason.\n   *\n   * ```js\n   * const sum = await e.eval(`2+2`);\n   * ```\n   *\n   * It will wait for a period of time for a well-formed response from the\n   * Espruino. This might not happen if there is a connection problem\n   * or a syntax error in the code being evaled. In cases like the latter,\n   * it will take up to `timeoutMs` (default 5 seconds) before we give up\n   * waiting for a correct response and throw an error.\n   *\n   * Tweaking of the timeout may be required if `eval()` is giving up too quickly\n   * or too slowly. A default timeout can be given when creating the class.\n   *\n   * Options:\n   *  timeoutMs: Timeout for execution. 5 seconds by default\n   *  assumeExclusive If true, eval assumes all replies from controller are in response to eval. True by default\n   *  debug: If true, execution is traced via `warn` callback\n   * @param code Code to run on the Espruino.\n   * @param opts Options\n   * @param warn Function to pass warning/trace messages to. If undefined, this.warn is used, printing to console.\n   */\n  async eval(\n    code: string,\n    opts: EvalOpts = {},\n    warn?: (msg: string) => void\n  ): Promise<string> {\n    const debug = opts.debug ?? false;\n    const warnCb = warn ?? ((m) => this.warn(m));\n    return deviceEval(code, opts, this, `Bluetooth.println`, debug, warnCb);\n  }\n  /*\n    const timeoutMs = opts.timeoutMs ?? this.evalTimeoutMs;\n    const assumeExclusive = opts.assumeExclusive ?? true;\n\n    if (typeof code !== `string`) throw new Error(`code parameter should be a string`);\n      \n    return new Promise((resolve, reject) => {\n      // Generate a random id so reply can be matched up with this request\n      const id = randomString(5);\n\n      const onData = (d:DataEvent) => {\n        try {\n          // Parse reply, expecting JSON.\n          const dd = JSON.parse(d.data);\n\n          // Check for reply field, and that it matches\n          if (`reply` in dd) {\n            if (dd.reply === id) {\n              done(); // Stop waiting for result\n              if (`result` in dd) {\n                resolve(dd.result);\n              }\n            } else {\n              this.warn(`Expected reply ${id}, got ${dd.reply}`);\n            }\n          }\n        } catch (ex:unknown) {\n          // If there was a syntax error, response won't be JSON\n          if (assumeExclusive) {\n            // Fail with unexpected reply as the message\n            done(d.data);\n          } else {\n            // Unexpected reply, but we cannot be sure if it's in response to eval or\n            // some other code running on board. So just warn and eventually timeout\n            this.warn(ex);\n          }\n        }\n      };\n\n      const onStateChange = (e:StateChangeEvent) => {\n        if (e.newState !== `connected`) done(`State changed to '${e.newState}', aborting`);\n      };\n\n      this.addEventListener(`data`, onData);\n      this.addEventListener(`change`, onStateChange);\n\n      // Init waitFor\n      const done = waitFor(timeoutMs, (reason:string) => {\n        reject(reason);\n      }, () => {\n        // If we got a response or there was a timeout, remove event listeners\n        this.removeEventListener(`data`, onData);\n        this.removeEventListener(`change`, onStateChange);\n      });\n\n      this.write(`\\x10Bluetooth.println(JSON.stringify({reply:\"${id}\", result:JSON.stringify(${code})}))\\n`);\n    });\n  */\n}\n","import {\n  type JsonDeviceOpts,\n  type JsonDeviceEvents,\n  type JsonDataEvent,\n  JsonDevice,\n} from './JsonDevice.js';\n\nexport type { JsonDeviceEvents, JsonDeviceOpts, JsonDataEvent };\n\nexport type SerialOpts = JsonDeviceOpts & {\n  readonly filters?: ReadonlyArray<SerialPortFilter>;\n  readonly baudRate?: number;\n  /**\n   * End-of-line string sequence. \\r\\n by default.\n   */\n  readonly eol?: string;\n};\n\n/**\n * Serial device. Assumes data is sent with new line characters (\\r\\n) between messages.\n *\n * ```\n * const s = new Device();\n * s.addEventListener(`change`, evt => {\n *  console.log(`State change ${evt.priorState} -> ${evt.newState}`);\n *  if (evt.newState === `connected`) {\n *    // Do something when connected...\n *  }\n * });\n *\n * // In a UI event handler...\n * s.connect();\n * ```\n *\n * Reading incoming data:\n * ```\n * // Parse incoming data as JSON\n * s.addEventListener(`data`, evt => {\n *  try {\n *    const o = JSON.parse(evt.data);\n *    // If we get this far, JSON is legit\n *  } catch (ex) {\n *  }\n * });\n * ```\n *\n * Writing to the microcontroller\n * ```\n * s.write(JSON.stringify({msg:\"hello\"}));\n * ```\n */\nexport class Device extends JsonDevice {\n  port: SerialPort | undefined;\n  tx: WritableStreamDefaultWriter<string> | undefined;\n  abort: AbortController;\n  baudRate: number;\n\n  constructor(private config: SerialOpts = {}) {\n    super(config);\n\n    this.abort = new AbortController();\n\n    const eol = config.eol ?? `\\r\\n`;\n\n    this.baudRate = config.baudRate ?? 9600;\n    if (config.name === undefined) super.name = `Serial.Device`;\n\n    // Serial.println on microcontroller == \\r\\n\n    this.rxBuffer.separator = eol;\n  }\n\n  /**\n   * Writes text collected in buffer\n   * @param txt\n   */\n  protected async writeInternal(txt: string) {\n    if (this.tx === undefined) throw new Error(`tx not ready`);\n    try {\n      this.tx.write(txt);\n    } catch (ex: unknown) {\n      this.warn(ex);\n    }\n  }\n\n  onClosed(): void {\n    this.tx?.releaseLock();\n\n    this.abort.abort(`closing port`);\n    // try {\n    //   this.port?.close();\n    // } catch (ex) {\n    //   this.warn(ex);\n    // }\n    this.states.state = `closed`;\n  }\n\n  onPreConnect(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  async onConnectAttempt(): Promise<void> {\n    //eslint-disable-next-line functional/no-let\n    let reqOpts: SerialPortRequestOptions = {};\n    const openOpts: SerialOptions = {\n      baudRate: this.baudRate,\n    };\n\n    if (this.config.filters) reqOpts = { filters: [...this.config.filters] };\n    this.port = await navigator.serial.requestPort(reqOpts);\n\n    this.port.addEventListener(`disconnect`, (_) => {\n      this.close();\n    });\n\n    await this.port.open(openOpts);\n\n    const txW = this.port.writable;\n    const txText = new TextEncoderStream();\n    if (txW !== null) {\n      txText.readable\n        .pipeTo(txW, { signal: this.abort.signal })\n        .catch((err) => {\n          console.log(`Serial.onConnectAttempt txText pipe:`);\n          console.log(err);\n        });\n      this.tx = txText.writable.getWriter();\n    }\n\n    const rxR = this.port.readable;\n    const rxText = new TextDecoderStream();\n    if (rxR !== null) {\n      rxR\n        .pipeTo(rxText.writable, { signal: this.abort.signal })\n        .catch((err) => {\n          console.log(`Serial.onConnectAttempt rxR pipe:`);\n          console.log(err);\n        });\n      rxText.readable\n        .pipeTo(this.rxBuffer.writable(), { signal: this.abort.signal })\n        .catch((err) => {\n          console.log(`Serial.onConnectAttempt rxText pipe:`);\n          console.log(err);\n          try {\n            this.port?.close();\n          } catch (ex) {\n            console.log(ex);\n          }\n        });\n    }\n  }\n}\n","import { SimpleEventEmitter } from '../Events.js';\nimport * as StateMachine from '../flow/StateMachine.js';\nimport { type StateChangeEvent } from '../flow/StateMachineWithEvents.js';\nimport { indexOfCharCode, omitChars } from '../Text.js';\nimport { Codec } from './Codec.js';\nimport { StringReceiveBuffer } from './StringReceiveBuffer.js';\nimport { StringWriteBuffer } from './StringWriteBuffer.js';\nimport { retry } from '../flow/Retry.js';\nimport {\n  genericStateTransitionsInstance,\n  type GenericStateTransitions,\n} from './index.js';\n\n/**\n * Options for JsonDevice\n */\nexport type JsonDeviceOpts = {\n  /**\n   * How much data to transfer at a time\n   */\n  readonly chunkSize?: number;\n  /**\n   * Name of device. This is only used for assisting the console.log output\n   */\n  readonly name?: string;\n  /**\n   * Number of times to automatically try to reconnect\n   */\n  readonly connectAttempts?: number;\n  /**\n   * If true, additional logging will be done\n   */\n  readonly debug?: boolean;\n};\n\n/**\n * Data received event\n */\nexport type JsonDataEvent = {\n  /**\n   * Data received\n   */\n  readonly data: string;\n};\n\n/**\n * Events emitted by JsonDevice\n */\nexport type JsonDeviceEvents = {\n  /**\n   * Data received\n   */\n  readonly data: JsonDataEvent;\n  /**\n   * State changed\n   */\n  readonly change: StateChangeEvent<GenericStateTransitions>;\n};\n\nexport abstract class JsonDevice extends SimpleEventEmitter<JsonDeviceEvents> {\n  states: StateMachine.WithEvents<GenericStateTransitions>;\n  codec: Codec;\n\n  verboseLogging = false;\n  name: string;\n  connectAttempts: number;\n  chunkSize: number;\n\n  rxBuffer: StringReceiveBuffer;\n  txBuffer: StringWriteBuffer;\n\n  constructor(config: JsonDeviceOpts = {}) {\n    super();\n\n    // Init\n    this.verboseLogging = config.debug ?? false;\n    this.chunkSize = config.chunkSize ?? 1024;\n    this.connectAttempts = config.connectAttempts ?? 3;\n    this.name = config.name ?? `JsonDevice`;\n\n    // Transmit buffer\n    this.txBuffer = new StringWriteBuffer(async (data) => {\n      // When we have data to actually write to device\n      await this.writeInternal(data);\n    }, config);\n\n    // Receive buffer\n    this.rxBuffer = new StringReceiveBuffer((line) => {\n      this.fireEvent(`data`, { data: line });\n    });\n\n    this.codec = new Codec();\n    this.states = new StateMachine.WithEvents(genericStateTransitionsInstance, {\n      initial: `ready`,\n    });\n\n    this.states.addEventListener(`change`, (evt) => {\n      this.fireEvent(`change`, evt);\n      this.verbose(`${evt.priorState} -> ${evt.newState}`);\n      if (evt.priorState === `connected`) {\n        // Clear out buffers\n        this.rxBuffer.clear();\n        this.txBuffer.clear();\n      }\n    });\n  }\n\n  get isConnected(): boolean {\n    return this.states.state === `connected`;\n  }\n\n  get isClosed(): boolean {\n    return this.states.state === `closed`;\n  }\n\n  write(txt: string) {\n    if (this.states.state !== `connected`) {\n      throw new Error(`Cannot write while state is ${this.states.state}`);\n    }\n    this.txBuffer.add(txt);\n  }\n\n  /**\n   * Writes text to output device\n   * @param txt\n   */\n  protected abstract writeInternal(txt: string): void;\n\n  async close() {\n    if (this.states.state !== `connected`) return;\n\n    // console.log(`rxBuffer closing`);\n    // try {\n    //   await this.rxBuffer.close();\n    // } catch (e) {\n    //   console.warn(e);\n    // }\n\n    // console.log(`txBuffer closing`);\n    // try {\n    //   await this.txBuffer.close();\n    // } catch (e) {\n    //   console.warn(e);\n    // }\n\n    // console.log(`calling onClose`);\n\n    this.onClosed();\n  }\n\n  /**\n   * Must change state\n   */\n  abstract onClosed(): void;\n\n  abstract onPreConnect(): Promise<void>;\n\n  async connect() {\n    const attempts = this.connectAttempts;\n\n    this.states.state = `connecting`;\n    await this.onPreConnect();\n\n    await retry(\n      async () => {\n        await this.onConnectAttempt();\n        this.states.state = `connected`;\n        return true;\n      },\n      {\n        count: attempts,\n        startMs: 200,\n      }\n    );\n  }\n\n  /**\n   * Should throw if did not succeed.\n   */\n  protected abstract onConnectAttempt(): Promise<void>;\n\n  private onRx(evt: Event) {\n    //const rx = this.rx;\n    //if (rx === undefined) return;\n\n    //eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const view = (evt.target as any).value as DataView;\n    if (view === undefined) return;\n\n    //eslint-disable-next-line functional/no-let\n    let str = this.codec.fromBuffer(view.buffer);\n\n    // Check for flow control chars\n    const plzStop = indexOfCharCode(str, 19);\n    const plzStart = indexOfCharCode(str, 17);\n\n    // Remove if found\n    if (plzStart && plzStop < plzStart) {\n      this.verbose(`Tx plz start`);\n      str = omitChars(str, plzStart, 1);\n      this.txBuffer.paused = false;\n    }\n    if (plzStop && plzStop > plzStart) {\n      this.verbose(`Tx plz stop`);\n      str = omitChars(str, plzStop, 1);\n      this.txBuffer.paused = true;\n    }\n\n    this.rxBuffer.add(str);\n  }\n\n  protected verbose(m: string) {\n    if (this.verboseLogging) console.info(`${this.name} `, m);\n  }\n\n  protected log(m: string) {\n    console.log(`${this.name} `, m);\n  }\n\n  protected warn(m: unknown) {\n    console.warn(`${this.name} `, m);\n  }\n}\n","import { deviceEval, type EvalOpts } from './Espruino.js';\nimport { Device as SerialDevice, type SerialOpts } from './Serial.js';\n\nexport type EspruinoSerialDeviceOpts = SerialOpts & {\n  readonly evalTimeoutMs?: number;\n};\n\nexport class EspruinoSerialDevice extends SerialDevice {\n  evalTimeoutMs: number;\n  evalReplyBluetooth = false;\n\n  constructor(opts?: EspruinoSerialDeviceOpts) {\n    super(opts);\n\n    if (opts === undefined) opts = {};\n    this.evalTimeoutMs = opts.evalTimeoutMs ?? 5 * 1000;\n  }\n\n  async disconnect() {\n    return super.close();\n  }\n\n  /**\n   * Writes a script to Espruino.\n   *\n   * It will first send a CTRL+C to cancel any previous input, `reset()` to clear the board,\n   * and then the provided `code` followed by a new line.\n   *\n   * Use {@link eval} instead to execute remote code and get the result back.\n   *\n   * ```js\n   * // Eg from https://www.espruino.com/Web+Bluetooth\n   * writeScript(`\n   *  setInterval(() => Bluetooth.println(E.getTemperature()), 1000);\n   *  NRF.on('disconnect',()=>reset());\n   * `);\n   * ```\n   *\n   * @param code Code to send. A new line is added automatically.\n   */\n  async writeScript(code: string) {\n    this.write(`\\x03\\x10reset();\\n`);\n    this.write(`\\x10${code}\\n`);\n  }\n\n  /**\n   * Sends some code to be executed on the Espruino. The result\n   * is packaged into JSON and sent back to your code. An exception is\n   * thrown if code can't be executed for some reason.\n   *\n   * ```js\n   * const sum = await e.eval(`2+2`);\n   * ```\n   *\n   * It will wait for a period of time for a well-formed response from the\n   * Espruino. This might not happen if there is a connection problem\n   * or a syntax error in the code being evaled. In cases like the latter,\n   * it will take up to `timeoutMs` (default 5 seconds) before we give up\n   * waiting for a correct response and throw an error.\n   *\n   * Tweaking of the timeout may be required if `eval()` is giving up too quickly\n   * or too slowly. A default timeout can be given when creating the class.\n   *\n   * Options:\n   *  timeoutMs: Timeout for execution. 5 seconds by default\n   *  assumeExclusive: If true, eval assumes all replies from controller are in response to eval. True by default\n   *  debug: If true, execution is traced via `warn` callback\n   * @param code Code to run on the Espruino.\n   * @param opts Options\n   * @param warn Function to pass warning/trace messages to. If undefined, this.warn is used, printing to console.\n   */\n  async eval(\n    code: string,\n    opts: EvalOpts = {},\n    warn?: (msg: string) => void\n  ): Promise<string> {\n    const debug = opts.debug ?? false;\n    const warnCb = warn ?? ((m) => this.warn(m));\n\n    return deviceEval(code, opts, this, `USB.println`, debug, warnCb);\n  }\n}\n","import { waitFor } from '../flow/WaitFor.js';\nimport * as Rects from '../geometry/Rect.js';\n\nconst startTimeoutMs = 10000;\n\n/**\n * Print available media devices to console\n * @param filterKind Defaults `videoinput`\n */\nexport const dumpDevices = async (filterKind = `videoinput`) => {\n  const devices = await navigator.mediaDevices.enumerateDevices();\n\n  devices.forEach((d) => {\n    if (d.kind !== filterKind) return;\n    console.log(d.label);\n    console.log(` Kind: ${d.kind}`);\n    console.log(` Device id: ${d.deviceId}`);\n  });\n};\n\n/**\n * Constraints when requesting a camera source\n */\nexport type Constraints = {\n  /**\n   * Camera facing: user is front-facing, environment is a rear camera\n   */\n  readonly facingMode?: `user` | `environment`;\n  /**\n   * Maximum resolution\n   */\n  readonly max?: Rects.Rect;\n  /**\n   * Minimum resolution\n   */\n  readonly min?: Rects.Rect;\n  /**\n   * Ideal resolution\n   */\n  readonly ideal?: Rects.Rect;\n  /**\n   * If specified, will try to use this media device id\n   */\n  readonly deviceId?: string;\n\n  /**\n   * Number of milliseconds to wait on `getUserMedia` before giving up.\n   * Defaults to 30seconds\n   */\n  readonly startTimeoutMs?: number;\n};\n\n/**\n * Result from starting a camera\n */\n//eslint-disable-next-line functional/no-mixed-type\nexport type StartResult = {\n  /**\n   * Call dispose to stop the camera feed and remove any created resources,\n   * such as a VIDEO element\n   */\n  readonly dispose: () => void;\n  /**\n   * Video element camera is connected to\n   */\n  readonly videoEl: HTMLVideoElement;\n};\n\n/**\n * Attempts to start a video-only stream from a camera into a hidden\n * VIDEO element for frame capture. The VIDEO element is created automatically.\n *\n *\n * ```js\n * import {Camera} from 'https://unpkg.com/ixfx/dist/visual.js'\n * try\n *  const { videoEl, dispose } = await Camera.start();\n *  for await (const frame of frames(videoEl)) {\n *   // Do something with pixels...\n *  }\n * } catch (ex) {\n *  console.error(`Video could not be started`);\n * }\n * ```\n *\n * Be sure to call the dispose() function to stop the video stream and remov\n * the created VIDEO element.\n *\n * _Constraints_ can be specified to select a camera and resolution:\n * ```js\n * import {Camera} from 'https://unpkg.com/ixfx/dist/visual.js'\n * try\n *  const { videoEl, dispose } = await Camera.start({\n *    facingMode: `environment`,\n *    max: { width: 640, height: 480 }\n *  });\n *  for await (const frame of frames(videoEl)) {\n *   // Do something with pixels...\n *  }\n * } catch (ex) {\n *  console.error(`Video could not be started`);\n * }\n * ```\n * @param constraints\n * @returns Returns `{ videoEl, dispose }`, where `videoEl` is the created VIDEO element, and `dispose` is a function for removing the element and stopping the video.\n */\nexport const start = async (\n  constraints: Constraints = {}\n): Promise<StartResult> => {\n  const videoEl = document.createElement(`VIDEO`) as HTMLVideoElement;\n  //eslint-disable-next-line functional/immutable-data\n  videoEl.style.display = `none`;\n  //eslint-disable-next-line functional/immutable-data\n  videoEl.playsInline = true;\n  //eslint-disable-next-line functional/immutable-data\n  videoEl.muted = true;\n\n  videoEl.classList.add(`ixfx-camera`);\n\n  document.body.appendChild(videoEl);\n\n  //eslint-disable-next-line functional/no-let\n  let stopVideo = () => {\n    /* no-op */\n  };\n\n  const dispose = () => {\n    try {\n      // Stop source\n      stopVideo();\n    } catch {\n      /* no-op */\n    }\n\n    // Remove the element we created\n    videoEl.remove();\n  };\n\n  try {\n    // Attempt to start video\n    const r = await startWithVideoEl(videoEl, constraints);\n    stopVideo = r.dispose;\n    return { videoEl, dispose };\n  } catch (ex) {\n    // If it didn't work, delete the created element\n    console.error(ex);\n    dispose();\n    throw ex;\n  }\n};\n\n/**\n * Attempts to start a video-only stream from a camera into the designated VIDEO element.\n * @param videoEl\n * @param constraints\n * @returns Result contains videoEl and dispose function\n */\nconst startWithVideoEl = async (\n  videoEl: HTMLVideoElement,\n  constraints: Constraints = {}\n): Promise<StartResult> => {\n  if (videoEl === undefined) throw new Error(`videoEl undefined`);\n  if (videoEl === null) throw new Error(`videoEl null`);\n\n  const maxRes = constraints.max;\n  const minRes = constraints.min;\n  const idealRes = constraints.ideal;\n\n  // Setup constraints\n  const c = {\n    audio: false,\n    video: {\n      width: {},\n      height: {},\n    },\n  };\n\n  // Just in case some intuitive values are passed in...\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if ((constraints as any).facingMode === `front`)\n    constraints = { ...constraints, facingMode: `user` };\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if ((constraints as any).facingMode === `back`)\n    constraints = { ...constraints, facingMode: `environment` };\n\n  if (constraints.facingMode) {\n    //eslint-disable-next-line functional/immutable-data,@typescript-eslint/no-explicit-any\n    (c.video as any).facingMode = constraints.facingMode;\n  }\n\n  if (constraints.deviceId) {\n    //eslint-disable-next-line functional/immutable-data,@typescript-eslint/no-explicit-any\n    (c.video as any).deviceId = constraints.deviceId;\n  }\n\n  if (idealRes) {\n    //eslint-disable-next-line functional/immutable-data\n    c.video.width = {\n      ...c.video.width,\n      ideal: idealRes.width,\n    };\n    //eslint-disable-next-line functional/immutable-data\n    c.video.height = {\n      ...c.video.height,\n      ideal: idealRes.height,\n    };\n  }\n\n  if (maxRes) {\n    //eslint-disable-next-line functional/immutable-data\n    c.video.width = {\n      ...c.video.width,\n      max: maxRes.width,\n    };\n    //eslint-disable-next-line functional/immutable-data\n    c.video.height = {\n      ...c.video.height,\n      max: maxRes.height,\n    };\n  }\n\n  if (minRes) {\n    //eslint-disable-next-line functional/immutable-data\n    c.video.width = {\n      ...c.video.width,\n      min: minRes.width,\n    };\n    //eslint-disable-next-line functional/immutable-data\n    c.video.height = {\n      ...c.video.height,\n      min: minRes.height,\n    };\n  }\n\n  // Request stream\n  const done = waitFor(\n    constraints.startTimeoutMs ?? startTimeoutMs,\n    (reason) => {\n      throw new Error(`Camera getUserMedia failed: ${reason}`);\n    }\n  );\n\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia(c);\n\n    // Clean-up function\n    const dispose = () => {\n      videoEl.pause();\n      const t = stream.getTracks();\n      t.forEach((track) => track.stop());\n    };\n\n    // Assign to VIDEO element\n    //eslint-disable-next-line functional/immutable-data\n    videoEl.srcObject = stream;\n    done();\n\n    const ret = { videoEl, dispose };\n    const p = new Promise<StartResult>((resolve, reject) => {\n      videoEl.addEventListener(`loadedmetadata`, () => {\n        videoEl\n          .play()\n          .then(() => {\n            resolve(ret);\n          })\n          .catch((ex) => {\n            reject(ex);\n          });\n      });\n    });\n    return p;\n  } catch (ex) {\n    //eslint-disable-next-line @typescript-eslint/no-explicit-any\n    done((ex as any).toString());\n    throw ex;\n  }\n};\n","/**\n * Result from starting a camera\n */\n//eslint-disable-next-line functional/no-mixed-types\nexport type StartResult = {\n  /**\n   * Call dispose to stop the camera feed and remove any created resources,\n   * such as a VIDEO element\n   */\n  readonly dispose: () => void;\n  /**\n   * Video element camera is connected to\n   */\n  readonly videoEl: HTMLVideoElement;\n};\n\n/**\n * Starts video file playback, creating a VIDEO element automatically.\n * @param file File\n * @returns StartResult\n */\nexport const start = async (file: File): Promise<StartResult> => {\n  const videoEl = document.createElement(`VIDEO`) as HTMLVideoElement;\n  //eslint-disable-next-line functional/immutable-data\n  videoEl.style.display = `none`;\n  //eslint-disable-next-line functional/immutable-data\n  videoEl.playsInline = true;\n  //eslint-disable-next-line functional/immutable-data\n  videoEl.muted = true;\n\n  videoEl.classList.add(`ixfx-video`);\n\n  document.body.appendChild(videoEl);\n\n  //eslint-disable-next-line functional/no-let\n  let stopVideo = () => {\n    /* no-op */\n  };\n\n  const dispose = () => {\n    try {\n      // Stop source\n      stopVideo();\n    } catch {\n      /* no-op */\n    }\n\n    // Remove the element we created\n    videoEl.remove();\n  };\n\n  try {\n    // Attempt to start video\n    const r = await startWithVideoEl(videoEl, file);\n    stopVideo = r.dispose;\n    return { videoEl, dispose };\n  } catch (ex) {\n    // If it didn't work, delete the created element\n    console.error(ex);\n    dispose();\n    throw ex;\n  }\n};\n\n/**\n * Starts playback of a video file in the provided VIDEO element.\n * @param videoEl\n * @param file\n * @returns\n */\nconst startWithVideoEl = async (\n  videoEl: HTMLVideoElement,\n  file: File\n): Promise<StartResult> => {\n  if (videoEl === undefined) throw new Error(`videoEl undefined`);\n  if (videoEl === null) throw new Error(`videoEl null`);\n\n  const url = URL.createObjectURL(file);\n\n  //eslint-disable-next-line functional/immutable-data\n  videoEl.src = url;\n  //eslint-disable-next-line functional/immutable-data\n  videoEl.loop = true;\n\n  // Clean-up function\n  const dispose = () => {\n    videoEl.pause();\n  };\n\n  const ret = { videoEl, dispose };\n  const p = new Promise<StartResult>((resolve, reject) => {\n    videoEl.addEventListener(`loadedmetadata`, () => {\n      videoEl\n        .play()\n        .then(() => {\n          resolve(ret);\n        })\n        .catch((ex) => {\n          reject(ex);\n        });\n    });\n  });\n  return p;\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion,functional/immutable-data */\nimport { continuously, delayLoop } from '../flow/index.js';\n\n//eslint-disable-next-line functional/no-mixed-types\nexport type Capturer = {\n  start(): void;\n  cancel(): void;\n  readonly canvasEl: HTMLCanvasElement;\n};\n\n//eslint-disable-next-line functional/no-mixed-types\nexport type ManualCapturer = {\n  capture(): ImageData;\n  readonly canvasEl: HTMLCanvasElement;\n  dispose(): void;\n};\n\n//eslint-disable-next-line functional/no-mixed-types\nexport type CaptureOpts = {\n  readonly maxIntervalMs?: number;\n  readonly showCanvas?: boolean;\n  readonly workerScript?: string;\n  readonly onFrame?: (pixels: ImageData) => void;\n};\n\n//eslint-disable-next-line functional/no-mixed-types\nexport type ManualCaptureOpts = {\n  /**\n   * If true, the intermediate canvas is shown\n   * The intermediate canvas is where captures from the source are put in order\n   * to get the ImageData\n   */\n  readonly showCanvas?: boolean;\n  /**\n   * If specified, this function will be called after ImageData is captured\n   * from the intermediate canvs. This allows for drawing on top of the\n   * captured image.\n   */\n  readonly postCaptureDraw?: (\n    ctx: CanvasRenderingContext2D,\n    width: number,\n    height: number\n  ) => void;\n\n  /**\n   * If specified, this is the canvas captured to\n   */\n  readonly canvasEl?: HTMLCanvasElement;\n};\n\n/**\n * Options for frames generator\n */\nexport type FramesOpts = {\n  /**\n   * Max frame rate (millis per frame), or 0 for animation speed\n   */\n  readonly maxIntervalMs?: number;\n  /**\n   * False by default, created canvas will be hidden\n   */\n  readonly showCanvas?: boolean;\n  /**\n   * If provided, this canvas will be used as the buffer rather than creating one.\n   */\n  readonly canvasEl?: HTMLCanvasElement;\n};\n\n/**\n * Generator that yields frames from a video element as [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n *\n * ```js\n * import {Video} from 'https://unpkg.com/ixfx/dist/visual.js'\n *\n * const ctx = canvasEl.getContext(`2d`);\n * for await (const frame of Video.frames(videoEl)) {\n *   // TODO: Some processing of pixels\n *\n *   // Draw image on to the visible canvas\n *   ctx.putImageData(frame, 0, 0);\n * }\n * ```\n *\n * Under the hood it creates a hidden canvas where frames are drawn to. This is necessary\n * to read back pixel data. An existing canvas can be used if it is passed in as an option.\n *\n * Options:\n * * `canvasEl`: CANVAS element to use as a buffer (optional)\n * * `maxIntervalMs`: Max frame rate (0 by default, ie runs as fast as possible)\n * * `showCanvas`: Whether buffer canvas will be shown (false by default)\n * @param sourceVideoEl\n * @param opts\n */\n//eslint-disable-next-line func-style\nexport async function* frames(\n  sourceVideoEl: HTMLVideoElement,\n  opts: FramesOpts = {}\n): AsyncIterable<ImageData> {\n  // TODO: Ideally use OffscreenCanvas when it has wider support?\n  // TODO: When ImageBitmap has possibility to get pixels, that might also help to avoid having to write to hidden canvas\n\n  const maxIntervalMs = opts.maxIntervalMs ?? 0;\n  const showCanvas = opts.showCanvas ?? false;\n  //eslint-disable-next-line functional/no-let\n  let canvasEl = opts.canvasEl;\n  //eslint-disable-next-line functional/no-let\n  let w, h;\n  w = h = 0;\n\n  // Create & setup canvas\n  if (canvasEl === undefined) {\n    canvasEl = document.createElement(`CANVAS`) as HTMLCanvasElement;\n    canvasEl.classList.add(`ixfx-frames`);\n    if (!showCanvas) {\n      canvasEl.style.display = `none`;\n    }\n    document.body.appendChild(canvasEl);\n  }\n\n  // Update size of canvas based on video\n  const updateSize = () => {\n    if (canvasEl === undefined) return;\n    w = sourceVideoEl.videoWidth;\n    h = sourceVideoEl.videoHeight;\n    canvasEl.width = w;\n    canvasEl.height = h;\n  };\n\n  //eslint-disable-next-line functional/no-let\n  let c: CanvasRenderingContext2D | null = null;\n\n  const looper = delayLoop(maxIntervalMs);\n  for await (const _ of looper) {\n    // If we don't yet have the size of video, get it\n    if (w === 0 || h === 0) updateSize();\n\n    // If there is still no dimensions (ie stream has not started), there's nothing to do yet\n    if (w === 0 || h === 0) continue;\n\n    // Draw current frame from video element to hidden canvas\n    if (c === null) c = canvasEl.getContext(`2d`);\n    if (c === null) return;\n    c.drawImage(sourceVideoEl, 0, 0, w, h);\n\n    // Get pixels\n    const pixels = c.getImageData(0, 0, w, h);\n    yield pixels;\n  }\n}\n\n/**\n * Captures frames from a video element. It can send pixel data to a function or post to a worker script.\n *\n * @example Using a function\n * ```js\n * import {Video} from 'https://unpkg.com/ixfx/dist/visual.js'\n *\n * // Capture from a VIDEO element, handling frame data\n * // imageData is ImageData type: https://developer.mozilla.org/en-US/docs/Web/API/ImageData\n * Video.capture(sourceVideoEl, {\n *  onFrame(imageData => {\n *    // Do something with pixels...\n *  });\n * });\n * ```\n *\n * @example Using a worker\n * ```js\n * import {Video} from 'https://unpkg.com/ixfx/dist/visual.js'\n *\n * Video.capture(sourceVideoEl, {\n *  workerScript: `./frameProcessor.js`\n * });\n * ```\n *\n * In frameProcessor.js:\n * ```\n * const process = (frame) => {\n *  // ...process frame\n *\n *  // Send image back?\n *  self.postMessage({frame});\n * };\n *\n * self.addEventListener(`message`, evt => {\n *   const {pixels, width, height} = evt.data;\n *   const frame = new ImageData(new Uint8ClampedArray(pixels),\n *     width, height);\n *\n *   // Process it\n *   process(frame);\n * });\n * ```\n *\n * Options:\n * * `canvasEl`: CANVAS element to use as a buffer (optional)\n * * `maxIntervalMs`: Max frame rate (0 by default, ie runs as fast as possible)\n * * `showCanvas`: Whether buffer canvas will be shown (false by default)\n * * `workerScript`: If this specified, this URL will be loaded as a Worker, and frame data will be automatically posted to it\n *\n * Implementation: frames are captured using a animation-speed loop to a hidden canvas. From there\n * the pixel data is extracted and sent to either destination. In future the intermediate drawing to a\n * canvas could be skipped if it becomes possible to get pixel data from an ImageBitmap.\n * @param sourceVideoEl Source VIDEO element\n * @param opts\n * @returns\n */\nexport const capture = (\n  sourceVideoEl: HTMLVideoElement,\n  opts: CaptureOpts = {}\n): Capturer => {\n  const maxIntervalMs = opts.maxIntervalMs ?? 0;\n  const showCanvas = opts.showCanvas ?? false;\n  const onFrame = opts.onFrame;\n\n  // Ideally use OffscreenCanvas when it has support?\n  const w = sourceVideoEl.videoWidth;\n  const h = sourceVideoEl.videoHeight;\n\n  // Create canvas\n  const canvasEl = document.createElement(`CANVAS`) as HTMLCanvasElement;\n  canvasEl.classList.add(`ixfx-capture`);\n\n  if (!showCanvas) {\n    canvasEl.style.display = `none`;\n  }\n  canvasEl.width = w;\n  canvasEl.height = h;\n  //eslint-disable-next-line functional/no-let\n  let c: CanvasRenderingContext2D | null = null;\n  //eslint-disable-next-line functional/no-let\n  let worker: Worker | undefined;\n  if (opts.workerScript) {\n    worker = new Worker(opts.workerScript);\n  }\n\n  // Should we get image data?\n  const getPixels = worker || onFrame;\n  if (!getPixels && !showCanvas) {\n    console.warn(\n      `Video will be captured to hidden element without any processing. Is this what you want?`\n    );\n  }\n\n  const loop = continuously(() => {\n    // Draw current frame from video element to hidden canvas\n    if (c === null) c = canvasEl.getContext(`2d`);\n    if (c === null) return;\n    c.drawImage(sourceVideoEl, 0, 0, w, h);\n    //eslint-disable-next-line functional/no-let\n    let pixels: ImageData | undefined;\n\n    if (getPixels) {\n      // ImageData necessary\n      pixels = c.getImageData(0, 0, w, h);\n    }\n\n    if (worker) {\n      // Send to worker\n      worker.postMessage(\n        {\n          pixels: pixels!.data.buffer,\n          width: w,\n          height: h,\n          channels: 4,\n        },\n        [pixels!.data.buffer]\n      );\n    }\n    if (onFrame) {\n      // Send to callback\n      try {\n        onFrame(pixels!);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }, maxIntervalMs);\n\n  return {\n    start: () => loop.start(),\n    cancel: () => loop.cancel(),\n    canvasEl,\n  };\n};\n\nexport const manualCapture = (\n  sourceVideoEl: HTMLVideoElement,\n  opts: ManualCaptureOpts = {}\n): ManualCapturer => {\n  const showCanvas = opts.showCanvas ?? false;\n\n  // Ideally use OffscreenCanvas when it has support?\n  const w = sourceVideoEl.videoWidth;\n  const h = sourceVideoEl.videoHeight;\n\n  // Create canvas if necessary\n  const definedCanvasEl = opts.canvasEl !== undefined;\n  //eslint-disable-next-line functional/no-let\n  let canvasEl = opts.canvasEl;\n  if (!canvasEl) {\n    canvasEl = document.createElement(`CANVAS`) as HTMLCanvasElement;\n    canvasEl.classList.add(`ixfx-capture`);\n    document.body.append(canvasEl);\n    if (!showCanvas) canvasEl.style.display = `none`;\n  }\n\n  canvasEl.width = w;\n  canvasEl.height = h;\n\n  const capture = (): ImageData => {\n    //eslint-disable-next-line functional/no-let\n    let c: CanvasRenderingContext2D | undefined | null;\n\n    // Draw current frame from video element to canvas\n    if (!c) c = canvasEl?.getContext(`2d`, { willReadFrequently: true });\n    if (!c) throw new Error(`Could not create graphics context`);\n    c.drawImage(sourceVideoEl, 0, 0, w, h);\n\n    //eslint-disable-next-line functional/no-let\n    const pixels = c.getImageData(0, 0, w, h);\n\n    //eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (pixels as any).currentTime = sourceVideoEl.currentTime;\n\n    if (opts.postCaptureDraw) opts.postCaptureDraw(c, w, h);\n    return pixels;\n  };\n\n  const dispose = (): void => {\n    if (definedCanvasEl) return; // we didn't create it\n    try {\n      canvasEl?.remove();\n    } catch (_) {\n      // no-op\n    }\n  };\n\n  const c: ManualCapturer = {\n    canvasEl,\n    capture,\n    dispose,\n  };\n  return c;\n};\n","export type Sources = `` | `camera` | `video`;\nimport * as Camera from './Camera.js';\nimport * as VideoFile from './VideoFile.js';\nimport * as Video from '../visual/Video.js';\n\ntype State = `ready` | `initialised` | `disposed`;\n\n/**\n * Frame procesor options\n */\n//eslint-disable-next-line functional/no-mixed-types\nexport type FrameProcessorOpts = {\n  /**\n   * If true, capture canvas will be shown\n   */\n  readonly showCanvas?: boolean;\n  /**\n   * If true, raw source will be shown\n   */\n  readonly showPreview?: boolean;\n  /**\n   * If specified, this function will be called after ImageData is captured\n   * from the intermediate canvs. This allows for drawing on top of the\n   * captured image.\n   */\n  readonly postCaptureDraw?: (\n    ctx: CanvasRenderingContext2D,\n    width: number,\n    height: number\n  ) => void;\n\n  /**\n   * Default constraints to use for the camera source\n   */\n  readonly cameraConstraints?: Camera.Constraints;\n\n  /**\n   * If specified, this canvas will be used for capturing frames to\n   */\n  readonly captureCanvasEl?: HTMLCanvasElement;\n};\n\n/**\n * Frame Processor\n * Simplifies grabbing frames from a source\n */\nexport class FrameProcessor {\n  private _source: Sources;\n  private _state: State;\n  private _teardownNeeded = false;\n\n  private _cameraConstraints: Camera.Constraints | undefined;\n  private _cameraStartResult: Camera.StartResult | undefined;\n  private _videoSourceCapture: Video.ManualCapturer | undefined;\n\n  private _videoFile: File | undefined;\n  private _videoStartResult: VideoFile.StartResult | undefined;\n\n  private _showCanvas: boolean;\n  private _showPreview: boolean;\n  private _postCaptureDraw;\n  private _timer: number;\n  private _captureCanvasEl?: HTMLCanvasElement;\n\n  /**\n   * Create a new frame processor\n   * @param opts\n   */\n  constructor(opts: FrameProcessorOpts = {}) {\n    this._state = `ready`;\n    this._source = ``;\n    this._timer = performance.now();\n    this._showCanvas = opts.showCanvas ?? false;\n    this._showPreview = opts.showPreview ?? false;\n    this._cameraConstraints = opts.cameraConstraints ?? undefined;\n    this._captureCanvasEl = opts.captureCanvasEl ?? undefined;\n    this._postCaptureDraw = opts.postCaptureDraw;\n  }\n\n  /**\n   * Hides or shows the raw source in the DOM\n   * @param enabled Preview enabled\n   */\n  showPreview(enabled: boolean) {\n    if (this._state === `disposed`) throw new Error(`Disposed`);\n    //eslint-disable-next-line functional/no-let\n    let el: HTMLElement | undefined;\n\n    switch (this._source) {\n      case `camera`:\n        el = this._cameraStartResult?.videoEl;\n        if (el !== undefined) el.style.display = enabled ? `block` : `none`;\n        break;\n    }\n\n    this._showPreview = enabled;\n  }\n\n  /**\n   * Shows or hides the Canvas we're capturing to\n   * @param enabled\n   */\n  showCanvas(enabled: boolean) {\n    if (this._state === `disposed`) throw new Error(`Disposed`);\n    //eslint-disable-next-line functional/no-let\n    let el: HTMLElement | undefined;\n\n    if (this._source === `camera` || this._source === `video`) {\n      el = this._videoSourceCapture?.canvasEl;\n      if (el !== undefined) el.style.display = enabled ? `block` : `none`;\n    } else throw new Error(`Source not implemented: ${this._source}`);\n\n    this._showCanvas = enabled;\n  }\n\n  /**\n   * Returns the current capturer instance\n   * @returns\n   */\n  getCapturer(): Video.ManualCapturer | undefined {\n    if (this._state === `disposed`) throw new Error(`Disposed`);\n    if (this._source === `camera` || this._source === `video`) {\n      return this._videoSourceCapture;\n    }\n    throw new Error(`Source kind not supported ${this._source}`);\n  }\n\n  /**\n   * Grab frames from a video camera source and initialises\n   * frame processor.\n   *\n   * If `constraints` are not specified, it will use the ones\n   * provided when creating the class, or defaults.\n   *\n   * @param constraints Override of constraints when requesting camera access\n   */\n  async useCamera(constraints?: Camera.Constraints) {\n    if (this._state === `disposed`) throw new Error(`Disposed`);\n\n    this._source = `camera`;\n    if (this._teardownNeeded) this.teardown();\n    if (constraints) this._cameraConstraints;\n\n    await this.init();\n  }\n\n  async useVideo(file: File) {\n    if (this._state === `disposed`) throw new Error(`Disposed`);\n    this._source = `video`;\n    if (this._teardownNeeded) this.teardown();\n    this._videoFile = file;\n    await this.init();\n  }\n\n  /**\n   * Initialises camera\n   */\n  private async initCamera() {\n    const r = await Camera.start(this._cameraConstraints);\n    if (r === undefined) throw new Error(`Could not start camera`);\n    this._cameraStartResult = r;\n    this.postInit(r);\n  }\n\n  private async initVideo() {\n    if (!this._videoFile) throw new Error(`Video file not defined`);\n    const r = await VideoFile.start(this._videoFile);\n    this._videoStartResult = r;\n\n    this.postInit(r);\n  }\n\n  private async postInit(r: Camera.StartResult | VideoFile.StartResult) {\n    if (this._showPreview) r.videoEl.style.display = `block`;\n\n    // Set up manual capturer\n    this._videoSourceCapture = Video.manualCapture(r.videoEl, {\n      postCaptureDraw: this._postCaptureDraw,\n      showCanvas: this._showCanvas,\n      canvasEl: this._captureCanvasEl,\n    });\n\n    this._teardownNeeded = true;\n    this._cameraStartResult = r;\n  }\n\n  /**\n   * Closes down connections and removes created elements.\n   * Once disposed, the frame processor cannot be used\n   * @returns\n   */\n  dispose() {\n    if (this._state === `disposed`) return;\n    this.teardown();\n    this._state = `disposed`;\n  }\n\n  private async init() {\n    this._timer = performance.now();\n    switch (this._source) {\n      case `camera`:\n        await this.initCamera();\n        break;\n      case `video`:\n        await this.initVideo();\n        break;\n    }\n    this._state = `initialised`;\n  }\n\n  private teardown() {\n    if (!this._teardownNeeded) return;\n    if (this._source === `camera` || this._source === `video`) {\n      this._videoSourceCapture?.dispose();\n    }\n    switch (this._source) {\n      case `camera`:\n        this._cameraStartResult?.dispose();\n        break;\n      case `video`:\n        this._videoStartResult?.dispose();\n        break;\n    }\n    this._teardownNeeded = false;\n  }\n\n  /**\n   * Get the last frame\n   * @returns\n   */\n  getFrame(): ImageData | undefined {\n    if (this._state === `disposed`) throw new Error(`Disposed`);\n\n    switch (this._source) {\n      case `camera`:\n        return this.getFrameCamera();\n      case `video`:\n        return this.getFrameCamera();\n      default:\n        throw new Error(`source type unhandled ${this._source}`);\n    }\n  }\n\n  /**\n   * Get the timestamp of the processor (elapsed time since starting)\n   * @returns\n   */\n  getTimestamp(): number {\n    return performance.now() - this._timer;\n  }\n\n  private getFrameCamera(): ImageData | undefined {\n    return this._videoSourceCapture?.capture();\n  }\n}\n","import { number as guardNumber, integer as guardInteger } from './Guards.js';\n\nimport type { DelayOpts } from './flow/Delay.js';\n\nexport { type DelayOpts };\n\nimport { integerUniqueGen } from './Random.js';\nexport {\n  /**\n   * Generate unique integers within a given range\n   * * @example 0..9 range\n   * ```js\n   * const rand = [ ...randomUniqueInteger(10) ];\n   * // eg: [2, 9, 6, 0, 8, 7, 3, 4, 5, 1]\n   * ```\n   */\n  integerUniqueGen as randomUniqueInteger,\n};\n\nexport { pingPong, pingPongPercent } from './modulation/PingPong.js';\nexport * as Async from './IterableAsync.js';\nexport * as Sync from './IterableSync.js';\n\nexport { interval } from './flow/Interval.js';\nexport { delayLoop } from './flow/Delay.js';\n\n/**\n * Generates a range of numbers, starting from `start` and counting by `interval`.\n * If `end` is provided, generator stops when reached.\n *\n * Unlike {@link numericRange}, numbers might contain rounding errors\n *\n * ```js\n * for (const c of numericRangeRaw(10, 100)) {\n *  // 100, 110, 120 ...\n * }\n * ```\n * @param interval Interval between numbers\n * @param start Start\n * @param end End (if undefined, range never ends)\n */\nexport const numericRangeRaw = function* (\n  interval: number,\n  start: number = 0,\n  end?: number,\n  repeating: boolean = false\n) {\n  if (interval <= 0) throw new Error(`Interval is expected to be above zero`);\n  if (end === undefined) end = Number.MAX_SAFE_INTEGER;\n  //eslint-disable-next-line functional/no-let\n  let v = start;\n  do {\n    while (v < end) {\n      yield v;\n      v += interval;\n    }\n  } while (repeating);\n};\n\n/**\n * Generates a range of numbers, with a given interval.\n *\n * @example For-loop\n * ```\n * let loopForever = numericRange(0.1); // By default starts at 0 and counts upwards forever\n * for (v of loopForever) {\n *  console.log(v);\n * }\n * ```\n *\n * @example If you want more control over when/where incrementing happens...\n * ```js\n * let percent = numericRange(0.1, 0, 1);\n *\n * let percentResult = percent.next().value;\n * ```\n *\n * Note that computations are internally rounded to avoid floating point math issues. So if the `interval` is very small (eg thousandths), specify a higher rounding\n * number.\n *\n * @param interval Interval between numbers\n * @param start Start. Defaults to 0\n * @param end End (if undefined, range never ends)\n * @param repeating Range loops from start indefinately. Default _false_\n * @param rounding A rounding that matches the interval avoids floating-point math hikinks. Eg if the interval is 0.1, use a rounding of 10\n */\nexport const numericRange = function* (\n  interval: number,\n  start: number = 0,\n  end?: number,\n  repeating: boolean = false,\n  rounding?: number\n) {\n  guardNumber(interval, `nonZero`);\n\n  const negativeInterval = interval < 0;\n  if (end === undefined) {\n    /* no op */\n  } else {\n    if (negativeInterval && start < end) {\n      throw new Error(\n        `Interval of ${interval} will never go from ${start} to ${end}`\n      );\n    }\n    if (!negativeInterval && start > end) {\n      throw new Error(\n        `Interval of ${interval} will never go from ${start} to ${end}`\n      );\n    }\n  }\n\n  rounding = rounding ?? 1000;\n  if (end === undefined) end = Number.MAX_SAFE_INTEGER;\n  else end *= rounding;\n  interval = interval * rounding;\n\n  do {\n    //eslint-disable-next-line functional/no-let\n    let v = start * rounding;\n    while ((!negativeInterval && v <= end) || (negativeInterval && v >= end)) {\n      yield v / rounding;\n      v += interval;\n    }\n  } while (repeating);\n};\n\n/**\n * Yields `amount` integers, counting by one from zero. If a negative amount is used,\n * count decreases. If `offset` is provided, this is added to the return result.\n * @example\n * ```js\n * const a = [...count(5)]; // Yields five numbers: [0,1,2,3,4]\n * const b = [...count(-5)]; // Yields five numbers: [0,-1,-2,-3,-4]\n * for (const v of count(5, 5)) {\n *  // Yields: 5, 6, 7, 8, 9\n * }\n * const c = [...count(5,1)]; // Yields [1,2,3,4,5]\n * ```\n *\n * @example Used with forEach\n * ```js\n * // Prints `Hi` 5x\n * forEach(count(5), () => // do something);\n * ```\n *\n * If you want to accumulate return values, consider using\n * {@link Flow.repeat}.\n *\n * @example Run some code every 100ms, 10 times:\n * ```js\n * import { interval } from 'https://unpkg.com/ixfx/dist/flow.js'\n * import { count } from 'https://unpkg.com/ixfx/dist/generators.js'\n * const counter = count(10);\n * for await (const v of interval(counter, { fixedIntervalMs: 100 })) {\n *  // Do something\n * }\n * ```\n * @param amount Number of integers to yield\n * @param offset Added to result\n */\nexport const count = function* (amount: number, offset: number = 0) {\n  // Unit tested.\n  guardInteger(amount, ``, `amount`);\n  guardInteger(offset, ``, `offset`);\n\n  if (amount === 0) return;\n\n  //eslint-disable-next-line functional/no-let\n  let i = 0;\n  do {\n    if (amount < 0) yield -i + offset;\n    else yield i + offset;\n  } while (i++ < Math.abs(amount) - 1);\n};\n\n/**\n * Returns a number range between 0.0-1.0.\n *\n * ```\n * // Yields: [0, 0.2, 0.4, 0.6, 0.8, 1]\n * const a = [...numericPercent(0.2)];\n *\n * // Repeating flag set to true:\n * for (const v of numericPercent(0.2, true)) {\n *  // Infinite loop. V loops back to 0 after hitting 1\n * }\n * ```\n *\n * If `repeating` is true, it loops back to 0 after reaching 1\n * @param interval Interval (default: 0.01, ie. 1%)\n * @param repeating Whether generator should loop (default: false)\n * @param start Start (default: 0)\n * @param end End (default: 1)\n * @returns\n */\nexport const numericPercent = function (\n  interval: number = 0.01,\n  repeating: boolean = false,\n  start: number = 0,\n  end = 1\n) {\n  guardNumber(interval, `percentage`, `interval`);\n  guardNumber(start, `percentage`, `start`);\n  guardNumber(end, `percentage`, `end`);\n  return numericRange(interval, start, end, repeating);\n};\n","/**\n * Return `it` broken up into chunks of `size`\n *\n * ```js\n * chunks([1,2,3,4,5,6,7,8,9,10], 3);\n * // Yields: [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]\n * ```\n * @param it\n * @param size\n * @returns\n */\n\nimport { type IsEqual, type ToString, toStringDefault } from './Util.js';\n\n/**\n * Returns a function that yields a value from a generator.\n * ```js\n * const spring = yieldNumber(Oscillators.spring());\n *\n * spring(); // latest value\n * ```\n *\n * Instead of:\n * ```js\n * const spring = Oscillators.spring();\n *\n * spring.next().value\n * ```\n *\n * A `defaultValue` can be provided if the source generator returns undefined:\n * ```js\n * const spring = yieldNumber(Oscillators.spring(), 0);\n * spring(); // Returns 0 if the generator returns undefined\n * ```\n * @param generator\n * @param defaultValue\n * @returns\n */\nexport function yieldNumber(\n  generator: Generator<number>,\n  defaultValue = undefined\n) {\n  return () => {\n    const v = generator.next().value;\n    if (v === undefined) return defaultValue;\n    return v;\n  };\n}\n\n/**\n * Return first value from an iterable, or _undefined_ if\n * no values are generated\n * @param it\n * @returns\n */\nexport function first<V>(it: Iterable<V>): V | undefined {\n  for (const val of it) {\n    return val;\n  }\n}\n\n/**\n * Returns last value from an iterable, or _undefined_\n * if no values are generated\n * @param it\n */\nexport function last<V>(it: Iterable<V>): V | undefined {\n  //eslint-disable-next-line functional/no-let\n  let ret: V | undefined;\n  for (const val of it) {\n    ret = val;\n  }\n  return ret;\n}\n\n/**\n * Yields chunks of the iterable `it` such that the end of a chunk is the\n * start of the next chunk.\n *\n * Eg, with the input [1,2,3,4,5] and a size of 2, we would get back\n * [1,2], [2,3], [3,4], [4,5].\n *\n *\n * @param it\n * @param size\n * @returns\n */\nexport function* chunksOverlapping<V>(it: Iterable<V>, size: number) {\n  if (size <= 1) throw new Error(`Size should be at least 2`);\n\n  //eslint-disable-next-line functional/no-let\n  let buffer: V[] = [];\n\n  for (const v of it) {\n    //eslint-disable-next-line functional/immutable-data\n    buffer.push(v);\n    if (buffer.length === size) {\n      yield buffer;\n      //eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      buffer = [buffer.at(-1)!];\n    }\n  }\n  if (buffer.length <= 1) return;\n\n  if (buffer.length > 0) yield buffer;\n}\n\n/**\n * Breaks an iterable into array chunks\n * ```js\n * chunks([1,2,3,4,5,6,7,8,9,10], 3);\n * // Yields [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]\n * ```\n * @param it\n * @param size\n */\n//eslint-disable-next-line func-style\nexport function* chunks<V>(it: Iterable<V>, size: number) {\n  //eslint-disable-next-line functional/no-let\n  let buffer = [];\n\n  for (const v of it) {\n    //eslint-disable-next-line functional/immutable-data\n    buffer.push(v);\n    if (buffer.length === size) {\n      yield buffer;\n      buffer = [];\n    }\n  }\n  if (buffer.length > 0) yield buffer;\n}\n\n/**\n * Return concatenation of iterators\n * @param its\n */\n//eslint-disable-next-line func-style\nexport function* concat<V>(...its: readonly Iterable<V>[]) {\n  for (const it of its) yield* it;\n}\n\n/**\n * Drops elements that do not meet the predicate `f`.\n * ```js\n * dropWhile([1, 2, 3, 4], e => e < 3);\n * returns [3, 4]\n * ```\n * @param it\n * @param f\n */\n//eslint-disable-next-line func-style\nexport function* dropWhile<V>(it: Iterable<V>, f: (v: V) => boolean) {\n  for (const v of it) {\n    if (!f(v)) {\n      yield v;\n      break;\n    }\n  }\n  yield* it;\n}\n\n/**\n * Returns true if items in two iterables are equal, as\n * determined by the `equality` function.\n * @param it1\n * @param it2\n * @param equality\n * @returns\n */\n//eslint-disable-next-line func-style\nexport function equals<V>(\n  it1: IterableIterator<V>,\n  it2: IterableIterator<V>,\n  equality?: IsEqual<V>\n) {\n  //it1 = it1[Symbol.iterator]();\n  //it2 = it2[Symbol.iterator]();\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const i1 = it1.next(),\n      i2 = it2.next();\n    if (equality !== undefined) {\n      if (!equality(i1.value, i2.value)) return false;\n    } else if (i1.value !== i2.value) return false;\n    if (i1.done || i2.done) return i1.done && i2.done;\n  }\n}\n\n/**\n * Returns true if `f` returns true for\n * every item in iterable\n * @param it\n * @param f\n * @returns\n */\n//eslint-disable-next-line func-style\nexport function every<V>(it: Iterable<V>, f: (v: V) => boolean) {\n  // https://surma.github.io/underdash/\n  //eslint-disable-next-line functional/no-let\n  let ok = true;\n\n  for (const v of it) ok = ok && f(v);\n  return ok;\n}\n\n/**\n * Yields `v` for each item within `it`.\n *\n * ```js\n * fill([1, 2, 3], 0);\n * // Yields: [0, 0, 0]\n * ```\n * @param it\n * @param v\n */\n//eslint-disable-next-line func-style\nexport function* fill<V>(it: Iterable<V>, v: V) {\n  // https://surma.github.io/underdash/\n\n  for (const _ of it) yield v;\n}\n\n/**\n * Execute function `f` for each item in iterable\n * @param it\n * @param f\n */\n//eslint-disable-next-line func-style\nexport function forEach<V>(it: Iterable<V>, f: (v: V) => boolean) {\n  // https://surma.github.io/underdash/\n\n  for (const v of it) f(v);\n}\n\n/**\n * ```js\n * filter([1, 2, 3, 4], e => e % 2 == 0);\n * returns [2, 4]\n * ```\n * @param it\n * @param f\n */\n//eslint-disable-next-line func-style\nexport function* filter<V>(it: Iterable<V>, f: (v: V) => boolean) {\n  // https://surma.github.io/underdash/\n\n  for (const v of it) {\n    if (!f(v)) continue;\n    yield v;\n  }\n}\n\n/**\n * Returns first item from iterable `it` that matches predicate `f`\n * ```js\n * find([1, 2, 3, 4], e => e > 2);\n * // Yields: 3\n * ```\n * @param it\n * @param f\n * @returns\n */\n//eslint-disable-next-line func-style\nexport function find<V>(it: Iterable<V>, f: (v: V) => boolean) {\n  // https://surma.github.io/underdash/\n\n  for (const v of it) {\n    if (f(v)) return v;\n  }\n}\n\n/**\n * Returns a 'flattened' copy of array, un-nesting arrays one level\n * ```js\n * flatten([1, [2, 3], [[4]]]);\n * // Yields: [1, 2, 3, [4]];\n * ```\n * @param it\n */\n//eslint-disable-next-line func-style\nexport function* flatten<V>(it: Iterable<V>) {\n  // https://surma.github.io/underdash/\n\n  for (const v of it) {\n    //eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (Symbol.iterator in (v as any)) {\n      // @ts-ignore\n      yield* v;\n    } else {\n      yield v;\n    }\n  }\n}\n\n/**\n * Maps an iterable of type `V` to type `X`.\n * ```js\n * map([1, 2, 3], e => e*e)\n * returns [1, 4, 9]\n * ```\n * @param it\n * @param f\n */\n//eslint-disable-next-line func-style\nexport function* map<V, X>(it: Iterable<V>, f: (v: V) => X) {\n  // https://surma.github.io/underdash/\n\n  for (const v of it) {\n    yield f(v);\n  }\n}\n\n/**\n * Returns the maximum seen of an iterable\n * ```js\n * min([\n *  {i:0,v:1},\n *  {i:1,v:9},\n *  {i:2,v:-2}\n * ], (a, b) => a.v > b.v);\n * // Yields: {i:1, v:-9}\n * ```\n * @param it Iterable\n * @param gt Should return _true_ if `a` is greater than `b`.\n * @returns\n */\n//eslint-disable-next-line func-style\nexport function max<V>(it: Iterable<V>, gt = (a: V, b: V) => a > b) {\n  // https://surma.github.io/underdash/\n  //eslint-disable-next-line functional/no-let\n  let max;\n\n  for (const v of it) {\n    if (!max) {\n      max = v;\n      continue;\n    }\n    max = gt(max, v) ? max : v;\n  }\n  return max;\n}\n\n/**\n * Returns the minimum seen of an iterable\n * ```js\n * min([\n *  {i:0,v:1},\n *  {i:1,v:9},\n *  {i:2,v:-2}\n * ], (a, b) => a.v > b.v);\n * // Yields: {i:2, v:-2}\n * ```\n * @param it Iterable\n * @param gt Should return _true_ if `a` is greater than `b`.\n * @returns\n */\n//eslint-disable-next-line func-style\nexport function min<V>(it: Iterable<V>, gt = (a: V, b: V) => a > b) {\n  // https://surma.github.io/underdash/\n  //eslint-disable-next-line functional/no-let\n  let min;\n\n  for (const v of it) {\n    if (!min) {\n      min = v;\n      continue;\n    }\n    min = gt(min, v) ? v : min;\n  }\n  return min;\n}\n\n/**\n * Returns count from `start` for a given length\n * ```js\n * range(-5, 10);\n * // Yields: [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4]\n * ```\n * @param start\n * @param len\n */\n//eslint-disable-next-line func-style\nexport function* range(start: number, len: number) {\n  // https://surma.github.io/underdash/\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < len; i++) {\n    yield start++;\n  }\n  //for (let i=len;len > 0; len--) yield start++;\n}\n\n/**\n * Reduce for iterables\n * ```js\n * reduce([1, 2, 3], (acc, cur) => acc + cur, 0);\n * // Yields: 6\n * ```\n * @param it Iterable\n * @param f Function\n * @param start Start value\n * @returns\n */\n//eslint-disable-next-line func-style\nexport function reduce<V>(\n  it: Iterable<V>,\n  f: (acc: V, current: V) => V,\n  start: V\n) {\n  // https://surma.github.io/underdash/\n\n  for (const v of it) start = f(start, v);\n  return start;\n}\n\n/**\n * Returns a section from an iterable\n * @param it Iterable\n * @param start Start index\n * @param end End index (or until completion)\n */\n//eslint-disable-next-line func-style\nexport function* slice<V>(\n  it: Iterable<V>,\n  start = 0,\n  end = Number.POSITIVE_INFINITY\n) {\n  // https://surma.github.io/underdash/\n  const iit = it[Symbol.iterator]();\n\n  for (; start > 0; start--, end--) iit.next();\n\n  for (const v of it) {\n    if (end-- > 0) {\n      yield v;\n    } else {\n      break;\n    }\n  }\n}\n\n/**\n * Returns true the first time `f` returns true. Useful for spotting any occurrence of\n * data, and exiting quickly\n * ```js\n * some([1, 2, 3, 4], e => e % 3 === 0);\n * // Yields: true\n * ```\n * @param it Iterable\n * @param f Filter function\n * @returns\n */\n//eslint-disable-next-line func-style\nexport function some<V>(it: Iterable<V>, f: (v: V) => boolean) {\n  // https://surma.github.io/underdash/\n\n  for (const v of it) {\n    if (f(v)) return true;\n  }\n  return false;\n}\n\n/**\n * Returns items for which the filter function returns _true_\n * ```js\n * takeWhile([ 1, 2, 3, 4 ], e => e < 3);\n * // Yields: [ 1, 2 ]\n * ```\n * @param it Iterable\n * @param f Filter function\n * @returns\n */\n//eslint-disable-next-line func-style\nexport function* takeWhile<V>(it: Iterable<V>, f: (v: V) => boolean) {\n  // https://surma.github.io/underdash/\n\n  for (const v of it) {\n    if (!f(v)) return;\n    yield v;\n  }\n}\n\n/**\n * Returns unique items from an iterable or\n * array of iterables.\n *\n * ```js\n * const data = [ 'apples', 'oranges' ]\n * const data2 = [ 'oranges', 'pears' ]\n * const unique = [...unique([data,data2]];\n * // Yields: [ 'apples', 'oranges', 'pears' ]\n * ```\n *\n * Custom function can be used that returns a key for\n * an item, determining equality. By default uses\n * JSON.stringify.\n *\n * ```js\n * const data = [ {i:0,v:2}, {i:1,v:3}, {i:2,v:2} ];\n *\n * // Item identity based on 'v' field\n * unique(data, e => e.v);\n * //Yields: [ {i:0,v:2}, {i:1,v:3} ]\n * ```\n * @param iterable Iterable, or array of iterables\n * @param f\n */\n//eslint-disable-next-line func-style\nexport function* unique<V>(\n  //eslint-disable-next-line functional/prefer-readonly-type\n  iterable: Iterable<V> | Iterable<V>[],\n  keyFn: ToString<V> = toStringDefault\n) {\n  // f: (id: V) => V = (id) => id) {\n  // Adapted from https://surma.github.io/underdash/\n  const buffer = [];\n  //eslint-disable-next-line functional/no-let\n  let itera: Iterable<V>[] = [];\n  if (!Array.isArray(iterable)) {\n    itera = [iterable];\n  } else {\n    itera = iterable;\n  }\n  for (const it of itera) {\n    for (const v of it) {\n      const fv = keyFn(v);\n      if (buffer.indexOf(fv) !== -1) continue;\n      //eslint-disable-next-line functional/immutable-data\n      buffer.push(fv);\n      yield v;\n    }\n  }\n}\n\n/**\n * Combine same-positioned items from several iterables\n * ```js\n * zip( [1, 2, 3], [4, 5, 6], [7, 8, 9] );\n * Yields: [ [1, 4, 7], [2, 5, 8], [3, 6, 9] ]\n * ```\n * @param its\n * @returns\n */\n//eslint-disable-next-line func-style\nexport function* zip<V>(...its: readonly Iterable<V>[]) {\n  // https://surma.github.io/underdash/\n  const iits = its.map((it) => it[Symbol.iterator]());\n\n  while (true) {\n    const vs = iits.map((it) => it.next());\n    if (vs.some((v) => v.done)) return;\n    yield vs.map((v) => v.value);\n  }\n}\n","import * as Drawing from './Drawing.js';\nimport * as Svg from './Svg.js';\nimport * as Plot from './Plot.js';\nimport * as Plot2 from './Plot2.js';\n\nimport * as Palette from './Palette.js';\nimport * as Colour from './Colour.js';\nimport * as SceneGraph from './SceneGraph.js';\nimport * as Video from './Video.js';\n\nexport * as ImageDataGrid from './ImageDataGrid.js';\n\n/**\n * Colour interpolation, scale generation and parsing\n *\n * Overview\n * * {@link interpolate}: Blend colours\n * * {@link scale}: Produce colour scale\n * * {@link opacity}: Give a colour opacity\n * * {@link randomHue}: Generate a random hue\n * * {@link goldenAngleColour}: Pick perceptually different shades\n *\n * CSS\n * * {@link getCssVariable}: Parse a CSS-defined colour\n *\n * Conversions: convert from 'blue', 'rgb(255,0,0)',  'hsl(0, 100%, 50%)' etc:\n * * {@link toHex}: to a hex format string\n * * {@link toHsl}: to a `{h, s, l}` object\n * * {@link toRgb}: to a `{r, g, b}` object\n */\nexport { Colour };\n\n/**\n * Working with video, either playback from a file or stream from a video camera.\n *\n * Overview\n * * {@link frames}: Yields frames from a video camera\n * * {@link capture}: Capture frames from a VIDEO element\n *\n * @example Importing\n * ```js\n * // If library is stored two directories up under `ixfx/`\n * import {Video} from '../../ixfx/dist/visual.js';\n * // Import from web\n * import {Video} from 'https://unpkg.com/ixfx/dist/visual.js'\n * ```\n */\nexport { Video };\n\nexport { Palette, Drawing, Svg, Plot, Plot2, SceneGraph };\n\ntry {\n  if (typeof window !== `undefined`) {\n    //eslint-disable-next-line functional/immutable-data,@typescript-eslint/no-explicit-any\n    (window as any).ixfx = {\n      ...(window as any).ixfx,\n      Visuals: {\n        SceneGraph,\n        Plot2,\n        Drawing,\n        Svg,\n        Plot,\n        Palette,\n        Colour,\n        Video,\n      },\n    };\n  }\n} catch {\n  /* no-op */\n}\n","import * as Points from '../geometry/Point.js';\nimport * as Paths from '../geometry/Path.js';\nimport * as Lines from '../geometry/Line.js';\nimport * as Triangles from '../geometry/Triangle.js';\nimport { array as guardArray } from '../Guards.js';\nimport * as Circles from '../geometry/Circle.js';\nimport * as Arcs from '../geometry/Arc.js';\nimport * as Beziers from '../geometry/Bezier.js';\nimport * as Rects from '../geometry/Rect.js';\nimport * as Ellipses from '../geometry/Ellipse.js';\nimport * as Colours from '../visual/Colour.js';\nimport { resolveEl } from '../dom/Util.js';\nimport { roundUpToMultiple } from '../Util.js';\nimport type { IStackImmutable } from '../collections/stack/IStackImmutable.js';\nimport { StackImmutable } from '../collections/stack/StackImmutable.js';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst PIPI = Math.PI * 2;\n\nexport type CanvasCtxQuery =\n  | null\n  | string\n  | CanvasRenderingContext2D\n  | HTMLCanvasElement;\n\n/**\n * Gets a 2d drawing context from canvas element or query, or throws an error\n * @param canvasElCtxOrQuery Canvas element reference or DOM query\n * @returns Drawing context.\n */\nexport const getCtx = (\n  canvasElCtxOrQuery: CanvasCtxQuery\n): CanvasRenderingContext2D => {\n  if (canvasElCtxOrQuery === null) {\n    throw Error(\n      `canvasElCtxOrQuery null. Must be a 2d drawing context or Canvas element`\n    );\n  }\n  if (canvasElCtxOrQuery === undefined) {\n    throw Error(\n      `canvasElCtxOrQuery undefined. Must be a 2d drawing context or Canvas element`\n    );\n  }\n\n  const ctx =\n    canvasElCtxOrQuery instanceof CanvasRenderingContext2D\n      ? canvasElCtxOrQuery\n      : canvasElCtxOrQuery instanceof HTMLCanvasElement\n      ? canvasElCtxOrQuery.getContext(`2d`)\n      : typeof canvasElCtxOrQuery === `string`\n      ? resolveEl<HTMLCanvasElement>(canvasElCtxOrQuery).getContext(`2d`)\n      : canvasElCtxOrQuery;\n  if (ctx === null) throw new Error(`Could not create 2d context for canvas`);\n  return ctx;\n};\n\n/**\n * Makes a helper object that wraps together a bunch of drawing functions that all use the same drawing context\n * @param ctxOrCanvasEl Drawing context or canvs element reference\n * @param canvasBounds Bounds of drawing (optional). Used for limiting `textBlock`\n * @returns\n */\nexport const makeHelper = (\n  ctxOrCanvasEl: CanvasCtxQuery,\n  canvasBounds?: Rects.Rect\n) => {\n  // TODO: Is there a way of automagically defining makeHelper to avoid repetition and keep typesafety and JSDoc?\n  const ctx = getCtx(ctxOrCanvasEl);\n  return {\n    paths(pathsToDraw: Paths.Path[], opts?: DrawingOpts): void {\n      paths(ctx, pathsToDraw, opts);\n    },\n    line(lineToDraw: Lines.Line | Lines.Line[], opts?: DrawingOpts): void {\n      line(ctx, lineToDraw, opts);\n    },\n    rect(\n      rectsToDraw: Rects.RectPositioned | Rects.RectPositioned[],\n      opts?: DrawingOpts & { filled?: boolean }\n    ): void {\n      rect(ctx, rectsToDraw, opts);\n    },\n    bezier(\n      bezierToDraw: Beziers.QuadraticBezier | Beziers.CubicBezier,\n      opts?: DrawingOpts\n    ): void {\n      bezier(ctx, bezierToDraw, opts);\n    },\n    connectedPoints(\n      pointsToDraw: Points.Point[],\n      opts?: DrawingOpts & { loop?: boolean }\n    ): void {\n      connectedPoints(ctx, pointsToDraw, opts);\n    },\n    pointLabels(pointsToDraw: Points.Point[], opts?: DrawingOpts): void {\n      pointLabels(ctx, pointsToDraw, opts);\n    },\n    dot(\n      dotPosition: Points.Point | Points.Point[],\n      opts?: DrawingOpts & {\n        radius: number;\n        outlined?: boolean;\n        filled?: boolean;\n      }\n    ): void {\n      dot(ctx, dotPosition, opts);\n    },\n    circle(\n      circlesToDraw: Circles.CirclePositioned | Circles.CirclePositioned[],\n      opts: DrawingOpts\n    ): void {\n      circle(ctx, circlesToDraw, opts);\n    },\n    arc(\n      arcsToDraw: Arcs.ArcPositioned | Arcs.ArcPositioned[],\n      opts: DrawingOpts\n    ): void {\n      arc(ctx, arcsToDraw, opts);\n    },\n    textBlock(\n      lines: string[],\n      opts: DrawingOpts & {\n        anchor: Points.Point;\n        anchorPadding?: number;\n        bounds?: Rects.RectPositioned;\n      }\n    ): void {\n      if (opts.bounds === undefined && canvasBounds !== undefined) {\n        opts = { ...opts, bounds: { ...canvasBounds, x: 0, y: 0 } };\n      }\n      textBlock(ctx, lines, opts);\n    },\n  };\n};\n\n/**\n * Drawing options\n */\nexport type DrawingOpts = {\n  /**\n   * Stroke style\n   */\n  readonly strokeStyle?: string;\n  /**\n   * Fill style\n   */\n  readonly fillStyle?: string;\n  /**\n   * If true, diagnostic helpers will be drawn\n   */\n  readonly debug?: boolean;\n};\n\nexport type LineOpts = {\n  readonly lineWidth?: number;\n  readonly lineCap?: CanvasLineCap;\n  readonly lineJoin?: CanvasLineJoin;\n};\n\n/**\n * Creates a drawing op to apply provided options\n * @param opts Drawing options that apply\n * @returns Stack\n */\nconst optsOp = (opts: DrawingOpts): StackOp =>\n  coloringOp(opts.strokeStyle, opts.fillStyle);\n\n/**\n * Applies drawing options to `ctx`, returning a {@link DrawingStack}\n * @param ctx Context\n * @param opts Options\n * @returns\n */\nconst applyOpts = (\n  ctx: CanvasRenderingContext2D,\n  opts: DrawingOpts = {},\n  ...additionalOps: readonly StackOp[]\n): DrawingStack => {\n  if (ctx === undefined) throw Error(`ctx undefined`);\n\n  // Create a drawing stack, pushing an op generated from drawing options\n  //eslint-disable-next-line functional/immutable-data\n  const stack = drawingStack(ctx).push(optsOp(opts), ...additionalOps);\n\n  // Apply stack to context\n  stack.apply();\n  return stack;\n};\n\n/**\n * Draws one or more arcs.\n * @param ctx\n * @param arcs\n * @param opts\n */\nexport const arc = (\n  ctx: CanvasRenderingContext2D,\n  arcs: Arcs.ArcPositioned | ReadonlyArray<Arcs.ArcPositioned>,\n  opts: DrawingOpts = {}\n) => {\n  applyOpts(ctx, opts);\n\n  const draw = (arc: Arcs.ArcPositioned) => {\n    ctx.beginPath();\n    ctx.arc(arc.x, arc.y, arc.radius, arc.startRadian, arc.endRadian);\n    ctx.stroke();\n  };\n\n  if (Array.isArray(arcs)) {\n    arcs.forEach(draw);\n  } else draw(arcs as Arcs.ArcPositioned);\n};\n\n/**\n * A drawing stack operation\n */\nexport type StackOp = (ctx: CanvasRenderingContext2D) => void;\n\n/**\n * A drawing stack (immutable)\n */\nexport type DrawingStack = {\n  /**\n   * Push a new drawing op\n   * @param op Operation to add\n   * @returns stack with added op\n   */\n  push(...ops: readonly StackOp[]): DrawingStack;\n  /**\n   * Pops an operatiomn\n   * @returns Drawing stack with item popped\n   */\n  pop(): DrawingStack;\n  /**\n   * Applies drawing stack\n   */\n  apply(): DrawingStack;\n};\n\n/**\n * Colouring drawing op. Applies `fillStyle` and `strokeStyle`\n * @param strokeStyle\n * @param fillStyle\n * @returns\n */\nconst coloringOp = (\n  strokeStyle: string | CanvasGradient | CanvasPattern | undefined,\n  fillStyle: string | CanvasGradient | CanvasPattern | undefined\n): StackOp => {\n  const apply = (ctx: CanvasRenderingContext2D) => {\n    // eslint-disable-next-line functional/immutable-data\n    if (fillStyle) ctx.fillStyle = fillStyle;\n    // eslint-disable-next-line functional/immutable-data\n    if (strokeStyle) ctx.strokeStyle = strokeStyle;\n  };\n  return apply;\n};\n\nconst lineOp = (\n  lineWidth: number | undefined,\n  lineJoin: CanvasLineJoin | undefined,\n  lineCap: CanvasLineCap | undefined\n): StackOp => {\n  const apply = (ctx: CanvasRenderingContext2D) => {\n    // eslint-disable-next-line functional/immutable-data\n    if (lineWidth) ctx.lineWidth = lineWidth;\n    // eslint-disable-next-line functional/immutable-data\n    if (lineJoin) ctx.lineJoin = lineJoin;\n    // eslint-disable-next-line functional/immutable-data\n    if (lineCap) ctx.lineCap = lineCap;\n  };\n  return apply;\n};\n\n/**\n * Creates and returns an immutable drawing stack for a context\n * @param ctx Context\n * @param stk Initial stack operations\n * @returns\n */\nexport const drawingStack = (\n  ctx: CanvasRenderingContext2D,\n  stk?: IStackImmutable<StackOp>\n): DrawingStack => {\n  if (stk === undefined) stk = new StackImmutable<StackOp>();\n\n  const push = (...ops: StackOp[]): DrawingStack => {\n    if (stk === undefined) stk = new StackImmutable<StackOp>();\n    //eslint-disable-next-line functional/immutable-data\n    const s = stk.push(...ops);\n    ops.forEach((o) => o(ctx));\n    return drawingStack(ctx, s);\n  };\n\n  const pop = (): DrawingStack => {\n    //eslint-disable-next-line functional/immutable-data\n    const s = stk?.pop();\n    return drawingStack(ctx, s);\n  };\n\n  const apply = (): DrawingStack => {\n    if (stk === undefined) return drawingStack(ctx);\n    stk.forEach((op) => op(ctx));\n    return drawingStack(ctx, stk);\n  };\n\n  return { push, pop, apply };\n};\n\nexport const lineThroughPoints = (\n  ctx: CanvasRenderingContext2D,\n  points: readonly Points.Point[],\n  opts?: DrawingOpts\n): void => {\n  applyOpts(ctx, opts);\n\n  // https://stackoverflow.com/questions/7054272/how-to-draw-smooth-curve-through-n-points-using-javascript-html5-canvas\n  ctx.moveTo(points[0].x, points[0].y);\n\n  points.forEach((p, index) => {\n    if (index + 2 >= points.length) return;\n    const pNext = points[index + 1];\n    const mid = {\n      x: (p.x + pNext.x) / 2,\n      y: (p.y + pNext.y) / 2,\n    };\n    const cpX1 = (mid.x + p.x) / 2;\n    const cpX2 = (mid.x + pNext.x) / 2;\n    ctx.quadraticCurveTo(cpX1, pNext.y, mid.x, mid.y);\n    ctx.quadraticCurveTo(cpX2, pNext.y, pNext.x, pNext.y);\n  });\n};\n\n/**\n * Draws one or more circles. Will draw outline/fill depending on\n * whether `strokeStyle` or `fillStyle` params are present in the drawing options.\n *\n * ```js\n * // Draw a circle with radius of 10 at 0,0\n * circle(ctx, {radius:10});\n *\n * // Draw a circle of radius 10 at 100,100\n * circle(ctx, {radius: 10, x: 100, y: 100});\n *\n * // Draw two blue outlined circles\n * circle(ctx, [ {radius: 5}, {radius: 10} ], {strokeStyle:`blue`});\n * ```\n * @param ctx Drawing context\n * @param circlesToDraw Circle(s) to draw\n * @param opts Drawing options\n */\nexport const circle = (\n  ctx: CanvasRenderingContext2D,\n  circlesToDraw: Circles.CirclePositioned | readonly Circles.CirclePositioned[],\n  opts: DrawingOpts = {}\n) => {\n  applyOpts(ctx, opts);\n\n  const draw = (c: Circles.CirclePositioned) => {\n    ctx.beginPath();\n    ctx.arc(c.x, c.y, c.radius, 0, PIPI);\n    if (opts.strokeStyle) ctx.stroke();\n    //eslint-disable-next-line functional/immutable-data\n    if (opts.fillStyle) ctx.fill();\n  };\n  if (Array.isArray(circlesToDraw)) circlesToDraw.forEach(draw);\n  else draw(circlesToDraw as Circles.CirclePositioned);\n};\n\n/**\n * Draws one or more ellipses. Will draw outline/fill depending on\n * whether `strokeStyle` or `fillStyle` params are present in the drawing options.\n * @param ctx\n * @param ellipsesToDraw\n * @param opts\n */\nexport const ellipse = (\n  ctx: CanvasRenderingContext2D,\n  ellipsesToDraw:\n    | Ellipses.EllipsePositioned\n    | readonly Ellipses.EllipsePositioned[],\n  opts: DrawingOpts = {}\n) => {\n  applyOpts(ctx, opts);\n\n  const draw = (e: Ellipses.EllipsePositioned) => {\n    ctx.beginPath();\n    const rotation = e.rotation ?? 0;\n    const startAngle = e.startAngle ?? 0;\n    const endAngle = e.endAngle ?? PIPI;\n    ctx.ellipse(e.x, e.y, e.radiusX, e.radiusY, rotation, startAngle, endAngle);\n    if (opts.strokeStyle) ctx.stroke();\n    //eslint-disable-next-line functional/immutable-data\n    if (opts.fillStyle) ctx.fill();\n  };\n  if (Array.isArray(ellipsesToDraw)) ellipsesToDraw.forEach(draw);\n  else draw(ellipsesToDraw as Ellipses.EllipsePositioned);\n};\n\n/**\n * Draws one or more paths.\n * supported paths are quadratic beziers and lines.\n * @param ctx\n * @param pathsToDraw\n * @param opts\n */\nexport const paths = (\n  ctx: CanvasRenderingContext2D,\n  pathsToDraw: readonly Paths.Path[] | Paths.Path,\n  opts: { readonly strokeStyle?: string; readonly debug?: boolean } = {}\n) => {\n  applyOpts(ctx, opts);\n\n  const draw = (path: Paths.Path) => {\n    // Call appropriate drawing function depending on the type of path\n    if (Beziers.isQuadraticBezier(path)) quadraticBezier(ctx, path, opts);\n    else if (Lines.isLine(path)) line(ctx, path, opts);\n    else throw new Error(`Unknown path type ${JSON.stringify(path)}`);\n  };\n\n  if (Array.isArray(pathsToDraw)) pathsToDraw.forEach(draw);\n  else draw(pathsToDraw as Paths.Path);\n};\n\n/**\n * Draws a line between all the given points.\n * If a fillStyle is specified, it will be filled.\n *\n * See also:\n * * {@link line}: Draw one or more lines\n *\n * @param ctx\n * @param pts\n */\nexport const connectedPoints = (\n  ctx: CanvasRenderingContext2D,\n  pts: readonly Points.Point[],\n  opts: {\n    readonly loop?: boolean;\n    readonly fillStyle?: string;\n    readonly strokeStyle?: string;\n  } = {}\n) => {\n  const shouldLoop = opts.loop ?? false;\n\n  guardArray(pts);\n  if (pts.length === 0) return;\n\n  // Throw an error if any point is invalid\n  pts.forEach((pt, i) => Points.guard(pt, `Index ${i}`));\n\n  applyOpts(ctx, opts);\n\n  // Draw points\n  ctx.beginPath();\n  ctx.moveTo(pts[0].x, pts[0].y);\n  pts.forEach((pt) => ctx.lineTo(pt.x, pt.y));\n\n  if (shouldLoop) ctx.lineTo(pts[0].x, pts[0].y);\n\n  // if (opts.strokeStyle) ctx.strokeStyle = opts.strokeStyle;\n  if (\n    opts.strokeStyle ||\n    (opts.strokeStyle === undefined && opts.fillStyle === undefined)\n  ) {\n    ctx.stroke();\n  }\n  if (opts.fillStyle) {\n    //eslint-disable-next-line functional/immutable-data\n    ctx.fill();\n  }\n};\n\n/**\n * Draws labels for a set of points\n * @param ctx\n * @param pts Points to draw\n * @param opts\n * @param labels Labels for points\n */\nexport const pointLabels = (\n  ctx: CanvasRenderingContext2D,\n  pts: readonly Points.Point[],\n  opts: { readonly fillStyle?: string } = {},\n  labels?: readonly string[]\n) => {\n  if (pts.length === 0) return;\n\n  // Throw an error if any point is invalid\n  pts.forEach((pt, i) => Points.guard(pt, `Index ${i}`));\n\n  applyOpts(ctx, opts);\n\n  pts.forEach((pt, i) => {\n    const label =\n      labels !== undefined && i < labels.length ? labels[i] : i.toString();\n    ctx.fillText(label.toString(), pt.x, pt.y);\n  });\n};\n\n/**\n * Returns `point` with the canvas's translation matrix applied\n * @param ctx\n * @param point\n * @returns\n */\nexport const translatePoint = (\n  ctx: CanvasRenderingContext2D,\n  point: Points.Point\n): Points.Point => {\n  const m = ctx.getTransform();\n  return {\n    x: point.x * m.a + point.y * m.c + m.e,\n    y: point.x * m.b + point.y * m.d + m.f,\n  };\n};\n\n/**\n * Creates a new HTML IMG element with a snapshot of the\n * canvas. Element will need to be inserted into the document.\n *\n * ```\n * const myCanvas = document.getElementById('someCanvas');\n * const el = copyToImg(myCanvas);\n * document.getElementById('images').appendChild(el);\n * ```\n * @param canvasEl\n * @returns\n */\nexport const copyToImg = (canvasEl: HTMLCanvasElement): HTMLImageElement => {\n  const img = document.createElement(`img`);\n  //eslint-disable-next-line functional/immutable-data\n  img.src = canvasEl.toDataURL(`image/jpeg`);\n  return img;\n};\n\n/**\n * Draws filled circle(s) at provided point(s)\n * @param ctx\n * @param pos\n * @param opts\n */\nexport const dot = (\n  ctx: CanvasRenderingContext2D,\n  pos: Points.Point | readonly Points.Point[],\n  opts?: DrawingOpts & {\n    readonly radius?: number;\n    readonly outlined?: boolean;\n    readonly filled?: boolean;\n  }\n) => {\n  if (opts === undefined) opts = {};\n  const radius = opts.radius ?? 10;\n\n  applyOpts(ctx, opts);\n\n  ctx.beginPath();\n\n  // x&y for arc is the center of circle\n  if (Array.isArray(pos)) {\n    pos.forEach((p) => {\n      ctx.arc(p.x, p.y, radius, 0, 2 * Math.PI);\n    });\n  } else {\n    const p = pos as Points.Point;\n    ctx.arc(p.x, p.y, radius, 0, 2 * Math.PI);\n  }\n\n  //eslint-disable-next-line functional/immutable-data\n  if (opts.filled || !opts.outlined) ctx.fill();\n  if (opts.outlined) ctx.stroke();\n};\n\n/**\n * Draws a cubic or quadratic bezier\n * @param ctx\n * @param bezierToDraw\n * @param opts\n */\nexport const bezier = (\n  ctx: CanvasRenderingContext2D,\n  bezierToDraw: Beziers.QuadraticBezier | Beziers.CubicBezier,\n  opts?: DrawingOpts\n) => {\n  if (Beziers.isQuadraticBezier(bezierToDraw)) {\n    quadraticBezier(ctx, bezierToDraw, opts);\n  } else if (Beziers.isCubicBezier(bezierToDraw)) {\n    cubicBezier(ctx, bezierToDraw, opts);\n  }\n};\n\nconst cubicBezier = (\n  ctx: CanvasRenderingContext2D,\n  bezierToDraw: Beziers.CubicBezier,\n  opts: DrawingOpts = {}\n) => {\n  // eslint-disable-next-line functional/no-let\n  let stack = applyOpts(ctx, opts);\n\n  const { a, b, cubic1, cubic2 } = bezierToDraw;\n  const isDebug = opts.debug ?? false;\n\n  if (isDebug) {\n    /*\n     * const ss = ctx.strokeStyle;\n     * ctx.strokeStyle = ss;\n     */\n  }\n  ctx.beginPath();\n  ctx.moveTo(a.x, a.y);\n  ctx.bezierCurveTo(cubic1.x, cubic1.y, cubic2.x, cubic2.y, b.x, b.y);\n  ctx.stroke();\n\n  if (isDebug) {\n    //eslint-disable-next-line functional/immutable-data\n    stack = stack.push(\n      optsOp({\n        ...opts,\n        strokeStyle: Colours.opacity(opts.strokeStyle ?? `silver`, 0.6),\n        fillStyle: Colours.opacity(opts.fillStyle ?? `yellow`, 0.4),\n      })\n    );\n\n    stack.apply();\n    ctx.moveTo(a.x, a.y);\n    ctx.lineTo(cubic1.x, cubic1.y);\n    ctx.stroke();\n    ctx.moveTo(b.x, b.y);\n    ctx.lineTo(cubic2.x, cubic2.y);\n    ctx.stroke();\n\n    ctx.fillText(`a`, a.x + 5, a.y);\n    ctx.fillText(`b`, b.x + 5, b.y);\n    ctx.fillText(`c1`, cubic1.x + 5, cubic1.y);\n    ctx.fillText(`c2`, cubic2.x + 5, cubic2.y);\n\n    dot(ctx, cubic1, { radius: 3 });\n    dot(ctx, cubic2, { radius: 3 });\n    dot(ctx, a, { radius: 3 });\n    dot(ctx, b, { radius: 3 });\n    //eslint-disable-next-line functional/immutable-data\n    stack = stack.pop();\n    stack.apply();\n  }\n};\n\nconst quadraticBezier = (\n  ctx: CanvasRenderingContext2D,\n  bezierToDraw: Beziers.QuadraticBezier,\n  opts: DrawingOpts = {}\n) => {\n  const { a, b, quadratic } = bezierToDraw;\n  const isDebug = opts.debug ?? false;\n  // eslint-disable-next-line functional/no-let\n  let stack = applyOpts(ctx, opts);\n\n  ctx.beginPath();\n  ctx.moveTo(a.x, a.y);\n  ctx.quadraticCurveTo(quadratic.x, quadratic.y, b.x, b.y);\n  ctx.stroke();\n\n  if (isDebug) {\n    /*\n     * const fs = ctx.fillStyle;\n     * const ss = ctx.strokeStyle;\n     * ctx.fillStyle = opts.strokeStyle ?? `gray`;\n     * ctx.strokeStyle = opts.strokeStyle ?? `gray`;\n     */\n    //eslint-disable-next-line functional/immutable-data\n    stack = stack.push(\n      optsOp({\n        ...opts,\n        strokeStyle: Colours.opacity(opts.strokeStyle ?? `silver`, 0.6),\n        fillStyle: Colours.opacity(opts.fillStyle ?? `yellow`, 0.4),\n      })\n    );\n    connectedPoints(ctx, [a, quadratic, b]);\n\n    ctx.fillText(`a`, a.x + 5, a.y);\n    ctx.fillText(`b`, b.x + 5, b.y);\n    ctx.fillText(`h`, quadratic.x + 5, quadratic.y);\n    dot(ctx, quadratic, { radius: 3 });\n    dot(ctx, a, { radius: 3 });\n    dot(ctx, b, { radius: 3 });\n    /*\n     * ctx.fillStyle = fs;\n     * ctx.strokeStyle = ss;\n     */\n    //eslint-disable-next-line functional/immutable-data\n    stack = stack.pop();\n    stack.apply();\n  }\n};\n\n/**\n * Draws one or more lines.\n *\n * Each line is drawn independently, ie it's not assumed lines are connected.\n *\n * See also:\n * * {@link connectedPoints}: Draw a series of connected points\n * @param ctx\n * @param toDraw\n * @param opts\n */\nexport const line = (\n  ctx: CanvasRenderingContext2D,\n  toDraw: Lines.Line | readonly Lines.Line[],\n  opts: LineOpts & DrawingOpts = {}\n) => {\n  const isDebug = opts.debug ?? false;\n  const o = lineOp(opts.lineWidth, opts.lineJoin, opts.lineCap);\n  applyOpts(ctx, opts, o);\n\n  const draw = (d: Lines.Line) => {\n    const { a, b } = d;\n    ctx.beginPath();\n    ctx.moveTo(a.x, a.y);\n    ctx.lineTo(b.x, b.y);\n    if (isDebug) {\n      ctx.fillText(`a`, a.x, a.y);\n      ctx.fillText(`b`, b.x, b.y);\n      dot(ctx, a, { radius: 5, strokeStyle: `black` });\n      dot(ctx, b, { radius: 5, strokeStyle: `black` });\n    }\n    ctx.stroke();\n  };\n\n  if (Array.isArray(toDraw)) toDraw.forEach(draw);\n  else draw(toDraw as Lines.Line);\n};\n\n/**\n * Draws one or more triangles\n * @param ctx\n * @param toDraw\n * @param opts\n */\nexport const triangle = (\n  ctx: CanvasRenderingContext2D,\n  toDraw: Triangles.Triangle | readonly Triangles.Triangle[],\n  opts: DrawingOpts & { readonly filled?: boolean } = {}\n) => {\n  applyOpts(ctx, opts);\n\n  const draw = (t: Triangles.Triangle) => {\n    connectedPoints(ctx, Triangles.corners(t), { ...opts, loop: true });\n\n    if (opts.debug) {\n      pointLabels(ctx, Triangles.corners(t), undefined, [`a`, `b`, `c`]);\n    }\n  };\n\n  if (Array.isArray(toDraw)) toDraw.forEach(draw);\n  else draw(toDraw as Triangles.Triangle);\n};\n\n// export const arrowFromTip = (ctx:CanvasRenderingContext2D, tipPos: Points.Point, tailLength:number, opts:DrawingOpts) => {\n//   if (opts.fillStyle) ctx.fillStyle = opts.fillStyle;\n//   if (opts.strokeStyle) ctx.strokeStyle = opts.strokeStyle;\n\n//   ctx.save();\n//   ctx.translate\n//   ctx.restore();\n// }\n\n/**\n * Draws one or more rectangles\n * @param ctx\n * @param toDraw\n * @param opts\n */\nexport const rect = (\n  ctx: CanvasRenderingContext2D,\n  toDraw: Rects.RectPositioned | readonly Rects.RectPositioned[],\n  opts: DrawingOpts & {\n    readonly filled?: boolean;\n    readonly stroked?: boolean;\n  } = {}\n) => {\n  applyOpts(ctx, opts);\n\n  const draw = (d: Rects.RectPositioned) => {\n    if (opts.filled) ctx.fillRect(d.x, d.y, d.width, d.height);\n    if (opts.stroked ?? true) ctx.strokeRect(d.x, d.y, d.width, d.height);\n\n    if (opts.debug) {\n      pointLabels(ctx, Rects.corners(d), undefined, [`NW`, `NE`, `SE`, `SW`]);\n    }\n  };\n\n  if (Array.isArray(toDraw)) toDraw.forEach(draw);\n  else draw(toDraw as Rects.RectPositioned);\n};\n\n/**\n * Returns the width of `text`. Rounds number up to nearest multiple if provided. If\n * text is empty or undefined, 0 is returned.\n * @param ctx\n * @param text\n * @param widthMultiple\n * @returns\n */\nexport const textWidth = (\n  ctx: CanvasRenderingContext2D,\n  text?: string | null,\n  padding = 0,\n  widthMultiple?: number\n): number => {\n  if (text === undefined || text === null || text.length === 0) return 0;\n  const m = ctx.measureText(text);\n  if (widthMultiple) return roundUpToMultiple(m.width, widthMultiple) + padding;\n  return m.width + padding;\n};\n\n/**\n * Draws a block of text. Each array item is considered a line.\n * @param ctx\n * @param lines\n * @param opts\n */\nexport const textBlock = (\n  ctx: CanvasRenderingContext2D,\n  lines: readonly string[],\n  opts: DrawingOpts & {\n    readonly anchor: Points.Point;\n    readonly anchorPadding?: number;\n    readonly bounds?: Rects.RectPositioned;\n  }\n) => {\n  applyOpts(ctx, opts);\n  const anchorPadding = opts.anchorPadding ?? 0;\n\n  const anchor = opts.anchor;\n  const bounds = opts.bounds ?? { x: 0, y: 0, width: 1000000, height: 1000000 };\n\n  // Measure each line\n  //eslint-disable-next-line functional/prefer-tacit\n  const blocks = lines.map((l) => ctx.measureText(l));\n\n  // Get width and height\n  const widths = blocks.map((tm) => tm.width);\n  const heights = blocks.map(\n    (tm) => tm.actualBoundingBoxAscent + tm.actualBoundingBoxDescent\n  );\n\n  // Find extremes\n  const maxWidth = Math.max(...widths);\n  const totalHeight = heights.reduce((acc, val) => acc + val, 0);\n\n  // eslint-disable-next-line functional/no-let\n  let { x, y } = anchor;\n\n  if (anchor.x + maxWidth > bounds.width) {\n    x = bounds.width - (maxWidth + anchorPadding);\n  } else x -= anchorPadding;\n\n  if (x < bounds.x) x = bounds.x + anchorPadding;\n\n  if (anchor.y + totalHeight > bounds.height) {\n    y = bounds.height - (totalHeight + anchorPadding);\n  } else y -= anchorPadding;\n\n  if (y < bounds.y) y = bounds.y + anchorPadding;\n\n  lines.forEach((line, i) => {\n    ctx.fillText(line, x, y);\n    y += heights[i];\n  });\n};\n\nexport type HorizAlign = `left` | `right` | `center`;\nexport type VertAlign = `top` | `center` | `bottom`;\n\n/**\n * Draws an aligned text block\n */\nexport const textBlockAligned = (\n  ctx: CanvasRenderingContext2D,\n  text: readonly string[] | string,\n  opts: DrawingOpts & {\n    readonly bounds: Rects.RectPositioned;\n    readonly horiz?: HorizAlign;\n    readonly vert?: VertAlign;\n  }\n) => {\n  const { bounds } = opts;\n  const { horiz = `left`, vert = `top` } = opts;\n\n  //eslint-disable-next-line functional/no-let\n  let lines: readonly string[];\n  if (typeof text === `string`) lines = [text];\n  else lines = text;\n\n  applyOpts(ctx, opts);\n\n  ctx.save();\n  ctx.translate(bounds.x, bounds.y);\n  //eslint-disable-next-line functional/immutable-data\n  ctx.textAlign = `left`;\n  //eslint-disable-next-line functional/immutable-data\n  ctx.textBaseline = `top`;\n  const middleX = bounds.width / 2;\n  const middleY = bounds.height / 2;\n\n  // Measure each line\n  //eslint-disable-next-line functional/prefer-tacit\n  const blocks = lines.map((l) => ctx.measureText(l));\n  const heights = blocks.map(\n    (tm) => tm.actualBoundingBoxAscent + tm.actualBoundingBoxDescent\n  );\n  const totalHeight = heights.reduce((acc, val) => acc + val, 0);\n\n  //eslint-disable-next-line functional/no-let\n  let y = 0;\n  if (vert === `center`) y = middleY - totalHeight / 2;\n  else if (vert === `bottom`) {\n    y = bounds.height - totalHeight;\n  }\n\n  lines.forEach((line, i) => {\n    //eslint-disable-next-line functional/no-let\n    let x = 0;\n    if (horiz === `center`) x = middleX - blocks[i].width / 2;\n    else if (horiz === `right`) x = bounds.width - blocks[i].width;\n    ctx.fillText(lines[i], x, y);\n    y += heights[i];\n  });\n\n  ctx.restore();\n};\n","import { Lines, radianToDegree, Polar, Circles, Rects } from './index.js';\nimport * as Points from './Point.js';\n\nimport { number as guardNumber } from '../Guards.js';\n\n/**\n * Functions for working with equilateral triangles, defined by length\n */\nexport * as Equilateral from './TriangleEquilateral.js';\n\n/**\n * Functions for working with right-angled triangles, defined by two of three edges\n */\nexport * as Right from './TriangleRight.js';\n\nexport * as Isosceles from './TriangleIsosceles.js';\n\nconst piPi = Math.PI * 2;\n\n/**\n * Triangle.\n *\n * Helpers for creating:\n *  - {@link fromFlatArray}: Create from [x1, y1, x2, y2, x3, y3]\n *  - {@link fromPoints}: Create from three `{x,y}` sets\n *  - {@link fromRadius}: Equilateral triangle of a given radius and center\n */\nexport type Triangle = {\n  readonly a: Points.Point;\n  readonly b: Points.Point;\n  readonly c: Points.Point;\n};\n\n/**\n * A triangle consisting of three empty points (Points.Empty)\n */\n//eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Empty = Object.freeze({\n  a: { x: 0, y: 0 },\n  b: { x: 0, y: 0 },\n  c: { x: 0, y: 0 },\n});\n\n/**\n * A triangle consisting of three placeholder points (Points.Placeholder)\n */\n//eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Placeholder = Object.freeze({\n  a: { x: NaN, y: NaN },\n  b: { x: NaN, y: NaN },\n  c: { x: NaN, y: NaN },\n});\n\n/**\n * Returns true if triangle is empty\n * @param t\n * @returns\n */\nexport const isEmpty = (t: Triangle): boolean =>\n  Points.isEmpty(t.a) && Points.isEmpty(t.b) && Points.isEmpty(t.c);\n\n/**\n * Returns true if triangle is a placeholder\n * @param t\n * @returns\n */\nexport const isPlaceholder = (t: Triangle): boolean =>\n  Points.isPlaceholder(t.a) &&\n  Points.isPlaceholder(t.b) &&\n  Points.isPlaceholder(t.c);\n\n/**\n * Applies `fn` to each of a triangle's corner points, returning the result.\n *\n * @example Add some random to the x of each corner\n * ```\n * const t = apply(tri, p => {\n *  const r = 10;\n *  return {\n *    x: p.x + (Math.random()*r*2) - r,\n *    y: p.y\n *  }\n * });\n * ```\n * @param t\n * @param fn\n * @returns\n */\nexport const apply = (\n  t: Triangle,\n  fn: (p: Points.Point, label?: string) => Points.Point\n) =>\n  Object.freeze<Triangle>({\n    ...t,\n    a: fn(t.a, `a`),\n    b: fn(t.b, `b`),\n    c: fn(t.c, `c`),\n  });\n\n/**\n * Throws an exception if the triangle is invalid\n * @param t\n * @param name\n */\nexport const guard = (t: Triangle, name: string = `t`) => {\n  if (t === undefined) throw Error(`{$name} undefined`);\n  Points.guard(t.a, name + `.a`);\n  Points.guard(t.b, name + `.b`);\n  Points.guard(t.c, name + `.c`);\n};\n\n/**\n * Returns true if the parameter appears to be a valid triangle\n * @param p\n * @returns\n */\nexport const isTriangle = (p: number | unknown): p is Triangle => {\n  if (p === undefined) return false;\n  const tri = p as Triangle;\n  if (!Points.isPoint(tri.a)) return false;\n  if (!Points.isPoint(tri.b)) return false;\n  if (!Points.isPoint(tri.c)) return false;\n  return true;\n};\n\n/**\n * Returns true if the two parameters have equal values\n * @param a\n * @param b\n * @returns\n */\nexport const isEqual = (a: Triangle, b: Triangle): boolean =>\n  Points.isEqual(a.a, b.a) &&\n  Points.isEqual(a.b, b.b) &&\n  Points.isEqual(a.c, b.c);\n\n/**\n * Returns the corners (vertices) of the triangle as an array of points\n * @param t\n * @returns Array of length three\n */\nexport const corners = (t: Triangle): readonly Points.Point[] => {\n  guard(t);\n  return [t.a, t.b, t.c];\n};\n\n/**\n * Returns the edges (ie sides) of the triangle as an array of lines\n * @param t\n * @returns Array of length three\n */\nexport const edges = (t: Triangle): Lines.PolyLine => {\n  guard(t);\n  return Lines.joinPointsToLines(t.a, t.b, t.c, t.a);\n};\n\n/**\n * Returns the lengths of the triangle sides\n * @param t\n * @returns Array of length three\n */\nexport const lengths = (t: Triangle): readonly number[] => {\n  guard(t);\n  return [\n    Points.distance(t.a, t.b),\n    Points.distance(t.b, t.c),\n    Points.distance(t.c, t.a),\n  ];\n};\n\n/**\n * Return the three interior angles of the triangle, in radians.\n * @param t\n * @returns\n */\nexport const angles = (t: Triangle): readonly number[] => {\n  guard(t);\n  return [\n    Points.angle(t.a, t.b),\n    Points.angle(t.b, t.c),\n    Points.angle(t.c, t.a),\n  ];\n};\n\n/**\n * Returns the three interior angles of the triangle, in degrees\n * @param t\n * @returns\n */\nexport const anglesDegrees = (t: Triangle): readonly number[] => {\n  guard(t);\n  return radianToDegree(angles(t));\n};\n\n/**\n * Returns true if it is an equilateral triangle\n * @param t\n * @returns\n */\nexport const isEquilateral = (t: Triangle): boolean => {\n  guard(t);\n  const [a, b, c] = lengths(t);\n  return a === b && b === c;\n};\n\n/**\n * Returns true if it is an isosceles triangle\n * @param t\n * @returns\n */\nexport const isIsosceles = (t: Triangle): boolean => {\n  const [a, b, c] = lengths(t);\n  if (a === b) return true;\n  if (b === c) return true;\n  if (c === a) return true;\n  return false;\n};\n\n/**\n * Returns true if at least one interior angle is 90 degrees\n * @param t\n * @returns\n */\nexport const isRightAngle = (t: Triangle): boolean =>\n  angles(t).some((v) => v === Math.PI / 2);\n\n/**\n * Returns true if triangle is oblique: No interior angle is 90 degrees\n * @param t\n * @returns\n */\nexport const isOblique = (t: Triangle): boolean => !isRightAngle(t);\n\n/**\n * Returns true if triangle is actue: all interior angles less than 90 degrees\n * @param t\n * @returns\n */\nexport const isAcute = (t: Triangle): boolean =>\n  !angles(t).some((v) => v >= Math.PI / 2);\n\n/**\n * Returns true if triangle is obtuse: at least one interior angle is greater than 90 degrees\n * @param t\n * @returns\n */\nexport const isObtuse = (t: Triangle): boolean =>\n  angles(t).some((v) => v > Math.PI / 2);\n\n/**\n * Returns simple centroid of triangle\n * @param t\n * @returns\n */\nexport const centroid = (t: Triangle): Points.Point => {\n  guard(t);\n  const total = Points.reduce(\n    [t.a, t.b, t.c],\n    (p: Points.Point, acc: Points.Point) => ({\n      x: p.x + acc.x,\n      y: p.y + acc.y,\n    })\n  );\n  const div = {\n    x: total.x / 3,\n    y: total.y / 3,\n  };\n  return div;\n};\n\n/**\n * Calculates perimeter of a triangle\n * @param t\n * @returns\n */\nexport const perimeter = (t: Triangle): number => {\n  guard(t);\n  return edges(t).reduce<number>((acc, v) => acc + Lines.length(v), 0);\n};\n\n/**\n * Calculates the area of a triangle\n * @param t\n * @returns\n */\nexport const area = (t: Triangle): number => {\n  guard(t, `t`);\n\n  // Get length of edges\n  const e = edges(t).map((l) => Lines.length(l));\n\n  // Add up length of edges, halve\n  const p = (e[0] + e[1] + e[2]) / 2;\n  return Math.sqrt(p * (p - e[0]) * (p - e[1]) * (p - e[2]));\n};\n\n/**\n * Returns the largest circle enclosed by triangle `t`.\n * @param t\n */\nexport const innerCircle = (t: Triangle): Circles.CirclePositioned => {\n  const c = centroid(t);\n  const p = perimeter(t) / 2;\n  const a = area(t);\n  const radius = a / p;\n  return { radius, ...c };\n};\n\n/**\n * Returns the largest circle touching the corners of triangle `t`.\n * @param t\n * @returns\n */\nexport const outerCircle = (t: Triangle): Circles.CirclePositioned => {\n  const [a, b, c] = edges(t).map((l) => Lines.length(l));\n  const cent = centroid(t);\n  const radius =\n    (a * b * c) /\n    Math.sqrt((a + b + c) * (-a + b + c) * (a - b + c) * (a + b - c));\n  return {\n    radius,\n    ...cent,\n  };\n};\n\n/**\n * Returns an equilateral triangle centered at the origin.\n *\n * ```js\n * // Create a triangle at 100,100 with radius of 60\n * const tri = fromRadius({x:100,y:100}, 60);\n *\n * // Triangle with point A upwards, B to the right, C to the left\n * constr tri2 = fromRadius({x:100,y:100}, 60, {initialAngleRadian: -Math.PI / 2});\n * ```\n *\n *\n * @param origin\n * @param length\n */\nexport const fromRadius = (\n  origin: Points.Point,\n  radius: number,\n  opts: { readonly initialAngleRadian?: number } = {}\n): Triangle => {\n  guardNumber(radius, `positive`, `radius`);\n  Points.guard(origin, `origin`);\n\n  const initialAngleRadian = opts.initialAngleRadian ?? 0;\n\n  const angles = [\n    initialAngleRadian,\n    initialAngleRadian + (piPi * 1) / 3,\n    initialAngleRadian + (piPi * 2) / 3,\n  ];\n  const points = angles.map((a) => Polar.toCartesian(radius, a, origin));\n  return fromPoints(points);\n};\n\n/**\n * Rotates the vertices of the triangle around one point (by default, `b`).\n * @param triangle Triangle\n * @param vertex Name of vertex: a, b or c.\n */\nexport const rotateByVertex = (\n  triangle: Triangle,\n  amountRadian: number,\n  vertex: `a` | `b` | `c` = `b`\n): Triangle => {\n  const origin =\n    vertex === `a` ? triangle.a : vertex === `b` ? triangle.b : triangle.c;\n  return Object.freeze({\n    a: Points.rotate(triangle.a, amountRadian, origin),\n    b: Points.rotate(triangle.b, amountRadian, origin),\n    c: Points.rotate(triangle.c, amountRadian, origin),\n  });\n};\n\n/**\n * Returns a triangle anchored at `origin` with a given `length` and `angleRadian`.\n * The origin will be point `b` of the triangle, and the angle will be the angle for b.\n * @param origin Origin\n * @param length Length\n * @param angleRadian Angle\n * @returns\n */\nexport const equilateralFromVertex = (\n  origin: Points.Point = { x: 0, y: 0 },\n  length: number = 10,\n  angleRadian: number = Math.PI / 2\n): Triangle => {\n  const a = Points.project(origin, length, Math.PI - -angleRadian / 2);\n  const c = Points.project(origin, length, Math.PI - angleRadian / 2);\n  return { a, b: origin, c };\n};\n\n/**\n * Returns the coordinates of triangle in a flat array form:\n * [xA, yA, xB, yB, xC, yC]\n * @param t\n * @returns\n */\nexport const toFlatArray = (t: Triangle): readonly number[] => {\n  guard(t);\n  return [t.a.x, t.a.y, t.b.x, t.b.y, t.c.x, t.c.y];\n};\n\n/**\n * Returns a triangle from a set of coordinates in a flat array form:\n * [xA, yA, xB, yB, xC, yC]\n * @param coords\n * @returns\n */\nexport const fromFlatArray = (coords: readonly number[]): Triangle => {\n  if (!Array.isArray(coords)) throw new Error(`coords expected as array`);\n  if (coords.length !== 6) {\n    throw new Error(\n      `coords array expected with 6 elements. Got ${coords.length}`\n    );\n  }\n  return fromPoints(Points.fromNumbers(...coords));\n};\n\n/**\n * Returns a triangle from an array of three points\n * @param points\n * @returns\n */\nexport const fromPoints = (points: readonly Points.Point[]): Triangle => {\n  if (!Array.isArray(points)) throw new Error(`points expected as array`);\n  if (points.length !== 3) {\n    throw new Error(\n      `points array expected with 3 elements. Got ${points.length}`\n    );\n  }\n  const t: Triangle = {\n    a: points[0],\n    b: points[1],\n    c: points[2],\n  };\n  return t;\n};\n\n/**\n * Returns the bounding box that encloses the triangle.\n * @param t\n * @param inflation If specified, box will be inflated by this much. Default: 0.\n * @returns\n */\nexport const bbox = (t: Triangle, inflation = 0): Rects.RectPositioned => {\n  const { a, b, c } = t;\n  const xMin = Math.min(a.x, b.x, c.x) - inflation;\n  const xMax = Math.max(a.x, b.x, c.x) + inflation;\n  const yMin = Math.min(a.y, b.y, c.y) - inflation;\n  const yMax = Math.max(a.y, b.y, c.y) + inflation;\n\n  const r: Rects.RectPositioned = {\n    x: xMin,\n    y: yMin,\n    width: xMax - xMin,\n    height: yMax - yMin,\n  };\n  return r;\n};\n\nexport type BarycentricCoord = {\n  readonly a: number;\n  readonly b: number;\n  readonly c: number;\n};\n\n/**\n * Returns the [Barycentric coordinate](https://en.wikipedia.org/wiki/Barycentric_coordinate_system) of a point within a triangle\n *\n * @param t\n * @param a\n * @param b\n * @returns\n */\nexport const barycentricCoord = (\n  t: Triangle,\n  a: Points.Point | number,\n  b?: number\n): BarycentricCoord => {\n  const pt = Points.getPointParam(a, b);\n\n  const ab = (x: number, y: number, pa: Points.Point, pb: Points.Point) =>\n    (pa.y - pb.y) * x + (pb.x - pa.x) * y + pa.x * pb.y - pb.x * pa.y;\n\n  const alpha = ab(pt.x, pt.y, t.b, t.c) / ab(t.a.x, t.a.y, t.b, t.c);\n  const theta = ab(pt.x, pt.y, t.c, t.a) / ab(t.b.x, t.b.y, t.c, t.a);\n  const gamma = ab(pt.x, pt.y, t.a, t.b) / ab(t.c.x, t.c.y, t.a, t.b);\n\n  return {\n    a: alpha,\n    b: theta,\n    c: gamma,\n  };\n};\n\n/**\n * Convert Barycentric coordinate to Cartesian\n * @param t\n * @param bc\n * @returns\n */\nexport const barycentricToCartestian = (\n  t: Triangle,\n  bc: BarycentricCoord\n): Points.Point => {\n  guard(t);\n  const { a, b, c } = t;\n\n  const x = a.x * bc.a + b.x * bc.b + c.x * bc.c;\n  const y = a.y * bc.a + b.y * bc.b + c.y * bc.c;\n\n  if (a.z && b.z && c.z) {\n    const z = a.z * bc.a + b.z * bc.b + c.z * bc.c;\n    return Object.freeze({ x, y, z });\n  } else {\n    return Object.freeze({ x, y });\n  }\n};\n\n/**\n * Returns true if point is within or on the boundary of triangle\n * @param t\n * @param a\n * @param b\n */\nexport const intersectsPoint = (\n  t: Triangle,\n  a: Points.Point | number,\n  b?: number\n): boolean => {\n  const box = bbox(t);\n\n  const pt = Points.getPointParam(a, b);\n\n  // If it's not in the bounding box, can return false straight away\n  if (!Rects.intersectsPoint(box, pt)) return false;\n\n  const bc = barycentricCoord(t, pt);\n\n  return (\n    0 <= bc.a && bc.a <= 1 && 0 <= bc.b && bc.b <= 1 && 0 <= bc.c && bc.c <= 1\n  );\n};\n\n/**\n * Returns a triangle that is rotated by `angleRad`. By default it rotates\n * around its center but an arbitrary `origin` point can be provided.\n *\n * ```js\n * // Rotate triangle by 5 degrees\n * rotate(triangle, degreeToRadian(5));\n *\n * // Rotate by 90 degrees\n * rotate(triangle, Math.PI / 2);\n * ```\n * @param line Line to rotate\n * @param amountRadian Angle in radians to rotate by\n * @param origin Point to rotate around. If undefined, middle of line will be used\n * @returns\n */\nexport const rotate = (\n  t: Triangle,\n  amountRadian?: number,\n  origin?: Points.Point\n): Triangle => {\n  if (amountRadian === undefined || amountRadian === 0) return t;\n  if (origin === undefined) origin = centroid(t);\n  return Object.freeze({\n    ...t,\n    a: Points.rotate(t.a, amountRadian, origin),\n    b: Points.rotate(t.b, amountRadian, origin),\n    c: Points.rotate(t.c, amountRadian, origin),\n  });\n};\n","import { type Circle } from './Circle.js';\nimport { type Point } from './Point.js';\nimport { type Triangle } from './Triangle.js';\n\nconst pi4over3 = (Math.PI * 4) / 3;\nconst pi2over3 = (Math.PI * 2) / 3;\n\nexport type TriangleEquilateral =\n  | {\n      readonly length: number;\n    }\n  | number;\n\nconst resolveLength = (t: TriangleEquilateral): number => {\n  if (typeof t === `number`) return t;\n  return t.length;\n};\n\n/**\n * Returns a positioned `Triangle` from an equilateral triangle definition.\n * By default the rotation is such that point `a` and `c` are lying on the horizontal,\n * and `b` is the upward-facing tip.\n *\n * Default is a triangle pointing upwards with b at the top, c to the left and b to right on the baseline.\n *\n * Example rotation values in radians:\n * * ▶️ 0: a and c on vertical, b at the tip\n * * ◀️ Math.PI: `c`and `a` are on vertical, with `b` at the tip.\n * * 🔽 Math.PI/2: `c` and `a` are on horizontal, `c` to the left. `b` at the bottom.\n * * 🔼 Math.PI*1.5: `c` and `a` are on horizontal, `c` to the right. `b` at the top. (default)\n * @param t\n * @param origin\n * @param rotationRad\n * @returns\n */\nexport const fromCenter = (\n  t: TriangleEquilateral,\n  origin: Point = { x: 0, y: 0 },\n  rotationRad?: number\n): Triangle => {\n  const r = resolveLength(t) / Math.sqrt(3);\n  const rot = rotationRad ?? Math.PI * 1.5;\n  const b = {\n    x: r * Math.cos(rot) + origin.x,\n    y: r * Math.sin(rot) + origin.y,\n  };\n  const a = {\n    x: r * Math.cos(rot + pi4over3) + origin.x,\n    y: r * Math.sin(rot + pi4over3) + origin.y,\n  };\n  const c = {\n    x: r * Math.cos(rot + pi2over3) + origin.x,\n    y: r * Math.sin(rot + pi2over3) + origin.y,\n  };\n\n  return Object.freeze({ a, b, c });\n};\n\n/**\n * Calculate center from the given point A\n * @param t\n * @param ptA\n * @returns\n */\nexport const centerFromA = (\n  t: TriangleEquilateral,\n  ptA: Point = { x: 0, y: 0 }\n): Point => {\n  const r = resolveLength(t);\n  const { radius } = incircle(t);\n  return {\n    x: ptA.x + r / 2,\n    y: ptA.y - radius,\n  };\n};\n\n/**\n * Calculate center from the given point B\n * @param t\n * @param ptB\n * @returns\n */\nexport const centerFromB = (\n  t: TriangleEquilateral,\n  ptB: Point = { x: 0, y: 0 }\n): Point => {\n  const { radius } = incircle(t);\n  return {\n    x: ptB.x,\n    y: ptB.y + radius * 2,\n  };\n};\n\n/**\n * Calculate center from the given point C\n * @param t\n * @param ptC\n * @returns\n */\nexport const centerFromC = (\n  t: TriangleEquilateral,\n  ptC: Point = { x: 0, y: 0 }\n): Point => {\n  const r = resolveLength(t);\n  const { radius } = incircle(t);\n\n  return {\n    x: ptC.x - r / 2,\n    y: ptC.y - radius,\n  };\n};\n\n/**\n * Returns the height (or rise) of an equilateral triangle.\n * Ie. from one vertex to the perpendicular edge.\n * (line marked x in the diagram below)\n *\n * ```\n *      .\n *     .x .\n *    . x  .\n *   .  x   .\n *  ..........\n * ```\n * @param t\n */\nexport const height = (t: TriangleEquilateral): number =>\n  (Math.sqrt(3) / 2) * resolveLength(t);\n\nexport const perimeter = (t: TriangleEquilateral): number =>\n  resolveLength(t) * 3;\n\nexport const area = (t: TriangleEquilateral): number =>\n  (Math.pow(resolveLength(t), 2) * Math.sqrt(3)) / 4;\n\n/**\n * Circle that encompasses all points of triangle\n * @param t\n */\nexport const circumcircle = (t: TriangleEquilateral): Circle => ({\n  radius: (Math.sqrt(3) / 3) * resolveLength(t),\n});\n\n/**\n * Circle that is inside the edges of the triangle\n * @param t\n * @returns\n */\nexport const incircle = (t: TriangleEquilateral): Circle => ({\n  radius: (Math.sqrt(3) / 6) * resolveLength(t),\n});\n","import { Points, Triangles } from './index.js';\nimport { type Circle } from './Circle.js';\n\nexport type Right = {\n  readonly adjacent?: number;\n  readonly hypotenuse?: number;\n  readonly opposite?: number;\n};\n\nexport type DefinedRight = {\n  readonly adjacent: number;\n  readonly hypotenuse: number;\n  readonly opposite: number;\n};\n\n/**\n * Returns a positioned triangle from a point for A.\n *\n * ```\n *             c (90 deg)\n *             .\n *          .   .\n *       .       .\n *    .           .\n * a .............. b\n * ```\n * @param t\n * @param origin\n * @returns\n */\nexport const fromA = (\n  t: Right,\n  origin: Points.Point = { x: 0, y: 0 }\n): Triangles.Triangle => {\n  const tt = resolveLengths(t);\n  const seg = hypotenuseSegments(t);\n  const h = height(t);\n  const a = { x: origin.x, y: origin.y };\n  const b = { x: origin.x + tt.hypotenuse, y: origin.y };\n  const c = { x: origin.x + seg[1], y: origin.y - h };\n  return { a, b, c };\n};\n\n/**\n * Returns a positioned triangle from a point for B.\n *\n * ```\n *             c (90 deg)\n *             .\n *          .   .\n *       .       .\n *    .           .\n * a .............. b\n * ```\n * @param t\n * @param origin\n * @returns\n */\nexport const fromB = (\n  t: Right,\n  origin: Points.Point = { x: 0, y: 0 }\n): Triangles.Triangle => {\n  const tt = resolveLengths(t);\n  const seg = hypotenuseSegments(t);\n  const h = height(t);\n  const b = { x: origin.x, y: origin.y };\n  const a = { x: origin.x - tt.hypotenuse, y: origin.y };\n  const c = { x: origin.x - seg[0], y: origin.y - h };\n  return { a, b, c };\n};\n\n/**\n * Returns a positioned triangle from a point for C.\n *\n * ```\n *             c (90 deg)\n *             .\n *          .   .\n *       .       .\n *    .           .\n * a .............. b\n * ```\n *\n *\n * ```js\n * // Triangle pointing up to 0,0 with sides of 15\n * Triangles.Right.fromC({ adjacent: 15, opposite:15 }, { x: 0, y: 0 });\n * ```\n * @param t\n * @param origin\n * @returns\n */\nexport const fromC = (\n  t: Right,\n  origin: Points.Point = { x: 0, y: 0 }\n): Triangles.Triangle => {\n  const seg = hypotenuseSegments(t);\n  const h = height(t);\n  const c = { x: origin.x, y: origin.y };\n  const a = { x: origin.x - seg[1], y: origin.y + h };\n  const b = { x: origin.x + seg[0], y: origin.y + h };\n  return { a, b, c };\n};\n\n/**\n * Returns a right triangle with all lengths defined.\n * At least two lengths must already exist\n * @param t\n * @returns\n */\nexport const resolveLengths = (t: Right): DefinedRight => {\n  const a = t.adjacent;\n  const o = t.opposite;\n  const h = t.hypotenuse;\n\n  if (a !== undefined && o !== undefined) {\n    return {\n      ...t,\n      adjacent: a,\n      opposite: o,\n      hypotenuse: Math.sqrt(a * a + o * o),\n    };\n  } else if (a && h) {\n    return {\n      ...t,\n      adjacent: a,\n      hypotenuse: h,\n      opposite: h * h - a * a,\n    };\n  } else if (o && h) {\n    return {\n      ...t,\n      hypotenuse: h,\n      opposite: o,\n      adjacent: h * h - o * o,\n    };\n  } else if (t.opposite && t.hypotenuse && t.adjacent) {\n    return t as DefinedRight;\n  }\n  throw new Error(`Missing at least two edges`);\n};\n\n/**\n * Height of right-triangle\n * @param t\n * @returns\n */\nexport const height = (t: Right): number => {\n  const tt = resolveLengths(t);\n  const p = (tt.opposite * tt.opposite) / tt.hypotenuse;\n  const q = (tt.adjacent * tt.adjacent) / tt.hypotenuse;\n  return Math.sqrt(p * q);\n};\n\n/**\n * Returns the lengths of the hypotenuse split into p and q segments.\n * In other words, if one makes a line from the right-angle vertex down to hypotenuse.\n *\n * [See here](https://rechneronline.de/pi/right-triangle.php)\n * @param t\n * @returns\n */\nexport const hypotenuseSegments = (\n  t: Right\n): readonly [p: number, q: number] => {\n  const tt = resolveLengths(t);\n  const p = (tt.opposite * tt.opposite) / tt.hypotenuse;\n  const q = (tt.adjacent * tt.adjacent) / tt.hypotenuse;\n  return [p, q];\n};\n\nexport const perimeter = (t: Right): number => {\n  const tt = resolveLengths(t);\n  return tt.adjacent + tt.hypotenuse + tt.opposite;\n};\n\nexport const area = (t: Right): number => {\n  const tt = resolveLengths(t);\n  return (tt.opposite * tt.adjacent) / 2;\n};\n\n/**\n * Angle (in radians) between hypotenuse and adjacent edge\n * @param t\n * @returns\n */\nexport const angleAtPointA = (t: Right): number => {\n  const tt = resolveLengths(t);\n  return Math.acos(\n    (tt.adjacent * tt.adjacent +\n      tt.hypotenuse * tt.hypotenuse -\n      tt.opposite * tt.opposite) /\n      (2 * tt.adjacent * tt.hypotenuse)\n  );\n};\n\n/**\n * Angle (in radians) between opposite edge and hypotenuse\n * @param t\n * @returns\n */\nexport const angleAtPointB = (t: Right): number => {\n  const tt = resolveLengths(t);\n  return Math.acos(\n    (tt.opposite * tt.opposite +\n      tt.hypotenuse * tt.hypotenuse -\n      tt.adjacent * tt.adjacent) /\n      (2 * tt.opposite * tt.hypotenuse)\n  );\n};\n\n/**\n * Returns the median line lengths a, b and c in an array.\n *\n * The median lines are the lines from each vertex to the center.\n *\n * @param t\n * @returns\n */\nexport const medians = (\n  t: Right\n): readonly [a: number, b: number, c: number] => {\n  const tt = resolveLengths(t);\n  const b = tt.adjacent * tt.adjacent;\n  const c = tt.hypotenuse * tt.hypotenuse;\n  const a = tt.opposite * tt.opposite;\n\n  return [\n    Math.sqrt(2 * (b + c) - a) / 2,\n    Math.sqrt(2 * (c + a) - b) / 2,\n    Math.sqrt(2 * (a + b) - c) / 2,\n  ];\n};\n\n/**\n * The circle which passes through the points of the triangle\n * @param t\n * @returns\n */\nexport const circumcircle = (t: Right): Circle => {\n  const tt = resolveLengths(t);\n  return { radius: tt.hypotenuse / 2 };\n};\n\n/**\n * Circle enclosed by triangle\n * @param t\n * @returns\n */\nexport const incircle = (t: Right): Circle => {\n  const tt = resolveLengths(t);\n  return {\n    radius: (tt.adjacent + tt.opposite - tt.hypotenuse) / 2,\n  };\n};\n\n/**\n * Returns the opposite length of a right-angle triangle,\n * marked here\n *\n * ```\n *    .  <\n *   ..  <\n * ....  <\n * ```\n *\n * This is just:\n * ```js\n * opposite = Math.tan(angle) * adjacent\n * ```\n * @param angleRad\n * @param adjacent\n * @returns\n */\nexport const oppositeFromAdjacent = (\n  angleRad: number,\n  adjacent: number\n): number => Math.tan(angleRad) * adjacent;\n\n/**\n * Returns the opposite length of a right-angle triangle,\n * marked here\n *\n * ```\n *    .  <\n *   ..  <\n * ....  <\n * ```\n *\n * This is just:\n * ```js\n * opposite = Math.tan(angle) * adjacent\n * ```\n * @param angleRad\n * @param hypotenuse\n * @returns\n */\nexport const oppositeFromHypotenuse = (\n  angleRad: number,\n  hypotenuse: number\n): number => Math.sin(angleRad) * hypotenuse;\n\n/**\n * Returns the adjecent length of a right-angle triangle,\n * marked here\n * ```\n *    .\n *   ..  o\n * ....\n * ^^^^\n * ```\n * This is just:\n * ```js\n * opposite = Math.tan(angle) * adjacent\n * ```\n * @param angleRad\n * @param adjacent\n * @returns\n */\nexport const adjacentFromHypotenuse = (\n  angleRad: number,\n  hypotenuse: number\n): number => Math.cos(angleRad) * hypotenuse;\n\n/**\n * Returns the adjecent length of a right-angle triangle,\n * marked here\n * ```\n *    .\n *   ..  o\n * ....\n * ^^^^\n * ```\n * This is just:\n * ```js\n * opposite = Math.tan(angle) * adjacent\n * ```\n * @param angleRad\n * @param opposite\n * @returns\n */\nexport const adjacentFromOpposite = (\n  angleRad: number,\n  opposite: number\n): number => opposite / Math.tan(angleRad);\n\n/**\n * Returns the hypotenuse length of a right-angle triangle,\n * marked here\n * ```\n *      .\n * >   ..\n * >  ...\n * > ....  opp\n *  .....\n *   adj\n * ```\n * This is just:\n * ```js\n * opposite = Math.tan(angle) * adjacent\n * ```\n * @param angleRad\n * @param adjacent\n * @returns\n */\nexport const hypotenuseFromOpposite = (\n  angleRad: number,\n  opposite: number\n): number => opposite / Math.sin(angleRad);\n\n/**\n * Returns the hypotenuse length of a right-angle triangle,\n * marked here\n * ```\n *      .\n * >   ..\n * >  ...\n * > ....  opp\n *  .....\n *   adj\n * ```\n * This is just:\n * ```js\n * opposite = Math.tan(angle) * adjacent\n * ```\n * @param angleRad\n * @param adjacent\n * @returns\n */\nexport const hypotenuseFromAdjacent = (\n  angleRad: number,\n  adjacent: number\n): number => adjacent / Math.cos(angleRad);\n","import { Points, Triangles } from './index.js';\nimport { type Circle } from './Circle.js';\n\nexport type Isosceles = {\n  readonly legs: number;\n  readonly base: number;\n};\n\nexport const baseAngle = (t: Isosceles): number =>\n  Math.acos(t.base / (2 * t.legs));\n\nexport const apexAngle = (t: Isosceles): number => {\n  const aa = t.legs * t.legs;\n  const cc = t.base * t.base;\n  return Math.acos((2 * aa - cc) / (2 * aa));\n};\n\nexport const height = (t: Isosceles): number => {\n  const aa = t.legs * t.legs;\n  const cc = t.base * t.base;\n  return Math.sqrt((4 * aa - cc) / 4);\n};\n\nexport const legHeights = (t: Isosceles): number => {\n  const b = baseAngle(t);\n  return t.base * Math.sin(b);\n};\n\nexport const perimeter = (t: Isosceles): number => 2 * t.legs + t.base;\n\nexport const area = (t: Isosceles): number => {\n  const h = height(t);\n  return (h * t.base) / 2;\n};\n\nexport const circumcircle = (t: Isosceles): Circle => {\n  const h = height(t);\n  const hh = h * h;\n  const cc = t.base * t.base;\n  return { radius: (4 * hh + cc) / (8 * h) };\n};\n\nexport const incircle = (t: Isosceles): Circle => {\n  const h = height(t);\n  return { radius: (t.base * h) / (2 * t.legs + t.base) };\n};\n\nexport const medians = (\n  t: Isosceles\n): readonly [a: number, b: number, c: number] => {\n  const aa = t.legs * t.legs;\n  const cc = t.base * t.base;\n  const medianAB = Math.sqrt(aa + 2 * cc) / 2;\n  const medianC = Math.sqrt(4 * aa - cc) / 2;\n  return [medianAB, medianAB, medianC];\n};\n\n/**\n * Returns a positioned `Triangle` based on a center origin.\n * Center is determined by the intesecting of the medians.\n *\n * See: https://rechneronline.de/pi/isosceles-triangle.php\n * @param t\n * @param origin\n * @returns\n */\nexport const fromCenter = (\n  t: Isosceles,\n  origin: Points.Point = { x: 0, y: 0 }\n): Triangles.Triangle => {\n  const h = height(t);\n  const incircleR = incircle(t).radius;\n  const verticalToApex = h - incircleR;\n\n  const a = { x: origin.x - t.base / 2, y: origin.y + incircleR };\n  const b = { x: origin.x + t.base / 2, y: origin.y + incircleR };\n  const c = { x: origin.x, y: origin.y - verticalToApex };\n  return { a, b, c };\n};\n\nexport const fromA = (\n  t: Isosceles,\n  origin: Points.Point = { x: 0, y: 0 }\n): Triangles.Triangle => {\n  const h = height(t);\n  const a = { x: origin.x, y: origin.y };\n  const b = { x: origin.x + t.base, y: origin.y };\n  const c = { x: origin.x + t.base / 2, y: origin.y - h };\n  return { a, b, c };\n};\n\nexport const fromB = (\n  t: Isosceles,\n  origin: Points.Point = { x: 0, y: 0 }\n): Triangles.Triangle => {\n  const h = height(t);\n  const b = { x: origin.x, y: origin.y };\n  const a = { x: origin.x - t.base, y: origin.y };\n  const c = { x: origin.x - t.base / 2, y: origin.y - h };\n  return { a, b, c };\n};\n\nexport const fromC = (\n  t: Isosceles,\n  origin: Points.Point = { x: 0, y: 0 }\n): Triangles.Triangle => {\n  const h = height(t);\n  const c = { x: origin.x, y: origin.y };\n  const a = { x: origin.x - t.base / 2, y: origin.y + h };\n  const b = { x: origin.x + t.base / 2, y: origin.y + h };\n  return { a, b, c };\n};\n","import {type Path} from './Path.js';\nimport {degreeToRadian, Points} from './index.js';\n\n/**\n * An ellipse\n */\nexport type Ellipse = {\n  readonly radiusX: number\n  readonly radiusY: number\n  /**\n   * Rotation, in radians\n   */\n  readonly rotation?: number\n  readonly startAngle?: number\n  readonly endAngle?: number\n}\n\n/**\n * A {@link Ellipse} with position\n */\nexport type EllipsePositioned = Points.Point & Ellipse\n\n\nexport const fromDegrees = (radiusX: number, radiusY: number, rotationDeg: number = 0, startAngleDeg: number = 0, endAngleDeg: number = 360): Ellipse => ({\n  radiusX, radiusY,\n  rotation: degreeToRadian(rotationDeg),\n  startAngle: degreeToRadian(startAngleDeg),\n  endAngle: degreeToRadian(endAngleDeg)\n});\n\nexport type EllipticalPath = Ellipse & Path & {\n  readonly kind: `elliptical`\n};","/* eslint-disable */\nimport * as d3Colour from 'd3-color';\nimport * as d3Interpolate from 'd3-interpolate';\nimport { defaultRandom, type RandomSource } from '../Random.js';\nimport { number as guardNumber } from '../Guards.js';\n\nexport type Hsl = { h: number; s: number; l: number; opacity?: number };\nexport type Rgb = { r: number; g: number; b: number; opacity?: number };\nexport type Spaces = `hsl` | `rgb` | `lab` | `hcl` | `cubehelix`;\n/**\n * @private\n */\nexport type Colour = d3Colour.RGBColor | d3Colour.HSLColor;\n\n/**\n * A representation of colour. Eg: `blue`, `rgb(255,0,0)`, `hsl(20,100%,50%)`\n */\nexport type Colourish = string | d3Colour.ColorCommonInstance;\n\n/**\n * Options for interpolation\n */\nexport type InterpolationOpts = {\n  /**\n   * Gamma correction. Eg 4 brightens values. Only applies to rgb and cubehelix\n   * [Read more](https://github.com/d3/d3-interpolate#interpolate_gamma)\n   */\n  gamma?: number;\n  /**\n   * Colour space\n   */\n  space?: Spaces;\n  /**\n   * If true, interpolation happens the longer distance. Only applies to hsl, hcl and cubehelix\n   */\n  long?: boolean;\n};\n\n/**\n * Parses colour to `{ h, s, l }`. `opacity` field is added if it exists on source.\n * @param colour\n * @returns\n */\nexport const toHsl = (colour: Colourish): Hsl => {\n  const rgb = toRgb(colour);\n  const hsl = rgbToHsl(rgb.r, rgb.b, rgb.g);\n  if (rgb.opacity) return { ...hsl, opacity: rgb.opacity };\n  else return hsl;\n};\n\n/**\n * Returns a full HSL colour string (eg `hsl(20,50%,75%)`) based on a index.\n * It's useful for generating perceptually different shades as the index increments.\n *\n * ```\n * el.style.backgroundColor = goldenAgeColour(10);\n * ```\n *\n * Saturation and lightness can be specified, as numeric ranges of 0-1.\n *\n * @param saturation Saturation (0-1), defaults to 0.5\n * @param lightness Lightness (0-1), defaults to 0.75\n * @param alpha Opacity (0-1), defaults to 1.0\n * @returns HSL colour string eg `hsl(20,50%,75%)`\n */\nexport const goldenAngleColour = (\n  index: number,\n  saturation = 0.5,\n  lightness = 0.75,\n  alpha = 1.0\n) => {\n  guardNumber(index, `positive`, `index`);\n  guardNumber(saturation, `percentage`, `saturation`);\n  guardNumber(lightness, `percentage`, `lightness`);\n  guardNumber(alpha, `percentage`, `alpha`);\n\n  // Via Stackoverflow\n  const hue = index * 137.508; // use golden angle approximation\n  if (alpha === 1)\n    return `hsl(${hue},${saturation * 100}%,${lightness * 100}%)`;\n  else\n    return `hsl(${hue},${saturation * 100}%,${lightness * 100}%,${\n      alpha * 100\n    }%)`;\n};\n\n/**\n * Returns a random hue component\n * ```\n * // Generate hue\n * const h =randomHue(); // 0-359\n *\n * // Generate hue and assign as part of a HSL string\n * el.style.backgroundColor = `hsl(${randomHue(), 50%, 75%})`;\n * ```\n * @param rand\n * @returns\n */\nexport const randomHue = (rand: RandomSource = defaultRandom): number => {\n  const r = rand();\n  return r * 360;\n};\n\n/**\n * Parses colour to `{ r, g, b }`. `opacity` field is added if it exists on source.\n * [Named colours](https://html-color-codes.info/color-names/)\n * @param colour\n * @returns\n */\nexport const toRgb = (colour: Colourish): Rgb => {\n  const c = resolveColour(colour);\n  const rgb = c.rgb();\n  if (c.opacity < 1)\n    return { r: rgb.r, g: rgb.g, b: rgb.b, opacity: c.opacity };\n  else return { r: rgb.r, g: rgb.g, b: rgb.b };\n};\n\nconst resolveColour = (c: Colourish): Colour => {\n  if (typeof c === `string`) {\n    const css = d3Colour.color(c);\n    if (css !== null) return css;\n  } else {\n    if (isHsl(c)) return d3Colour.hsl(c.h, c.s, c.l);\n    if (isRgb(c)) return d3Colour.rgb(c.r, c.g, c.b);\n  }\n  throw new Error(`Could not resolve colour ${JSON.stringify(c)}`);\n};\n\n/**\n * Returns a colour in hex format `#000000`\n * @param colour\n * @returns Hex format, including #\n */\nexport const toHex = (colour: Colourish): string => {\n  const c = resolveColour(colour);\n  return c.formatHex();\n};\n\n/**\n * Returns a variation of colour with its opacity multiplied by `amt`.\n *\n * ```js\n * // Return a colour string for blue that is 50% opaque\n * opacity(`blue`, 0.5);\n * // eg: `rgba(0,0,255,0.5)`\n *\n * // Returns a colour string that is 50% more opaque\n * opacity(`hsla(200,100%,50%,50%`, 0.5);\n * // eg: `hsla(200,100%,50%,25%)`\n * ```\n *\n * [Named colours](https://html-color-codes.info/color-names/)\n * @param colour A valid CSS colour\n * @param amt Amount to multiply opacity by\n * @returns String representation of colour\n */\nexport const opacity = (colour: Colourish, amt: number): string => {\n  const c = resolveColour(colour);\n  c.opacity *= amt;\n  return c.toString();\n};\n\n/**\n * Gets a CSS variable.\n * @example Fetch --accent variable, or use `yellow` if not found.\n * ```\n * getCssVariable(`accent`, `yellow`);\n * ```\n * @param name Name of variable. Omit the `--`\n * @param fallbackColour Fallback colour if not found\n * @param root  Element to search variable from\n * @returns Colour or fallback.\n */\nexport const getCssVariable = (\n  name: string,\n  fallbackColour: string = `black`,\n  root?: HTMLElement\n): string => {\n  if (root === undefined) root = document.body;\n  const fromCss = getComputedStyle(root).getPropertyValue(`--${name}`).trim();\n  if (fromCss === undefined || fromCss.length === 0) return fallbackColour;\n  return fromCss;\n};\n\n/**\n * Interpolates between two colours, returning a string in the form `rgb(r,g,b)`\n *\n * @example\n * ```js\n * // Get 50% between blue and red\n * interpolate(0.5, `blue`, `red`);\n *\n * // Get midway point, with specified colour space\n * interpolate(0.5, `hsl(200, 100%, 50%)`, `pink`, {space: `hcl`});\n * ```\n *\n * [Named colours](https://html-color-codes.info/color-names/)\n * @param amount Amount (0 = from, 0.5 halfway, 1= to)\n * @param from Starting colour\n * @param to Final colour\n * @param optsOrSpace Options for interpolation, or string name for colour space, eg `hsl`.\n * @returns String representation of colour, eg. `rgb(r,g,b)`\n */\nexport const interpolate = (\n  amount: number,\n  from: Colourish,\n  to: Colourish,\n  optsOrSpace?: string | InterpolationOpts\n): string => {\n  guardNumber(amount, `percentage`, `amount`);\n  if (typeof from !== `string`)\n    throw new Error(`Expected string for 'from' param`);\n  if (typeof to !== `string`) throw new Error(`Expected string for 'to' param`);\n\n  let opts: InterpolationOpts;\n  if (typeof optsOrSpace === `undefined`) opts = {};\n  else if (typeof optsOrSpace === `string`)\n    opts = { space: optsOrSpace as Spaces };\n  else opts = optsOrSpace as InterpolationOpts;\n\n  const inter = getInterpolator(opts, [from, to]);\n  if (inter === undefined) throw new Error(`Could not handle colour/space`);\n  return inter(amount);\n};\n\nconst getInterpolator = (\n  optsOrSpace: InterpolationOpts | string,\n  colours: Colourish[]\n): ((t: number) => string) | undefined => {\n  if (!Array.isArray(colours))\n    throw new Error(`Expected one or more colours as parameters`);\n\n  let opts: InterpolationOpts;\n  if (typeof optsOrSpace === `undefined`) opts = {};\n  else if (typeof optsOrSpace === `string`)\n    opts = { space: optsOrSpace as Spaces };\n  else opts = optsOrSpace as InterpolationOpts;\n\n  if (!Array.isArray(colours))\n    throw new Error(`Expected array for colours parameter`);\n  if (colours.length < 2)\n    throw new Error(`Interpolation expects at least two colours`);\n  const { space = `rgb`, long = false } = opts;\n  let inter;\n\n  switch (space) {\n    case `lab`:\n      inter = d3Interpolate.interpolateLab;\n      break;\n    case `hsl`:\n      inter = long\n        ? d3Interpolate.interpolateHslLong\n        : d3Interpolate.interpolateHsl;\n      break;\n    case `hcl`:\n      inter = long\n        ? d3Interpolate.interpolateHclLong\n        : d3Interpolate.interpolateHcl;\n      break;\n    case `cubehelix`:\n      inter = long\n        ? d3Interpolate.interpolateCubehelixLong\n        : d3Interpolate.interpolateCubehelix;\n      break;\n    case `rgb`:\n      inter = d3Interpolate.interpolateRgb;\n    default:\n      inter = d3Interpolate.interpolateRgb;\n  }\n\n  if (opts.gamma) {\n    if (space === `rgb` || space === `cubehelix`) {\n      inter = (inter as d3Interpolate.ColorGammaInterpolationFactory).gamma(\n        opts.gamma\n      );\n    }\n  }\n\n  if (colours.length > 2) {\n    return d3Interpolate.piecewise(inter, colours);\n  } else return inter(colours[0], colours[1]);\n};\n\n/**\n * Produces a scale of colours as a string array\n *\n * @example\n * ```js\n * // Yields array of 5 colour strings\n * const s = scale(5, {space:`hcl`}, `blue`, `red`);\n * // Produces scale between three colours\n * const s = scale(5, {space:`hcl`}, `blue`, `yellow`, `red`);\n * ```\n * @param steps Number of colours\n * @param opts Options for interpolation, or string colour space eg `hsl`\n * @param colours From/end colours (or more)\n * @returns\n */\nexport const scale = (\n  steps: number,\n  opts: InterpolationOpts | string,\n  ...colours: Colourish[]\n): string[] => {\n  guardNumber(steps, `aboveZero`, `steps`);\n  if (!Array.isArray(colours))\n    throw new Error(`Expected one or more colours as parameters`);\n  const inter = getInterpolator(opts, colours);\n  if (inter === undefined) throw new Error(`Could not handle colour/space`);\n\n  const perStep = 1 / (steps - 1);\n  const r = [];\n  //eslint-disable-next-line functional/no-let\n  let amt = 0;\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < steps; i++) {\n    //eslint-disable-next-line functional/immutable-data\n    r.push(inter(amt));\n    amt += perStep;\n    if (amt > 1) amt = 1;\n  }\n  return r;\n};\n\nconst isHsl = (p: Colour | d3Colour.ColorCommonInstance | Hsl): p is Hsl => {\n  if ((p as Hsl).h === undefined) return false;\n  if ((p as Hsl).s === undefined) return false;\n  if ((p as Hsl).l === undefined) return false;\n  return true;\n};\n\nconst isRgb = (p: Colour | d3Colour.ColorCommonInstance | Rgb): p is Rgb => {\n  if ((p as Rgb).r === undefined) return false;\n  if ((p as Rgb).g === undefined) return false;\n  if ((p as Rgb).b === undefined) return false;\n  return true;\n};\n\nconst rgbToHsl = (r: number, g: number, b: number): Hsl => {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  var min = Math.min(r, g, b),\n    max = Math.max(r, g, b),\n    delta = max - min,\n    h,\n    s,\n    l;\n\n  h = 0;\n  if (max === min) {\n    h = 0;\n  } else if (r === max) {\n    h = (g - b) / delta;\n  } else if (g === max) {\n    h = 2 + (b - r) / delta;\n  } else if (b === max) {\n    h = 4 + (r - g) / delta;\n  }\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  l = (min + max) / 2;\n\n  if (max === min) {\n    s = 0;\n  } else if (l <= 0.5) {\n    s = delta / (max + min);\n  } else {\n    s = delta / (2 - max - min);\n  }\n\n  return { h, s, l };\n};\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHex8: color_formatHex8,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHex8() {\n  return this.rgb().formatHex8();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb() {\n    return this;\n  },\n  clamp() {\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\n  },\n  displayable() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatHex8: rgb_formatHex8,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\n}\n\nfunction rgb_formatHex8() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n}\n\nfunction rgb_formatRgb() {\n  const a = clampa(this.opacity);\n  return `${a === 1 ? \"rgb(\" : \"rgba(\"}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\n}\n\nfunction clampa(opacity) {\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n}\n\nfunction clampi(value) {\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\n}\n\nfunction hex(value) {\n  value = clampi(value);\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  clamp() {\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\n  },\n  displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl() {\n    const a = clampa(this.opacity);\n    return `${a === 1 ? \"hsl(\" : \"hsla(\"}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\n  }\n}));\n\nfunction clamph(value) {\n  value = (value || 0) % 360;\n  return value < 0 ? value + 360 : value;\n}\n\nfunction clampt(value) {\n  return Math.max(0, Math.min(1, value || 0));\n}\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export const radians = Math.PI / 180;\nexport const degrees = 180 / Math.PI;\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nconst K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * degrees;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * radians;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb() {\n    return hcl2lab(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * degrees - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default x => () => x;\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {lab as colorLab} from \"d3-color\";\nimport color from \"./color.js\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","import {default as value} from \"./value.js\";\n\nexport default function piecewise(interpolate, values) {\n  if (values === undefined) values = interpolate, interpolate = value;\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n","/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n","/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n","import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n","import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n","/**\n * Symbol.observable or a string \"@@observable\". Used for interop\n *\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\n */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n","/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n","import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n","import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: TimerHandle | undefined;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id ?? this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: TimerHandle, delay: number = 0): TimerHandle {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id?: TimerHandle, delay: number | null = 0): TimerHandle | undefined {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    if (id != null) {\n      intervalProvider.clearInterval(id);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}. Will be made internal in v8.\n */\nexport class Scheduler implements SchedulerLike {\n  public static now: () => number = dateTimestampProvider.now;\n\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @internal\n   */\n  public _scheduled: TimerHandle | undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\n\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\n */\nexport const async = asyncScheduler;\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n","import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n","/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n","import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n","import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n","import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n","import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n","import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n// These constants are used to create handler registry functions using array mapping below.\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'] as const;\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'] as const;\nconst jqueryMethods = ['on', 'off'] as const;\n\nexport interface NodeStyleEventEmitter {\n  addListener(eventName: string | symbol, handler: NodeEventHandler): this;\n  removeListener(eventName: string | symbol, handler: NodeEventHandler): this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener(eventName: string, handler: NodeEventHandler): void | {};\n  removeListener(eventName: string, handler: NodeEventHandler): void | {};\n}\n\n// Use handler types like those in @types/jquery. See:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/847731ba1d7fa6db6b911c0e43aa0afe596e7723/types/jquery/misc.d.ts#L6395\nexport interface JQueryStyleEventEmitter<TContext, T> {\n  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n}\n\nexport interface EventListenerObject<E> {\n  handleEvent(evt: E): void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: EventListenerOptions | boolean\n  ): void;\n}\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\nexport function fromEvent<T>(target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>, eventName: string): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  resultSelector: (event: T) => R\n): Observable<R>;\nexport function fromEvent<T>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions,\n  resultSelector: (event: T) => R\n): Observable<R>;\n\nexport function fromEvent(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string\n): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent<T>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string,\n  resultSelector: (value: T, ...args: any[]) => R\n): Observable<R>;\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n *\n * Emit clicks happening on the DOM document\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * Use `addEventListener` with capture option\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * // note optional configuration parameter which will be passed to addEventListener\n * const clicksInDocument = fromEvent(document, 'click', { capture: true });\n * const clicksInDiv = fromEvent(div, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n */\nexport function fromEvent<T>(\n  target: any,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: (...args: any[]) => T\n): Observable<T> {\n  if (isFunction(options)) {\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    return fromEvent<T>(target, eventName, options as EventListenerOptions).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  // Figure out our add and remove methods. In order to do this,\n  // we are going to analyze the target in a preferred order, if\n  // the target matches a given signature, we take the two \"add\" and \"remove\"\n  // method names and apply them to a map to create opposite versions of the\n  // same function. This is because they all operate in duplicate pairs,\n  // `addListener(name, handler)`, `removeListener(name, handler)`, for example.\n  // The call only differs by method name, as to whether or not you're adding or removing.\n  const [add, remove] =\n    // If it is an EventTarget, we need to use a slightly different method than the other two patterns.\n    isEventTarget(target)\n      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))\n      : // In all other cases, the call pattern is identical with the exception of the method names.\n      isNodeStyleEventEmitter(target)\n      ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n      : isJQueryStyleEventEmitter(target)\n      ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n      : [];\n\n  // If add is falsy, it's because we didn't match a pattern above.\n  // Check to see if it is an ArrayLike, because if it is, we want to\n  // try to apply fromEvent to all of it's items. We do this check last,\n  // because there are may be some types that are both ArrayLike *and* implement\n  // event registry points, and we'd rather delegate to that when possible.\n  if (!add) {\n    if (isArrayLike(target)) {\n      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(\n        innerFrom(target)\n      ) as Observable<T>;\n    }\n  }\n\n  // If add is falsy and we made it here, it's because we didn't\n  // match any valid target objects above.\n  if (!add) {\n    throw new TypeError('Invalid event target');\n  }\n\n  return new Observable<T>((subscriber) => {\n    // The handler we are going to register. Forwards the event object, by itself, or\n    // an array of arguments to the event handler, if there is more than one argument,\n    // to the consumer.\n    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);\n    // Do the work of adding the handler to the target.\n    add(handler);\n    // When we finalize, we want to remove the handler and free up memory.\n    return () => remove!(handler);\n  });\n}\n\n/**\n * Used to create `add` and `remove` functions to register and unregister event handlers\n * from a target in the most common handler pattern, where there are only two arguments.\n * (e.g.  `on(name, fn)`, `off(name, fn)`, `addListener(name, fn)`, or `removeListener(name, fn)`)\n * @param target The target we're calling methods on\n * @param eventName The event name for the event we're creating register or unregister functions for\n */\nfunction toCommonHandlerRegistry(target: any, eventName: string) {\n  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);\n}\n\n/**\n * Checks to see if the target implements the required node-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {\n  return isFunction(target.addListener) && isFunction(target.removeListener);\n}\n\n/**\n * Checks to see if the target implements the required jQuery-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {\n  return isFunction(target.on) && isFunction(target.off);\n}\n\n/**\n * Checks to see if the target implements the required EventTarget methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isEventTarget(target: any): target is HasEventTargetAddRemove<any> {\n  return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a notification from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent notification from each burst of emissions.</span>\n *\n * ![](debounceTime.png)\n *\n * `debounceTime` delays notifications emitted by the source Observable, but drops\n * previous pending delayed emissions if a new notification arrives on the source\n * Observable. This operator keeps track of the most recent notification from the\n * source Observable, and emits that only when `dueTime` has passed\n * without any other notification appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous notification will be dropped\n * and will not be emitted and a new `dueTime` is scheduled.\n * If the completing event happens during `dueTime` the last cached notification\n * is emitted before the completion event is forwarded to the output observable.\n * If the error event happens during `dueTime` or after it only the error event is\n * forwarded to the output observable. The cache notification is not emitted in this case.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * notification to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link SchedulerLike} for\n * managing timers.\n *\n * ## Example\n *\n * Emit the most recent click after a burst of clicks\n *\n * ```ts\n * import { fromEvent, debounceTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounceTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link throttle}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified `dueTime`, and may drop some values\n * if they occur too frequently.\n */\nexport function debounceTime<T>(dueTime: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let activeTask: Subscription | null = null;\n    let lastValue: T | null = null;\n    let lastTime: number | null = null;\n\n    const emit = () => {\n      if (activeTask) {\n        // We have a value! Free up memory first, then emit the value.\n        activeTask.unsubscribe();\n        activeTask = null;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n    function emitWhenIdle(this: SchedulerAction<unknown>) {\n      // This is called `dueTime` after the first value\n      // but we might have received new values during this window!\n\n      const targetTime = lastTime! + dueTime;\n      const now = scheduler.now();\n      if (now < targetTime) {\n        // On that case, re-schedule to the new target\n        activeTask = this.schedule(undefined, targetTime - now);\n        subscriber.add(activeTask);\n        return;\n      }\n\n      emit();\n    }\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          lastValue = value;\n          lastTime = scheduler.now();\n\n          // Only set up a task if it's not already up\n          if (!activeTask) {\n            activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n            subscriber.add(activeTask);\n          }\n        },\n        () => {\n          // Source completed.\n          // Emit any pending debounced values then complete\n          emit();\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        () => {\n          // Finalization.\n          lastValue = activeTask = null;\n        }\n      )\n    );\n  });\n}\n","import { Observable, debounceTime, fromEvent } from 'rxjs';\nimport * as Points from '../geometry/Point.js';\nimport JSON5 from 'json5';\nimport { Rects, Scaler } from '../geometry/index.js';\nimport type { CardinalDirection } from '../geometry/Grid.js';\nimport { cardinal } from '../geometry/Rect.js';\n\nexport type ElementResizeArgs<V extends HTMLElement | SVGSVGElement> = {\n  readonly el: V;\n  readonly bounds: {\n    readonly width: number;\n    readonly height: number;\n    readonly center: Points.Point;\n    readonly min: number;\n    readonly max: number;\n  };\n};\n\nexport type CanvasResizeArgs = ElementResizeArgs<HTMLCanvasElement> & {\n  readonly ctx: CanvasRenderingContext2D;\n};\n\nexport type PointSpaces = `viewport` | `screen` | `document`;\n\n/**\n * Convert an absolute point to relative, in different coordinate spaces.\n *\n * When calling the returned function, the input value must be in the same\n * scale as the intended output scale.\n *\n * Viewport-relative is used by default.\n *\n * @example Get relative position of click in screen coordinates\n * ```js\n * const f = pointScaler({ to: 'screen' });\n * document.addEventListener('click', evt => {\n *  const screenRelative = f(evt.screenX, evt.screenY);\n *  // Yields {x,y} on 0..1 scale\n * });\n * ```\n *\n * @example Get relative position of click in viewport coordinates\n * ```js\n * const f = pointScaler({ to: 'viewport' });\n * document.addEventListener('click', evt => {\n *  const viewportRelative = f(evt.clientX, evt.clientY);\n *  // Yields {x,y} on 0..1 scale\n * });\n * ```\n *\n * @example Get relative position of click in document coordinates\n * ```js\n * const f = pointScaler({ to: 'document' });\n * document.addEventListener('click', evt => {\n *  const documentRelative = f(evt.pageX, evt.pageY);\n *  // Yields {x,y} on 0..1 scale\n * });\n * ```\n *\n * @param opts\n * @returns\n */\nexport const pointScaler = (reference: PointSpaces = `viewport`) => {\n  if (reference === `viewport`) {\n    return (a: Readonly<Points.Point | number | number[]>, b?: number) => {\n      const pt = Points.getPointParam(a, b);\n      return Object.freeze({\n        x: pt.x / window.innerWidth,\n        y: pt.y / window.innerHeight,\n      });\n    };\n  } else if (reference === `screen`) {\n    return (a: Readonly<Points.Point | number | number[]>, b?: number) => {\n      const pt = Points.getPointParam(a, b);\n      return Object.freeze({\n        x: pt.x / screen.width,\n        y: pt.y / screen.height,\n      });\n    };\n  } else if (reference === `document`) {\n    return (a: Readonly<Points.Point | number | number[]>, b?: number) => {\n      const pt = Points.getPointParam(a, b);\n      return Object.freeze({\n        x: pt.x / document.body.scrollWidth,\n        y: pt.y / document.body.scrollHeight,\n      });\n    };\n  } else {\n    throw new Error(\n      `Unknown 'reference' parameter: ${JSON.stringify(reference)}`\n    );\n  }\n};\n\nexport type ElPositionOpts = {\n  readonly target?: PointSpaces;\n  readonly relative?: boolean;\n  readonly anchor?: CardinalDirection | `center`;\n};\n\n/**\n * Returns a function which yields element position in target coordinate space with optional scaling.\n * Live position is calculated when the function is invoked.\n * Use {@link positionRelative} to simply get relative position of element in given coordinate space.\n *\n * @example Absolute position of #blah in viewport coordinate space\n * ```js\n * const f = positionFn('#blah');\n * f(); // Yields: {x,y}\n * // Or:\n * positionFn('#blah')(); // Immediately invoke\n * ```\n *\n * @example Relative position of element in viewport-space\n * ```js\n * const f = positionFn(evt.target, { relative: true });\n * f(); // Yields: {x,y}\n * ```\n *\n * @example Relative position of #blah in screen-space\n * ```js\n * const f = positionFn('#blah', { target: 'screen', relative: true });\n * f(); // Yields: {x,y}\n * ```\n *\n * By default, top-left corner (north west) is used. Other cardinal points or 'center' can be specified:\n * ```js\n * // Relative position by center\n * positionFn('#blah', { relative: true, anchor: 'center' });\n *\n * // ...by bottom-right corner\n * positionFn('#blah', { relative: true, anchor: 'se' });\n * ```\n *\n * This function is useful if you have a stable DOM element and conversion target.\n * If the DOM element is changing continually, consider using {@link viewportToSpace} to\n * convert from viewport coordinates to target coordinates:\n *\n * ```js\n * // Eg.1 Absolute coords in screen space\n * const vpToScreen = viewportToSpace('screen');\n * vpToScreen(el.getBoundingClientRect());\n *\n * // Eg.2 Relative coords in viewport space\n * const vpRelative = pointScaler(); // Re-usable scaler. Default uses viewport\n * vpRelative(el.getBoundingClientRect()); // Yields: { x,y }\n *\n * // Eg.3 Relative coords in screen space\n * const vpToScreen = viewportToSpace('screen'); // Map viewport->screen\n * const screenRelative = pointScaler('screen'); // Scale screen units\n *\n * // Combine into a resuable function that takes an element\n * const mapAndScale = (el) => screenRelative(vpToScreen(el.getBoundingClientRect()));\n *\n * // Call\n * mapAndScale(document.getElementById('blah')); // Yields: { x,y }\n * ```\n * @param domQueryOrEl\n * @param coordinateSpace\n * @param scaled\n * @returns\n */\nexport const positionFn = (\n  domQueryOrEl: Readonly<string | HTMLElement>,\n  opts: ElPositionOpts = {}\n): (() => Points.Point) => {\n  const targetSpace = opts.target ?? `viewport`;\n  const relative = opts.relative ?? false;\n  const anchor = opts.anchor ?? `nw`;\n\n  const el = resolveEl(domQueryOrEl);\n  const vpToSpace = viewportToSpace(targetSpace);\n\n  if (relative) {\n    const s = pointScaler(targetSpace);\n    return () => s(vpToSpace(cardinal(el.getBoundingClientRect(), anchor)));\n  } else {\n    return () => vpToSpace(cardinal(el.getBoundingClientRect(), anchor));\n  }\n};\n\nexport const cardinalPosition = (\n  domQueryOrEl: Readonly<string | HTMLElement>,\n  anchor: CardinalDirection | `center` = `nw`\n): Points.Point => {\n  const el = resolveEl(domQueryOrEl);\n  return cardinal(el.getBoundingClientRect(), anchor);\n};\n/**\n * Returns relative position of element in target coordinate space, or viewport by default.\n * Relative means that { x:0.5, y: 0.5 } is the middle of the target space. Eg for viewport, that means its the middle of the browser window.\n * ```js\n * // These all yield { x, y }\n * elPositionRelative('#blah');\n * elPositionRelative(evt.target, 'screen');\n * ```\n * @param domQueryOrEl DOM query or element\n * @param target Target coordinate space, or viewport by default\n * @returns Point\n */\nexport const positionRelative = (\n  domQueryOrEl: Readonly<string | HTMLElement>,\n  target: PointSpaces = `viewport`\n): Points.Point => {\n  const f = positionFn(domQueryOrEl, { relative: true, target });\n  return f();\n};\n\n/**\n * Returns a function that converts input viewport coordinate space\n * to an output coordinate space.\n *\n * ```js\n * // f() will convert from viewport to document coordinate space\n * const f = viewportToSpace('document');\n *\n * // {x:100,y:100} is viewport coordinate space\n * f(100,100); // Yields: { x, y } converted to document space\n * ```\n *\n * Or immediately invoke for one-off use:\n * ```js\n * viewportToSpace('document')(100,100); // Yields: { x, y }\n * ```\n * @param targetSpace\n * @returns\n */\nexport const viewportToSpace = (targetSpace: PointSpaces = `viewport`) => {\n  switch (targetSpace) {\n    case `screen`:\n      return (a: Readonly<Points.Point | number[] | number>, b?: number) => {\n        const pt = Points.getPointParam(a, b);\n        return Object.freeze({\n          x: pt.x + window.screenX,\n          y: pt.y + window.screenY,\n        });\n      };\n    case `document`:\n      return (a: Readonly<Points.Point | number[] | number>, b?: number) => {\n        const pt = Points.getPointParam(a, b);\n        return Object.freeze({\n          x: pt.x + window.scrollX,\n          y: pt.y + window.scrollY,\n        });\n      };\n    case `viewport`:\n      return (a: Readonly<Points.Point | number[] | number>, b?: number) => {\n        const pt = Points.getPointParam(a, b);\n        return Object.freeze({\n          x: pt.x,\n          y: pt.y,\n        });\n      };\n    default:\n      throw new Error(\n        `Unexpected target coordinate space: ${targetSpace}. Expected: viewport, document or screen`\n      );\n  }\n};\n\n/**\n * Position element by relative coordinate. Relative to window dimensions by default\n * @param element DOM element to position, or query\n * @param relativePos Window-relative coordinate. 0.5/0.5 is middle of window.\n */\nexport const positionFromMiddle = (\n  domQueryOrEl: string | HTMLElement,\n  relativePos: Points.Point,\n  relativeTo: `window` | `screen` = `window`\n) => {\n  if (!domQueryOrEl) throw new Error(`domQueryOrEl is null or undefined`);\n  const el = resolveEl<HTMLElement>(domQueryOrEl);\n\n  // Convert relative to absolute units\n  const absPosition = Points.multiply(\n    relativePos,\n    window.innerWidth,\n    window.innerHeight\n  );\n\n  const thingRect = el.getBoundingClientRect();\n  const offsetPos = Points.subtract(\n    absPosition,\n    thingRect.width / 2,\n    thingRect.height / 2\n  );\n\n  // Apply via CSS\n  el.style.transform = `translate(${offsetPos.x}px, ${offsetPos.y}px)`;\n};\n\nexport const fullSizeElement = <V extends HTMLElement>(\n  domQueryOrEl: string | V,\n  onResized?: (args: ElementResizeArgs<V>) => void\n) => {\n  const el = resolveEl<V>(domQueryOrEl);\n\n  const r = windowResize();\n  const update = () => {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    el.setAttribute(`width`, width.toString());\n    el.setAttribute(`height`, height.toString());\n\n    if (onResized !== undefined) {\n      const bounds = {\n        min: Math.min(width, height),\n        max: Math.max(width, height),\n        width,\n        height,\n        center: {\n          x: width / 2,\n          y: height / 2,\n        },\n      };\n      onResized({ el, bounds });\n    }\n  };\n  r.subscribe(update);\n\n  update();\n  return r;\n};\n\nexport type CanvasOpts = {\n  readonly skipCss?: boolean;\n  readonly fullSize?: boolean;\n  readonly scaleBy?: `both` | `width` | `height` | `min` | `max`;\n};\n\nexport const canvasHelper = (\n  domQueryOrEl: Readonly<string | HTMLCanvasElement | undefined | null>,\n  opts: CanvasOpts\n) => {\n  if (!domQueryOrEl) throw new Error(`domQueryOrEl is null or undefined`);\n  const el = resolveEl<HTMLCanvasElement>(domQueryOrEl);\n  if (el.nodeName !== `CANVAS`) {\n    throw new Error(`Expected CANVAS HTML element. Got: ${el.nodeName}`);\n  }\n  const fullSize = opts.fullSize ?? true;\n  const ratio = Math.round(window.devicePixelRatio) || 1;\n  const scaleBy = opts.scaleBy ?? `both`;\n\n  //eslint-disable-next-line functional/no-let\n  let scaler: Scaler.Scaler = Scaler.scaler(`both`);\n\n  const updateDimensions = (rect: Rects.Rect) => {\n    // Create a new scaler\n    scaler = Scaler.scaler(scaleBy, rect);\n\n    const pixelScaled = Rects.multiply(rect, ratio, ratio);\n\n    //eslint-disable-next-line functional/immutable-data\n    el.width = pixelScaled.width;\n    //eslint-disable-next-line functional/immutable-data\n    el.height = pixelScaled.height;\n\n    //eslint-disable-next-line functional/immutable-data\n    el.style.width = rect.width + `px`;\n    //eslint-disable-next-line functional/immutable-data\n    el.style.height = rect.height + `px`;\n  };\n\n  // Window has resized\n  const onWindowResize = () => {\n    const innerWindow = {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n    updateDimensions(innerWindow);\n  };\n\n  const getContext = () => {\n    const ctx = el.getContext(`2d`);\n    if (ctx === null) throw new Error(`Could not create drawing context`);\n\n    ctx.scale(ratio, ratio);\n  };\n\n  if (fullSize) {\n    const r = windowResize();\n    r.subscribe(onWindowResize);\n  }\n\n  return {\n    abs: scaler.abs,\n    rel: scaler.rel,\n    getContext,\n  };\n};\n\n/**\n * Resizes given canvas element to match window size.\n * To resize canvas to match its parent, use {@link parentSizeCanvas}.\n *\n * To make the canvas appear propery, it sets the following CSS:\n * ```css\n * {\n *  top: 0;\n *  left: 0;\n *  zIndex: -1;\n *  position: fixed;\n * }\n * ```\n * Pass _true_ for `skipCss` to avoid this.\n *\n * Provide a callback for when resize happens.\n * @param domQueryOrEl Query string or reference to canvas element\n * @param onResized Callback for when resize happens, eg for redrawing canvas\n * @param skipCss if true, style are not added\n * @returns Observable\n */\nexport const fullSizeCanvas = (\n  domQueryOrEl: Readonly<string | HTMLCanvasElement | undefined | null>,\n  onResized?: (args: CanvasResizeArgs) => void,\n  skipCss = false\n) => {\n  if (domQueryOrEl === null || domQueryOrEl === undefined) {\n    throw new Error(`domQueryOrEl is null or undefined`);\n  }\n  const el = resolveEl<HTMLCanvasElement>(domQueryOrEl);\n  if (el.nodeName !== `CANVAS`) {\n    throw new Error(\n      `Expected HTML element with node name CANVAS, not ${el.nodeName}`\n    );\n  }\n  const ctx = el.getContext(`2d`);\n  if (ctx === null) throw new Error(`Could not create drawing context`);\n\n  const update = () => {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    //eslint-disable-next-line functional/immutable-data\n    el.width = width;\n    //eslint-disable-next-line functional/immutable-data\n    el.height = height;\n\n    if (onResized !== undefined) {\n      const bounds = {\n        min: Math.min(width, height),\n        max: Math.max(width, height),\n        width,\n        height,\n        center: { x: width / 2, y: height / 2 },\n      };\n      onResized({ ctx, el, bounds });\n    }\n  };\n\n  // Setup\n  if (!skipCss) {\n    //eslint-disable-next-line functional/immutable-data\n    el.style.top = `0`;\n    //eslint-disable-next-line functional/immutable-data\n    el.style.left = `0`;\n    //eslint-disable-next-line functional/immutable-data\n    el.style.zIndex = `-100`;\n    //eslint-disable-next-line functional/immutable-data\n    el.style.position = `fixed`;\n  }\n\n  const r = windowResize();\n  r.subscribe(update);\n\n  update();\n  return r;\n};\n\n/**\n * Given an array of class class names, this will cycle between them each time\n * it is called.\n *\n * Eg, assume `list` is: [ `a`, `b`, `c` ]\n *\n * If `el` already has the class `a`, the first time it is called, class `a`\n * is removed, and `b` added. The next time `b` is swapped for `c`. Once again,\n * `c` will swap with `a` and so on.\n *\n * If `el` is undefined or null, function silently returns.\n * @param el Element\n * @param list List of class names\n * @returns\n */\nexport const cycleCssClass = (\n  el: Readonly<HTMLElement>,\n  list: readonly string[]\n) => {\n  if (el === null || !el) return;\n  if (!Array.isArray(list)) {\n    throw new Error(`List should be an array of strings`);\n  }\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < list.length; i++) {\n    if (el.classList.contains(list[i])) {\n      el.classList.remove(list[i]);\n      if (i + 1 < list.length) {\n        el.classList.add(list[i + 1]);\n      } else {\n        el.classList.add(list[0]);\n      }\n      return;\n    }\n  }\n  el.classList.add(list[0]);\n};\n\n/**\n * Sets width/height atributes on the given element according to the size of its parent.\n * @param domQueryOrEl Elememnt to resize\n * @param onResized Callback when resize happens\n * @param timeoutMs Timeout for debouncing events\n * @returns\n */\nexport const parentSize = <V extends HTMLElement | SVGSVGElement>(\n  domQueryOrEl: string | V,\n  onResized?: (args: ElementResizeArgs<V>) => void,\n  timeoutMs: number = 100\n) => {\n  const el = resolveEl<V>(domQueryOrEl);\n  const parent = el.parentElement;\n  if (parent === null) throw new Error(`Element has no parent`);\n\n  const ro = resizeObservable(parent, timeoutMs).subscribe(\n    (entries: readonly ResizeObserverEntry[]) => {\n      const e = entries.find((v) => v.target === parent);\n      if (e === undefined) return;\n\n      const width = e.contentRect.width;\n      const height = e.contentRect.height;\n\n      el.setAttribute(`width`, width + `px`);\n      el.setAttribute(`height`, height + `px`);\n      if (onResized !== undefined) {\n        const bounds = {\n          min: Math.min(width, height),\n          max: Math.max(width, height),\n          width,\n          height,\n          center: { x: width / 2, y: height / 2 },\n        };\n        onResized({ el, bounds });\n      }\n    }\n  );\n\n  return ro;\n};\n\n/**\n * Source: https://zellwk.com/blog/translate-in-javascript\n * @param domQueryOrEl\n */\nexport const getTranslation = (\n  domQueryOrEl: Readonly<string | HTMLElement>\n): Points.Point => {\n  // Source:\n  // https://raw.githubusercontent.com/zellwk/javascript/master/src/browser/dom/translate-values.js\n\n  const el = resolveEl<HTMLElement>(domQueryOrEl);\n  const style = window.getComputedStyle(el);\n  const matrix = style.transform;\n\n  // No transform property. Simply return 0 values.\n  if (matrix === `none` || typeof matrix === `undefined`) {\n    return {\n      x: 0,\n      y: 0,\n      z: 0,\n    };\n  }\n\n  // Can either be 2d or 3d transform\n  const matrixType = matrix.includes(`3d`) ? `3d` : `2d`;\n  // @ts-ignore\n  const matrixValues = matrix.match(/matrix.*\\((.+)\\)/)[1].split(`, `);\n\n  // 2d Matrixes have 6 values\n  // Last 2 values are X and Y.\n  // 2d Matrixes does not have Z value.\n  if (matrixType === `2d`) {\n    return {\n      x: parseFloat(matrixValues[4]),\n      y: parseFloat(matrixValues[5]),\n      z: 0,\n    };\n  }\n\n  // 3d Matrixes have 16 values\n  // The 13th, 14th, and 15th values are X, Y, and Z\n  if (matrixType === `3d`) {\n    return {\n      x: parseFloat(matrixValues[12]),\n      y: parseFloat(matrixValues[13]),\n      z: parseFloat(matrixValues[14]),\n    };\n  }\n\n  return { x: 0, y: 0, z: 0 };\n};\n\n/**\n * Resizes given canvas to its parent element.\n * To resize canvas to match the viewport, use {@link fullSizeCanvas}.\n *\n * Provide a callback for when resize happens.\n * @param domQueryOrEl Query string or reference to canvas element\n * @param onResized Callback for when resize happens, eg for redrawing canvas\n * @returns Observable\n */\nexport const parentSizeCanvas = (\n  domQueryOrEl: Readonly<string | HTMLCanvasElement>,\n  onResized?: (args: CanvasResizeArgs) => void,\n  timeoutMs: number = 100\n) => {\n  const el = resolveEl<HTMLCanvasElement>(domQueryOrEl);\n  if (el.nodeName !== `CANVAS`) {\n    throw new Error(\n      `Expected HTML element with node name CANVAS, not ${el.nodeName}`\n    );\n  }\n  const parent = el.parentElement;\n  if (parent === null) throw new Error(`Element has no parent`);\n\n  const ctx = (el as HTMLCanvasElement).getContext(`2d`);\n  if (ctx === null) throw new Error(`Could not create drawing context`);\n\n  //const safetyMargin = 4;\n\n  //eslint-disable-next-line functional/immutable-data\n  el.style.width = `100%`;\n  //eslint-disable-next-line functional/immutable-data\n  el.style.height = `100%`;\n\n  //console.log('parent height: ' + parent.getBoundingClientRect().height);\n  //console.log(`parent offset Height: ${parent.offsetHeight}`);\n\n  const ro = resizeObservable(parent, timeoutMs).subscribe(\n    (entries: readonly ResizeObserverEntry[]) => {\n      const e = entries.find((v) => v.target === parent);\n      if (e === undefined) return;\n\n      const width = e.contentRect.width;\n      const height = e.contentRect.height;\n      //console.log(`contentH: ${e.contentRect.height} current: ${el.getBoundingClientRect().height}`);\n\n      // el.setAttribute(`width`, width-safetyMargin + `px`);\n      // el.setAttribute(`height`, height-safetyMargin + `px`);\n      el.setAttribute(`width`, el.offsetWidth + `px`);\n      el.setAttribute(`height`, el.offsetHeight + `px`);\n\n      if (onResized !== undefined) {\n        const bounds = {\n          min: Math.min(width, height),\n          max: Math.max(width, height),\n          width,\n          height,\n          center: { x: width / 2, y: height / 2 },\n        };\n        onResized({ ctx, el, bounds });\n      }\n    }\n  );\n\n  return ro;\n};\n\n/**\n * Returns an Observable for window resize. Default 100ms debounce.\n * @param timeoutMs\n * @returns\n */\nexport const windowResize = (timeoutMs: number = 100) =>\n  fromEvent(window, `resize`).pipe(debounceTime(timeoutMs));\n\n/**\n * Resolves either a string or HTML element to an element.\n * Useful when an argument is either an HTML element or query.\n *\n * ```js\n * resolveEl(`#someId`);\n * resolveEl(someElement);\n * ```\n * @param domQueryOrEl\n * @returns\n */\nexport const resolveEl = <V extends Element>(domQueryOrEl: string | V): V => {\n  if (typeof domQueryOrEl === `string`) {\n    const d = document.querySelector(domQueryOrEl);\n    if (d === null) {\n      if (!domQueryOrEl.startsWith(`#`)) {\n        throw new Error(\n          `Query '${domQueryOrEl}' did not match anything. Did you mean '#${domQueryOrEl}?`\n        );\n      } else {\n        throw new Error(\n          `Query '${domQueryOrEl}' did not match anything. Try '#id', 'div', or '.class'`\n        );\n      }\n    }\n    domQueryOrEl = d as V;\n  } else if (domQueryOrEl === null) {\n    throw new Error(`domQueryOrEl ${domQueryOrEl} is null`);\n  } else if (domQueryOrEl === undefined) {\n    throw new Error(`domQueryOrEl ${domQueryOrEl} is undefined`);\n  }\n  const el = domQueryOrEl as V;\n  return el;\n};\n\n/**\n * Creates an element after `sibling`\n * ```\n * const el = createAfter(siblingEl, `DIV`);\n * ```\n * @param sibling Element\n * @param tagName Element to create\n * @returns New element\n */\nexport const createAfter = (\n  sibling: Readonly<HTMLElement>,\n  tagName: string\n): HTMLElement => {\n  const el = document.createElement(tagName);\n  sibling.parentElement?.insertBefore(el, sibling.nextSibling);\n  return el;\n};\n\n/**\n * Creates an element inside of `parent`\n * ```\n * const newEl = createIn(parentEl, `DIV`);\n * ```\n * @param parent Parent element\n * @param tagName Tag to create\n * @returns New element\n */\nexport const createIn = (\n  parent: Readonly<HTMLElement>,\n  tagName: string\n): HTMLElement => {\n  const el = document.createElement(tagName);\n  parent.appendChild(el);\n  return el;\n};\n\n/**\n * Creates a table based on a list of objects\n * ```\n * const t = dataTableList(parentEl, map);\n *\n * t(newMap)\n * ```\n */\nexport const dataTableList = (\n  parentOrQuery: Readonly<HTMLElement | string>,\n  data: ReadonlyMap<string, object>\n): ((data: ReadonlyMap<string, object>) => void) => {\n  const parent = resolveEl(parentOrQuery);\n\n  const update = (data: ReadonlyMap<string, object>) => {\n    const seenTables = new Set();\n\n    for (const [key, value] of data) {\n      const tKey = `table-${key}`;\n      seenTables.add(tKey);\n      //eslint-disable-next-line functional/no-let\n      let t = parent.querySelector(`#${tKey}`);\n      if (t === null) {\n        t = document.createElement(`table`);\n        //eslint-disable-next-line functional/immutable-data\n        t.id = tKey;\n        parent.append(t);\n      }\n\n      updateDataTable(t as HTMLTableElement, value);\n    }\n\n    // Remove tables that aren't present in map\n    const tables = Array.from(parent.querySelectorAll(`table`));\n    tables.forEach((t) => {\n      if (!seenTables.has(t.id)) {\n        t.remove();\n      }\n    });\n  };\n\n  if (data) update(data);\n\n  return (d: ReadonlyMap<string, object>) => {\n    update(d);\n  };\n};\n\n/**\n * Format data. Return _undefined_ to signal that\n * data was not handled.\n */\nexport type DataFormatter = (data: object, path: string) => string | undefined;\n\n/**\n * Updates a TABLE elment based on `data`'s key-object pairs\n * @param t\n * @param data\n * @returns\n */\nconst updateDataTable = (\n  //eslint-disable-next-line functional/prefer-immutable-types\n  t: HTMLTableElement,\n  data: object,\n  opts: DataTableOpts = {}\n) => {\n  const precision = opts.precision ?? 2;\n\n  if (data === undefined) {\n    //eslint-disable-next-line functional/immutable-data\n    t.innerHTML = ``;\n    return;\n  }\n  const seenRows = new Set();\n\n  for (const [key, value] of Object.entries(data)) {\n    const domKey = `row-${key}`;\n    seenRows.add(domKey);\n\n    //eslint-disable-next-line functional/no-let\n    let rowEl = t.querySelector(`#${domKey}`);\n    if (rowEl === null) {\n      rowEl = document.createElement(`tr`);\n      t.append(rowEl);\n      //eslint-disable-next-line functional/immutable-data\n      rowEl.id = domKey;\n\n      const keyEl = document.createElement(`td`);\n      //eslint-disable-next-line functional/immutable-data\n      keyEl.innerText = key;\n      rowEl.append(keyEl);\n    }\n\n    //eslint-disable-next-line functional/no-let\n    let valEl = rowEl.querySelector(`#${domKey}-val`);\n\n    if (valEl === null) {\n      valEl = document.createElement(`td`);\n      //eslint-disable-next-line functional/immutable-data\n      valEl.id = `${domKey}-val`;\n      rowEl.append(valEl);\n    }\n\n    //eslint-disable-next-line functional/no-let\n    let valueHTML: string | undefined;\n    if (opts.formatter) {\n      valueHTML = opts.formatter(value, key);\n    }\n\n    // If there's no formatter, or not handled...\n    if (valueHTML === undefined) {\n      if (typeof value === `object`) {\n        valueHTML = JSON5.stringify(value);\n      } else if (typeof value === `number`) {\n        if (opts.roundNumbers) {\n          valueHTML = Math.round(value).toString();\n        } else {\n          valueHTML = value.toFixed(precision);\n        }\n      } else {\n        valueHTML = (value as object).toString();\n      }\n    }\n    //eslint-disable-next-line functional/immutable-data\n    (valEl as HTMLElement).innerHTML = valueHTML;\n  }\n\n  // Remove rows that aren't present in data\n  const rows = Array.from(t.querySelectorAll(`tr`));\n  rows.forEach((r) => {\n    if (!seenRows.has(r.id)) {\n      r.remove();\n    }\n  });\n};\n\nexport type DataTableOpts = {\n  readonly formatter?: DataFormatter;\n  readonly precision?: number;\n  readonly roundNumbers?: boolean;\n};\n/**\n * Creates a HTML table where each row is a key-value pair from `data`.\n * First column is the key, second column data.\n *\n * ```js\n * const dt = dataTable(`#hostDiv`);\n * dt({\n *  name: `Blerg`,\n *  height: 120\n * });\n * ```\n */\nexport const dataTable = (\n  parentOrQuery: Readonly<HTMLElement | string>,\n  data?: object,\n  opts?: DataTableOpts\n): ((data: object) => void) => {\n  const parent = resolveEl(parentOrQuery);\n  const t = document.createElement(`table`);\n  parent.append(t);\n\n  if (data) updateDataTable(t, data, opts);\n  return (d: object) => {\n    updateDataTable(t, d, opts);\n  };\n};\n\n/**\n * Remove all child nodes from `parent`\n * @param parent\n */\nexport const clear = (parent: Readonly<HTMLElement>) => {\n  //eslint-disable-next-line functional/no-let\n  let c = parent.lastElementChild;\n\n  while (c) {\n    parent.removeChild(c);\n    c = parent.lastElementChild;\n  }\n};\n\n/**\n * Observer when document's class changes\n *\n * ```js\n * const c = themeChangeObservable();\n * c.subscribe(() => {\n *  // Class has changed...\n * });\n * ```\n * @returns\n */\nexport const themeChangeObservable = (): Observable<\n  readonly MutationRecord[]\n> => {\n  const o = new Observable<MutationRecord[]>((subscriber) => {\n    const ro = new MutationObserver((entries) => {\n      subscriber.next(entries);\n    });\n\n    const opts: MutationObserverInit = {\n      attributeFilter: [`class`],\n      attributes: true,\n    };\n\n    ro.observe(document.documentElement, opts);\n    return function unsubscribe() {\n      ro.disconnect();\n    };\n  });\n  return o;\n};\n\n/**\n * Observer when element resizes. Specify `timeoutMs` to debounce.\n *\n * ```\n * const o = resizeObservable(myEl, 500);\n * o.subscribe(() => {\n *  // called 500ms after last resize\n * });\n * ```\n * @param elem\n * @param timeoutMs Tiemout before event gets triggered\n * @returns\n */\nexport const resizeObservable = (\n  elem: Readonly<Element>,\n  timeoutMs: number = 1000\n): Observable<readonly ResizeObserverEntry[]> => {\n  if (elem === null) {\n    throw new Error(`elem parameter is null. Expected element to observe`);\n  }\n  if (elem === undefined) {\n    throw new Error(`elem parameter is undefined. Expected element to observe`);\n  }\n  const o = new Observable<ResizeObserverEntry[]>((subscriber) => {\n    const ro = new ResizeObserver((entries) => {\n      subscriber.next(entries);\n    });\n\n    ro.observe(elem);\n    return function unsubscribe() {\n      ro.unobserve(elem);\n    };\n  });\n  return o.pipe(debounceTime(timeoutMs));\n};\n\n/**\n * Copies string representation of object to clipboard\n * @param obj\n * @returns Promise\n */\nexport const copyToClipboard = (obj: object) => {\n  const p = new Promise((resolve, reject) => {\n    //const json = JSON.stringify(obj, null, 2);\n    const str = JSON5.stringify(obj);\n    navigator.clipboard.writeText(JSON.stringify(str)).then(\n      () => {\n        resolve(true);\n      },\n      (_err) => {\n        console.warn(`Could not copy to clipboard`);\n        console.log(str);\n        reject(_err);\n      }\n    );\n  });\n  return p;\n};\n\nexport type CreateUpdateElement<V> = (\n  item: V,\n  el: Readonly<HTMLElement | null>\n) => HTMLElement;\n\nexport const reconcileChildren = <V>(\n  parentEl: HTMLElement,\n  list: ReadonlyMap<string, V>,\n  createUpdate: CreateUpdateElement<V>\n) => {\n  if (parentEl === null) throw new Error(`parentEl is null`);\n  if (parentEl === undefined) throw new Error(`parentEl is undefined`);\n\n  const seen = new Set<string>();\n\n  for (const [key, value] of list) {\n    const id = `c-${key}`;\n    const el = parentEl.querySelector(`#${id}`) as HTMLElement;\n    const finalEl = createUpdate(value, el);\n    //eslint-disable-next-line functional/immutable-data\n    if (el !== finalEl) {\n      //eslint-disable-next-line functional/immutable-data\n      finalEl.id = id;\n      parentEl.append(finalEl);\n    }\n    seen.add(id);\n  }\n\n  const prune: HTMLElement[] = [];\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < parentEl.children.length; i++) {\n    const c = parentEl.children[i] as HTMLElement;\n    if (!seen.has(c.id)) {\n      //eslint-disable-next-line functional/immutable-data\n      prune.push(c);\n    }\n  }\n\n  prune.forEach((p) => p.remove());\n};\n","// -------------------------\n// Immutable\n// -------------------------\nimport type { IStackImmutable } from './IStackImmutable.js';\nimport { push, pop, isEmpty, isFull, peek } from './StackFns.js';\nimport type { StackOpts } from './index.js';\n\nexport class StackImmutable<V> implements IStackImmutable<V> {\n  private readonly opts: StackOpts;\n  /* eslint-disable-next-line functional/prefer-readonly-type */\n  readonly data: ReadonlyArray<V>;\n\n  constructor(opts: StackOpts = {}, data: ReadonlyArray<V> = []) {\n    this.opts = opts;\n    this.data = data;\n  }\n\n  push(...toAdd: ReadonlyArray<V>): StackImmutable<V> {\n    return new StackImmutable<V>(\n      this.opts,\n      push(this.opts, this.data, ...toAdd)\n    );\n  }\n\n  pop(): IStackImmutable<V> {\n    return new StackImmutable<V>(this.opts, pop(this.opts, this.data));\n  }\n\n  forEach(fn: (v: V) => void): void {\n    this.data.forEach(fn);\n  }\n\n  forEachFromTop(fn: (v: V) => void): void {\n    [...this.data].reverse().forEach(fn);\n  }\n\n  get isEmpty(): boolean {\n    return isEmpty(this.opts, this.data);\n  }\n\n  get isFull(): boolean {\n    return isFull(this.opts, this.data);\n  }\n\n  get peek(): V | undefined {\n    return peek(this.opts, this.data);\n  }\n\n  get length(): number {\n    return this.data.length;\n  }\n}\n\n/**\n * Returns a stack. Immutable. Use {@link Stacks.mutable} for a mutable alternative.\n *\n * The basic usage is `push`/`pop` to add/remove, returning the modified stack. Use the\n * property `peek` to see what's on top.\n *\n * @example Basic usage\n * ```js\n * // Create\n * let s = stack();\n * // Add one or more items\n * s = s.push(1, 2, 3, 4);\n * // See what's at the top of the stack\n * s.peek;      // 4\n *\n * // Remove from the top of the stack, returning\n * // a new stack without item\n * s = s.pop();\n * s.peek;        // 3\n * ```\n * @param opts Options\n * @param startingItems List of items to add to stack. Items will be pushed 'left to right', ie array index 0 will be bottom of the stack.\n */\nexport const immutable = <V>(\n  opts: StackOpts = {},\n  ...startingItems: ReadonlyArray<V>\n): IStackImmutable<V> => new StackImmutable({ ...opts }, [...startingItems]);\n","import { type CirclePositioned } from '../geometry/Circle.js';\nimport { markerPrebuilt } from './SvgMarkers.js';\nimport * as Lines from '../geometry/Line.js';\nimport * as Points from '../geometry/Point.js';\nimport * as Elements from './SvgElements.js';\nimport * as Rects from '../geometry/Rect.js';\n\nexport { Elements };\n\nexport type MarkerOpts = StrokeOpts &\n  DrawingOpts & {\n    readonly id: string;\n    readonly markerWidth?: number;\n    readonly markerHeight?: number;\n    readonly orient?: string;\n    readonly viewBox?: string;\n    readonly refX?: number;\n    readonly refY?: number;\n  };\n\n/**\n * Drawing options\n */\nexport type DrawingOpts = {\n  /**\n   * Style for fill. Eg `black`.\n   * @see [fill](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill)\n   */\n  readonly fillStyle?: string;\n\n  /**\n   * Opacity (0..1)\n   */\n  readonly opacity?: number;\n  /**\n   * If true, debug helpers are drawn\n   */\n  readonly debug?: boolean;\n};\n\nexport type StrokeOpts = {\n  /**\n   * Line cap\n   * @see [stroke-linecap](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap)\n   */\n  readonly strokeLineCap?: `butt` | `round` | `square`;\n  /**\n   * Width of stroke, eg `2`\n   * @see [stroke-width](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width)\n   */\n  readonly strokeWidth?: number;\n  /**\n   * Stroke dash pattern, eg `5`\n   * @see [stroke-dasharray](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray)\n   */\n  readonly strokeDash?: string;\n  /**\n   * Style for lines. Eg `white`.\n   * @see [stroke](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke)\n   */\n  readonly strokeStyle?: string;\n};\n\n/**\n * Line drawing options\n */\nexport type LineDrawingOpts = DrawingOpts & MarkerDrawingOpts & StrokeOpts;\n\nexport type CircleDrawingOpts = DrawingOpts & StrokeOpts & MarkerDrawingOpts;\n\nexport type PathDrawingOpts = DrawingOpts & StrokeOpts & MarkerDrawingOpts;\n\nexport type MarkerDrawingOpts = {\n  readonly markerEnd?: MarkerOpts;\n  readonly markerStart?: MarkerOpts;\n  readonly markerMid?: MarkerOpts;\n};\n\n/**\n * Text drawing options\n */\nexport type TextDrawingOpts = StrokeOpts &\n  DrawingOpts & {\n    readonly anchor?: `start` | `middle` | `end`;\n    readonly align?:\n      | `text-bottom`\n      | `text-top`\n      | `baseline`\n      | `top`\n      | `hanging`\n      | `middle`;\n    readonly userSelect?: boolean;\n  };\n\n/**\n * Text path drawing options\n */\nexport type TextPathDrawingOpts = TextDrawingOpts & {\n  readonly method?: `align` | `stretch`;\n  readonly side?: `left` | `right`;\n  readonly spacing?: `auto` | `exact`;\n  readonly startOffset?: number;\n  readonly textLength?: number;\n};\n\n/**\n * Creates and appends a SVG element.\n *\n * ```js\n * // Create a circle\n * const circleEl = createOrResolve(parentEl, `SVGCircleElement`);\n * ```\n *\n * If `queryOrExisting` is specified, it is used as a query to find an existing element. If\n * query starts with `#`, this will be set as the element id, if created.\n *\n * ```js\n * // Creates an element with id 'myCircle' if it doesn't exist\n * const circleEl = createOrResolve(parentEl, `SVGCircleElement`, `#myCircle`);\n * ```\n * @param parent Parent element\n * @param type Type of SVG element\n * @param queryOrExisting Query, eg `#id`\n * @returns\n */\nexport const createOrResolve = <V extends SVGElement>(\n  parent: SVGElement,\n  type: string,\n  queryOrExisting?: string | V\n): V => {\n  //eslint-disable-next-line functional/no-let\n  let existing = null;\n  if (queryOrExisting !== undefined) {\n    if (typeof queryOrExisting === `string`) {\n      existing = parent.querySelector(queryOrExisting);\n    } else existing = queryOrExisting;\n  }\n  if (existing === null) {\n    const p = document.createElementNS(`http://www.w3.org/2000/svg`, type) as V;\n    parent.appendChild(p);\n    if (queryOrExisting && typeof queryOrExisting === `string`) {\n      //eslint-disable-next-line functional/immutable-data\n      if (queryOrExisting.startsWith(`#`)) p.id = queryOrExisting.substring(1);\n    }\n    return p;\n  }\n  return existing as V;\n};\n\nexport const remove = <V extends SVGElement>(\n  parent: SVGElement,\n  queryOrExisting: string | V\n) => {\n  if (typeof queryOrExisting === `string`) {\n    const e = parent.querySelector(queryOrExisting);\n    if (e === null) return;\n    e.remove();\n  } else {\n    queryOrExisting.remove();\n  }\n};\n\nexport const clear = (parent: SVGElement) => {\n  //eslint-disable-next-line functional/no-let\n  let c = parent.lastElementChild;\n  while (c) {\n    parent.removeChild(c);\n    c = parent.lastElementChild;\n  }\n};\n\n/**\n * Creates an element of `type` and with `id` (if specified)\n * @param type Element type, eg `circle`\n * @param id Optional id to assign to element\n * @returns Element\n */\nexport const createEl = <V extends SVGElement>(\n  type: string,\n  id?: string\n): V => {\n  const m = document.createElementNS(`http://www.w3.org/2000/svg`, type) as V;\n  if (id) {\n    //eslint-disable-next-line functional/immutable-data\n    m.id = id;\n  }\n  return m;\n};\n\n/**\n * Applies path drawing options to given element\n * Applies: markerEnd, markerStart, markerMid\n * @param elem Element (presumed path)\n * @param opts Options\n */\nexport const applyPathOpts = (elem: SVGElement, opts: PathDrawingOpts) => {\n  if (opts.markerEnd) {\n    elem.setAttribute(\n      `marker-end`,\n      markerPrebuilt(elem, opts.markerEnd, opts as DrawingOpts)\n    );\n  }\n  if (opts.markerStart) {\n    elem.setAttribute(\n      `marker-start`,\n      markerPrebuilt(elem, opts.markerStart, opts as DrawingOpts)\n    );\n  }\n  if (opts.markerMid) {\n    elem.setAttribute(\n      `marker-mid`,\n      markerPrebuilt(elem, opts.markerMid, opts as DrawingOpts)\n    );\n  }\n};\n\n/**\n * Applies drawing options to given SVG element.\n * Applies: fillStyle\n * @param elem Element\n * @param opts Drawing options\n */\nexport const applyOpts = (elem: SVGElement, opts: DrawingOpts) => {\n  if (opts.fillStyle) elem.setAttributeNS(null, `fill`, opts.fillStyle);\n  if (opts.opacity) {\n    elem.setAttributeNS(null, `opacity`, opts.opacity.toString());\n  }\n};\n\n/**\n * Applies drawing options to given SVG element.\n * Applies: strokeStyle, strokeWidth, strokeDash, strokeLineCap\n * @param elem Element\n * @param opts\n */\nexport const applyStrokeOpts = (elem: SVGElement, opts: StrokeOpts) => {\n  if (opts.strokeStyle) elem.setAttributeNS(null, `stroke`, opts.strokeStyle);\n  if (opts.strokeWidth) {\n    elem.setAttributeNS(null, `stroke-width`, opts.strokeWidth.toString());\n  }\n  if (opts.strokeDash) elem.setAttribute(`stroke-dasharray`, opts.strokeDash);\n  if (opts.strokeLineCap) {\n    elem.setAttribute(`stroke-linecap`, opts.strokeLineCap);\n  }\n};\n\n/**\n * Helper to make SVG elements with a common parent.\n *\n * Create with {@link makeHelper}.\n */\nexport type SvgHelper = {\n  remove(queryOrExisting: string | SVGElement): void;\n  /**\n   * Creates a text element\n   * @param text Text\n   * @param pos Position\n   * @param opts Drawing options\n   * @param queryOrExisting DOM query to look up existing element, or the element instance\n   */\n  text(\n    text: string,\n    pos: Points.Point,\n    opts?: TextDrawingOpts,\n    queryOrExisting?: string | SVGTextElement\n  ): SVGTextElement;\n  /**\n   * Creates text on a path\n   * @param pathRef Reference to path element\n   * @param text Text\n   * @param opts Drawing options\n   * @param queryOrExisting DOM query to look up existing element, or the element instance\n   */\n  textPath(\n    pathRef: string,\n    text: string,\n    opts?: TextDrawingOpts,\n    queryOrExisting?: string | SVGTextPathElement\n  ): SVGTextPathElement;\n  /**\n   * Creates a line\n   * @param line Line\n   * @param opts Drawing options\n   * @param queryOrExisting DOM query to look up existing element, or the element instance\n   */\n  line(\n    line: Lines.Line,\n    opts?: LineDrawingOpts,\n    queryOrExisting?: string | SVGLineElement\n  ): SVGLineElement;\n  /**\n   * Creates a circle\n   * @param circle Circle\n   * @param opts Drawing options\n   * @param queryOrExisting DOM query to look up existing element, or the element instance\n   */\n  circle(\n    circle: CirclePositioned,\n    opts?: CircleDrawingOpts,\n    queryOrExisting?: string | SVGCircleElement\n  ): SVGCircleElement;\n  /**\n   * Creates a path\n   * @param svgStr Path description, or empty string\n   * @param opts Drawing options\n   * @param queryOrExisting DOM query to look up existing element, or the element instance\n   */\n  path(\n    svgStr: string | readonly string[],\n    opts?: PathDrawingOpts,\n    queryOrExisting?: string | SVGPathElement\n  ): SVGPathElement;\n  /**\n   * Creates a grid of horizontal and vertical lines inside of a group\n   * @param center Grid origin\n   * @param spacing Cell size\n   * @param width Width of grid\n   * @param height Height of grid\n   * @param opts Drawing options\n   */\n  grid(\n    center: Points.Point,\n    spacing: number,\n    width: number,\n    height: number,\n    opts?: LineDrawingOpts\n  ): SVGGElement;\n  /**\n   * Returns an element if it exists in parent\n   * @param selectors Eg `#path`\n   */\n  query<V extends SVGElement>(selectors: string): V | null;\n  /**\n   * Gets/sets the width of the parent\n   */\n  get width(): number;\n  set width(width: number);\n  /**\n   * Gets the parent\n   */\n  get parent(): SVGElement;\n  /**\n   * Gets/sets the height of the parent\n   */\n  get height(): number;\n  set height(height: number);\n  /**\n   * Deletes all child elements\n   */\n  clear(): void;\n};\n\n/**\n * Get the bounds of an SVG element (determined by its width/height attribs)\n * @param svg\n * @returns\n */\nexport const getBounds = (svg: SVGElement): Rects.Rect => {\n  const w = svg.getAttributeNS(null, `width`);\n  const width = w === null ? 0 : parseFloat(w);\n  const h = svg.getAttributeNS(null, `height`);\n  const height = h === null ? 0 : parseFloat(h);\n  return { width, height };\n};\n\n/**\n * Set the bounds of an element, using its width/height attribs.\n * @param svg\n * @param bounds\n */\nexport const setBounds = (svg: SVGElement, bounds: Rects.Rect): void => {\n  svg.setAttributeNS(null, `width`, bounds.width.toString());\n  svg.setAttributeNS(null, `height`, bounds.height.toString());\n};\n\n/**\n * Creates a {@link SvgHelper} for the creating and management of SVG elements.\n * @param parent\n * @param parentOpts\n * @returns\n */\nexport const makeHelper = (\n  parent: SVGElement,\n  parentOpts?: DrawingOpts & StrokeOpts\n): SvgHelper => {\n  if (parentOpts) {\n    applyOpts(parent, parentOpts);\n    applyStrokeOpts(parent, parentOpts);\n  }\n\n  const o: SvgHelper = {\n    remove: (queryOrExisting: string | SVGElement) =>\n      remove(parent, queryOrExisting),\n    text: (\n      text: string,\n      pos: Points.Point,\n      opts?: TextDrawingOpts,\n      queryOrExisting?: string | SVGTextElement\n    ) => Elements.text(text, parent, pos, opts, queryOrExisting),\n    textPath: (\n      pathRef: string,\n      text: string,\n      opts?: TextDrawingOpts,\n      queryOrExisting?: string | SVGTextPathElement\n    ) => Elements.textPath(pathRef, text, parent, opts, queryOrExisting),\n    line: (\n      line: Lines.Line,\n      opts?: LineDrawingOpts,\n      queryOrExisting?: string | SVGLineElement\n    ) => Elements.line(line, parent, opts, queryOrExisting),\n    circle: (\n      circle: CirclePositioned,\n      opts?: CircleDrawingOpts,\n      queryOrExisting?: string | SVGCircleElement\n    ) => Elements.circle(circle, parent, opts, queryOrExisting),\n    path: (\n      svgStr: string | readonly string[],\n      opts?: PathDrawingOpts,\n      queryOrExisting?: string | SVGPathElement\n    ) => Elements.path(svgStr, parent, opts, queryOrExisting),\n    grid: (\n      center: Points.Point,\n      spacing: number,\n      width: number,\n      height: number,\n      opts?: LineDrawingOpts\n    ) => Elements.grid(parent, center, spacing, width, height, opts),\n    query: <V extends SVGElement>(selectors: string): V | null =>\n      parent.querySelector(selectors),\n    get width(): number {\n      const w = parent.getAttributeNS(null, `width`);\n      if (w === null) return 0;\n      return parseFloat(w);\n    },\n    set width(width: number) {\n      parent.setAttributeNS(null, `width`, width.toString());\n    },\n    get parent(): SVGElement {\n      return parent;\n    },\n    get height(): number {\n      const w = parent.getAttributeNS(null, `height`);\n      if (w === null) return 0;\n      return parseFloat(w);\n    },\n    set height(height: number) {\n      parent.setAttributeNS(null, `height`, height.toString());\n    },\n    clear: () => {\n      while (parent.firstChild) {\n        parent.removeChild(parent.lastChild as HTMLElement);\n      }\n    },\n  };\n  return o;\n};\n","import {\n  createOrResolve,\n  type MarkerOpts,\n  createEl,\n  type DrawingOpts,\n  applyOpts,\n} from './Svg.js';\n\nexport const createMarker = (\n  id: string,\n  opts: MarkerOpts,\n  childCreator?: () => SVGElement\n): SVGMarkerElement => {\n  const m = createEl<SVGMarkerElement>(`marker`, id);\n\n  if (opts.markerWidth) {\n    m.setAttribute(`markerWidth`, opts.markerWidth?.toString());\n  }\n  if (opts.markerHeight) {\n    m.setAttribute(`markerHeight`, opts.markerHeight?.toString());\n  }\n  if (opts.orient) m.setAttribute(`orient`, opts.orient.toString());\n  else m.setAttribute(`orient`, `auto-start-reverse`);\n\n  if (opts.viewBox) m.setAttribute(`viewBox`, opts.viewBox.toString());\n  if (opts.refX) m.setAttribute(`refX`, opts.refX.toString());\n  if (opts.refY) m.setAttribute(`refY`, opts.refY.toString());\n\n  if (childCreator) {\n    const c = childCreator();\n    m.appendChild(c);\n  }\n  return m;\n};\n\nexport const markerPrebuilt = (\n  elem: SVGElement | null,\n  opts: MarkerOpts,\n  _context: DrawingOpts\n): string => {\n  if (elem === null) return `(elem null)`;\n\n  const parent = elem.ownerSVGElement;\n  if (parent === null) throw new Error(`parent for elem is null`);\n  const defsEl = createOrResolve<SVGDefsElement>(parent, `defs`, `defs`);\n\n  //eslint-disable-next-line functional/no-let\n  let defEl = defsEl.querySelector(`#${opts.id}`) as SVGElement | null;\n\n  if (defEl !== null) {\n    return `url(#${opts.id})`;\n  }\n\n  if (opts.id === `triangle`) {\n    opts = { ...opts, strokeStyle: `transparent` };\n    if (!opts.markerHeight) opts = { ...opts, markerHeight: 6 };\n    if (!opts.markerWidth) opts = { ...opts, markerWidth: 6 };\n    if (!opts.refX) opts = { ...opts, refX: opts.markerWidth };\n    if (!opts.refY) opts = { ...opts, refY: opts.markerHeight };\n    if (!opts.fillStyle || opts.fillStyle === `none`) {\n      opts = { ...opts, fillStyle: `black` };\n    }\n    if (!opts.viewBox) opts = { ...opts, viewBox: `0 0 10 10` };\n\n    defEl = createMarker(opts.id, opts, () => {\n      const tri = createEl<SVGPathElement>(`path`);\n      tri.setAttribute(`d`, `M 0 0 L 10 5 L 0 10 z`);\n      if (opts) applyOpts(tri, opts);\n      return tri;\n    });\n  } else throw new Error(`Do not know how to make ${opts.id}`);\n\n  //eslint-disable-next-line functional/immutable-data\n  defEl.id = opts.id;\n  defsEl.appendChild(defEl);\n\n  return `url(#${opts.id})`;\n};\n","import { type CirclePositioned } from '../geometry/Circle.js';\nimport * as Lines from '../geometry/Line.js';\nimport * as Points from '../geometry/Point.js';\nimport * as Svg from './Svg.js';\nimport { getCssVariable } from './Colour.js';\n//import {Palette} from \".\";\n\nconst numOrPercentage = (v: number): string => {\n  if (v >= 0 && v <= 1) return v * 100 + `%`;\n  return v.toString();\n};\n\n/**\n * Creates and adds an SVG path element\n * @example\n * ```js\n * const paths = [\n *  `M300,200`,\n *  `a25,25 -30 0,1 50, -25 l 50,-25`\n * ]\n * const pathEl = path(paths, parentEl);\n * ```\n * @param svgOrArray Path syntax, or array of paths. Can be empty if path data will be added later\n * @param parent SVG parent element\n * @param opts Options Drawing options\n * @returns\n */\nexport const path = (\n  svgOrArray: string | readonly string[],\n  parent: SVGElement,\n  opts?: Svg.PathDrawingOpts,\n  queryOrExisting?: string | SVGPathElement\n): SVGPathElement => {\n  const elem = Svg.createOrResolve<SVGPathElement>(\n    parent,\n    `path`,\n    queryOrExisting\n  );\n  const svg =\n    typeof svgOrArray === `string` ? svgOrArray : svgOrArray.join(`\\n`);\n\n  elem.setAttributeNS(null, `d`, svg);\n  parent.appendChild(elem);\n  return pathUpdate(elem, opts);\n};\n\nexport const pathUpdate = (\n  elem: SVGPathElement,\n  opts?: Svg.PathDrawingOpts\n) => {\n  if (opts) Svg.applyOpts(elem, opts);\n  if (opts) Svg.applyStrokeOpts(elem, opts);\n  return elem;\n};\n\n/**\n * Updates an existing `SVGCircleElement` with potentially updated circle data and drawing options\n * @param elem Element\n * @param circle Circle\n * @param opts Drawing options\n * @returns SVGCircleElement\n */\nexport const circleUpdate = (\n  elem: SVGCircleElement,\n  circle: CirclePositioned,\n  opts?: Svg.CircleDrawingOpts\n) => {\n  elem.setAttributeNS(null, `cx`, circle.x.toString());\n  elem.setAttributeNS(null, `cy`, circle.y.toString());\n  elem.setAttributeNS(null, `r`, circle.radius.toString());\n  if (opts) Svg.applyOpts(elem, opts);\n  if (opts) Svg.applyStrokeOpts(elem, opts);\n\n  return elem;\n};\n\n/**\n * Creates or reuses a `SVGCircleElement`.\n *\n * To update an existing element, use `circleUpdate`\n * @param circle\n * @param parent\n * @param opts\n * @param queryOrExisting\n * @returns\n */\nexport const circle = (\n  circle: CirclePositioned,\n  parent: SVGElement,\n  opts?: Svg.CircleDrawingOpts,\n  queryOrExisting?: string | SVGCircleElement\n): SVGCircleElement => {\n  const p = Svg.createOrResolve<SVGCircleElement>(\n    parent,\n    `circle`,\n    queryOrExisting\n  );\n  return circleUpdate(p, circle, opts);\n};\n\n/**\n * Creates or resuses a `SVGGElement` (group)\n *\n * To update an existing elemnet, use `groupUpdate`\n * @param children\n * @param parent\n * @param queryOrExisting\n * @returns\n */\nexport const group = (\n  children: readonly SVGElement[],\n  parent: SVGElement,\n  queryOrExisting?: string | SVGGElement\n): SVGGElement => {\n  const p = Svg.createOrResolve<SVGGElement>(parent, `g`, queryOrExisting);\n  return groupUpdate(p, children);\n};\n\nexport const groupUpdate = (\n  elem: SVGGElement,\n  children: readonly SVGElement[]\n) => {\n  for (const c of children) {\n    if (c.parentNode !== elem) {\n      elem.appendChild(c);\n    }\n  }\n\n  return elem;\n};\n\n/**\n * Creates or reuses a SVGLineElement.\n *\n * @param line\n * @param parent\n * @param opts\n * @param queryOrExisting\n * @returns\n */\nexport const line = (\n  line: Lines.Line,\n  parent: SVGElement,\n  opts?: Svg.LineDrawingOpts,\n  queryOrExisting?: string | SVGLineElement\n): SVGLineElement => {\n  const lineEl = Svg.createOrResolve<SVGLineElement>(\n    parent,\n    `line`,\n    queryOrExisting\n  );\n  return lineUpdate(lineEl, line, opts);\n};\n\n/**\n * Updates a SVGLineElement instance with potentially changed line and drawing data\n * @param lineEl\n * @param line\n * @param opts\n * @returns\n */\nexport const lineUpdate = (\n  lineEl: SVGLineElement,\n  line: Lines.Line,\n  opts?: Svg.LineDrawingOpts\n) => {\n  lineEl.setAttributeNS(null, `x1`, line.a.x.toString());\n  lineEl.setAttributeNS(null, `y1`, line.a.y.toString());\n  lineEl.setAttributeNS(null, `x2`, line.b.x.toString());\n  lineEl.setAttributeNS(null, `y2`, line.b.y.toString());\n  if (opts) Svg.applyOpts(lineEl, opts);\n  if (opts) Svg.applyPathOpts(lineEl, opts);\n  if (opts) Svg.applyStrokeOpts(lineEl, opts);\n  return lineEl;\n};\n\n/**\n * Updates an existing SVGTextPathElement instance with text and drawing options\n * @param el\n * @param text\n * @param opts\n * @returns\n */\nexport const textPathUpdate = (\n  el: SVGTextPathElement,\n  text?: string,\n  opts?: Svg.TextPathDrawingOpts\n) => {\n  if (opts?.method) el.setAttributeNS(null, `method`, opts.method);\n  if (opts?.side) el.setAttributeNS(null, `side`, opts.side);\n  if (opts?.spacing) el.setAttributeNS(null, `spacing`, opts.spacing);\n  if (opts?.startOffset) {\n    el.setAttributeNS(null, `startOffset`, numOrPercentage(opts.startOffset));\n  }\n  if (opts?.textLength) {\n    el.setAttributeNS(null, `textLength`, numOrPercentage(opts.textLength));\n  }\n\n  if (text) {\n    //eslint-disable-next-line functional/immutable-data\n    el.textContent = text;\n  }\n  if (opts) Svg.applyOpts(el, opts);\n  if (opts) Svg.applyStrokeOpts(el, opts);\n  return el;\n};\n\n/**\n * Creates or reuses a SVGTextPathElement.\n * @param pathRef\n * @param text\n * @param parent\n * @param opts\n * @param queryOrExisting\n * @returns\n */\nexport const textPath = (\n  pathRef: string,\n  text: string,\n  parent: SVGElement,\n  opts?: Svg.TextPathDrawingOpts,\n  queryOrExisting?: string | SVGTextPathElement\n): SVGTextPathElement => {\n  const textEl = Svg.createOrResolve<SVGTextElement>(\n    parent,\n    `text`,\n    queryOrExisting + `-text`\n  );\n  // Update text properties, but don't pass in position or text\n  textUpdate(textEl, undefined, undefined, opts);\n\n  const p = Svg.createOrResolve<SVGTextPathElement>(\n    textEl,\n    `textPath`,\n    queryOrExisting\n  );\n  p.setAttributeNS(null, `href`, pathRef);\n  return textPathUpdate(p, text, opts);\n};\n\n/**\n * Updates an existing SVGTextElement instance with position, text and drawing options\n * @param el\n * @param pos\n * @param text\n * @param opts\n * @returns\n */\nexport const textUpdate = (\n  el: SVGTextElement,\n  pos?: Points.Point,\n  text?: string,\n  opts?: Svg.TextDrawingOpts\n) => {\n  if (pos) {\n    el.setAttributeNS(null, `x`, pos.x.toString());\n    el.setAttributeNS(null, `y`, pos.y.toString());\n  }\n  if (text) {\n    //eslint-disable-next-line functional/immutable-data\n    el.textContent = text;\n  }\n\n  if (opts) {\n    Svg.applyOpts(el, opts);\n    if (opts) Svg.applyStrokeOpts(el, opts);\n\n    if (opts.anchor) el.setAttributeNS(null, `text-anchor`, opts.anchor);\n    if (opts.align) el.setAttributeNS(null, `alignment-baseline`, opts.align);\n\n    const userSelect = opts.userSelect ?? true;\n\n    if (!userSelect) {\n      //eslint-disable-next-line functional/immutable-data\n      el.style.userSelect = `none`;\n      //eslint-disable-next-line functional/immutable-data\n      el.style.webkitUserSelect = `none`;\n    }\n  }\n  return el;\n};\n\n/**\n * Creates or reuses a SVGTextElement\n * @param pos Position of text\n * @param text Text\n * @param parent\n * @param opts\n * @param queryOrExisting\n * @returns\n */\nexport const text = (\n  text: string,\n  parent: SVGElement,\n  pos?: Points.Point,\n  opts?: Svg.TextDrawingOpts,\n  queryOrExisting?: string | SVGTextElement\n): SVGTextElement => {\n  const p = Svg.createOrResolve<SVGTextElement>(\n    parent,\n    `text`,\n    queryOrExisting\n  );\n  return textUpdate(p, pos, text, opts);\n};\n\n/**\n * Creates a square grid based at a center point, with cells having `spacing` height and width.\n *\n * It fits in as many cells as it can within `width` and `height`.\n *\n * Returns a SVG group, consisting of horizontal and vertical lines\n * @param parent Parent element\n * @param center Center point of grid\n * @param spacing Width/height of cells\n * @param width How wide grid should be\n * @param height How high grid should be\n * @param opts\n */\nexport const grid = (\n  parent: SVGElement,\n  center: Points.Point,\n  spacing: number,\n  width: number,\n  height: number,\n  opts: Svg.LineDrawingOpts = {}\n) => {\n  if (!opts.strokeStyle) {\n    opts = { ...opts, strokeStyle: getCssVariable(`bg-dim`, `silver`) };\n  }\n  if (!opts.strokeWidth) opts = { ...opts, strokeWidth: 1 };\n\n  const g = Svg.createEl<SVGGElement>(`g`);\n  Svg.applyOpts(g, opts);\n  Svg.applyPathOpts(g, opts);\n  Svg.applyStrokeOpts(g, opts);\n\n  // Horizontals\n  //eslint-disable-next-line functional/no-let\n  let y = 0;\n  while (y < height) {\n    const horiz = Lines.fromNumbers(0, y, width, y);\n    line(horiz, g);\n    y += spacing;\n  }\n\n  // Verticals\n  //eslint-disable-next-line functional/no-let\n  let x = 0;\n  while (x < width) {\n    const vert = Lines.fromNumbers(x, 0, x, height);\n    line(vert, g);\n    x += spacing;\n  }\n  parent.appendChild(g);\n  return g;\n};\n","/* eslint-disable */\nimport { minMaxAvg } from '../collections/NumericArrays.js';\nimport { type ICircularArray } from '../collections/CircularArray.js';\n\nimport { type Point, subtract as pointSubtract } from '../geometry/Point.js';\nimport { resolveEl, parentSizeCanvas } from '../dom/Util.js';\nimport { type Rect } from '../geometry/Rect.js';\nimport { Colour, Drawing } from './index.js';\nimport {\n  ofArrayMutable,\n  ofCircularMutable,\n  type IMapOfMutableExtended,\n} from '../collections/map/index.js';\n\nexport type Plotter = {\n  add(value: number, series?: string, skipDrawing?: boolean): void;\n  drawValue(index: number): void;\n  /**\n   * Draws current data. Useful if skipDrawing was true for earlier add() calls.\n   */\n  draw(): void;\n  clear(): void;\n  dispose(): void;\n};\n\n/**\n * Series\n */\nexport type Series = {\n  min: number;\n  max: number;\n  range: number;\n  name: string;\n  colour: string;\n  lastValue?: number;\n  hoverValue?: number;\n};\n\n/**\n * Drawing options\n */\nexport type DrawingOpts = PlotOpts & {\n  x: Axis;\n  y: Axis;\n  ctx: CanvasRenderingContext2D;\n  textHeight: number;\n  capacity: number;\n  coalesce: boolean;\n  margin: number;\n  canvasSize: Rect;\n  clearCanvas: boolean;\n  translucentPlot?: boolean;\n  highlightIndex?: number;\n  leadingEdgeDot: boolean;\n  debug: boolean;\n  digitsPrecision: number;\n  lineWidth: number;\n  defaultSeriesColour: string;\n  defaultSeriesVariable?: string;\n  showLegend: boolean;\n  pointer: { x: number; y: number };\n};\n\n/**\n * Properties for an axis\n */\nexport type Axis = {\n  allowedSeries?: string[];\n  /**\n   * Name of axis, eg `x`\n   */\n  name: string;\n  /**\n   * Colour to use for axis labels\n   */\n  colour?: string;\n  /**\n   * Forced scale for values\n   */\n  scaleRange?: [number, number];\n  /**\n   * Forced range for labelling, by default\n   * uses scaleRange\n   */\n  labelRange?: [number, number];\n  /**\n   * Width of axis line\n   */\n  lineWidth: number;\n  /**\n   * How line ends\n   */\n  endWith: `none` | `arrow`;\n  /**\n   * Where to place the name of the axis\n   */\n  namePosition: `none` | `end` | `side`;\n  /**\n   * Width for y axis, height for x axis\n   */\n  textSize: number;\n  /**\n   * If true, axis labels (ie numeric scale) are shown. Default: true\n   */\n  showLabels: boolean;\n  /**\n   * If true, a line is drawn to represent axis. Default: true\n   */\n  showLine: boolean;\n};\n\nexport type SeriesColours = {\n  [id: string]: string | undefined;\n};\n\n/**\n * Plotter options\n */\nexport type PlotOpts = {\n  debug?: boolean;\n  seriesColours?: SeriesColours;\n  /**\n   * Default: 2\n   */\n  digitsPrecision?: number;\n  x?: Axis;\n  y?: Axis;\n  plotSize?: Rect;\n  autoSizeCanvas?: boolean;\n  style?: `connected` | `dots` | `none`;\n  //palette?: Palette.Palette\n  /**\n   * Number of items to keep in the circular array\n   * Default: 10\n   */\n  capacity?: number;\n  //showYAxis?:boolean\n  //showXAxis?:boolean\n  //yAxes?: string[]|string\n  textHeight?: number;\n  /**\n   * Width of plotted line\n   */\n  lineWidth?: number;\n  /**\n   * If true, sub-pixel data points are ignored\n   */\n  coalesce?: boolean;\n  /**\n   * Fixed range to scale Y values. By default normalises values\n   * as they come in. This will also determine the y-axis labels and drawing\n   */\n  //fixedRange?:[number,number]\n  /**\n   * How many horizontal pixels per data point. If unspecified,\n   * it will scale based on width of canvas and capacity.\n   */\n  //dataXScale?:number\n  defaultSeriesColour?: string;\n  defaultSeriesVariable?: string;\n  showLegend?: boolean;\n};\n\nconst piPi = Math.PI * 2;\n\nexport const defaultAxis = (name: string): Axis => ({\n  endWith: `none`,\n  lineWidth: 1,\n  namePosition: 'none',\n  name: name,\n  showLabels: name === `y`,\n  showLine: true,\n  // For y axis, it's the width, for x axis it's the text height\n  textSize: name === `y` ? 20 : 10,\n});\n\nexport const calcScale = (\n  buffer: BufferType,\n  drawingOpts: DrawingOpts,\n  seriesColours?: SeriesColours\n) => {\n  //const seriesNames = buffer.keys();\n  const scales: Series[] = [];\n\n  for (const s of buffer.keys()) {\n    //seriesNames.forEach(s => {\n\n    const series = [...buffer.get(s)];\n    if (series.length === 0) break;\n\n    let { min, max } = minMaxAvg(series);\n    let range = max - min;\n\n    let colour;\n    if (seriesColours !== undefined) {\n      colour = seriesColours[s];\n    }\n    if (colour == undefined) {\n      if (drawingOpts.defaultSeriesVariable)\n        colour = Colour.getCssVariable(\n          `accent`,\n          drawingOpts.defaultSeriesColour\n        );\n      else colour = drawingOpts.defaultSeriesColour;\n    }\n\n    if (range === 0) {\n      range = min;\n      min = min - range / 2;\n      max = max + range / 2;\n    }\n    scales.push({\n      min,\n      max,\n      range,\n      name: s,\n      colour: colour,\n    });\n  }\n  return scales;\n};\n\nexport const add = (buffer: BufferType, value: number, series: string = '') => {\n  buffer.addKeyedValues(series, value);\n};\n\nexport type BufferType =\n  | IMapOfMutableExtended<number, ICircularArray<number>>\n  | IMapOfMutableExtended<number, ReadonlyArray<number>>;\n\nexport const drawValue = (\n  index: number,\n  buffer: BufferType,\n  drawing: DrawingOpts\n) => {\n  const c = {\n    ...drawing,\n    translucentPlot: true,\n    leadingEdgeDot: false,\n  };\n  draw(buffer, c);\n\n  drawing = {\n    ...drawing,\n    highlightIndex: index,\n    leadingEdgeDot: true,\n    translucentPlot: false,\n    style: `none`,\n    clearCanvas: false,\n  };\n  draw(buffer, drawing);\n};\n\nconst scaleWithFixedRange = (\n  buffer: BufferType,\n  range: [number, number],\n  drawing: DrawingOpts\n) =>\n  calcScale(buffer, drawing, drawing.seriesColours).map((s) => ({\n    ...s,\n    range: range[1] - range[0],\n    min: range[0],\n    max: range[1],\n  }));\n\n/**\n * Draws a `buffer` of data with `drawing` options.\n *\n * @param buffer\n * @param drawing\n */\nexport const draw = (buffer: BufferType, drawing: DrawingOpts) => {\n  const { x: xAxis, y: yAxis, ctx, canvasSize } = drawing;\n  const margin = drawing.margin;\n  // const cap = drawing.capacity === 0 ? buffer.lengthMax : drawing.capacity;\n  const series = drawing.y.scaleRange\n    ? scaleWithFixedRange(buffer, drawing.y.scaleRange, drawing)\n    : calcScale(buffer, drawing, drawing.seriesColours);\n\n  if (drawing.clearCanvas)\n    ctx.clearRect(0, 0, canvasSize.width, canvasSize.height);\n\n  if (drawing.debug) {\n    ctx.strokeStyle = `orange`;\n    ctx.strokeRect(0, 0, canvasSize.width, canvasSize.height);\n  }\n\n  // Move in for margin\n  ctx.translate(margin, margin);\n\n  // Calculate/use plot area\n  const plotSize = drawing.plotSize ?? plotSizeFromBounds(canvasSize, drawing);\n\n  // Draw vertical axes\n  const axisSize = {\n    height: plotSize.height + margin + margin,\n    width: plotSize.width,\n  };\n\n  if (yAxis.showLabels || yAxis.showLine) {\n    // Draw the labels for each series\n    series.forEach((s) => {\n      if (yAxis.allowedSeries !== undefined) {\n        if (!yAxis.allowedSeries.includes(s.name)) return;\n      }\n      drawYSeriesScale(s, axisSize, drawing);\n    });\n\n    // Draw vertical line\n    if (series.length > 0 && yAxis.showLine)\n      drawYLine(axisSize, series[0], drawing);\n  }\n\n  // Draw x/horizontal axis if needed\n  if ((xAxis.showLabels || xAxis.showLine) && series.length > 0) {\n    const yPos = yAxis.labelRange ? yAxis.labelRange[0] : series[0].min;\n    drawXAxis(\n      plotSize.width,\n      calcYForValue(yPos, series[0], plotSize.height) +\n        margin +\n        xAxis.lineWidth,\n      drawing\n    );\n  }\n\n  const plotDrawing = {\n    ...drawing,\n    plotSize,\n  };\n\n  const ptr = Drawing.translatePoint(ctx, drawing.pointer);\n  // Draw data for each series\n  series.forEach((s) => {\n    const data = buffer.getSource(s.name);\n    if (data === undefined) return;\n\n    let leadingEdgeIndex =\n      buffer.typeName === `circular`\n        ? (data as ICircularArray<number>).pointer - 1\n        : data.length - 1;\n    if (drawing.highlightIndex !== undefined)\n      leadingEdgeIndex = drawing.highlightIndex;\n    ctx.save();\n    ctx.translate(0, margin + margin);\n\n    drawSeriesData(s, data, plotSize, plotDrawing, leadingEdgeIndex);\n    ctx.restore();\n  });\n\n  if (drawing.showLegend) {\n    ctx.save();\n    ctx.translate(0, plotSize.height + margin + margin + margin);\n    const legendSize = {\n      width: plotSize.width,\n      height: drawing.x.textSize + margin + margin,\n    };\n    drawLegend(series, drawing, legendSize);\n    ctx.restore();\n  }\n  ctx.resetTransform();\n};\n\n/**\n * Draw vertical axis\n * @param series\n * @param height\n * @param drawing\n */\nconst drawYSeriesScale = (\n  series: Series,\n  plotSize: Rect,\n  drawing: DrawingOpts\n) => {\n  const { ctx, y, digitsPrecision, margin } = drawing;\n  const { height } = plotSize;\n\n  if (drawing.debug) {\n    ctx.strokeStyle = `purple`;\n    ctx.strokeRect(0, 0, y.textSize, height + margin);\n  }\n\n  ctx.fillStyle = series.colour.length > 0 ? series.colour : `white`;\n\n  // Override colour with axis-defined colour\n  if (y.colour) ctx.fillStyle = y.colour;\n\n  // Draw labels\n  const min = y.labelRange ? y.labelRange[0] : series.min;\n  const max = y.labelRange ? y.labelRange[1] : series.max;\n  const range = y.labelRange ? max - min : series.range;\n  const mid = min + range / 2;\n  const halfHeight = drawing.textHeight / 2;\n\n  ctx.textBaseline = `top`;\n  ctx.fillText(\n    min.toFixed(digitsPrecision),\n    0,\n    calcYForValue(min, series, height) - halfHeight\n  );\n  ctx.fillText(\n    mid.toFixed(digitsPrecision),\n    0,\n    calcYForValue(mid, series, height) - halfHeight\n  );\n  ctx.fillText(\n    max.toFixed(digitsPrecision),\n    0,\n    calcYForValue(max, series, height) - margin\n  );\n\n  ctx.translate(y.textSize + margin, 0);\n};\n\nconst drawYLine = (plotSize: Rect, series: Series, drawing: DrawingOpts) => {\n  if (series === undefined) throw new Error(`series undefined`);\n  const { ctx, y } = drawing;\n  const { height } = plotSize;\n\n  const min = y.labelRange ? y.labelRange[0] : series.min;\n  const max = y.labelRange ? y.labelRange[1] : series.max;\n\n  const minPos = calcYForValue(min, series, height);\n  const maxPos = calcYForValue(max, series, height);\n\n  // Draw line\n  ctx.translate(y.lineWidth, 0);\n  ctx.lineWidth = y.lineWidth;\n  ctx.beginPath();\n  ctx.moveTo(0, minPos);\n  ctx.lineTo(0, maxPos);\n  ctx.strokeStyle = series.colour;\n  if (y.colour) ctx.strokeStyle = y.colour;\n  ctx.stroke();\n  ctx.translate(y.lineWidth, 0);\n};\n\nconst drawLegend = (\n  series: Series[],\n  drawing: DrawingOpts,\n  size: { width: number; height: number }\n) => {\n  const { ctx } = drawing;\n  const lineSampleWidth = 10;\n\n  let x = 0;\n  const lineY = drawing.margin * 3;\n  const textY = drawing.margin;\n\n  ctx.lineWidth = drawing.lineWidth;\n\n  series.forEach((s) => {\n    ctx.moveTo(x, lineY);\n    ctx.strokeStyle = s.colour;\n    ctx.lineTo(x + lineSampleWidth, lineY);\n    ctx.stroke();\n    x += lineSampleWidth + drawing.margin;\n\n    let label = s.name;\n    if (s.lastValue)\n      label += ' ' + s.lastValue.toFixed(drawing.digitsPrecision);\n    const labelSize = ctx.measureText(label);\n\n    ctx.fillStyle = s.colour;\n    ctx.fillText(label, x, textY);\n    x += labelSize.width;\n  });\n};\n\nconst drawXAxis = (width: number, yPos: number, drawing: DrawingOpts) => {\n  const { ctx, x, y } = drawing;\n\n  if (!x.showLine) return;\n\n  if (x.colour) ctx.strokeStyle = x.colour;\n  ctx.lineWidth = x.lineWidth;\n  ctx.beginPath();\n\n  // Assumes ctx is translated after drawing Y axis\n  ctx.moveTo(0, yPos);\n  ctx.lineTo(width, yPos);\n  ctx.stroke();\n};\n\n/**\n * Draw series data\n * @param series\n * @param values\n * @param plotSize\n * @param drawing\n */\nconst drawSeriesData = (\n  series: Series,\n  values: ArrayLike<number>,\n  plotSize: Rect,\n  drawing: DrawingOpts,\n  leadingEdgeIndex: number\n) => {\n  const { ctx, lineWidth, translucentPlot = false, margin, x: xAxis } = drawing;\n  const style = drawing.style ?? `connected`;\n  const height = plotSize.height - margin;\n\n  let dataXScale = 1;\n  if (xAxis.scaleRange) {\n    const xAxisRange = xAxis.scaleRange[1] - xAxis.scaleRange[0];\n    dataXScale = plotSize.width / xAxisRange;\n  } else {\n    if (drawing.capacity === 0) dataXScale = plotSize.width / values.length;\n    else dataXScale = plotSize.width / drawing.capacity;\n  }\n\n  // Step through data faster if per-pixel density is above one\n  const incrementBy = drawing.coalesce\n    ? dataXScale! < 0\n      ? Math.floor(1 / dataXScale!)\n      : 1\n    : 1;\n\n  let x = 0;\n  let leadingEdge: Point | undefined;\n\n  if (drawing.debug) {\n    ctx.strokeStyle = `green`;\n    ctx.strokeRect(0, 0, plotSize.width, plotSize.height);\n  }\n\n  const colourTransform = (c: string) => {\n    if (translucentPlot) return Colour.opacity(c, 0.2);\n    return c;\n  };\n\n  if (style === `dots`) {\n    ctx.fillStyle = colourTransform(series.colour);\n  } else if (style === `none`) {\n  } else {\n    ctx.beginPath();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = colourTransform(series.colour);\n  }\n\n  for (let i = 0; i < values.length; i += incrementBy) {\n    let y = calcYForValue(values[i], series, height) - 1;\n\n    if (style === `dots`) {\n      ctx.beginPath();\n      ctx.arc(x, y, lineWidth, 0, piPi);\n      ctx.fill();\n    } else if (style === `none`) {\n    } else {\n      if (i == 0) ctx.moveTo(x, y);\n      ctx.lineTo(x, y);\n    }\n\n    if (i === leadingEdgeIndex) {\n      leadingEdge = { x, y };\n      series.lastValue = values[i];\n    }\n    x += dataXScale;\n  }\n\n  if (style === `connected`) {\n    ctx.stroke();\n  }\n\n  // Draw a circle at latest data point\n  if (leadingEdge !== undefined && drawing.leadingEdgeDot) {\n    ctx.beginPath();\n    ctx.fillStyle = colourTransform(series.colour); // drawing.palette.getOrAdd(`series${series.name}`));\n    ctx.arc(leadingEdge.x, leadingEdge.y, 3, 0, 2 * Math.PI);\n    ctx.fill();\n  }\n};\n\nconst calcYForValue = (v: number, series: Series, height: number) =>\n  (1 - (v - series.min) / series.range) * height;\n\n/**\n * Calculates lost area, given a margin value, axis settings.\n * @param margin\n * @param x\n * @param y\n * @param showLegend\n * @returns\n */\nconst calcSizing = (margin: number, x: Axis, y: Axis, showLegend: boolean) => {\n  let fromLeft = margin;\n  if (y.showLabels) fromLeft += y.textSize;\n  if (y.showLine) fromLeft += y.lineWidth;\n  if (y.showLabels || y.showLine) fromLeft += margin + margin;\n  let fromRight = margin;\n\n  let fromTop = margin + margin;\n  let fromBottom = margin + margin;\n  if (x.showLabels) fromBottom += x.textSize;\n  else fromBottom += margin;\n  if (x.showLine) fromBottom += x.lineWidth;\n  if (x.showLabels || x.showLine) fromBottom += margin;\n\n  if (showLegend) fromBottom += x.textSize;\n\n  return {\n    left: fromLeft,\n    right: fromRight,\n    top: fromTop,\n    bottom: fromBottom,\n  };\n};\n\nconst plotSizeFromBounds = (\n  bounds: Rect,\n  opts: { margin: number; y: Axis; x: Axis; showLegend: boolean }\n): Rect => {\n  const { width, height } = bounds;\n  const sizing = calcSizing(opts.margin, opts.x, opts.y, opts.showLegend);\n  return {\n    width: width - sizing.left - sizing.right,\n    height: height - sizing.top - sizing.bottom,\n  };\n};\n\nconst canvasSizeFromPlot = (\n  plot: Rect,\n  opts: { margin: number; y: Axis; x: Axis; showLegend: boolean }\n): Rect => {\n  const { width, height } = plot;\n  const sizing = calcSizing(opts.margin, opts.x, opts.y, opts.showLegend);\n  return {\n    width: width + sizing.left + sizing.right,\n    height: height + sizing.top + sizing.bottom,\n  };\n};\n\n/**\n * Creates a simple horizontal data plot within a DIV.\n *\n * ```\n * const p = plot(`#parentDiv`);\n * p.add(10);\n * p.clear();\n *\n * // Plot data using series\n * p.add(-1, `temp`);\n * p.add(0.4, `humidty`);\n * ```\n *\n * Options can be specified to customise plot\n * ```\n * const p = plot(`#parentDiv`, {\n *  capacity: 100,     // How many data points to store (default: 10)\n *  showYAxis: false,  // Toggle whether y axis is shown (default: true)\n *  lineWidth: 2,      // Width of plot line (default: 2)\n *  yAxes:  [`temp`],  // Only show these y axes (by default all are shown)\n *  coalesce: true,    // If true, sub-pixel data points are skipped, improving performance for dense plots at the expense of plot precision\n * });\n * ```\n *\n * For all `capacity` values other than `0`, a circular array is used to track data. Otherwise an array is used that will\n * grow infinitely.\n *\n * By default, will attempt to use CSS variable `--series[seriesName]` for axis colours.\n *  `--series[name]-axis` for titles. Eg `--seriesX`. For data added without a named series,\n * it will use `--series` and `--series-axis`.\n * @param parentElOrQuery\n * @param opts\n * @return Plotter instance\n */\nexport const plot = (\n  parentElOrQuery: string | HTMLElement,\n  opts: PlotOpts\n): Plotter => {\n  if (parentElOrQuery === null)\n    throw new Error(`parentElOrQuery is null. Expected string or element`);\n\n  const parentEl = resolveEl(parentElOrQuery);\n  let canvasEl: HTMLCanvasElement;\n  let destroyCanvasEl = true;\n  let plotSize: Rect | undefined = opts.plotSize;\n  let canvasSize: Rect;\n  if (parentEl.nodeName === `CANVAS`) {\n    // Use provided canvas\n    canvasEl = parentEl as HTMLCanvasElement;\n    destroyCanvasEl = false;\n    canvasSize = { width: canvasEl.width, height: canvasEl.height };\n  } else {\n    // Create a CANVAS that fills parent\n    canvasEl = document.createElement(`CANVAS`) as HTMLCanvasElement;\n    parentEl.append(canvasEl);\n    plotSize = opts.plotSize;\n    canvasSize = { width: canvasEl.width, height: canvasEl.height };\n  }\n\n  const pointer = { x: 0, y: 0 };\n\n  const onPointerMove = (evt: PointerEvent) => {\n    pointer.x = evt.offsetX;\n    pointer.y = evt.offsetY;\n  };\n\n  canvasEl.addEventListener(`pointermove`, onPointerMove);\n\n  const ctx = canvasEl.getContext(`2d`)!;\n\n  const capacity = opts.capacity ?? 10;\n  const buffer =\n    capacity > 0\n      ? ofCircularMutable<number>({ capacity })\n      : ofArrayMutable<number>();\n  const metrics = ctx.measureText('Xy');\n  const coalesce = opts.coalesce ?? true;\n\n  // Sanity-check\n  if (ctx === null) throw new Error(`Drawing context not available`);\n\n  let xAxis = defaultAxis(`x`);\n  if (opts.x) xAxis = { ...xAxis, ...opts.x };\n  let yAxis = defaultAxis(`y`);\n  if (opts.y) yAxis = { ...yAxis, ...opts.y };\n\n  let drawingOpts: DrawingOpts = {\n    ...opts,\n    y: yAxis,\n    x: xAxis,\n    pointer: pointer,\n    capacity,\n    coalesce,\n    plotSize,\n    canvasSize,\n    ctx,\n    textHeight:\n      opts.textHeight ??\n      metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent,\n    style: opts.style ?? `connected`,\n    defaultSeriesColour: opts.defaultSeriesColour ?? `yellow`,\n    margin: 3,\n    clearCanvas: true,\n    leadingEdgeDot: true,\n    debug: opts.debug ?? false,\n    digitsPrecision: opts.digitsPrecision ?? 2,\n    lineWidth: opts.lineWidth ?? 2,\n    showLegend: opts.showLegend ?? false,\n  };\n\n  if (plotSize) {\n    // Size canvas based on given plot size\n    const canvasSize = canvasSizeFromPlot(plotSize, drawingOpts);\n    canvasEl.width = canvasSize.width;\n    canvasEl.height = canvasSize.height;\n\n    drawingOpts.canvasSize = canvasSize;\n  }\n\n  if (opts.autoSizeCanvas) {\n    parentSizeCanvas(canvasEl, (args) => {\n      const bounds = args.bounds;\n      drawingOpts = {\n        ...drawingOpts,\n        plotSize: plotSizeFromBounds(bounds, drawingOpts),\n        canvasSize: bounds,\n      };\n      draw(buffer, drawingOpts);\n    });\n  }\n\n  return {\n    drawValue: (index: number) => {\n      drawValue(index, buffer, drawingOpts);\n    },\n    dispose: () => {\n      canvasEl.removeEventListener(`pointermove`, onPointerMove);\n      if (destroyCanvasEl) canvasEl.remove();\n    },\n    add: (value: number, series = '', skipDrawing = false) => {\n      add(buffer, value, series);\n      if (skipDrawing) return;\n      draw(buffer, drawingOpts);\n    },\n    draw: () => {\n      draw(buffer, drawingOpts);\n    },\n    clear: () => {\n      buffer.clear();\n    },\n  };\n};\n","/* eslint-disable */\nimport { minIndex } from '../collections/NumericArrays.js';\nimport { type PointCalculableShape } from '../geometry/Point.js';\nimport { Arrays } from '../collections/index.js';\nimport { Points, Rects } from '../geometry/index.js';\nimport { clamp, flip, scale } from '../data/index.js';\nimport { parentSizeCanvas } from '../dom/Util.js';\nimport * as Sg from './SceneGraph.js';\n\nimport { textWidth } from './Drawing.js';\nimport { getFieldPaths, getFieldByPath, ifNaN } from '../Util.js';\nimport { number as guardNumber } from '../Guards.js';\n\n/**\n * A data source\n */\nexport interface DataSource {\n  dirty: boolean;\n  type: string;\n  get range(): DataRange;\n  add(value: number): void;\n  clear(): void;\n}\n\n/**\n * Plot options\n */\nexport type Opts = {\n  /**\n   * If true, Canvas will be resized to fit parent\n   */\n  autoSize?: boolean;\n  /**\n   * Colour for axis lines & labels\n   */\n  axisColour?: string;\n  /**\n   * Width for axis lines\n   */\n  axisWidth?: number;\n};\n\n/**\n * Series options\n */\nexport type SeriesOpts = {\n  /**\n   * Colour for series\n   */\n  colour: string;\n  /**\n   * Visual width/height (depends on drawingStyle)\n   */\n  width?: number;\n  /**\n   * How series should be rendered\n   */\n  drawingStyle?: `line` | `dotted` | `bar`;\n  /**\n   * Preferred data range\n   */\n  axisRange?: DataRange;\n  /**\n   * If true, range will stay at min/max, rather than continuously adapting\n   * to the current data range.\n   */\n  visualRangeStretch?: boolean;\n};\n\nexport type DataPoint = {\n  value: number;\n  index: number;\n  title?: string;\n};\n\nexport type DataHitPoint = (\n  pt: Points.Point\n) => [point: DataPoint | undefined, distance: number];\n\nclass ArrayDataSource implements DataSource {\n  data: number[];\n  series: Series;\n  dirty = false;\n  type = `array`;\n\n  _range: Arrays.MinMaxAvgTotal | undefined;\n\n  constructor(series: Series) {\n    this.series = series;\n    this.data = [];\n    this.dirty = true;\n  }\n\n  clear() {\n    this.set([]);\n    this._range = undefined;\n  }\n\n  set(data: number[]) {\n    this.data = data;\n    this.dirty = true;\n  }\n\n  get length(): number {\n    return this.data.length;\n  }\n\n  get range(): DataRange {\n    if (!this.dirty && this._range !== undefined) return this._range;\n    this.dirty = false;\n    this._range = Arrays.minMaxAvg(this.data);\n    return { ...this._range, changed: true };\n  }\n\n  add(value: number) {\n    this.data = [...this.data, value];\n    this.dirty = true;\n  }\n}\n\nclass StreamingDataSource extends ArrayDataSource {\n  desiredDataPointMinWidth = 5;\n\n  constructor(series: Series) {\n    super(series);\n  }\n\n  add(value: number) {\n    const lastWidth = this.series.lastPxPerPt;\n    if (lastWidth > -1 && lastWidth < this.desiredDataPointMinWidth) {\n      // Remove older data\n      const pts = Math.floor(this.desiredDataPointMinWidth / lastWidth);\n      const d = [...this.data.slice(pts), value];\n      super.set(d);\n    } else super.add(value);\n  }\n}\n\nexport type DataRange = {\n  min: number;\n  max: number;\n  changed?: boolean;\n};\n\nexport class Series {\n  name: string;\n  colour: string;\n  source: DataSource;\n  drawingStyle: `line` | `dotted` | `bar`;\n  width = 3;\n  dataHitPoint: DataHitPoint | undefined;\n  tooltip?: string;\n  precision = 2;\n\n  readonly axisRange: DataRange;\n\n  // How many pixels wide per data point on last draw\n  lastPxPerPt = -1;\n\n  protected _visualRange: DataRange;\n  protected _visualRangeStretch: boolean;\n\n  constructor(\n    name: string,\n    sourceType: `array` | `stream`,\n    private plot: Plot,\n    opts: SeriesOpts\n  ) {\n    this.name = name;\n\n    this.drawingStyle = opts.drawingStyle ?? `line`;\n    this.colour = opts.colour;\n    this.width = opts.width ?? 3;\n    this.axisRange = opts.axisRange ?? { min: Number.NaN, max: Number.NaN };\n    this._visualRange = { ...this.axisRange };\n    this._visualRangeStretch = opts.visualRangeStretch ?? true;\n\n    if (sourceType === `array`) {\n      this.source = new ArrayDataSource(this);\n    } else if (sourceType === `stream`) {\n      this.source = new StreamingDataSource(this);\n    } else throw new Error(`Unknown sourceType. Expected array|stream`);\n  }\n\n  formatValue(v: number) {\n    return v.toFixed(this.precision);\n  }\n\n  get visualRange(): DataRange {\n    let vr = this._visualRange;\n    const sourceRange = this.source.range;\n    let changed = false;\n\n    if (sourceRange.changed) {\n      if (this._visualRangeStretch) {\n        // Stretch range to lowest/highest-seen min/max\n        const rmin = Math.min(ifNaN(vr.min, sourceRange.min), sourceRange.min);\n        const rmax = Math.max(ifNaN(vr.max, sourceRange.max), sourceRange.max);\n        if (rmin !== vr.min || rmax !== vr.max) {\n          // Changed\n          vr = { min: rmin, max: rmax };\n          changed = true;\n        }\n      } else {\n        // Use actual range of data\n        if (!isRangeEqual(sourceRange, vr)) {\n          vr = sourceRange;\n          changed = true;\n        }\n      }\n    }\n    this._visualRange = vr;\n    return { ...vr, changed };\n  }\n\n  scaleValue(value: number): number {\n    if (this.source === undefined) return value;\n    const r = this.visualRange;\n    if (r.min == r.max) {\n      // No real scale - only received the same value for this series\n      return 0.5;\n    }\n    return scale(value, r.min, r.max);\n  }\n\n  add(value: number) {\n    guardNumber(value, ``, `value`);\n    this.source.add(value);\n    this.plot.plotArea.needsDrawing = true;\n  }\n\n  /**\n   * Clears the underlying source\n   * and sets a flag that the plot area needs redrawing\n   */\n  clear() {\n    this.source.clear();\n    this._visualRange = { ...this.axisRange };\n    this.plot.plotArea.needsDrawing = true;\n  }\n}\n\nexport class PlotArea extends Sg.CanvasBox {\n  paddingPx = 3;\n  piPi = Math.PI * 2;\n  // If pointer is more than this distance away from a data point, it's ignored\n  pointerDistanceThreshold = 20;\n  lastRangeChange = 0;\n  pointer: Points.Point | undefined;\n\n  constructor(private plot: Plot) {\n    super(plot, plot.canvasEl, `PlotArea`);\n  }\n\n  clear() {\n    this.lastRangeChange = 0;\n    this.pointer = undefined;\n  }\n\n  protected measureSelf(\n    opts: Sg.MeasureState,\n    parent?: Sg.Measurement\n  ): Rects.Rect | Rects.RectPositioned | undefined {\n    const axisY = opts.getSize(`AxisY`);\n    if (axisY === undefined) return;\n\n    const legend = opts.getSize(`Legend`);\n    if (legend === undefined) return;\n\n    const axisX = opts.getSize(`AxisX`);\n    if (axisX === undefined) return;\n\n    return {\n      x: axisY.width,\n      y: 0,\n      width: opts.bounds.width - axisY.width,\n      height: opts.bounds.height - legend.height - axisX.height,\n    };\n  }\n\n  protected onNotify(msg: string, source: Sg.Box): void {\n    if (msg === `measureApplied` && source === this.plot.axisY)\n      this._needsLayout = true;\n    if (msg === `measureApplied` && source === this.plot.legend)\n      this._needsLayout = true;\n  }\n\n  // protected onClick(p: Points.Point): void {\n  //   this.plot.frozen = !this.plot.frozen;\n  // }\n\n  protected onPointerLeave(): void {\n    const series = [...this.plot.series.values()];\n    series.forEach((series) => {\n      series.tooltip = undefined;\n    });\n    this.pointer = undefined;\n    this.plot.legend.onLayoutNeeded();\n  }\n\n  protected onPointerMove(p: Points.Point): void {\n    this.pointer = p;\n    this.plot.legend.onLayoutNeeded();\n  }\n\n  protected measurePreflight(): void {\n    this.updateTooltip();\n  }\n\n  updateTooltip() {\n    const p = this.pointer;\n    if (p === undefined) return;\n    const series = [...this.plot.series.values()];\n    series.forEach((series) => {\n      if (p === undefined) {\n        series.tooltip = undefined;\n        return;\n      }\n      if (series.dataHitPoint === undefined) return;\n      const v = series.dataHitPoint(p);\n      if (v[0] === undefined) return;\n      if (v[1] > this.pointerDistanceThreshold) return; // too far away\n      series.tooltip = series.formatValue(v[0].value);\n      //this.plot.legend.onLayoutNeeded();\n    });\n    this.plot.legend.needsDrawing = true;\n  }\n\n  protected drawSelf(ctx: CanvasRenderingContext2D): void {\n    if (this.plot.frozen) return;\n    const series = this.plot.seriesArray(); // [...this.plot.series.values()];\n    ctx.clearRect(0, 0, this.visual.width, this.visual.height);\n\n    series.forEach((series) => {\n      if (series.source.type === `array` || series.source.type === `stream`) {\n        const arraySeries = series.source as ArrayDataSource;\n        if (arraySeries.data === undefined) return;\n        const d = [...arraySeries.data];\n        this.drawDataSet(series, d, ctx);\n      } else console.warn(`Unknown data source type ${series.source.type}`);\n    });\n  }\n\n  computeY(series: Series, rawValue: number) {\n    const s = series.scaleValue(rawValue);\n    return flip(s) * this.visual.height + this.paddingPx;\n  }\n\n  drawDataSet(\n    series: Series,\n    d: number[],\n    ctx: CanvasRenderingContext2D\n  ): void {\n    const padding = this.paddingPx + series.width;\n    const v = Rects.subtract(this.visual, padding * 2, padding * 3.5);\n    const pxPerPt = v.width / d.length;\n\n    series.lastPxPerPt = pxPerPt;\n    let x = padding;\n\n    ctx.strokeStyle = series.colour;\n    ctx.lineWidth = series.width;\n    const shapes: (DataPoint & PointCalculableShape)[] = [];\n\n    series.dataHitPoint = (pt: Points.Point): [DataPoint, number] => {\n      const distances = shapes.map((v) => Points.distanceToExterior(pt, v));\n      const i = minIndex(...distances);\n      const closest = shapes[i];\n      if (closest === undefined) [undefined, 0];\n      return [closest, distances[i]];\n    };\n\n    if (series.drawingStyle === `line`) {\n      let y = 0;\n      ctx.beginPath();\n\n      for (let i = 0; i < d.length; i++) {\n        const scaled = clamp(series.scaleValue(d[i]));\n        y = padding + this.paddingPx + v.height * flip(scaled);\n        shapes.push({ x, y, index: i, value: d[i] });\n\n        if (i == 0) ctx.moveTo(x + pxPerPt / 2, y);\n        else ctx.lineTo(x + pxPerPt / 2, y);\n\n        if (y > this.visual.height)\n          console.warn(y + ' h: ' + this.visual.height);\n        x += pxPerPt;\n      }\n      ctx.strokeStyle = series.colour;\n      ctx.stroke();\n    } else if (series.drawingStyle === `dotted`) {\n      let y = 0;\n      ctx.fillStyle = series.colour;\n      for (let i = 0; i < d.length; i++) {\n        const scaled = series.scaleValue(d[i]);\n        y = padding + v.height * flip(scaled);\n        ctx.beginPath();\n        ctx.arc(x + pxPerPt / 2, y, series.width, 0, this.piPi);\n        ctx.fill();\n        shapes.push({ radius: series.width, x, y, index: i, value: d[i] });\n        x += pxPerPt;\n      }\n    } else if (series.drawingStyle === `bar`) {\n      ctx.fillStyle = series.colour;\n      const interBarPadding = Math.ceil(pxPerPt * 0.1);\n      for (let i = 0; i < d.length; i++) {\n        const scaled = series.scaleValue(d[i]);\n        const h = v.height * scaled;\n        const r = {\n          x: x + interBarPadding,\n          y: v.height - h + padding,\n          width: pxPerPt - interBarPadding,\n          height: h,\n          index: i,\n          value: d[i],\n        };\n        ctx.fillRect(r.x, r.y, r.width, r.height);\n        shapes.push(r);\n        x += pxPerPt;\n      }\n    }\n  }\n}\n\nexport class Legend extends Sg.CanvasBox {\n  sampleSize = { width: 10, height: 10 };\n  padding = 3;\n  widthSnapping = 20;\n\n  constructor(private plot: Plot) {\n    super(plot, plot.canvasEl, `Legend`);\n  }\n\n  clear() {}\n\n  protected measureSelf(\n    opts: Sg.MeasureState,\n    parent?: Sg.Measurement\n  ): Rects.Rect | Rects.RectPositioned | undefined {\n    const yAxis = opts.measurements.get(`AxisY`);\n    const sample = this.sampleSize;\n    const widthSnapping = this.widthSnapping;\n    const padding = this.padding;\n    const ctx = (opts as Sg.CanvasMeasureState).ctx;\n    if (yAxis === undefined) return;\n\n    const usableWidth = opts.bounds.width - yAxis.size.width;\n\n    const series = this.plot.seriesArray();\n    let width = padding;\n    for (let i = 0; i < series.length; i++) {\n      width += sample.width + padding;\n      width += textWidth(ctx, series[i].name, padding, widthSnapping);\n      width += textWidth(ctx, series[i].tooltip, padding, widthSnapping);\n    }\n\n    const rows = Math.max(1, Math.ceil(width / usableWidth));\n    const h = rows * (this.sampleSize.height + this.padding + this.padding);\n    return {\n      x: yAxis.size.width,\n      y: opts.bounds.height - h,\n      width: usableWidth,\n      height: h,\n    };\n  }\n\n  protected drawSelf(ctx: CanvasRenderingContext2D): void {\n    const series = this.plot.seriesArray();\n    const sample = this.sampleSize;\n    const padding = this.padding;\n    const widthSnapping = this.widthSnapping;\n\n    let x = padding;\n    let y = padding;\n\n    ctx.clearRect(0, 0, this.visual.width, this.visual.height);\n\n    for (let i = 0; i < series.length; i++) {\n      const s = series[i];\n      ctx.fillStyle = s.colour;\n      ctx.fillRect(x, y, sample.width, sample.height);\n      x += sample.width + padding;\n      ctx.textBaseline = `middle`;\n\n      ctx.fillText(s.name, x, y + sample.height / 2);\n      x += textWidth(ctx, s.name, padding, widthSnapping);\n\n      if (s.tooltip) {\n        ctx.fillStyle = this.plot.axisColour;\n        ctx.fillText(s.tooltip, x, y + sample.height / 2);\n        x += textWidth(ctx, s.tooltip, padding, widthSnapping);\n      }\n      x += padding;\n      if (x > this.visual.width - 100) {\n        x = padding;\n        y += sample.height + padding + padding;\n      }\n    }\n  }\n\n  protected onNotify(msg: string, source: Sg.Box): void {\n    if (msg === `measureApplied` && source === (this._parent as Plot).axisY)\n      this._needsLayout = true;\n  }\n}\n\nexport class AxisX extends Sg.CanvasBox {\n  paddingPx = 2;\n  colour?: string;\n\n  constructor(private plot: Plot) {\n    super(plot, plot.canvasEl, `AxisX`);\n  }\n\n  clear() {}\n\n  protected onNotify(msg: string, source: Sg.Box): void {\n    if (msg === `measureApplied` && source === this.plot.axisY)\n      this._needsLayout = true;\n    if (msg === `measureApplied` && source === this.plot.legend) {\n      this.onLayoutNeeded();\n    }\n  }\n\n  protected drawSelf(ctx: CanvasRenderingContext2D): void {\n    const plot = this.plot;\n    const v = this.visual;\n    const width = plot.axisWidth;\n\n    const colour = this.colour ?? plot.axisColour;\n    ctx.strokeStyle = colour;\n\n    ctx.clearRect(0, 0, v.width, v.height);\n    ctx.beginPath();\n    ctx.lineWidth = width;\n    ctx.moveTo(0, width / 2);\n    ctx.lineTo(v.width, width / 2);\n    ctx.stroke();\n  }\n\n  protected measureSelf(\n    opts: Sg.MeasureState,\n    parent?: Sg.Measurement\n  ): Rects.Rect | Rects.RectPositioned | undefined {\n    const plot = this.plot;\n\n    const yAxis = opts.measurements.get(`AxisY`);\n    if (yAxis === undefined) return;\n\n    const legend = opts.measurements.get(`Legend`);\n    if (legend === undefined) return;\n\n    const h = plot.axisWidth + this.paddingPx;\n    return {\n      x: yAxis.size.width,\n      y: opts.bounds.height - h - legend.size.height,\n      width: opts.bounds.width - yAxis.size.width,\n      height: h,\n    };\n  }\n}\n\nconst isRangeEqual = (a: DataRange, b: DataRange) =>\n  a.max === b.max && a.min === b.min;\nconst isRangeSinglePoint = (a: DataRange) => a.max === a.min;\n\nexport class AxisY extends Sg.CanvasBox {\n  // Number of digits axis will be expected to show as a data legend\n  private _maxDigits = 1;\n\n  seriesToShow: string | undefined;\n  paddingPx = 2;\n  colour?: string;\n\n  lastRange: DataRange;\n  lastPlotAreaHeight = 0;\n\n  constructor(private plot: Plot) {\n    super(plot, plot.canvasEl, `AxisY`);\n    this.lastRange = { min: 0, max: 0 };\n  }\n\n  clear() {\n    this.lastRange = { min: 0, max: 0 };\n    this.lastPlotAreaHeight = 0;\n  }\n\n  protected measurePreflight(): void {\n    const series = this.getSeries();\n    if (\n      series !== undefined &&\n      !isRangeEqual(series.visualRange, this.lastRange)\n    ) {\n      this._needsLayout = true;\n      this.needsDrawing = true;\n    }\n  }\n\n  protected onNotify(msg: string, source: Sg.Box): void {\n    const pa = this.plot.plotArea;\n    if (msg === `measureApplied` && source === pa) {\n      if (pa.visual.height !== this.lastPlotAreaHeight) {\n        this.lastPlotAreaHeight = pa.visual.height;\n        this.needsDrawing = true;\n      }\n    }\n  }\n\n  protected measureSelf(opts: Sg.MeasureState): Rects.RectPositioned {\n    //this.debugLog(`measureSelf. needsLayout: ${this._needsLayout} needsDrawing: ${this.needsDrawing}`);\n\n    const copts = opts as Sg.CanvasMeasureState;\n    const paddingPx = this.paddingPx;\n    let width = this.plot.axisWidth + paddingPx;\n\n    const series = this.getSeries();\n    if (series !== undefined) {\n      const r = series.visualRange;\n      this._maxDigits =\n        Math.ceil(r.max).toString().length + series.precision + 1;\n\n      const textToMeasure = `9`.repeat(this._maxDigits);\n      width += textWidth(copts.ctx, textToMeasure, paddingPx * 2);\n    }\n    const w = opts.resolveToPx(this.desiredSize?.width, width);\n    return {\n      x: 0,\n      y: 0,\n      width: w,\n      height: opts.bounds.height,\n    };\n  }\n\n  protected drawSelf(ctx: CanvasRenderingContext2D): void {\n    const s = this.getSeries();\n    if (s !== undefined) this.seriesAxis(s, ctx);\n    else {\n      if (this.seriesToShow === undefined) return;\n      console.warn(`Plot AxisY series '${this.seriesToShow}' is missing.`);\n    }\n  }\n\n  getSeries(): Series | undefined {\n    if (this.seriesToShow === undefined) {\n      // Pick first series\n      return this.plot.seriesArray()[0];\n    } else {\n      // Try designated series name\n      return this.plot.series.get(this.seriesToShow);\n    }\n  }\n\n  seriesAxis(series: Series, ctx: CanvasRenderingContext2D) {\n    const plot = this.plot;\n    const plotArea = plot.plotArea;\n    const v = this.visual;\n    const paddingPx = this.paddingPx;\n    const r = series.visualRange;\n    const width = plot.axisWidth;\n\n    const colour = this.colour ?? plot.axisColour;\n    ctx.strokeStyle = colour;\n    ctx.fillStyle = colour;\n\n    if (Number.isNaN(r.min) && Number.isNaN(r.max)) return; // Empty\n    this.lastRange = r;\n    ctx.clearRect(0, 0, v.width, v.height);\n\n    ctx.beginPath();\n    ctx.lineWidth = width;\n    const lineX = v.width - width / 2;\n    ctx.moveTo(lineX, plotArea.paddingPx + width);\n    ctx.lineTo(lineX, plotArea.visual.height + width);\n    ctx.stroke();\n\n    ctx.textBaseline = `top`;\n    const fromRight = v.width - paddingPx * 4;\n\n    if (isRangeSinglePoint(r)) {\n      drawText(ctx, series.formatValue(r.max), (size) => [\n        fromRight - size.width,\n        plotArea.computeY(series, r.max) - paddingPx * 4,\n      ]);\n    } else {\n      // Draw min/max data labels\n      drawText(ctx, series.formatValue(r.max), (size) => [\n        fromRight - size.width,\n        plotArea.computeY(series, r.max) + width / 2,\n      ]);\n      drawText(ctx, series.formatValue(r.min), (size) => [\n        fromRight - size.width,\n        plotArea.computeY(series, r.min) - 5,\n      ]);\n    }\n  }\n}\n\nconst drawText = (\n  ctx: CanvasRenderingContext2D,\n  text: string,\n  position: (size: TextMetrics) => [x: number, y: number]\n) => {\n  const size = ctx.measureText(text);\n  const xy = position(size);\n  ctx.fillText(text, xy[0], xy[1]);\n};\n\n/**\n * Canvas-based data plotter.\n *\n * ```\n * const p = new Plot(document.getElementById(`myCanvas`), opts);\n *\n * // Plot 1-5 as series  test'\n * p.createSeries(`test`, `array`, [1,2,3,4,5]);\n *\n * // Create a streaming series, add a random number\n * const s = p.createSeries(`test2`, `stream`);\n * s.add(Math.random());\n * ```\n * `createSeries` returns the {@link Series} instance with properties for fine-tuning\n *\n * For simple usage, use `plot(someData)` which automatically creates\n * series for the properties of an object.\n */\nexport class Plot extends Sg.CanvasBox {\n  plotArea: PlotArea;\n  legend: Legend;\n  axisX: AxisX;\n  axisY: AxisY;\n  axisColour: string;\n  axisWidth: number;\n  series: Map<string, Series>;\n  private _frozen = false;\n\n  defaultSeriesOpts?: SeriesOpts;\n  constructor(canvasEl: HTMLCanvasElement, opts: Opts = {}) {\n    if (canvasEl === undefined) throw new Error(`canvasEl undefined`);\n    super(undefined, canvasEl, `Plot`);\n\n    if (opts.autoSize) {\n      parentSizeCanvas(canvasEl, (evt) => {\n        this.update(true);\n      });\n    }\n\n    this.axisColour = opts.axisColour ?? `black`;\n    this.axisWidth = opts.axisWidth ?? 3;\n    this.series = new Map();\n    this.plotArea = new PlotArea(this);\n    this.legend = new Legend(this);\n    this.axisX = new AxisX(this);\n    this.axisY = new AxisY(this);\n  }\n\n  /**\n   * Calls 'clear()' on each of the series\n   */\n  clearSeries() {\n    for (const series of this.series.values()) {\n      series.clear();\n    }\n  }\n\n  /**\n   * Removes all series, plot, legend\n   * and axis data.\n   */\n  clear() {\n    this.series = new Map();\n    this.plotArea.clear();\n    this.legend.clear();\n    this.axisX.clear();\n    this.axisY.clear();\n    this.update(true);\n  }\n\n  get frozen(): boolean {\n    return this._frozen;\n  }\n\n  set frozen(v: boolean) {\n    this._frozen = v;\n    if (v) {\n      this.canvasEl.classList.add(`frozen`);\n      this.canvasEl.title = `Plot frozen. Tap to unfreeze`;\n    } else {\n      this.canvasEl.title = ``;\n      this.canvasEl.classList.remove(`frozen`);\n    }\n  }\n\n  seriesArray(): Series[] {\n    return [...this.series.values()];\n  }\n\n  get seriesLength(): number {\n    return this.series.size;\n  }\n\n  /**\n   * Plots a simple object, eg `{ x: 10, y: 20, z: 300 }`\n   * Series are automatically created for each property of `o`\n   *\n   * Be sure to call `update()` to visually refresh.\n   * @param o\n   */\n  plot(o: any) {\n    const paths = getFieldPaths(o);\n    paths.forEach((p) => {\n      let s = this.series.get(p);\n      if (s === undefined) {\n        s = this.createSeries(p, `stream`);\n        s.drawingStyle = `line`;\n      }\n      s.add(getFieldByPath(o, p));\n    });\n  }\n\n  createSeriesFromObject(o: any, prefix: string = ``): Series[] {\n    const keys = Object.keys(o);\n    const create = (key: string): Series[] => {\n      const v = o[key];\n      if (typeof v === `object`) {\n        return this.createSeriesFromObject(v, prefix + key + '.');\n      } else if (typeof v === `number`) {\n        return [this.createSeries(key, `stream`)];\n      } else {\n        return [];\n      }\n    };\n    return keys.flatMap(create);\n  }\n\n  createSeries(\n    name?: string,\n    type: `stream` | `array` = `array`,\n    seriesOpts?: SeriesOpts\n  ): Series {\n    const len = this.seriesLength;\n\n    if (name === undefined) name = `series-${len}`;\n    if (this.series.has(name))\n      throw new Error(`Series name '${name}' already in use`);\n\n    let opts: SeriesOpts = {\n      colour: `hsl(${(len * 25) % 360}, 70%,50%)`,\n      ...seriesOpts,\n    };\n    if (this.defaultSeriesOpts) opts = { ...this.defaultSeriesOpts, ...opts };\n\n    const s = new Series(name, type, this, opts);\n    // if (type === `array` && initialData !== undefined) {\n    //   (s.source as ArrayDataSource).set(initialData);\n    // }\n\n    this.series.set(name, s);\n    this.setReady(true, true);\n    this.plotArea.needsDrawing = true;\n    return s;\n  }\n}\n","/* eslint-disable */\nimport { Arrays } from '../collections/index.js';\nimport { Points } from '../geometry/index.js';\nimport * as Rects from '../geometry/Rect.js';\nimport { hue as randomHue } from '../Random.js';\n\nexport type Measurement = {\n  size: Rects.Rect | Rects.RectPositioned;\n  ref: Box;\n  children: Array<Measurement | undefined>;\n};\n\nexport type PxUnit = {\n  value: number;\n  type: `px`;\n};\n\nexport type BoxUnit = PxUnit;\n\nexport type BoxRect = {\n  x?: BoxUnit;\n  y?: BoxUnit;\n  width?: BoxUnit;\n  height?: BoxUnit;\n};\n\nconst unitIsEqual = (a: BoxUnit, b: BoxUnit): boolean => {\n  if (a.type === `px` && b.type === `px`) {\n    return a.value === b.value;\n  }\n  return false;\n};\n\nconst boxRectIsEqual = (\n  a: BoxRect | undefined,\n  b: BoxRect | undefined\n): boolean => {\n  if (a === undefined && b === undefined) return true;\n  if (a === undefined) return false;\n  if (b === undefined) return false;\n  if (a.x && b.x) {\n    if (!unitIsEqual(a.x, b.x)) return false;\n  }\n  if (a.y && b.y) {\n    if (!unitIsEqual(a.y, b.y)) return false;\n  }\n  if (a.width && b.width) {\n    if (!unitIsEqual(a.width, b.width)) return false;\n  }\n  if (a.height && b.height) {\n    if (!unitIsEqual(a.height, b.height)) return false;\n  }\n  return true;\n};\n\nexport class MeasureState {\n  bounds: Rects.Rect;\n  pass: number;\n  measurements: Map<string, Measurement>;\n\n  constructor(bounds: Rects.Rect) {\n    this.bounds = bounds;\n    this.pass = 0;\n    this.measurements = new Map<string, Measurement>();\n  }\n\n  getSize(id: string): Rects.Rect | undefined {\n    const s = this.measurements.get(id);\n    if (s === undefined) return;\n    if (Rects.isPlaceholder(s.size)) return;\n    return s.size;\n  }\n\n  resolveToPx(u: BoxUnit | undefined, defaultValue: number): number {\n    if (u === undefined) return defaultValue; //throw new Error(`unit undefined`);\n    if (u.type === `px`) return u.value;\n    throw new Error(`Unknown unit type ${u.type}`);\n  }\n}\n\nexport abstract class Box {\n  visual: Rects.RectPositioned = Rects.placeholderPositioned;\n  private _desiredSize: BoxRect | undefined;\n  private _lastMeasure: Rects.RectPositioned | Rects.Rect | undefined;\n\n  protected children: Box[] = [];\n  protected readonly _parent: Box | undefined;\n  private _idMap: Map<string, Box> = new Map();\n\n  debugLayout = false;\n\n  private _visible = true;\n  protected _ready = true;\n\n  takesSpaceWhenInvisible = false;\n  needsDrawing = true;\n  protected _needsLayout = true;\n\n  debugHue = randomHue();\n  readonly id: string;\n\n  constructor(parent: Box | undefined, id: string) {\n    this.id = id;\n    this._parent = parent;\n\n    parent?.onChildAdded(this);\n  }\n\n  hasChild(box: Box): boolean {\n    const byRef = this.children.find((c) => c === box);\n    const byId = this.children.find((c) => c.id === box.id);\n    return byRef !== undefined || byId !== undefined;\n  }\n\n  notify(msg: string, source: Box) {\n    this.onNotify(msg, source);\n    this.children.forEach((c) => c.notify(msg, source));\n  }\n\n  protected onNotify(msg: string, source: Box) {}\n\n  protected onChildAdded(child: Box) {\n    if (child.hasChild(this)) throw new Error(`Recursive`);\n    if (child === this) throw new Error(`Cannot add self as child`);\n    if (this.hasChild(child)) throw new Error(`Child already present`);\n\n    this.children.push(child);\n    this._idMap.set(child.id, child);\n  }\n\n  setReady(ready: boolean, includeChildren: boolean = false) {\n    this._ready = ready;\n    if (includeChildren) {\n      this.children.forEach((c) => c.setReady(ready, includeChildren));\n    }\n  }\n\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  set visible(v: boolean) {\n    if (this._visible === v) return;\n    this._visible = v;\n    this.onLayoutNeeded();\n  }\n\n  get desiredSize(): BoxRect | undefined {\n    return this._desiredSize;\n  }\n\n  set desiredSize(v: BoxRect | undefined) {\n    if (boxRectIsEqual(v, this._desiredSize)) return;\n    this._desiredSize = v;\n    this.onLayoutNeeded();\n  }\n\n  onLayoutNeeded() {\n    this.notifyChildLayoutNeeded();\n  }\n\n  private notifyChildLayoutNeeded() {\n    this._needsLayout = true;\n    this.needsDrawing = true;\n    if (this._parent !== undefined) {\n      this._parent.notifyChildLayoutNeeded();\n    } else {\n      this.update();\n    }\n  }\n\n  get root(): Box {\n    if (this._parent === undefined) return this;\n    return this._parent.root;\n  }\n\n  protected measurePreflight() {}\n\n  /**\n   * Applies measurement, returning true if size is different than before\n   * @param size\n   * @returns\n   */\n  measureApply(m: Measurement, force: boolean) {\n    let different = true;\n    this._needsLayout = false;\n\n    if (Rects.isEqual(m.size, this.visual)) different = false;\n\n    if (Rects.isPositioned(m.size)) {\n      this.visual = m.size;\n    } else {\n      this.visual = {\n        x: 0,\n        y: 0,\n        width: m.size.width,\n        height: m.size.height,\n      };\n    }\n\n    m.children.forEach((c) => {\n      if (c !== undefined) c.ref.measureApply(c, force);\n    });\n    if (different || force) {\n      this.needsDrawing = true;\n      this.root.notify(`measureApplied`, this);\n    }\n    return different;\n  }\n\n  debugLog(m: any) {\n    console.log(this.id, m);\n  }\n\n  measureStart(\n    opts: MeasureState,\n    force: boolean,\n    parent?: Measurement\n  ): Measurement | undefined {\n    this.measurePreflight();\n\n    let m: Measurement = {\n      ref: this,\n      size: Rects.placeholder,\n      children: [],\n    };\n    opts.measurements.set(this.id, m);\n\n    if (!this._visible && !this.takesSpaceWhenInvisible) {\n      m.size = Rects.emptyPositioned;\n    } else {\n      let size = this._lastMeasure;\n      if (this._needsLayout || this._lastMeasure === undefined) {\n        size = this.measureSelf(opts, parent);\n        this.root.notify(`measured`, this);\n      }\n      if (size === undefined) return;\n      m.size = size;\n      this._lastMeasure = size;\n    }\n\n    m.children = this.children.map((c) => c.measureStart(opts, force, m));\n    if (Arrays.without(m.children, undefined).length < this.children.length) {\n      return undefined; // One of the children did not resolve\n    }\n\n    return m;\n  }\n\n  protected measureSelf(\n    opts: MeasureState,\n    parent?: Measurement\n  ): Rects.RectPositioned | Rects.Rect | undefined {\n    let size = Rects.placeholderPositioned;\n    if (parent) {\n      // Use parent size\n      if (parent.size) {\n        size = {\n          x: 0,\n          y: 0,\n          width: parent.size.width,\n          height: parent.size.height,\n        };\n      }\n    } else {\n      // Use canvas size\n      size = {\n        x: 0,\n        y: 0,\n        width: opts.bounds.width,\n        height: opts.bounds.height,\n      };\n    }\n    if (Rects.isPlaceholder(size)) return;\n    return size;\n  }\n\n  /**\n   * Called when update() is called\n   * @param force\n   */\n  protected abstract updateBegin(force: boolean): MeasureState;\n\n  protected updateDone(state: MeasureState, force: boolean): void {\n    this.onUpdateDone(state, force);\n    this.children.forEach((c) => c.updateDone(state, force));\n  }\n\n  abstract onUpdateDone(state: MeasureState, force: boolean): void;\n\n  update(force = false) {\n    const state = this.updateBegin(force);\n    let attempts = 5;\n    let applied = false;\n\n    while (attempts--) {\n      const m = this.measureStart(state, force);\n      if (m !== undefined) {\n        // Apply measurements\n        this.measureApply(m, force);\n        if (!this._ready) return;\n        applied = true;\n        //this.onMeasurementApplied(sizeChanged, force;\n        //return;\n      }\n    }\n\n    this.updateDone(state, force);\n    if (!applied) console.warn(`Ran out of measurement attempts`);\n  }\n}\n\nexport class CanvasMeasureState extends MeasureState {\n  readonly ctx: CanvasRenderingContext2D;\n  constructor(bounds: Rects.Rect, ctx: CanvasRenderingContext2D) {\n    super(bounds);\n    this.ctx = ctx;\n  }\n}\n\nexport class CanvasBox extends Box {\n  readonly canvasEl: HTMLCanvasElement;\n\n  constructor(\n    parent: CanvasBox | undefined,\n    canvasEl: HTMLCanvasElement,\n    id: string\n  ) {\n    super(parent, id);\n    if (canvasEl === undefined) throw new Error(`canvasEl undefined`);\n    if (canvasEl === null) throw new Error(`canvasEl null`);\n    this.canvasEl = canvasEl;\n\n    if (parent === undefined) this.designateRoot();\n  }\n\n  private designateRoot() {\n    this.canvasEl.addEventListener(`pointermove`, (evt) => {\n      const p = { x: evt.offsetX, y: evt.offsetY };\n      this.notifyPointerMove(p);\n    });\n\n    this.canvasEl.addEventListener(`pointerleave`, (evt) => {\n      this.notifyPointerLeave();\n    });\n\n    this.canvasEl.addEventListener(`click`, (evt) => {\n      const p = { x: evt.offsetX, y: evt.offsetY };\n      this.notifyClick(p);\n    });\n  }\n\n  protected onClick(p: Points.Point) {}\n\n  private notifyClick(p: Points.Point) {\n    if (Rects.isPlaceholder(this.visual)) return;\n    if (Rects.intersectsPoint(this.visual, p)) {\n      const pp = Points.subtract(p, this.visual.x, this.visual.y);\n      this.onClick(pp);\n      this.children.forEach((c) => (c as CanvasBox).notifyClick(pp));\n    }\n  }\n\n  private notifyPointerLeave() {\n    this.onPointerLeave();\n    this.children.forEach((c) => (c as CanvasBox).notifyPointerLeave());\n  }\n\n  private notifyPointerMove(p: Points.Point) {\n    if (Rects.isPlaceholder(this.visual)) return;\n    if (Rects.intersectsPoint(this.visual, p)) {\n      const pp = Points.subtract(p, this.visual.x, this.visual.y);\n      this.onPointerMove(pp);\n      this.children.forEach((c) => (c as CanvasBox).notifyPointerMove(pp));\n    }\n  }\n\n  protected onPointerLeave() {}\n\n  protected onPointerMove(p: Points.Point) {}\n\n  protected updateBegin(): MeasureState {\n    const ctx = this.canvasEl.getContext(`2d`);\n    if (ctx === null) throw new Error(`Context unavailable`);\n\n    const s = this.canvasEl.getBoundingClientRect();\n\n    return new CanvasMeasureState(\n      {\n        width: s.width,\n        height: s.height,\n      },\n      ctx\n    );\n  }\n\n  override onUpdateDone(state: MeasureState, force: boolean) {\n    if (!this.needsDrawing && !force) return;\n\n    const ctx = this.canvasEl.getContext(`2d`);\n    if (ctx === null) throw new Error(`Context unavailable`);\n\n    ctx.save();\n    ctx.translate(this.visual.x, this.visual.y);\n\n    const v = this.visual;\n\n    if (this.debugLayout) {\n      //ctx.clearRect(0,0,v.width,v.height);\n\n      ctx.lineWidth = 1;\n      ctx.strokeStyle = `hsl(${this.debugHue}, 100%, 50%)`;\n\n      //ctx.fillStyle = ctx.strokeStyle;\n      //ctx.fillRect(0,0,v.width,v.height);\n\n      ctx.strokeRect(0, 0, v.width, v.height);\n\n      ctx.fillStyle = ctx.strokeStyle;\n      ctx.fillText(this.id, 10, 10, v.width);\n\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(v.width, v.height);\n      ctx.stroke();\n    }\n\n    this.drawSelf(ctx);\n\n    this.needsDrawing = false;\n    ctx.restore();\n  }\n\n  protected drawSelf(ctx: CanvasRenderingContext2D): void {}\n}\n","/**\n * Manage a set of colours. Uses CSS variables as a fallback if colour is not added\n *\n */\nexport type Palette = {\n  setElementBase(el: Element): void;\n  has(key: string): boolean;\n\n  /**\n   * Returns a colour by name.\n   *\n   * If the colour is not found:\n   *  1. Try to use a CSS variable `--key`, or\n   *  2. The next fallback colour is used (array cycles)\n   *\n   * @param key\n   * @returns\n   */\n  get(key: string, fallback?: string): string;\n\n  /**\n   * Gets a colour by key, adding and returning fallback if not present\n   * @param key Key of colour\n   * @param fallback Fallback colour if key is not found\n   */\n  getOrAdd(key: string, fallback?: string): string;\n\n  /**\n   * Adds a colour with a given key\n   *\n   * @param key\n   * @param colour\n   */\n  add(key: string, value: string): void;\n\n  alias(from: string, to: string): void;\n};\n\nexport const create = (fallbacks?: readonly string[]): Palette =>\n  new PaletteImpl(fallbacks);\n\nclass PaletteImpl {\n  /* eslint-disable-next-line functional/prefer-readonly-type */\n  readonly #store: Map<string, string> = new Map();\n  /* eslint-disable-next-line functional/prefer-readonly-type */\n  readonly #aliases: Map<string, string> = new Map();\n\n  readonly fallbacks: readonly string[];\n  #lastFallback = 0;\n\n  #elementBase: Element;\n\n  constructor(fallbacks?: readonly string[]) {\n    if (fallbacks !== undefined) this.fallbacks = fallbacks;\n    else this.fallbacks = [`red`, `blue`, `green`, `orange`];\n    this.#elementBase = document.body;\n  }\n\n  setElementBase(el: Element) {\n    this.#elementBase = el;\n  }\n\n  add(key: string, colour: string) {\n    this.#store.set(key, colour);\n  }\n\n  alias(from: string, to: string) {\n    this.#aliases.set(from, to);\n  }\n\n  get(key: string, fallback?: string): string {\n    const alias = this.#aliases.get(key);\n    if (alias !== undefined) key = alias;\n\n    const c = this.#store.get(key);\n    if (c !== undefined) return c;\n\n    const varName = `--` + key;\n    // eslint-disable-next-line functional/no-let\n    let fromCss = getComputedStyle(this.#elementBase)\n      .getPropertyValue(varName)\n      .trim();\n\n    // Not found\n    if (fromCss === undefined || fromCss.length === 0) {\n      if (fallback !== undefined) return fallback;\n      fromCss = this.fallbacks[this.#lastFallback];\n      this.#lastFallback++;\n      if (this.#lastFallback === this.fallbacks.length) this.#lastFallback = 0;\n    }\n    return fromCss;\n  }\n\n  getOrAdd(key: string, fallback?: string): string {\n    if (this.has(key)) return this.get(key);\n    const c = this.get(key, fallback);\n    this.add(key, c);\n    return c;\n  }\n\n  has(key: string): boolean {\n    return this.#store.has(key);\n  }\n}\n","import * as Grids from '../geometry/Grid.js';\nimport type { Rgb } from './Colour.js';\n\nexport const accessor = (image: ImageData): Grids.CellAccessor<Rgb> => {\n  const grid = { rows: image.width, cols: image.height };\n  const data = image.data;\n\n  const fn: Grids.CellAccessor<Rgb> = (cell: Grids.Cell, bounds) => {\n    const index = Grids.indexFromCell(grid, cell, bounds);\n    if (index === undefined) {\n      return undefined;\n    }\n    const pxIndex = index * 4;\n    return {\n      r: data[pxIndex],\n      g: data[pxIndex + 1],\n      b: data[pxIndex + 2],\n      opacity: data[pxIndex + 3],\n    };\n  };\n  return fn;\n};\n","import {Rects, Points} from './index.js';\nimport {integer as guardInteger} from '../Guards.js';\nimport {clampIndex} from '../data/Clamp.js';\nimport {randomElement} from '../collections/Arrays.js';\nimport {type ISetMutable, mutable} from '../collections/set/index.js';\nimport {zipKeyValue} from \"../collections/map/index.js\";\n\nexport type GridVisual = Readonly<{\n  readonly size: number,\n}>\n\nexport type Grid = Readonly<{\n  readonly rows: number\n  readonly cols: number\n}>;\n\nexport type Cell = Readonly<{\n  readonly x: number\n  readonly y: number\n}>;\n\nexport type Neighbours = Readonly<{\n  readonly n: Cell | undefined,\n  readonly e: Cell | undefined,\n  readonly s: Cell | undefined,\n  readonly w: Cell | undefined,\n  readonly ne: Cell | undefined,\n  readonly nw: Cell | undefined,\n  readonly se: Cell | undefined,\n  readonly sw: Cell | undefined\n}>\n\nexport type CardinalDirection = `n` | `ne` | `e` | `se` | `s` | `sw` | `w` | `nw`;\nexport type CardinalDirectionOptional = CardinalDirection | ``;\n\nexport type BoundsLogic = `unbounded` | `undefined` | `stop` | `wrap`;\n\nexport type VisitorLogic = {\n  readonly options?: IdentifyNeighbours;\n  readonly select: NeighbourSelector\n}\nexport type VisitGenerator = Generator<Readonly<Cell>, void, unknown>\nexport type VisitorOpts = {\n  readonly visited?: ISetMutable<Cell>\n  readonly reversed?: boolean\n  readonly debug?: boolean\n  readonly boundsWrap?: BoundsLogic\n}\n\n/**\n * Visitor function.\n * \n * Implementations:\n * * {@link cells}: left-to-right, top-to-bottom. Same as {@link visitorRow}\n * * {@link visitorBreadth}, {@link visitorDepth}\n * * {@link visitorColumn}: top-to-bottom, left-to-right.\n * * {@link visitorRandom}: Any unvisited location\n * * {@link visitorRandomContiguous}: A random direct neighbour of current cell\n */\nexport type Visitor = (grid: Grid, start: Cell, opts?: VisitorOpts) => VisitGenerator;\n\nexport type NeighbourMaybe = readonly [keyof Neighbours, Cell | undefined];\nexport type Neighbour = readonly [keyof Neighbours, Cell];\n\n/**\n * A function that returns a value (or _undefined_) based on a _cell_\n * \n * Implementations:\n * * {@link access1dArray}: For accessing a single-dimension array as a grid\n */\nexport type CellAccessor<V> = (cell: Cell, wrap: BoundsLogic) => V | undefined;\n\n/**\n * Neighbour selector logic. For a given set of `neighbours` pick one to visit next.\n */\nexport type NeighbourSelector = (neighbours: ReadonlyArray<Neighbour>) => Neighbour | undefined;\n\n/**\n * Identify neighbours logic. For a given `grid` and `origin`, return a list of neighbours\n */\nexport type IdentifyNeighbours = (grid: Grid, origin: Cell) => ReadonlyArray<Neighbour>;\n\n/**\n * Returns true if `cell` parameter is a cell with x,y fields.\n * Does not check validity of fields.\n *\n * @param cell\n * @return True if parameter is a cell\n */\nconst isCell = (cell: Cell | undefined): cell is Cell => {\n  if (cell === undefined) return false;\n  return (`x` in cell && `y` in cell);\n};\n\n/**\n * Returns true if `n` is a Neighbour type, eliminating NeighbourMaybe possibility\n *\n * @param n\n * @return\n */\nconst isNeighbour = (n: Neighbour | NeighbourMaybe | undefined): n is Neighbour => {\n  if (n === undefined) return false;\n  if (n[1] === undefined) return false;\n  return true;\n};\n\n/**\n * Returns _true_ if grids `a` and `b` are equal in value.\n * Returns _false_ if either parameter is undefined.\n *\n * @param a\n * @param b\n * @return\n */\nexport const isEqual = (a: Grid | GridVisual, b: Grid | GridVisual): boolean => {\n  if (b === undefined) return false;\n  if (a === undefined) return false;\n  if (`rows` in a && `cols` in a) {\n    if (`rows` in b && `cols` in b) {\n      if (a.rows !== b.rows || a.cols !== b.cols) return false;\n    } else return false;\n  }\n  if (`size` in a) {\n    if (`size` in b) {\n      if (a.size !== b.size) return false;\n    } else return false;\n  }\n  return true;\n};\n\n/**\n * Returns a key string for a cell instance\n * A key string allows comparison of instances by value rather than reference\n * \n * ```js\n * cellKeyString({x:10,y:20});\n * // Yields: \"Cell{10,20}\";\n * ```\n * @param v\n * @returns\n */\nexport const cellKeyString = (v: Cell): string => `Cell{${v.x},${v.y}}`;\n\n/**\n * Returns _true_ if two cells equal.\n * Returns _false_ if either cell are undefined\n *\n * @param a\n * @param b\n * @returns\n */\nexport const cellEquals = (a: Cell, b: Cell): boolean => {\n  if (b === undefined) return false;\n  if (a === undefined) return false;\n  return a.x === b.x && a.y === b.y;\n};\n\n/**\n * Throws an exception if any of the cell's parameters are invalid\n * @private\n * @param cell \n * @param paramName \n * @param grid \n */\nexport const guardCell = (cell: Cell, paramName: string = `Param`, grid?: Grid) => {\n  if (cell === undefined) throw new Error(paramName + ` is undefined. Expecting {x,y}`);\n  if (cell.x === undefined) throw new Error(paramName + `.x is undefined`);\n  if (cell.y === undefined) throw new Error(paramName + `.y is undefined`);\n  if (!Number.isInteger(cell.x)) throw new Error(paramName + `.x is non-integer`);\n  if (!Number.isInteger(cell.y)) throw new Error(paramName + `.y is non-integer`);\n  if (grid !== undefined) {\n    if (!inside(grid, cell)) throw new Error(`${paramName} is outside of grid. Cell: ${cell.x},${cell.y} Grid: ${grid.cols}, ${grid.rows}`);\n  }\n};\n\n/**\n * Throws an exception if any of the grid's parameters are invalid\n * @param grid\n * @param paramName \n */\nconst guardGrid = (grid: Grid, paramName: string = `Param`) => {\n  if (grid === undefined) throw new Error(`${paramName} is undefined. Expecting grid.`);\n  if (!(`rows` in grid)) throw new Error(`${paramName}.rows is undefined`);\n  if (!(`cols` in grid)) throw new Error(`${paramName}.cols is undefined`);\n\n  if (!Number.isInteger(grid.rows)) throw new Error(`${paramName}.rows is not an integer`);\n  if (!Number.isInteger(grid.cols)) throw new Error(`${paramName}.cols is not an integer`);\n};\n\n/**\n * Returns _true_ if cell coordinates are above zero and within bounds of grid\n *\n * @param grid\n * @param cell\n * @return\n */\nexport const inside = (grid: Grid, cell: Cell): boolean => {\n  if (cell.x < 0 || cell.y < 0) return false;\n  if (cell.x >= grid.cols || cell.y >= grid.rows) return false;\n  return true;\n};\n\n/**\n * Returns a visual rectangle of the cell, positioned from the top-left corner\n *\n * ```js\n * const cell = { x: 1, y: 0 };\n * \n * // 5x5 grid, each cell 5px in size\n * const grid = { rows: 5, cols: 5, size: 5 }\n * \n * const r = rectangleForCell(cell, grid);\n * \n * // Yields: { x: 5, y: 0, width: 5, height: 5 }\n * ```\n * @param cell\n * @param grid\n * @return\n */\nexport const rectangleForCell = (cell: Cell, grid: Grid & GridVisual): Rects.RectPositioned => {\n  guardCell(cell);\n  const size = grid.size;\n  const x = cell.x * size;\n  const y = cell.y * size;\n  const r = Rects.fromTopLeft({x: x, y: y}, size, size);\n  return r;\n};\n\n/**\n * Generator that returns rectangles for each cell in a grid\n * \n * @example Draw rectangles\n * ```js\n * import { Drawing } from 'visuals.js' \n * const rects = [...Grids.asRectangles(grid)];\n * Drawing.rect(ctx, rects, { strokeStyle: `silver`});\n * ```\n * @param grid \n */\nexport function* asRectangles(grid: GridVisual & Grid): IterableIterator<Rects.RectPositioned> {\n  for (const c of cells(grid)) {\n    yield rectangleForCell(c, grid);\n  }\n}\n\n/**\n * Returns a two-dimensional array according to `grid`\n * size.\n * \n * ```js\n * const a = Grids.toArray({ rows: 3, cols: 2 });\n * Yields:\n * [ [_,_] ]\n * [ [_,_] ]\n * [ [_,_] ]\n * ```\n * \n * `initialValue` can be provided to set the value\n * for all cells.\n * @param grid \n * @param initialValue \n * @returns \n */\n//eslint-disable-next-line functional/prefer-readonly-type\nexport const toArray = <V>(grid: Grid, initialValue?: V): V[][] => {\n  const ret = [];\n  //eslint-disable-next-line functional/no-let\n  for (let row = 0; row < grid.rows; row++) {\n    //eslint-disable-next-line functional/immutable-data\n    ret[row] = new Array<V>(grid.cols);\n    if (initialValue) {\n      //eslint-disable-next-line functional/no-let\n      for (let col = 0; col < grid.cols; col++) {\n        //eslint-disable-next-line functional/immutable-data\n        ret[row][col] = initialValue;\n      }\n    }\n  }\n  return ret;\n};\n\n/**\n * Returns the cell at a specified visual coordinate\n * or _undefined_ if the position is outside of the grid.\n * \n * `position` must be in same coordinate/scale as the grid.\n *\n * @param position Position, eg in pixels\n * @param grid Grid\n * @return Cell at position or undefined if outside of the grid\n */\nexport const cellAtPoint = (grid: Grid & GridVisual, position: Points.Point): Cell | undefined => {\n  const size = grid.size;\n  if (position.x < 0 || position.y < 0) return;\n  const x = Math.floor(position.x / size);\n  const y = Math.floor(position.y / size);\n  if (x >= grid.cols) return;\n  if (y >= grid.rows) return;\n  return {x, y};\n};\n\n/**\n * Returns a list of all cardinal directions: n, ne, nw, e, s, se, sw, w\n */\nexport const allDirections = Object.freeze([`n`, `ne`, `nw`, `e`, `s`, `se`, `sw`, `w`]) as ReadonlyArray<CardinalDirection>;\n\n/**\n * Returns a list of + shaped directions: n, e, s, w\n */\nexport const crossDirections = Object.freeze([`n`, `e`, `s`, `w`]) as ReadonlyArray<CardinalDirection>;\n\n/**\n * Returns neighbours for a cell. If no `directions` are provided, it defaults to {@link allDirections}.\n * \n * ```js\n * const grid = { rows: 5, cols: 5 };\n * const cell = { x:2, y:2 };\n * \n * // Get n,ne,nw,e,s,se,sw and w neighbours\n * const n = Grids.neighbours(grid, cell, `wrap`);\n * \n * Yields:\n * {\n *  n: {x: 2, y: 1}\n *  s: {x: 2, y: 3}\n *  ....\n * }\n * ```\n * \n * Returns neighbours without diagonals (ie n, e, s, w):\n * ```js\n * const n = Grids.neighbours(grid, cell, `stop`, Grids.crossDirections);\n * ```\n * @returns Returns a map of cells, keyed by cardinal direction\n * @param grid Grid\n * @param cell Cell\n * @param bounds How to handle edges of grid\n * @param directions Directions to return\n */\nexport const neighbours = (grid: Grid, cell: Cell, bounds: BoundsLogic = `undefined`, directions?: ReadonlyArray<CardinalDirection>): Neighbours => {\n  const dirs = directions ?? allDirections;\n  const points = dirs.map(c => offset(grid, cell, getVectorFromCardinal(c), bounds));\n  return zipKeyValue<Cell>(dirs, points) as Neighbours;\n};\n\nexport function* visitNeigbours(grid: Grid, cell: Cell, bounds: BoundsLogic = `undefined`, directions?: ReadonlyArray<CardinalDirection>) {\n  const dirs = directions ?? allDirections;\n  const points = dirs.map(c => offset(grid, cell, getVectorFromCardinal(c), bounds));\n  for (const pt of points) {\n    if (pt !== undefined) yield pt;\n  }\n}\n\n/**\n * Returns the visual midpoint of a cell (eg. pixel coordinate)\n *\n * @param cell\n * @param grid\n * @return \n */\nexport const cellMiddle = (cell: Cell, grid: Grid & GridVisual): Points.Point => {\n  guardCell(cell);\n\n  const size = grid.size;\n  const x = cell.x * size; // + (grid.spacing ? cell.x * grid.spacing : 0);\n  const y = cell.y * size; // + (grid.spacing ? cell.y * grid.spacing : 0);\n  return Object.freeze({x: x + size / 2, y: y + size / 2});\n};\n\n/**\n * Returns the cells on the line of `start` and `end`, inclusive\n *\n * ```js\n * // Get cells that connect 0,0 and 10,10\n * const cells = Grids.getLine({x:0,y:0}, {x:10,y:10});\n * ```\n * \n * This function does not handle wrapped coordinates.\n * @param start Starting cell\n * @param end End cell\n * @returns\n */\nexport const getLine = (start: Cell, end: Cell): ReadonlyArray<Cell> => {\n  // https://stackoverflow.com/a/4672319\n  guardCell(start);\n  guardCell(end);\n\n  // eslint-disable-next-line functional/no-let\n  let startX = start.x;\n  // eslint-disable-next-line functional/no-let\n  let startY = start.y;\n  const dx = Math.abs(end.x - startX);\n  const dy = Math.abs(end.y - startY);\n  const sx = (startX < end.x) ? 1 : -1;\n  const sy = (startY < end.y) ? 1 : -1;\n  // eslint-disable-next-line functional/no-let\n  let err = dx - dy;\n\n  const cells = [];\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    // eslint-disable-next-line functional/immutable-data\n    cells.push(Object.freeze({x: startX, y: startY}));\n    if (startX === end.x && startY === end.y) break;\n    const e2 = 2 * err;\n    if (e2 > -dy) {\n      err -= dy;\n      startX += sx;\n    }\n    if (e2 < dx) {\n      err += dx;\n      startY += sy;\n    }\n  }\n  return cells;\n};\n\n/**\n * Returns cells that correspond to the cardinal directions at a specified distance\n * i.e. it projects a line from `start` cell in all cardinal directions and returns the cells at `steps` distance.\n * @param grid Grid\n * @param steps Distance\n * @param start Start poiint\n * @param bound Logic for if bounds of grid are exceeded\n * @returns Cells corresponding to cardinals\n */\nexport const offsetCardinals = (grid: Grid, start: Cell, steps: number, bounds: BoundsLogic = `stop`): Neighbours => {\n  guardGrid(grid, `grid`);\n  guardCell(start, `start`);\n  guardInteger(steps, `aboveZero`, `steps`);\n\n  const directions = allDirections;\n  const vectors = directions.map(d => getVectorFromCardinal(d, steps));\n  const cells = directions.map((d, i) => offset(grid, start, vectors[i], bounds));\n\n  return zipKeyValue(directions, cells) as Neighbours;\n};\n\n/**\n * Returns an `{ x, y }` signed vector corresponding to the provided cardinal direction.\n * ```js\n * const n = getVectorFromCardinal(`n`); // {x: 0, y: -1}\n * ```\n * \n * Optional `multiplier` can be applied to vector\n * ```js\n * const n = getVectorFromCardinal(`n`, 10); // {x: 0, y: -10}\n * ```\n * \n * Blank direction returns `{ x: 0, y: 0 }`\n * @param cardinal Direction\n * @param multiplier Multipler\n * @returns Signed vector in the form of `{ x, y }`\n */\nexport const getVectorFromCardinal = (cardinal: CardinalDirectionOptional, multiplier: number = 1): Cell => {\n  // eslint-disable-next-line functional/no-let\n  let v;\n  switch (cardinal) {\n    case `n`:\n      v = {x: 0, y: -1 * multiplier};\n      break;\n    case `ne`:\n      v = {x: 1 * multiplier, y: -1 * multiplier};\n      break;\n    case `e`:\n      v = {x: 1 * multiplier, y: 0};\n      break;\n    case `se`:\n      v = {x: 1 * multiplier, y: 1 * multiplier};\n      break;\n    case `s`:\n      v = {x: 0, y: 1 * multiplier};\n      break;\n    case `sw`:\n      v = {x: -1 * multiplier, y: 1 * multiplier};\n      break;\n    case `w`:\n      v = {x: -1 * multiplier, y: 0};\n      break;\n    case `nw`:\n      v = {x: -1 * multiplier, y: -1 * multiplier};\n      break;\n    default:\n      v = {x: 0, y: 0};\n  }\n  return Object.freeze(v);\n};\n\n/**\n * Returns a list of cells from `start` to `end`.\n * \n * Throws an error if start and end are not on same row or column.\n *\n * @param start Start cell\n * @param end end clel\n * @param endInclusive\n * @return Array of cells\n */\nexport const simpleLine = function (start: Cell, end: Cell, endInclusive: boolean = false): ReadonlyArray<Cell> {\n  // eslint-disable-next-line functional/prefer-readonly-type\n  const cells: Cell[] = [];\n  if (start.x === end.x) {\n    // Vertical\n    const lastY = endInclusive ? end.y + 1 : end.y;\n    // eslint-disable-next-line functional/no-let\n    for (let y = start.y; y < lastY; y++) {\n      // eslint-disable-next-line functional/immutable-data\n      cells.push({x: start.x, y: y});\n    }\n  } else if (start.y === end.y) {\n    // Horizontal\n    const lastX = endInclusive ? end.x + 1 : end.x;\n    // eslint-disable-next-line functional/no-let\n    for (let x = start.x; x < lastX; x++) {\n      // eslint-disable-next-line functional/immutable-data\n      cells.push({x: x, y: start.y});\n    }\n  } else {\n    throw new Error(`Only does vertical and horizontal: ${start.x},${start.y} - ${end.x},${end.y}`);\n  }\n  return cells;\n};\n\n/**\n *\n * Returns a coordinate offset from `start` by `vector` amount.\n * \n * Different behaviour can be specified for how to handle when coordinates exceed the bounds of the grid\n * \n * \n * Note: x and y wrapping are calculated independently. A large wrapping of x, for example won't shift up/down a line \n * @param grid Grid to traverse\n * @param vector Offset in x/y\n * @param start Start point\n * @param bounds\n * @returns Cell\n */\nexport const offset = function (grid: Grid, start: Cell, vector: Cell, bounds: BoundsLogic = `undefined`): Cell | undefined {\n  guardCell(start, `start`, grid);\n  guardCell(vector);\n  guardGrid(grid, `grid`);\n\n  // eslint-disable-next-line functional/no-let\n  let x = start.x;\n  // eslint-disable-next-line functional/no-let\n  let y = start.y;\n  switch (bounds) {\n    case `wrap`:\n      x += vector.x % grid.cols;\n      y += vector.y % grid.rows;\n      if (x < 0) x = grid.cols + x;\n      else if (x >= grid.cols) {\n        x -= grid.cols;\n      }\n      if (y < 0) y = grid.rows + y;\n      else if (y >= grid.rows) {\n        y -= grid.rows;\n      }\n      break;\n    case `stop`:\n      x += vector.x;\n      y += vector.y;\n      x = clampIndex(x, grid.cols);\n      y = clampIndex(y, grid.rows);\n      break;\n    case `undefined`:\n      x += vector.x;\n      y += vector.y;\n      if (x < 0 || y < 0) return;\n      if (x >= grid.cols || y >= grid.rows) return;\n      break;\n    case `unbounded`:\n      x += vector.x;\n      y += vector.y;\n      break;\n    default:\n      throw new Error(`Unknown BoundsLogic case ${bounds}`);\n  }\n  return Object.freeze({x, y});\n};\n\nconst neighbourList = (grid: Grid, cell: Cell, directions: ReadonlyArray<CardinalDirection>, bounds: BoundsLogic): ReadonlyArray<Neighbour> => {\n  // Get neighbours for cell\n  const cellNeighbours = neighbours(grid, cell, bounds, directions);\n\n  // Filter out undefined cells\n  const entries = Object.entries(cellNeighbours);\n  return (entries as Array<NeighbourMaybe>).filter(isNeighbour);\n};\n\n/**\n * Visits every cell in grid using supplied selection function\n * In-built functions to use: visitorDepth, visitorBreadth, visitorRandom,\n * visitorColumn, visitorRow.\n * \n * Usage example:\n * ```js\n *  let visitor = Grids.visitor(Grids.visitorRandom, grid, startCell);\n *  for (let cell of visitor) {\n *   // do something with cell\n *  }\n * ```\n *\n * If you want to keep tabs on the visitor, pass in a MutableValueSet. This is\n * updated with visited cells (and is used internally anyway)\n * ```js\n *  let visited = new mutableValueSet<Grids.Cell>(c => Grids.cellKeyString(c));\n *  let visitor = Grids.visitor(Grids.visitorRandom, grid, startCell, visited);\n * ```\n * \n * To visit with some delay, try this pattern\n * ```js\n *  const delayMs = 100;\n *  const run = () => {\n *   let cell = visitor.next().value;\n *   if (cell === undefined) return;\n *   // Do something with cell\n *   setTimeout(run, delayMs);\n *  }\n *  setTimeout(run, delayMs);\n * ```\n * @param neighbourSelect Select neighbour to visit\n * @param grid Grid to visit\n * @param start Starting cell\n * @param visited Optional tracker of visited cells\n * @returns Cells\n */\n// eslint-disable-next-line functional/prefer-readonly-type\nexport const visitor = function* (\n  logic: VisitorLogic,\n  grid: Grid,\n  start: Cell,\n  opts: VisitorOpts = {}\n): VisitGenerator {\n\n  guardGrid(grid, `grid`);\n  guardCell(start, `start`, grid);\n\n\n  const v = opts.visited ?? mutable<Cell>(c => cellKeyString(c));\n  const possibleNeighbours = logic.options ? logic.options : (g: Grid, c: Cell) => neighbourList(g, c, crossDirections, `undefined`);\n\n  if (!isCell(start)) throw new Error(`'start' parameter is undefined or not a cell`);\n\n  // eslint-disable-next-line functional/no-let\n  let cellQueue: Cell[] = [start];\n  // eslint-disable-next-line functional/no-let\n  let moveQueue: Neighbour[] = [];\n  // eslint-disable-next-line functional/no-let\n  let current: Cell | null = null;\n\n  while (cellQueue.length > 0) {\n    if (current === null) {\n      // eslint-disable-next-line functional/immutable-data\n      const nv = cellQueue.pop();\n      if (nv === undefined) {\n        break;\n      }\n      current = nv;\n    }\n\n    if (!v.has(current)) {\n      v.add(current);\n      yield (current);\n\n      const nextSteps = possibleNeighbours(grid, current)\n        .filter(step => !v.has(step[1]));\n\n      if (nextSteps.length === 0) {\n        // No more moves for this cell\n        if (current !== null) {\n          cellQueue = cellQueue.filter(cq => cellEquals(cq, current as Cell));\n        }\n      } else {\n        // eslint-disable-next-line functional/immutable-data\n        moveQueue.push(...nextSteps);\n      }\n    }\n\n    // Remove steps already made\n    moveQueue = moveQueue.filter(step => !v.has(step[1]));\n\n    if (moveQueue.length === 0) {\n      current = null;\n    } else {\n      // Pick move\n      const potential = logic.select(moveQueue);\n      if (potential !== undefined) {\n        // eslint-disable-next-line functional/immutable-data\n        cellQueue.push(potential[1]);\n        current = potential[1];\n      }\n    }\n  }\n};\n\nexport const visitorDepth = (grid: Grid, start: Cell, opts: VisitorOpts = {}) => visitor({\n  select: (nbos) => nbos[nbos.length - 1]\n},\n  grid,\n  start,\n  opts);\n\nexport const visitorBreadth = (grid: Grid, start: Cell, opts: VisitorOpts = {}) => visitor({\n  select: (nbos) => nbos[0]\n},\n  grid,\n  start,\n  opts);\n\nconst randomNeighbour = (nbos: readonly Neighbour[]) => randomElement(nbos); // .filter(isNeighbour));\n\nexport const visitorRandomContiguous = (grid: Grid, start: Cell, opts: VisitorOpts = {}) => visitor({\n  select: randomNeighbour\n},\n  grid,\n  start,\n  opts);\n\n/**\n * Visit by following rows. Normal order is left-to-right, top-to-bottom.\n * @param grid \n * @param start \n * @param opts \n * @returns \n */\nexport const visitorRandom = (grid: Grid, start: Cell, opts: VisitorOpts = {}) => visitor({\n  options: (grid, cell) => {\n    const t: Neighbour[] = [];\n    for (const c of cells(grid, cell)) {\n      // eslint-disable-next-line functional/immutable-data\n      t.push([`n`, c]);\n    }\n    return t;\n  },\n  select: randomNeighbour\n},\n  grid,\n  start,\n  opts);\n\nexport const visitorRow = (grid: Grid, start: Cell = {x: 0, y: 0}, opts: VisitorOpts = {}) => {\n  const {reversed = false} = opts;\n\n  const neighbourSelect = (nbos: readonly Neighbour[]) => nbos.find(n => n[0] === (reversed ? `w` : `e`));\n\n  const possibleNeighbours = (grid: Grid, cell: Cell): ReadonlyArray<Neighbour> => {\n    if (reversed) {\n      // WALKING BACKWARD ALONG ROW\n      if (cell.x > 0) {\n        // All fine, step to the left\n        cell = {x: cell.x - 1, y: cell.y};\n      } else {\n        // At the beginning of a row\n        if (cell.y > 0) {\n          // Wrap to next row up\n          cell = {x: grid.cols - 1, y: cell.y - 1};\n        } else {\n          // Wrap to end of grid\n          cell = {x: grid.cols - 1, y: grid.rows - 1};\n        }\n      }\n    } else {\n      /*\n       * WALKING FORWARD ALONG ROWS\n       */\n      if (cell.x < grid.rows - 1) {\n        // All fine, step to the right\n        cell = {x: cell.x + 1, y: cell.y};\n      } else {\n        // At the end of a row\n        if (cell.y < grid.rows - 1) {\n          // More rows available, wrap to next row down\n          cell = {x: 0, y: cell.y + 1};\n        } else {\n          // No more rows available, wrap to start of the grid\n          cell = {x: 0, y: 0};\n        }\n      }\n    }\n    return [[(reversed ? `w` : `e`), cell]];\n  };\n\n  const logic: VisitorLogic = {\n    select: neighbourSelect,\n    options: possibleNeighbours\n  };\n\n  return visitor(logic, grid, start, opts);\n};\n\n/**\n * Runs the provided `visitor` for `steps`, returning the cell we end at\n * \n * ```js\n * // Get a cell 10 steps away (row-wise) from start\n * const cell = visitFor(grid, start, 10, visitorRow);\n * ```\n * @param grid Grid to traverse\n * @param start Start point\n * @param steps Number of steps\n * @param visitor Visitor function\n * @returns \n */\nexport const visitFor = (grid: Grid, start: Cell, steps: number, visitor: Visitor): Cell => {\n  guardInteger(steps, ``, `steps`);\n\n  const opts: VisitorOpts = {\n    reversed: steps < 0\n  };\n  steps = Math.abs(steps);\n\n  // eslint-disable-next-line functional/no-let\n  let c = start;\n  // eslint-disable-next-line functional/no-let\n  let v = visitor(grid, start, opts);\n  v.next(); // Burn up starting cell\n\n  // eslint-disable-next-line functional/no-let\n  let stepsMade = 0;\n\n  while (stepsMade < steps) {\n    stepsMade++;\n    const {value} = v.next();\n    if (value) {\n      c = value;\n      if (opts.debug) console.log(`stepsMade: ${stepsMade} cell: ${c.x}, ${c.y} reverse: ${opts.reversed}`);\n    } else {\n      if (steps >= grid.cols * grid.rows) {\n        steps -= grid.cols * grid.rows;\n        stepsMade = 0;\n        v = visitor(grid, start, opts);\n        v.next();\n        c = start;\n        if (opts.debug) console.log(`resetting visitor to ${steps}`);\n      } else throw new Error(`Value not received by visitor`);\n    }\n  }\n  return c;\n};\n\n/**\n * Visits cells running down columns, left-to-right.\n * @param grid Grid to traverse\n * @param start Start cell\n * @param opts Options\n * @returns Visitor generator\n */\nexport const visitorColumn = (grid: Grid, start: Cell, opts: VisitorOpts = {}): VisitGenerator => {\n  const {reversed = false} = opts;\n  const logic: VisitorLogic = {\n    select: (nbos) => nbos.find(n => n[0] === (reversed ? `n` : `s`)),\n    options: (grid, cell): ReadonlyArray<Neighbour> => {\n      if (reversed) {\n        // WALK UP COLUMN, RIGHT-TO-LEFT\n        if (cell.y > 0) {\n          // Easy case\n          cell = {x: cell.x, y: cell.y - 1};\n        } else {\n          // Top of column\n          if (cell.x === 0) {\n            // Top-left corner, need to wrap\n            cell = {x: grid.cols - 1, y: grid.rows - 1};\n          } else {\n            cell = {x: cell.x - 1, y: grid.rows - 1};\n          }\n        }\n      } else {\n        // WALK DOWN COLUMNS, LEFT-TO-RIGHT\n        if (cell.y < grid.rows - 1) {\n          // Easy case, move down by one\n          cell = {x: cell.x, y: cell.y + 1};\n        } else {\n          // End of column\n          if (cell.x < grid.cols - 1) {\n            // Move to next column and start at top\n            cell = {x: cell.x + 1, y: 0};\n          } else {\n            // Move to start of grid\n            cell = {x: 0, y: 0};\n          }\n        }\n      }\n      return [[reversed ? `n` : `s`, cell]];\n    }\n  };\n  return visitor(logic, grid, start, opts);\n};\n\n/**\n * Enumerate rows of grid, returning all the cells in the row\n * as an array\n * \n * ```js\n * for (const row of Grid.rows(shape)) {\n *  // row is an array of Cells.\n *  // [ {x:0, y:0}, {x:1, y:0} ... ] \n * }\n * ```\n * @param grid \n * @param start \n */\nexport const rows = function* (grid: Grid, start: Cell = {x: 0, y: 0}) {\n  //eslint-disable-next-line functional/no-let\n  let row = start.y;\n  //eslint-disable-next-line functional/no-let\n  let rowCells: Cell[] = [];\n\n  for (const c of cells(grid, start)) {\n    if (c.y !== row) {\n      yield rowCells;\n      rowCells = [c];\n      row = c.y;\n    } else {\n      //eslint-disable-next-line functional/immutable-data\n      rowCells.push(c);\n    }\n  }\n  if (rowCells.length > 0) yield rowCells;\n};\n\n/**\n * Enumerate all cells in an efficient manner. Runs left-to-right, top-to-bottom.\n * If end of grid is reached, iterator will wrap to ensure all are visited.\n *\n * @param grid\n * @param start\n */\nexport const cells = function* (grid: Grid, start: Cell = {x: 0, y: 0}) {\n  guardGrid(grid, `grid`);\n  guardCell(start, `start`, grid);\n\n  // eslint-disable-next-line functional/no-let\n  let {x, y} = start;\n  // eslint-disable-next-line functional/no-let\n  let canMove = true;\n  do {\n    yield {x, y};\n    x++;\n    if (x === grid.cols) {\n      y++;\n      x = 0;\n    }\n    if (y === grid.rows) {\n      y = 0;\n      x = 0;\n    }\n    if (x === start.x && y === start.y) canMove = false; // Complete\n  } while (canMove);\n};\n\nexport const access1dArray = <V>(array: readonly V[], cols: number): CellAccessor<V> => {\n  const grid = {cols, rows: Math.ceil(array.length / cols)};\n  const fn: CellAccessor<V> = (cell: Cell, wrap: BoundsLogic): V | undefined => {\n    const index = indexFromCell(grid, cell, wrap);\n    if (index === undefined) return undefined;\n    return array[index];\n  };\n  return fn;\n};\n\n/**\n * Returns a function that updates a 2D array representation\n * of a grid. Array is mutated.\n * \n * ```js\n * const m = Grids.array2dUpdater(grid, array);\n * m(someValue, { x:2, y:3 });\n * ```\n * @param grid \n * @param array \n * @returns \n */\n//eslint-disable-next-line functional/prefer-readonly-type\nexport const array2dUpdater = <V>(grid: Grid & GridVisual, array: V[][]) => {\n  const fn = (v: V, position: Points.Point) => {\n    const pos = cellAtPoint(grid, position);\n    if (pos === undefined) throw new Error(`Position does not exist. Pos: ${JSON.stringify(position)} Grid: ${JSON.stringify(grid)}`);\n    //eslint-disable-next-line functional/immutable-data\n    array[pos.y][pos.x] = v;\n  };\n  return fn;\n};\n\n/**\n * Visits a grid packed into an array.\n * \n * @example By default visits left-to-right, top-to-bottom:\n * ```js\n * const data = [1, 2, 3, 4, 5, 6];\n * const cols = 2;\n * for (const [value,index] of visitArray(data, cols)) {\n *  // Yields: 1, 2, 3, 4, 5, 6\n * }\n * ```\n * \n * @example\n * ```js\n * ```\n * @param array \n * @param cols \n * @param iteratorFn \n */\nexport function* visitArray<V>(array: readonly V[], cols: number, iteratorFn?: Visitor, opts?: VisitorOpts): IterableIterator<readonly [data: V, index: number]> {\n  if (typeof array === `undefined`) throw Error(`First parameter is undefined, expected an array`);\n  if (array === null) throw Error(`First parameter is null, expected an array`);\n  if (!Array.isArray(array)) throw Error(`First parameter should be an array`);\n\n  guardInteger(cols, `aboveZero`, `cols`);\n  if (array.length === 0) return;\n\n  const wrap = opts?.boundsWrap ?? `stop`;\n  const rows = Math.ceil(array.length / cols);\n  const grid: Grid = {\n    cols, rows\n  };\n\n  if (iteratorFn === undefined) iteratorFn = cells;\n  const iter = iteratorFn(grid, {x: 0, y: 0}, opts);\n  for (const cell of iter) {\n    const index = indexFromCell(grid, cell, wrap);\n    if (index === undefined) return undefined;\n    yield [array[index], index];\n  }\n}\n\n/**\n * Returns the index for a given cell.\n * This is useful if a grid is stored in an array.\n * \n * ```js\n * const data = [ \n *  1, 2, \n *  3, 4, \n *  5, 6 ];\n * const cols = 2; // Grid of 2 columns wide\n * const index = indexFromCell(cols, {x: 1, y: 1});\n * // Yields an index of 3\n * console.log(data[index]); // Yields 4\n * ```\n * \n * Bounds logic is applied to cell.x/y separately. Wrapping\n * only ever happens in same col/row.\n * @see cellFromIndex\n * @param colsOrGrid \n * @param cell \n * @returns \n */\nexport const indexFromCell = (grid: Grid, cell: Cell, wrap: BoundsLogic): number | undefined => {\n  guardGrid(grid, `grid`);\n\n  //eslint-disable-next-line functional/no-let\n\n  if (cell.x < 0) {\n    switch (wrap) {\n      case `stop`:\n        cell = {...cell, x: 0};\n        break;\n      case `unbounded`:\n        throw new Error(`unbounded not supported`);\n      case `undefined`:\n        return undefined;\n      case `wrap`:\n        //cell = { ...cell, x: grid.cols + cell.x };\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        cell = offset(grid, {x: 0, y: cell.y}, {x: cell.x, y: 0}, `wrap`)!;\n        break;\n    }\n  }\n  if (cell.y < 0) {\n    switch (wrap) {\n      case `stop`:\n        cell = {...cell, y: 0};\n        break;\n      case `unbounded`:\n        throw new Error(`unbounded not supported`);\n      case `undefined`:\n        return undefined;\n      case `wrap`:\n        cell = {...cell, y: grid.rows + cell.y};\n        break;\n    }\n  }\n  if (cell.x >= grid.cols) {\n    switch (wrap) {\n      case `stop`:\n        cell = {...cell, x: grid.cols - 1};\n        break;\n      case `unbounded`:\n        throw new Error(`unbounded not supported`);\n      case `undefined`:\n        return undefined;\n      case `wrap`:\n        cell = {...cell, x: cell.x % grid.cols};\n        break;\n    }\n  }\n  if (cell.y >= grid.rows) {\n    switch (wrap) {\n      case `stop`:\n        cell = {...cell, y: grid.rows - 1};\n        break;\n      case `unbounded`:\n        throw new Error(`unbounded not supported`);\n      case `undefined`:\n        return undefined;\n      case `wrap`:\n        cell = {...cell, y: cell.y % grid.rows};\n        break;\n    }\n  }\n\n  const index = cell.y * grid.cols + cell.x;\n\n  return index;\n};\n\n/**\n * Returns x,y from an array index.\n * \n * ```js\n *  const data = [ \n *   1, 2, \n *   3, 4, \n *   5, 6 ];\n * \n * // Cols of 2, index 2 (ie. data[2] == 3)\n * const cell = cellFromIndex(2, 2);\n * // Yields: {x: 0, y: 1}\n * ```\n * @see indexFromCell\n * @param colsOrGrid \n * @param index \n * @returns \n */\nexport const cellFromIndex = (colsOrGrid: number | Grid, index: number): Cell => {\n  //eslint-disable-next-line functional/no-let\n  let cols = 0;\n  if (typeof colsOrGrid === `number`) {\n    cols = colsOrGrid;\n  } else {\n    cols = colsOrGrid.cols;\n  }\n  guardInteger(cols, `aboveZero`, `colsOrGrid`);\n\n  return {\n    x: index % cols,\n    y: Math.floor(index / cols)\n  };\n};\n","export type ValueSetEventMap<V> = {\n  readonly add: { readonly value: V; readonly updated: boolean };\n  readonly clear: boolean;\n  readonly delete: V;\n};\n\nexport { mutable } from './SetMutable.js';\nexport { immutable } from './SetImmutable.js';\nexport { type ISetMutable } from './ISetMutable.js';\nexport { type ISetImmutable } from './ISetImmutable.js';\n","// ✔ UNIT TESTED\nimport { type ToString, defaultKeyer } from '../../Util.js';\nimport { SimpleEventEmitter } from '../../Events.js';\nimport { type ISetMutable } from './ISetMutable.js';\nimport { type ValueSetEventMap } from './index.js';\n\n/**\n * Creates a {@link ISetMutable}.\n * @param keyString Function that produces a key based on a value. If unspecified, uses `JSON.stringify`\n * @returns\n */\nexport const mutable = <V>(\n  keyString?: ToString<V> | undefined\n): ISetMutable<V> => new SetStringMutable(keyString);\n\n/**\n * Mutable string set\n */\nexport class SetStringMutable<V>\n  extends SimpleEventEmitter<ValueSetEventMap<V>>\n  implements ISetMutable<V>\n{\n  // ✔ UNIT TESTED\n  /* eslint-disable functional/prefer-readonly-type */\n  store = new Map<string, V>();\n  keyString: ToString<V>;\n\n  /**\n   * Constructor\n   * @param keyString Function which returns a string version of added items. If unspecified `JSON.stringify`\n   */\n  constructor(keyString: ToString<V> | undefined) {\n    super();\n    this.keyString = keyString ?? defaultKeyer<V>;\n  }\n\n  /**\n   * Number of items stored in set\n   */\n  get size() {\n    return this.store.size;\n  }\n\n  /**\n   * Adds one or more items to set. `add` event is fired for each item\n   * @param v items to add\n   */\n  add(...values: Array<V>): boolean {\n    //eslint-disable-next-line functional/no-let\n    let somethingAdded = false;\n    for (const i of values) {\n      const isUpdated = this.has(i);\n      this.store.set(this.keyString(i), i);\n      super.fireEvent(`add`, { value: i, updated: isUpdated });\n      if (!isUpdated) somethingAdded = true;\n    }\n    return somethingAdded;\n  }\n\n  /**\n   * Returns values from set as an iterable\n   * @returns\n   */\n  //eslint-disable-next-line functional/prefer-tacit\n  values() {\n    return this.store.values();\n  }\n\n  /**\n   * Clear items from set\n   */\n  clear() {\n    this.store.clear();\n    super.fireEvent(`clear`, true);\n  }\n\n  /**\n   * Delete value from set.\n   * @param v Value to delete\n   * @returns _True_ if item was found and removed\n   */\n  delete(v: V): boolean {\n    const isDeleted = this.store.delete(this.keyString(v));\n    if (isDeleted) super.fireEvent(`delete`, v);\n    return isDeleted;\n  }\n\n  /**\n   * Returns _true_ if item exists in set\n   * @param v\n   * @returns\n   */\n  has(v: V): boolean {\n    return this.store.has(this.keyString(v));\n  }\n\n  /**\n   * Returns array copy of set\n   * @returns Array copy of set\n   */\n  toArray(): V[] {\n    return Array.from(this.store.values());\n  }\n}\n","import { type ToString, defaultKeyer, toStringDefault } from '../../Util.js';\nimport { type ISetImmutable } from './index.js';\n\nexport class SetStringImmutable<V> implements ISetImmutable<V> {\n  private store: Map<string, V>;\n  private keyString;\n\n  //eslint-disable-next-line functional/prefer-immutable-types\n  constructor(keyString?: ToString<V>, map?: Map<string, V>) {\n    this.store = map ?? new Map<string, V>();\n    this.keyString = keyString ?? defaultKeyer<V>;\n  }\n\n  get size(): number {\n    return this.store.size;\n  }\n\n  add(...values: readonly V[]): ISetImmutable<V> {\n    const s = new Map<string, V>(this.store);\n    for (const v of values) {\n      const key = this.keyString(v);\n      s.set(key, v);\n    }\n    return new SetStringImmutable<V>(this.keyString, s);\n  }\n\n  delete(v: V): ISetImmutable<V> {\n    const s = new Map<string, V>(this.store);\n    const key = this.keyString(v);\n    if (s.delete(key)) return new SetStringImmutable(this.keyString, s);\n    return this;\n  }\n\n  has(v: V): boolean {\n    const key = this.keyString(v);\n    return this.store.has(key);\n  }\n\n  toArray(): V[] {\n    return [...this.store.values()];\n  }\n\n  *values() {\n    yield* this.store.values();\n  }\n}\n\n/**\n * Immutable set that uses a `keyString` function to determine uniqueness\n *\n * @param keyString Function that produces a key based on a value. If unspecified, uses `JSON.stringify`.\n * @returns\n */\nexport const immutable = <V>(\n  keyString: ToString<V> = toStringDefault\n): ISetImmutable<V> => new SetStringImmutable(keyString);\n","export * from './Log.js';\n\nexport * from './DomRx.js';\nexport * from './Util.js';\n\n/**\n * Functions for working with DOM elements\n */\nexport * as Forms from './Forms.js';\n\nexport * from './PointerVisualise.js';\n\nexport * from './ErrorHandler.js';\n\nexport * as DragDrop from './DragDrop.js';\n","export const addShadowCss = (\n  parentEl: Readonly<HTMLElement>,\n  styles: string\n): ShadowRoot => {\n  const styleEl = document.createElement(`style`);\n\n  //eslint-disable-next-line functional/immutable-data\n  styleEl.textContent = styles;\n  //eslint-disable-next-line functional/no-let\n  let shadowRoot;\n  if (parentEl.shadowRoot) {\n    shadowRoot = parentEl.shadowRoot;\n    //eslint-disable-next-line functional/immutable-data\n    shadowRoot.innerHTML = ``;\n  } else {\n    shadowRoot = parentEl.attachShadow({ mode: `open` });\n  }\n  shadowRoot.appendChild(styleEl);\n  return shadowRoot;\n};\n","import { resolveEl } from './Util.js';\nimport { addShadowCss } from './ShadowDom.js';\n\nexport type LogOpts = {\n  readonly reverse?: boolean;\n  readonly capacity?: number;\n  readonly timestamp?: boolean;\n  readonly collapseDuplicates?: boolean;\n  readonly monospaced?: boolean;\n  readonly minIntervalMs?: number;\n  readonly css?: string;\n};\n\n//eslint-disable-next-line functional/no-mixed-types\nexport type Log = {\n  clear(): void;\n  error(msgOrError: string | Error | unknown): void;\n  log(msg?: string | object | number): HTMLElement | undefined;\n  //eslint-disable-next-line functional/prefer-immutable-types\n  append(el: HTMLElement): void;\n  dispose(): void;\n  readonly isEmpty: boolean;\n};\n\n/**\n * Allows writing to a DOM element in console.log style. Element grows in size, so use\n * something like `overflow-y: scroll` on its parent\n *\n * ```\n * const l = log(`#dataStream`); // Assumes HTML element with id `dataStream` exists\n * l.log(`Hi`);\n * l.log(); // Displays a horizontal rule\n *\n * const l = log(document.getElementById(`dataStream`), {\n *  timestamp: true,\n *  truncateEntries: 20\n * });\n * l.log(`Hi`);\n * l.error(`Some error`); // Adds class `error` to line\n * ```\n *\n * For logging high-throughput streams:\n * ```\n * // Silently drop log if it was less than 5ms since the last\n * const l = log(`#dataStream`, { minIntervalMs: 5 });\n *\n * // Only the last 100 entries are kept\n * const l = log(`#dataStream`, { capacity: 100 });\n * ```\n *\n * @param {(HTMLElement | string | undefined)} elOrId Element or id of element\n * @param {LogOpts} opts\n * @returns {Log}\n */\nexport const log = (\n  //eslint-disable-next-line functional/prefer-immutable-types\n  domQueryOrEl: HTMLElement | string,\n  opts: LogOpts = {}\n): Log => {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  const {\n    capacity = 0,\n    monospaced = true,\n    timestamp = false,\n    collapseDuplicates = true,\n    css = ``,\n  } = opts;\n\n  // eslint-disable-next-line functional/no-let\n  let added = 0;\n  // eslint-disable-next-line functional/no-let\n  let lastLog: string | undefined;\n  // eslint-disable-next-line functional/no-let\n  let lastLogRepeats = 0;\n\n  const parentEl = resolveEl<HTMLElement>(domQueryOrEl);\n  const fontFamily = monospaced\n    ? `Consolas, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", Monaco, \"Courier New\", Courier, monospace`\n    : `normal`;\n  const shadowRoot = addShadowCss(\n    parentEl,\n    `\n  .log {\n    font-family: ${fontFamily};\n    background-color: var(--code-background-color);\n    padding: var(--padding1, 0.2em);\n    overflow-y: auto;\n    height:100%;\n  }\n  .timestamp {\n    margin-right: 0.5em;\n    opacity: 0.5;\n    font-size: 70%;\n    align-self: center;\n  }\n  .line {\n    display: flex;\n    padding-bottom: 0.1em;\n    padding-top: 0.1em;\n  }\n  .line:hover {\n  \n  }\n  .error {\n    color: red;\n  }\n  .badge {\n    border: 1px solid currentColor;\n    align-self: center;\n    font-size: 70%;\n    padding-left: 0.2em;\n    padding-right: 0.2em;\n    border-radius: 1em;\n    margin-left: 0.5em;\n    margin-right: 0.5em;\n  }\n  .msg {\n    flex: 1;\n    word-break: break-word;\n  }\n  ${css}\n  `\n  );\n\n  const el = document.createElement(`div`);\n  // eslint-disable-next-line functional/immutable-data\n  el.className = `log`;\n  shadowRoot.append(el);\n\n  const error = (msgOrError: string | Error | unknown) => {\n    const line = document.createElement(`div`);\n\n    if (typeof msgOrError === `string`) {\n      // eslint-disable-next-line functional/immutable-data\n      line.innerHTML = msgOrError;\n    } else if (msgOrError instanceof Error) {\n      const stack = msgOrError.stack;\n      if (stack === undefined) {\n        // eslint-disable-next-line functional/immutable-data\n        line.innerHTML = msgOrError.toString();\n      } else {\n        // eslint-disable-next-line functional/immutable-data\n        line.innerHTML = stack.toString();\n      }\n    } else {\n      // eslint-disable-next-line functional/immutable-data\n      line.innerHTML = msgOrError as string;\n    }\n    line.classList.add(`error`);\n    append(line);\n    lastLog = undefined;\n    lastLogRepeats = 0;\n  };\n\n  //eslint-disable-next-line functional/no-let\n  let lastLogTime = 0;\n\n  const log = (whatToLog: unknown = ``): HTMLElement | undefined => {\n    // eslint-disable-next-line functional/no-let\n    let msg: string | undefined;\n    const interval = window.performance.now() - lastLogTime;\n    if (opts.minIntervalMs && interval < opts.minIntervalMs) return;\n    lastLogTime = window.performance.now();\n\n    if (typeof whatToLog === `object`) {\n      msg = JSON.stringify(whatToLog);\n    } else if (whatToLog === undefined) {\n      msg = `(undefined)`;\n    } else if (whatToLog === null) {\n      msg = `(null)`;\n    } else if (typeof whatToLog === `number`) {\n      if (Number.isNaN(msg)) msg = `(NaN)`;\n      msg = whatToLog.toString();\n    } else {\n      msg = whatToLog as string;\n    }\n\n    if (msg.length === 0) {\n      const rule = document.createElement(`hr`);\n      lastLog = undefined;\n      append(rule);\n    } else if (msg === lastLog && collapseDuplicates) {\n      const lastEl = el.firstElementChild as HTMLElement;\n      // eslint-disable-next-line functional/no-let\n      let lastBadge = lastEl.querySelector(`.badge`);\n      if (lastBadge === null) {\n        lastBadge = document.createElement(`div`);\n        // eslint-disable-next-line functional/immutable-data\n        lastBadge.className = `badge`;\n        lastEl.insertAdjacentElement(`beforeend`, lastBadge);\n      }\n      if (lastEl !== null) {\n        // eslint-disable-next-line functional/immutable-data\n        lastBadge.textContent = (++lastLogRepeats).toString();\n      }\n      return lastEl;\n    } else {\n      const line = document.createElement(`div`);\n      // eslint-disable-next-line functional/immutable-data\n      line.innerText = msg;\n      append(line);\n      lastLog = msg;\n      return line;\n    }\n  };\n\n  //eslint-disable-next-line functional/prefer-immutable-types\n  const append = (line: HTMLElement) => {\n    if (timestamp) {\n      const wrapper = document.createElement(`div`);\n      const timestamp = document.createElement(`div`);\n      // eslint-disable-next-line functional/immutable-data\n      timestamp.className = `timestamp`;\n      // eslint-disable-next-line functional/immutable-data\n      timestamp.innerText = new Date().toLocaleTimeString();\n      wrapper.append(timestamp, line);\n      line.classList.add(`msg`);\n      wrapper.classList.add(`line`);\n      line = wrapper;\n    } else {\n      line.classList.add(`line`, `msg`);\n    }\n\n    if (opts.reverse) {\n      el.appendChild(line);\n    } else {\n      el.insertBefore(line, el.firstChild);\n    }\n\n    if (capacity > 0 && ++added > capacity * 2) {\n      while (added > capacity) {\n        el.lastChild?.remove();\n        added--;\n      }\n    }\n\n    if (opts.reverse) {\n      // Scroll to bottom\n      //eslint-disable-next-line functional/immutable-data\n      el.scrollTop = el.scrollHeight;\n    }\n    lastLogRepeats = 0;\n  };\n\n  const clear = () => {\n    // eslint-disable-next-line functional/immutable-data\n    el.innerHTML = ``;\n    lastLog = undefined;\n    lastLogRepeats = 0;\n    added = 0;\n  };\n\n  const dispose = () => {\n    el.remove();\n  };\n\n  return {\n    error,\n    log,\n    append,\n    clear,\n    dispose,\n    get isEmpty() {\n      return added === 0;\n    },\n  };\n};\n","import { fromEvent, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { resolveEl } from './Util.js';\n\nexport type PluckOpts = {\n  readonly pluck: string;\n};\n\nexport type TransformOpts = {\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any,functional/prefer-immutable-types\n  transform(ev: Event): any;\n};\n\n/**\n * Responsive value\n */\n// eslint-disable-next-line functional/no-mixed-types\nexport type Rx<V> = {\n  /**\n   * Last value\n   */\n  readonly value: V;\n  /**\n   * Clears last value\n   */\n  readonly clear: () => void;\n};\n\nexport type DomRxOpts = PluckOpts | TransformOpts;\n\n/**\n * Keeps track of last event data\n *\n * ```js\n * const pointer = rx(`#myDiv`, `pointermove`).value;\n *\n * if (pointer.clientX > ...)\n * ```\n *\n * Pluck a field:\n * ```js\n * const pointerX = rx(`#myDiv`, `pointermove`, { pluck: `clientX` }).value;\n *\n * if (pointerX > ...)\n * ```\n * @template V Event type\n * @param opts\n * @return\n */\nexport const rx = <V extends object>(\n  //eslint-disable-next-line functional/prefer-immutable-types\n  elOrQuery: HTMLElement | string,\n  event: string,\n  opts?: DomRxOpts\n): Rx<V> => {\n  const el = resolveEl<HTMLElement>(elOrQuery);\n  const ev = fromEvent(el, event);\n  // @ts-ignore\n  const value: V = {};\n\n  const clear = () => {\n    const keys = Object.keys(value);\n    keys.forEach((key) => {\n      // eslint-disable-next-line functional/immutable-data, @typescript-eslint/no-explicit-any\n      delete (value as any)[key];\n    });\n  };\n  //eslint-disable-next-line functional/prefer-immutable-types\n  const setup = (sub: Observable<Event>): Rx<V> => {\n    sub.subscribe({\n      next: (newValue) => {\n        // eslint-disable-next-line functional/immutable-data, @typescript-eslint/no-explicit-any\n        Object.assign(value, newValue);\n      },\n    });\n    return {\n      value,\n      clear,\n    };\n  };\n\n  if (opts === undefined) return setup(ev);\n\n  if ((opts as PluckOpts).pluck) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return setup(ev.pipe(map((x) => (x as any)[(opts as PluckOpts).pluck])));\n  } else if ((opts as TransformOpts).transform) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return setup(ev.pipe(map((x) => (opts as TransformOpts).transform(x))));\n  }\n\n  return setup(ev);\n};\n","import { resolveEl } from './Util.js';\n\n/**\n * Adds tab and shift+tab to TEXTAREA\n * @param el\n */\n//eslint-disable-next-line functional/prefer-immutable-types\nexport const textAreaKeyboard = (el: HTMLTextAreaElement) => {\n  el.addEventListener(`keydown`, (evt) => {\n    const val = el.value;\n    const start = el.selectionStart;\n    const end = el.selectionEnd;\n\n    if (evt.key === `Tab` && evt.shiftKey) {\n      if (el.value.substring(start - 2, start) === `  `) {\n        //eslint-disable-next-line functional/immutable-data\n        el.value = val.substring(0, start - 2) + val.substring(end);\n      }\n      //eslint-disable-next-line functional/immutable-data\n      el.selectionStart = el.selectionEnd = start - 2;\n      evt.preventDefault();\n      return false;\n    } else if (evt.key === `Tab`) {\n      //eslint-disable-next-line functional/immutable-data\n      el.value = val.substring(0, start) + `  ` + val.substring(end);\n      //eslint-disable-next-line functional/immutable-data\n      el.selectionStart = el.selectionEnd = start + 2;\n      evt.preventDefault();\n      return false;\n    }\n  });\n};\n\n/**\n * Quick access to <input type=\"checkbox\"> value.\n * Provide a checkbox by string id or object reference. If a callback is\n * supplied, it will be called when the checkbox changes value.\n *\n * ```\n * const opt = checkbox(`#chkMate`);\n * opt.checked; // Gets/sets\n *\n * const opt = checkbox(document.getElementById(`#chkMate`), newVal => {\n *  if (newVal) ...\n * });\n * ```\n * @param {(string | HTMLInputElement)} domIdOrEl\n * @param {(currentVal:boolean) => void} [onChanged]\n * @returns\n */\nexport const checkbox = (\n  //eslint-disable-next-line functional/prefer-immutable-types\n  domIdOrEl: string | HTMLInputElement,\n  onChanged?: (currentVal: boolean) => void\n) => {\n  const el = resolveEl<HTMLInputElement>(domIdOrEl);\n\n  if (onChanged) {\n    el.addEventListener(`change`, () => {\n      onChanged(el.checked);\n    });\n  }\n  return {\n    get checked(): boolean {\n      return el.checked;\n    },\n    set checked(val: boolean) {\n      // eslint-disable-next-line functional/immutable-data\n      el.checked = val;\n    },\n  };\n};\n\n/**\n * Numeric INPUT\n *\n * ```\n * const el = numeric(`#num`, (currentValue) => {\n *  // Called when input changes\n * })\n * ```\n *\n * Get/set value\n * ```\n * el.value = 10;\n * ```\n * @param domIdOrEl\n * @param onChanged\n * @param live If true, event handler fires based on `input` event, rather than `change`\n * @returns\n */\nexport const numeric = (\n  //eslint-disable-next-line functional/prefer-immutable-types\n  domIdOrEl: string | HTMLInputElement,\n  onChanged?: (currentVal: number) => void,\n  live?: boolean\n) => {\n  const el = resolveEl<HTMLInputElement>(domIdOrEl) as HTMLInputElement;\n  const evt = live ? `change` : `input`;\n  if (onChanged) {\n    el.addEventListener(evt, () => {\n      onChanged(parseInt(el.value));\n    });\n  }\n  return {\n    get value(): number {\n      return parseInt(el.value);\n    },\n    set value(val: number) {\n      // eslint-disable-next-line functional/immutable-data\n      el.value = val.toString();\n    },\n  };\n};\n\n/**\n * SELECT options\n */\nexport type SelectOpts = {\n  /**\n   * Placeholder item\n   */\n  readonly placeholderOpt?: string;\n  /**\n   * If true, a placeholder option 'Choose' is added to the list\n   */\n  readonly shouldAddChoosePlaceholder?: boolean;\n  /**\n   * Item to choose after a selection is made\n   */\n  readonly autoSelectAfterChoice?: number;\n};\n\n/**\n * Button\n *\n * ```\n * const b = button(`#myButton`, () => {\n *  console.log(`Button clicked`);\n * });\n * ```\n *\n * ```\n * b.click(); // Call the click handler\n * b.disabled = true / false;\n * ```\n * @param domQueryOrEl Query string or element instance\n * @param onClick Callback when button is clicked\n * @returns\n */\nexport const button = (\n  //eslint-disable-next-line functional/prefer-immutable-types\n  domQueryOrEl: string | HTMLButtonElement,\n  onClick?: () => void\n) => {\n  const el = resolveEl(domQueryOrEl) as HTMLButtonElement;\n\n  if (onClick) {\n    el.addEventListener(`click`, (_ev) => {\n      onClick();\n    });\n  }\n  return {\n    click() {\n      if (onClick) onClick();\n    },\n    set disabled(val: boolean) {\n      // eslint-disable-next-line functional/immutable-data\n      el.disabled = val;\n    },\n  };\n};\n\n/**\n * SELECT handler\n */\nexport interface SelectHandler {\n  /**\n   * Gets/Sets disabled\n   */\n  set disabled(value: boolean);\n\n  get disabled(): boolean;\n  /**\n   * Gets value\n   */\n  get value(): string;\n  /**\n   * Sets selected index\n   */\n  get index(): number;\n  /**\n   * _True_ if currently selected item is the placeholder\n   */\n  get isSelectedPlaceholder(): boolean;\n  /**\n   * Set options\n   * @param opts Options\n   * @param preSelect Item to preselect\n   */\n  setOpts(opts: readonly string[], preSelect?: string): void;\n  /**\n   * Select item by index\n   * @param index Index\n   * @param trigger If true, triggers change event\n   */\n  select(index?: number, trigger?: boolean): void;\n}\n\n/**\n * SELECT element.\n *\n * Handle changes in value:\n * ```\n * const mySelect = select(`#mySelect`, (newValue) => {\n *  console.log(`Value is now ${newValue}`);\n * });\n * ```\n *\n * Enable/disable:\n * ```\n * mySelect.disabled = true / false;\n * ```\n *\n * Get currently selected index or value:\n * ```\n * mySelect.value / mySelect.index\n * ```\n *\n * Is the currently selected value a placeholder?\n * ```\n * mySelect.isSelectedPlaceholder\n * ```\n *\n * Set list of options\n * ```\n * // Adds options, preselecting `opt2`.\n * mySelect.setOpts([`opt1`, `opt2 ...], `opt2`);\n * ```\n *\n * Select an element\n * ```\n * mySelect.select(1); // Select second item\n * mySelect.select(1, true); // If true is added, change handler fires as well\n * ```\n * @param domQueryOrEl Query (eg `#id`) or element\n * @param onChanged Callback when a selection is made\n * @param opts Options\n * @return\n */\nexport const select = (\n  //eslint-disable-next-line functional/prefer-immutable-types\n  domQueryOrEl: string | HTMLSelectElement,\n  onChanged?: (currentVal: string) => void,\n  opts: SelectOpts = {}\n): SelectHandler => {\n  const el = resolveEl(domQueryOrEl) as HTMLSelectElement;\n  const {\n    placeholderOpt,\n    shouldAddChoosePlaceholder = false,\n    autoSelectAfterChoice = -1,\n  } = opts;\n\n  const change = () => {\n    if (onChanged !== undefined) onChanged(el.value);\n    // eslint-disable-next-line functional/immutable-data\n    if (autoSelectAfterChoice >= 0) el.selectedIndex = autoSelectAfterChoice;\n  };\n\n  if (onChanged) {\n    el.addEventListener(`change`, (_ev) => {\n      change();\n    });\n  }\n  return {\n    set disabled(val: boolean) {\n      // eslint-disable-next-line functional/immutable-data\n      el.disabled = val;\n    },\n    get value(): string {\n      return el.value;\n    },\n    get index(): number {\n      return el.selectedIndex;\n    },\n    get isSelectedPlaceholder(): boolean {\n      return (\n        (shouldAddChoosePlaceholder || opts.placeholderOpt !== undefined) &&\n        el.selectedIndex === 0\n      );\n    },\n    //eslint-disable-next-line functional/prefer-immutable-types\n    setOpts(opts: string[], preSelect?: string): void {\n      // eslint-disable-next-line functional/immutable-data\n      el.options.length = 0;\n\n      if (shouldAddChoosePlaceholder) opts = [`-- Choose --`, ...opts];\n      else if (placeholderOpt !== undefined) opts = [placeholderOpt, ...opts];\n      // eslint-disable-next-line functional/no-let\n      let toSelect = 0;\n\n      opts.forEach((o, index) => {\n        const optEl = document.createElement(`option`);\n        // eslint-disable-next-line functional/immutable-data\n        optEl.value = o;\n        // eslint-disable-next-line functional/immutable-data\n        optEl.innerHTML = o;\n        if (preSelect !== undefined && o === preSelect) toSelect = index;\n        el.options.add(optEl);\n      });\n      // eslint-disable-next-line functional/immutable-data\n      el.selectedIndex = toSelect;\n    },\n    select(index: number = 0, trigger: boolean = false): void {\n      // eslint-disable-next-line functional/immutable-data\n      el.selectedIndex = index;\n      if (trigger && onChanged) {\n        change();\n      }\n    },\n  };\n};\n","import type { Timestamped, TrackedValueOpts } from './TrackedValue.js';\nimport { TrackerBase } from './TrackerBase.js';\n\n/**\n * A tracked value of type `V`.\n */\nexport class ObjectTracker<V extends object> extends TrackerBase<V> {\n  values: Timestamped<V>[];\n\n  constructor(opts: TrackedValueOpts = {}) {\n    super(opts);\n    this.values = [];\n  }\n\n  onTrimmed() {\n    // no-op\n  }\n\n  /**\n   * Reduces size of value store to `limit`. Returns\n   * number of remaining items\n   * @param limit\n   */\n  trimStore(limit: number): number {\n    if (limit >= this.values.length) return this.values.length;\n    this.values = this.values.slice(-limit);\n    return this.values.length;\n  }\n\n  /**\n   * Allows sub-classes to be notified when a reset happens\n   * @ignore\n   */\n  onReset() {\n    this.values = [];\n  }\n\n  /**\n   * Tracks a value\n   * @ignore\n   */\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any,functional/prefer-immutable-types\n  seenImpl(p: V[] | Timestamped<V>[]): Timestamped<V>[] {\n    // Make sure values have a timestamp\n    const ts = p.map((v) =>\n      `at` in v\n        ? v\n        : {\n            ...v,\n            at: Date.now(),\n          }\n    );\n\n    const last = ts.at(-1) as Timestamped<V>;\n\n    if (this.storeIntermediate) this.values.push(...ts);\n    else if (this.values.length === 0) {\n      // Add as initial value\n      this.values.push(last);\n    } else if (this.values.length === 2) {\n      // Replace last value\n      this.values[1] = last;\n    } else if (this.values.length === 1) {\n      // Add last value\n      this.values.push(last);\n    }\n\n    return ts;\n  }\n\n  /**\n   * Last seen value. If no values have been added, it will return the initial value\n   */\n  get last() {\n    if (this.values.length === 1) return this.values[0];\n    //eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.values.at(-1)!;\n  }\n\n  /**\n   * Returns the initial value\n   */\n  get initial() {\n    return this.values.at(0);\n  }\n\n  /**\n   * Returns number of recorded values (includes the initial value in the count)\n   */\n  get size() {\n    return this.values.length;\n  }\n\n  /**\n   * Returns the elapsed time, in milliseconds since the initial value\n   */\n  get elapsed(): number {\n    return Date.now() - this.values[0].at;\n  }\n}\n","import * as Points from '../geometry/Point.js';\nimport {\n  type Timestamped,\n  TrackedValueMap,\n  type TrackedValueOpts as TrackOpts,\n} from './TrackedValue.js';\nimport { ObjectTracker } from './ObjectTracker.js';\nimport { Lines, Polar, Vectors } from '../geometry/index.js';\n\n/**\n * Information about seen points\n */\nexport type PointTrack = Points.PointRelationResult & {\n  // readonly speedFromInitial:number\n};\n\nexport type PointTrackerResults = {\n  readonly fromLast: PointTrack;\n  readonly fromInitial: PointTrack;\n  readonly values: readonly Points.Point[];\n};\n\n/**\n * Point tracker. Create via `pointTracker()`.\n *\n */\nexport class PointTracker extends ObjectTracker<Points.Point> {\n  /**\n   * Function that yields the relation from initial point\n   */\n  initialRelation: Points.PointRelation | undefined;\n\n  /**\n   * Last result\n   */\n  lastResult: PointTrackerResults | undefined;\n\n  constructor(opts: TrackOpts = {}) {\n    super(opts);\n  }\n\n  onTrimmed(): void {\n    // Force new relation calculations\n    this.initialRelation = undefined;\n  }\n\n  /**\n   * Returns the last x coord\n   */\n  get x() {\n    return this.last.x;\n  }\n\n  /**\n   * Returns the last y coord\n   */\n  get y() {\n    return this.last.y;\n  }\n\n  /**\n   * @ignore\n   */\n  onReset(): void {\n    super.onReset();\n    this.lastResult = undefined;\n    this.initialRelation = undefined;\n  }\n\n  /**\n   * Tracks a point, returning data on its relation to the\n   * initial point and the last received point.\n   * @param p Point\n   */\n  seen(\n    //eslint-disable-next-line functional/prefer-immutable-types\n    ...p: Points.Point[] | Timestamped<Points.Point>[]\n  ): PointTrackerResults {\n    const currentLast = this.last;\n    super.seen(...p);\n    const newLast = this.last;\n\n    // Don't yet have an initial relation function\n    if (this.initialRelation === undefined && this.initial) {\n      this.initialRelation = Points.relation(this.initial);\n    } else if (this.initialRelation === undefined) {\n      throw new Error(`Bug: No initialRelation, and this.inital is undefined?`);\n    }\n\n    const lastRelation = Points.relation(currentLast);\n\n    // Get basic geometric relation from start to the last provided point\n    const initialRel: PointTrack = {\n      ...this.initialRelation(newLast),\n    };\n    const lastRel: PointTrack = {\n      ...lastRelation(newLast),\n      speed:\n        this.values.length < 2\n          ? 0\n          : Lines.length(currentLast, newLast) / (newLast.at - currentLast.at),\n    };\n\n    const r: PointTrackerResults = {\n      fromInitial: initialRel,\n      fromLast: lastRel,\n      values: [...this.values],\n    };\n    this.lastResult = r;\n    return r;\n  }\n\n  /**\n   * Returns a polyline representation of stored points.\n   * Returns an empty array if points were not saved, or there's only one.\n   */\n  get line(): Lines.PolyLine {\n    if (this.values.length === 1) return [];\n    return Lines.joinPointsToLines(...this.values);\n  }\n\n  /**\n   * Returns a vector of the initial/last points of the tracker.\n   * Returns as a polar coordinate\n   */\n  get vectorPolar(): Polar.Coord {\n    return Vectors.fromLinePolar(this.lineStartEnd);\n  }\n\n  /**\n   * Returns a vector of the initial/last points of the tracker.\n   * Returns as a Cartesian coordinate\n   */\n  get vectorCartesian(): Points.Point {\n    return Vectors.fromLineCartesian(this.lineStartEnd);\n  }\n\n  /**\n   * Returns a line from initial point to last point.\n   *\n   * If there are less than two points, Lines.Empty is returned\n   */\n  get lineStartEnd(): Lines.Line {\n    const initial = this.initial;\n    if (this.values.length < 2 || !initial) return Lines.Empty;\n    return {\n      a: initial,\n      b: this.last,\n    };\n  }\n\n  /**\n   * Returns distance from latest point to initial point.\n   * If there are less than two points, zero is returned.\n   *\n   * This is the direct distance, not the accumulated length.\n   * @returns Distance\n   */\n  distanceFromStart(): number {\n    const initial = this.initial;\n    if (this.values.length >= 2 && initial !== undefined) {\n      return Points.distance(initial, this.last);\n    } else {\n      return 0;\n    }\n  }\n\n  /**\n   * Difference between last point and the initial point, calculated\n   * as a simple subtraction of x & y.\n   *\n   * `Points.Placeholder` is returned if there's only one point so far.\n   */\n  difference(): Points.Point {\n    const initial = this.initial;\n    if (this.values.length >= 2 && initial !== undefined) {\n      return Points.subtract(this.last, initial);\n    } else {\n      return Points.Placeholder;\n    }\n  }\n\n  /**\n   * Returns angle (in radians) from latest point to the initial point\n   * If there are less than two points, undefined is return.\n   * @returns Angle in radians\n   */\n  angleFromStart(): number | undefined {\n    const initial = this.initial;\n    if (initial !== undefined && this.values.length > 2) {\n      return Points.angle(initial, this.last);\n    }\n  }\n\n  /**\n   * Returns the total length of accumulated points.\n   * Returns 0 if points were not saved, or there's only one\n   */\n  get length(): number {\n    if (this.values.length === 1) return 0;\n    const l = this.line;\n    return Lines.length(l);\n  }\n}\n\n/**\n * A {@link TrackedValueMap} for points. Uses {@link PointTracker} to\n * track added values.\n */\nexport class TrackedPointMap extends TrackedValueMap<\n  Points.Point,\n  PointTracker\n> {\n  constructor(opts: TrackOpts = {}) {\n    super((key, start) => {\n      if (start === undefined) throw new Error(`Requires start point`);\n      const p = new PointTracker({\n        ...opts,\n        id: key,\n      });\n      p.seen(start);\n      return p;\n    });\n  }\n}\n\n/**\n * Track several named points over time, eg a TensorFlow body pose point.\n * Call `seen()` to track a point. Mutable. If you want to compare\n * a single coordinate with a reference coordinate, [Geometry.Points.relation](Geometry.Points.relation.html) may be a better choice.\n *\n * Basic usage\n * ```js\n * import { pointsTracker } from 'https://unpkg.com/ixfx/dist/data.js';\n *\n * const pt = pointsTracker();\n *\n * // Track a point under a given id\n * document.addEventListener(`pointermove`, e => {\n *  const info = await pt.seen(e.pointerId, { x: e.x, y: e.y });\n *  // Yields some info on relation of the point to initial value\n * });\n * ```\n *\n * Do something with last values for all points\n * ```js\n * const c = Points.centroid(...Array.from(pt.last()));\n * ```\n *\n * More functions...\n * ```js\n * pt.size;         // How many named points are being tracked\n * pt.delete(id);  // Delete named point\n * pt.reset();     // Clear data\n * ```\n *\n * Accessing by id:\n *\n * ```js\n * pt.get(id);  // Get named point (or _undefined_)\n * pt.has(id);  // Returns true if id exists\n * ```\n *\n * Iterating over data\n *\n * ```js\n * pt.trackedByAge();   // Iterates over tracked points, sorted by age (oldest first)\n * pt.tracked();  // Tracked values\n * pt.ids();      // Iterator over ids\n *\n * // Last received value for each named point\n * pt.last();\n *\n * pt.initialValues(); // Iterator over initial values for each point\n * ```\n *\n * You can work with 'most recently updated' points:\n *\n * ```js\n * // Iterates over points, sorted by age (oldest first)\n * pt.valuesByAge();\n * ```\n *\n * Options:\n * * `storeIntermediate`: if true, all points are stored internally\n * * `resetAfterSamples`: If set above 0, it will automatically reset after the given number of samples have been seen\n * @param opts\n * @returns\n */\nexport const pointsTracker = (opts: TrackOpts = {}) =>\n  new TrackedPointMap(opts);\n\n/**\n * A tracked point. Create via {@link pointTracker}. Mutable. Useful for monitoring how\n * it changes over time. Eg. when a pointerdown event happens, to record the start position and then\n * track the pointer as it moves until pointerup.\n *\n * [See the point tracker playground](https://clinth.github.io/ixfx-demos/playgrounds/data/point-tracker/)\n *\n * ```js\n * import { pointTracker } from 'https://unpkg.com/ixfx/dist/data.js';\n *\n * // Create a tracker\n * const t = pointTracker();\n *\n * // ...and later, tell it when a point is seen\n * const nfo = t.seen({x: evt.x, y:evt.y});\n * // nfo gives us some details on the relation between the seen point, the start, and points in-between\n * // nfo.angle, nfo.centroid, nfo.speed etc.\n * ```\n *\n * Compute based on last seen point\n * ```js\n * t.angleFromStart();\n * t.distanceFromStart();\n * t.x / t.y\n * t.length; // Total length of accumulated points\n * t.elapsed; // Total duration since start\n * t.lastResult; // The PointSeenInfo for last seen point\n * ```\n *\n * Housekeeping\n * ```js\n * t.reset(); // Reset tracker\n * ```\n *\n * By default, the tracker only keeps track of the initial point and\n * does not store intermediate 'seen' points. To use the tracker as a buffer.\n *\n * ```js\n * // Keep only the last 10 points\n * const t = pointTracker({\n *  sampleLimit: 10\n * });\n *\n * // Store all 'seen' points\n * const t = pointTracker({\n *  storeIntermediate: true\n * });\n *\n * // In this case, the whole tracker is automatically\n * // reset after 10 samples\n * const t = pointTracker({\n *  resetAfterSamples: 10\n * })\n * ```\n *\n * When using a limited buffer, the 'initial' point will be the oldest in the\n * buffer, not actually the very first point seen.\n */\nexport const pointTracker = (opts: TrackOpts = {}) => new PointTracker(opts);\n","import {\n  type PointTrackerResults,\n  pointsTracker,\n} from '../data/PointTracker.js';\nimport { fullSizeElement, resolveEl } from './Util.js';\nimport * as Svg from '../visual/Svg.js';\n\nexport type Opts = {\n  readonly touchRadius?: number;\n  readonly mouseRadius?: number;\n  readonly trace?: boolean;\n  readonly hue?: number;\n};\n\n/**\n * Visualises pointer events within a given element.\n *\n * ```js\n * // Show pointer events for whole document\n * pointerVis(document);\n * ```\n *\n * Note you may need to set the following CSS properties on the target element:\n *\n * ```css\n * touch-action: none;\n * user-select: none;\n * overscroll-behavior: none;\n * ```\n *\n * Options\n * * touchRadius/mouseRadius: size of circle for these kinds of pointer events\n * * trace: if true, intermediate events are captured and displayed\n * @param elOrQuery\n * @param opts\n */\nexport const pointerVisualise = (\n  //eslint-disable-next-line functional/prefer-immutable-types\n  elOrQuery: HTMLElement | string,\n  opts: Opts = {}\n) => {\n  const touchRadius = opts.touchRadius ?? 45;\n  const mouseRadius = opts.touchRadius ?? 20;\n  const trace = opts.trace ?? false;\n  const hue = opts.hue ?? 100;\n\n  const startFillStyle = `hsla(${hue}, 100%, 10%, 10%)`;\n\n  //eslint-disable-next-line functional/no-let\n  let currentHue = hue;\n\n  const el = resolveEl(elOrQuery);\n  const tracker = pointsTracker({\n    storeIntermediate: trace,\n  });\n\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const svg = document.createElementNS(\n    `http://www.w3.org/2000/svg`,\n    `svg`\n  ) as any as SVGElement & HTMLElement;\n  //eslint-disable-next-line functional/immutable-data\n  svg.id = `pointerVis`;\n  svg.style.zIndex = `-1000`;\n  svg.style.position = `fixed`;\n  svg.style.top = `0`;\n  svg.style.left = `0`;\n  svg.style.width = `100%`;\n  svg.style.height = `100%`;\n  svg.style.boxSizing = `border-box`;\n  svg.style.border = `3px solid red`;\n  svg.style.pointerEvents = `none`;\n  svg.style.touchAction = `none`;\n\n  fullSizeElement(svg);\n  //eslint-disable-next-line functional/no-let\n  let pointerCount = 0;\n\n  //eslint-disable-next-line functional/prefer-immutable-types\n  const lostPointer = async (ev: PointerEvent) => {\n    const id = ev.pointerId.toString();\n    tracker.delete(id);\n    currentHue = hue;\n    svg.querySelector(`#pv-start-${id}`)?.remove();\n\n    //eslint-disable-next-line functional/no-let\n    for (let i = 0; i < pointerCount + 10; i++) {\n      svg.querySelector(`#pv-progress-${id}-${i}`)?.remove();\n    }\n    pointerCount = 0;\n  };\n\n  //eslint-disable-next-line functional/prefer-immutable-types\n  const trackPointer = async (ev: PointerEvent) => {\n    const id = ev.pointerId.toString();\n    const pt = { x: ev.x, y: ev.y };\n    const type = ev.pointerType;\n    if (ev.type === `pointermove` && !tracker.has(id)) {\n      return;\n    }\n    const info = (await tracker.seen(id, pt)) as PointTrackerResults;\n\n    if (info.values.length === 1) {\n      const el = Svg.Elements.circle(\n        {\n          ...info.values[0],\n          radius: type === `touch` ? touchRadius : mouseRadius,\n        },\n        svg,\n        {\n          fillStyle: startFillStyle,\n        },\n        `#pv-start-${id}`\n      );\n      el.style.pointerEvents = `none`;\n      el.style.touchAction = `none`;\n    }\n\n    const progressFillStyle = `hsla(${currentHue}, 100%, 50%, 50%)`;\n\n    const el2 = Svg.Elements.circle(\n      { ...pt, radius: type === `touch` ? touchRadius : mouseRadius },\n      svg,\n      {\n        fillStyle: progressFillStyle,\n      },\n      `#pv-progress-${id}-${info.values.length}`\n    );\n    el2.style.pointerEvents = `none`;\n    el2.style.touchAction = `none`;\n    currentHue += 1;\n    pointerCount = info.values.length;\n    return true;\n  };\n\n  document.body.appendChild(svg);\n\n  el.addEventListener(`pointerdown`, trackPointer);\n  el.addEventListener(`pointermove`, trackPointer);\n  el.addEventListener(`pointerup`, lostPointer);\n  el.addEventListener(`pointerleave`, lostPointer);\n  el.addEventListener(`contextmenu`, (ev) => {\n    ev.preventDefault();\n  });\n};\n","/* eslint-disable */\n\n/**\n * Creates an error handler to show errors on-screen.\n * This is useful when testing on mobile devices that lack access to the console.\n *\n * ```js\n * const e = defaultErrorHandler();\n * ```\n *\n * Manual control:\n * ```js\n * const e = defaultErrorHandler();\n * e.show(someError);\n * e.hide();\n * ```\n * @returns\n */\nexport const defaultErrorHandler = () => {\n  //eslint-disable-next-line functional/no-let\n  let enabled = true;\n  const container = document.createElement(`div`);\n  container.style.color = `black`;\n  container.style.border = `2px solid red`;\n  container.style.backgroundColor = `hsl(0, 80%, 90%)`;\n  container.style.padding = `1em`;\n  container.style.display = `none`;\n  container.style.top = `1em`;\n  container.style.left = `1em`;\n  container.style.position = `absolute`;\n\n  container.style.fontFamily = `monospace`;\n\n  const msgEl = document.createElement(`div`);\n  msgEl.style.maxWidth = `50vw`;\n  msgEl.style.maxHeight = `50vh`;\n  msgEl.style.overflowY = `scroll`;\n\n  container.innerHTML = `<h1>Error</h1>`;\n  container.append(msgEl);\n\n  const styleButton = (b: HTMLButtonElement) => {\n    b.style.padding = `0.3em`;\n    b.style.marginTop = `1em`;\n  };\n\n  const btnClose = document.createElement(`button`);\n  btnClose.innerText = `Close`;\n  btnClose.onclick = () => {\n    hide();\n  };\n\n  const btnStop = document.createElement(`button`);\n  btnStop.innerText = `Stop displaying errors`;\n  btnStop.onclick = () => {\n    enabled = false;\n    hide();\n  };\n\n  styleButton(btnClose);\n  styleButton(btnStop);\n\n  container.append(btnClose);\n  container.append(btnStop);\n  document.body.append(container);\n\n  const show = (ex: Error | string | Event) => {\n    container.style.display = `inline`;\n    if ((ex as any).stack) {\n      msgEl.innerHTML += `<pre>${(ex as any).stack}</pre>`;\n    } else {\n      msgEl.innerHTML += `<p>${ex}</p>`;\n    }\n  };\n\n  const hide = () => {\n    container.style.display = `none`;\n  };\n\n  window.onerror = (msg, url, lineNo, colNo, error) => {\n    if (enabled) {\n      if (error) {\n        console.log(error);\n        show(error);\n      } else {\n        console.log(msg);\n        show(msg);\n      }\n    }\n  };\n\n  window.addEventListener(`unhandledrejection`, (e) => {\n    console.log(e.reason);\n    if (enabled) {\n      show(e.reason);\n    }\n  });\n  return { show, hide };\n};\n","import { Points } from '../geometry/index.js';\n\nexport type DragState = {\n  readonly token?: object;\n  readonly initial: Points.Point;\n  readonly delta: Points.Point;\n};\n\nexport type DragStart = {\n  readonly allow: boolean;\n  readonly token: object;\n};\nexport type DragListener = {\n  readonly start?: () => DragStart;\n  readonly progress?: (state: DragState) => boolean;\n  readonly abort?: (reason: string, state: DragState) => void;\n  readonly success?: (state: DragState) => void;\n};\n\n//eslint-disable-next-line functional/prefer-immutable-types\nexport const draggable = (elem: SVGElement, listener: DragListener) => {\n  //eslint-disable-next-line functional/no-let\n  let initial = Points.Placeholder;\n  //eslint-disable-next-line functional/no-let\n  let token: object;\n\n  // De-select if there's a click elsewhere\n  const onParentClick = () => {\n    const selected = elem.classList.contains(`drag-sel`);\n    if (selected) {\n      elem.classList.remove(`drag-sel`);\n    }\n  };\n\n  // Click to select\n  //eslint-disable-next-line functional/prefer-immutable-types\n  const onElementClick = (evt: MouseEvent) => {\n    const selected = elem.classList.contains(`drag-sel`);\n    if (selected) {\n      elem.classList.remove(`drag-sel`);\n    } else {\n      elem.classList.add(`drag-sel`);\n    }\n    evt.stopPropagation();\n  };\n\n  elem.ownerDocument.addEventListener(`click`, onParentClick);\n  elem.addEventListener(`click`, onElementClick);\n\n  // Remove event handlers\n  const dragCleanup = () => {\n    elem.classList.remove(`drag-progress`);\n\n    elem.ownerDocument.removeEventListener(`pointermove`, onPointerMove);\n    elem.ownerDocument.removeEventListener(`pointerup`, onPointerUp);\n    elem.ownerDocument.removeEventListener(`pointercancel`, onDragCancel);\n  };\n\n  const dispose = () => {\n    console.log(`drag dispose`);\n    if (elem.classList.contains(`drag-progress`)) {\n      onDragCancel(null, `dispose`);\n    } else {\n      dragCleanup();\n    }\n    elem.ownerDocument.removeEventListener(`click`, onParentClick);\n    elem.removeEventListener(`click`, onElementClick);\n  };\n\n  // Dragging\n  //eslint-disable-next-line functional/prefer-immutable-types\n  const onPointerMove = (e: PointerEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const offset = Points.isPlaceholder(initial)\n      ? { x: e.offsetX, y: e.offsetY }\n      : {\n          x: e.x - initial.x,\n          y: e.y - initial.y,\n        };\n    const state: DragState = {\n      delta: offset,\n      initial: initial,\n      token,\n    };\n    if (typeof listener.progress !== `undefined` && !listener.progress(state)) {\n      onDragCancel(null, `discontinued`);\n    }\n  };\n\n  // Done dragging\n  //eslint-disable-next-line functional/prefer-immutable-types\n  const onPointerUp = (e: PointerEvent) => {\n    dragCleanup();\n    const offset = {\n      x: e.x - initial.x,\n      y: e.y - initial.y,\n    };\n    const state: DragState = {\n      initial: initial,\n      token,\n      delta: offset,\n    };\n    if (typeof listener.success !== `undefined`) {\n      listener.success(state);\n    }\n  };\n\n  // Drag is cancelled\n  const onDragCancel = (\n    //eslint-disable-next-line functional/prefer-immutable-types\n    evt: PointerEvent | MouseEvent | null,\n    reason: string = `pointercancel`\n  ) => {\n    dragCleanup();\n    const state: DragState = {\n      token,\n      initial: initial,\n      delta: { x: -1, y: -1 },\n    };\n    if (typeof listener.abort !== `undefined`) {\n      listener.abort(reason, state);\n    }\n  };\n\n  elem.addEventListener(`pointerdown`, (evt) => {\n    const selected = elem.classList.contains(`drag-sel`);\n    if (!selected) return;\n\n    initial = { x: evt.x, y: evt.y };\n    const s =\n      typeof listener.start !== `undefined`\n        ? listener.start()\n        : { allow: true, token };\n    if (!s.allow) return;\n\n    token = s.token;\n\n    elem.classList.add(`drag-progress`);\n    elem.ownerDocument.addEventListener(`pointermove`, onPointerMove);\n    elem.ownerDocument.addEventListener(`pointerup`, onPointerUp);\n    elem.ownerDocument.addEventListener(`pointercancel`, onDragCancel);\n  });\n\n  return dispose;\n};\n","/// ✔ Unit tested!\n\nimport { type ToString } from '../Util.js';\nimport { SimpleEventEmitter } from '../Events.js';\nimport * as KeyValueUtil from '../KeyValue.js';\nimport { KeyValues } from '../index.js';\n\nexport type FrequencyEventMap = {\n  readonly change: void;\n};\n\nexport class FrequencyMutable<V> extends SimpleEventEmitter<FrequencyEventMap> {\n  readonly #store: Map<string, number>;\n  readonly #keyString: ToString<V>;\n\n  /**\n   * Constructor\n   * @param keyString Function to key items. Uses JSON.stringify by default\n   */\n  constructor(keyString: ToString<V> | undefined = undefined) {\n    super();\n    this.#store = new Map();\n\n    if (keyString === undefined) {\n      keyString = (a) => {\n        if (a === undefined) throw new Error(`Cannot create key for undefined`);\n        if (typeof a === `string`) {\n          return a;\n        } else {\n          return JSON.stringify(a);\n        }\n      };\n    }\n    this.#keyString = keyString;\n  }\n\n  /**\n   * Clear data. Fires `change` event\n   */\n  clear() {\n    this.#store.clear();\n    this.fireEvent(`change`, undefined);\n  }\n\n  /**\n   * @returns Iterator over keys (ie. groups)\n   */\n  keys(): IterableIterator<string> {\n    return this.#store.keys();\n  }\n\n  /**\n   * @returns Iterator over frequency counts\n   */\n  values(): IterableIterator<number> {\n    return this.#store.values();\n  }\n\n  /**\n   * @returns Copy of entries as an array of `[key, count]`\n   */\n  toArray(): [key: string, count: number][] {\n    return Array.from(this.#store.entries());\n  }\n\n  /**\n   * Returns a string with keys and counts, useful for debugging.\n   * @returns\n   */\n  debugString(): string {\n    //eslint-disable-next-line functional/no-let\n    let t = ``;\n    for (const [key, count] of this.#store.entries()) {\n      t += `${key}: ${count}, `;\n    }\n    if (t.endsWith(`, `)) return t.substring(0, t.length - 2);\n    return t;\n  }\n\n  /**\n   *\n   * @param value Value to count\n   * @returns Frequency of value, or _undefined_ if it does not exist\n   */\n  frequencyOf(value: V | string): number | undefined {\n    if (typeof value === `string`) return this.#store.get(value);\n\n    const key = this.#keyString(value);\n    return this.#store.get(key);\n  }\n\n  /**\n   *\n   * @param value Value to count\n   * @returns Relative frequency of `value`, or _undefined_ if it does not exist\n   */\n  relativeFrequencyOf(value: V | string): number | undefined {\n    //eslint-disable-next-line functional/no-let\n    let freq: number | undefined;\n    if (typeof value === `string`) freq = this.#store.get(value);\n    else {\n      const key = this.#keyString(value);\n      freq = this.#store.get(key);\n    }\n    if (freq === undefined) return;\n\n    const mma = this.minMaxAvg();\n    return freq / mma.total;\n  }\n\n  /**\n   * @returns Copy of entries as an array\n   */\n  entries(): Array<KeyValueUtil.KeyValue> {\n    return Array.from(this.#store.entries());\n  }\n\n  /**\n   *\n   * @returns Returns `{min,max,avg,total}`\n   */\n  minMaxAvg() {\n    return KeyValues.minMaxAvg(this.entries());\n  }\n\n  /**\n   *\n   * @param sortStyle Sorting style (default: _value_, ie. count)\n   * @returns Sorted array of [key,frequency]\n   */\n  entriesSorted(\n    sortStyle: `value` | `valueReverse` | `key` | `keyReverse` = `value`\n  ): ReadonlyArray<KeyValues.KeyValue> {\n    const s = KeyValueUtil.getSorter(sortStyle);\n    return s(this.entries());\n  }\n\n  /**\n   *\n   * @param values Values to add. Fires _change_ event after adding item(s)\n   */\n  //eslint-disable-next-line functional/prefer-immutable-types\n  add(...values: V[]) {\n    if (values === undefined) throw new Error(`value parameter is undefined`);\n\n    const keys = values.map(this.#keyString);\n\n    //const key = this.#keyString(value);\n    keys.forEach((key) => {\n      const score = this.#store.get(key) ?? 0;\n      this.#store.set(key, score + 1);\n    });\n    this.fireEvent(`change`, undefined);\n  }\n}\n\n/**\n * Frequency keeps track of how many times a particular value is seen, but\n * unlike a Map it does not store the data. By default compares\n * items by value (via JSON.stringify).\n *\n * Create with {@link frequencyMutable}.\n *\n * Fires `change` event when items are added or it is cleared.\n *\n * Overview\n * ```\n * const fh = frequencyMutable();\n * fh.add(value); // adds a value\n * fh.clear();    // clears all data\n * fh.keys() / .values() // returns an iterator for keys and values\n * fh.toArray();  //  returns an array of data in the shape [[key,freq],[key,freq]...]\n * ```\n *\n * Usage\n * ```\n * const fh = frequencyMutable();\n * fh.add(`apples`); // Count an occurence of `apples`\n * fh.add(`oranges)`;\n * fh.add(`apples`);\n *\n * const fhData = fh.toArray(); // Expect result [[`apples`, 2], [`oranges`, 1]]\n * fhData.forEach((d) => {\n *  const [key,freq] = d;\n *  console.log(`Key '${key}' occurred ${freq} time(s).`);\n * })\n * ```\n *\n * Custom key string\n * ```\n * const fh = frequencyMutable( person => person.name);\n * // All people with name `Samantha` will be counted in same group\n * fh.add({name:`Samantha`, city:`Brisbane`});\n * ```\n * @template V Type of items\n */\nexport const frequencyMutable = <V>(keyString?: ToString<V> | undefined) =>\n  new FrequencyMutable<V>(keyString);\n","import { average, averageWeighted } from '../collections/NumericArrays.js';\nimport { QueueMutable } from '../collections/queue/QueueMutable.js';\nimport { integer as guardInteger } from '../Guards.js';\n\n/**\n * A moving average calculator (exponential weighted moving average) which does not keep track of\n * previous samples. Less accurate, but uses less system resources.\n *\n * The `scaling` parameter determines smoothing. A value of `1` means that\n * the latest value is used as the average - that is, no smoothing. Higher numbers\n * introduce progressively more smoothing by weighting the accumulated prior average more heavily.\n *\n * `add()` adds a new value and returns the calculated average.\n *\n * ```\n * const ma = movingAverageLight(); // default scaling of 3\n * ma.add(50);  // 50\n * ma.add(100); // 75\n * ma.add(75);  // 75\n * ma.add(0);   // 50\n * ```\n *\n * Note that the final average of 50 is pretty far from the last value of 0. To make it more responsive,\n * we could use a lower scaling factor: `movingAverageLight(2)`. This yields a final average of `37.5` instead.\n *\n * Use `clear()` to reset the moving average, or `compute()` to get the current value without adding.\n * @param scaling Scaling factor. 1 is no smoothing. Default: 3\n * @returns {@link MovingAverage}\n */\nexport const movingAverageLight = (scaling: number = 3): MovingAverage => {\n  guardInteger(scaling, `aboveZero`, `scaling`);\n  //eslint-disable-next-line functional/no-let\n  let average = 0;\n  //eslint-disable-next-line functional/no-let\n  let count = 0;\n\n  //eslint-disable-next-line functional/no-let\n  let disposed = false;\n  const ma: MovingAverage = {\n    dispose() {\n      disposed = true;\n    },\n    get isDisposed() {\n      return disposed;\n    },\n    add(v: number) {\n      if (disposed) throw new Error(`MovingAverage disposed, cannot add`);\n      count++;\n      average = average + (v - average) / Math.min(count, scaling);\n      return average;\n    },\n    clear() {\n      if (disposed) throw new Error(`MovingAverage disposed, cannot clear`);\n      average = 0;\n      count = 0;\n    },\n    compute() {\n      return average;\n    },\n  };\n  return ma;\n};\n\n/**\n * Uses the same algorithm as {@link movingAverageLight}, but adds values automatically if\n * nothing has been manually added.\n *\n * This is useful if you are averaging something based on events. For example calculating the\n * average speed of the pointer. If there is no speed, there is no pointer move event. Using\n * this function, `value` is added at a rate of `updateRateMs`. This timer is reset\n * every time a value is added, a bit like the `debounce` function.\n * @param updateRateMs\n * @param value\n * @param scaling\n * @returns\n */\nexport const movingAverageTimed = (\n  updateRateMs: number = 200,\n  value: number = 0,\n  scaling: number = 3\n): MovingAverage => {\n  guardInteger(scaling, `aboveZero`, `scaling`);\n  guardInteger(updateRateMs, `aboveZero`, `decayRateMs`);\n\n  const mal = movingAverageLight(scaling);\n\n  //eslint-disable-next-line functional/no-let\n  let timer = 0;\n\n  const reschedule = () => {\n    if (timer !== 0) clearTimeout(timer);\n    // @ts-ignore\n    timer = setTimeout(decay, updateRateMs) as number;\n  };\n\n  const decay = () => {\n    mal.add(value);\n    if (!mal.isDisposed) setTimeout(decay, updateRateMs);\n  };\n\n  const ma: MovingAverage = {\n    add(v: number) {\n      reschedule();\n      return mal.add(v);\n    },\n\n    dispose() {\n      mal.dispose();\n    },\n    clear: function (): void {\n      mal.clear();\n    },\n    compute: function (): number {\n      return mal.compute();\n    },\n    isDisposed: false,\n  };\n\n  return ma;\n};\n\n/**\n * Creates a moving average for a set number of `samples`.\n *\n * Moving average are useful for computing the average over a recent set of numbers.\n * A lower number of samples produces a computed value that is lower-latency yet more jittery.\n * A higher number of samples produces a smoother computed value which takes longer to respond to\n * changes in data.\n *\n * Sample size is considered with respect to the level of latency/smoothness trade-off, and also\n * the rate at which new data is added to the moving average.\n *\n * `add` adds a number and returns the computed average. Call `compute` to\n * get the average without adding a new value.\n *\n * ```js\n * import { movingAverage } from 'https://unpkg.com/ixfx/dist/data.js';\n *\n * const ma = movingAverage(10);\n * ma.add(10); // 10\n * ma.add(5);  // 7.5\n * ```\n *\n * `clear` clears the average.\n *\n * A weighting function can be provided to shape how the average is\n * calculated - eg privileging the most recent data over older data.\n * It uses `Arrays.averageWeighted` under the hood.\n *\n * ```js\n * import { movingAverage } from 'https://unpkg.com/ixfx/dist/data.js';\n *\n * // Give more weight to data in middle of sampling window\n * const ma = movingAverage(100, Easings.gaussian());\n * ```\n *\n * Because it keeps track of `samples` previous data, there is a memory impact. A lighter version is {@link movingAverageLight} which does not keep a buffer of prior data, but can't be as easily fine-tuned.\n * @param samples Number of samples to compute average from\n * @param weightingFn Optional weighting function\n * @returns\n */\nexport const movingAverage = (\n  samples = 100,\n  weightingFn?: (v: number) => number\n): MovingAverage => {\n  //eslint-disable-next-line functional/no-let\n  let disposed = false;\n\n  //eslint-disable-next-line functional/no-let\n  let q = new QueueMutable<number>({\n    capacity: samples,\n    discardPolicy: `older`,\n  });\n\n  const clear = () => {\n    q = new QueueMutable<number>({\n      capacity: samples,\n      discardPolicy: `older`,\n    });\n  };\n\n  const compute = () => {\n    if (weightingFn === undefined) {\n      return average(q.data);\n    } else {\n      return averageWeighted(q.data, weightingFn);\n    }\n  };\n\n  const add = (v: number) => {\n    q.enqueue(v);\n    return compute();\n  };\n\n  const dispose = () => {\n    disposed = true;\n  };\n\n  return { add, compute, clear, dispose, isDisposed: disposed };\n};\n\n/**\n * Moving average.\n * Create via {@link movingAverage} or {@link movingAverageLight}.\n */\nexport type MovingAverage = {\n  /**\n   * Clear data\n   */\n  clear(): void;\n  /**\n   * Returns current average\n   */\n  compute(): number;\n  /**\n   * Adds a value, returning new average\n   * @param v Value to add\n   */\n  add(v: number): number;\n\n  dispose(): void;\n  get isDisposed(): boolean;\n};\n","import { NumberTracker } from './NumberTracker.js';\nimport { type TrackedValueOpts as TrackOpts } from './TrackedValue.js';\n\n/**\n * A `Tracker` that tracks interval between calls to `mark()`\n *\n * @export\n * @class IntervalTracker\n * @extends {ValueTracker}\n */\nexport class IntervalTracker extends NumberTracker {\n  lastMark = 0;\n\n  mark() {\n    if (this.lastMark > 0) {\n      this.seen(window.performance.now() - this.lastMark);\n    }\n    this.lastMark = window.performance.now();\n  }\n}\n\n/**\n * Returns a new {@link IntervalTracker} instance. IntervalTracker\n * records the interval between each call to `mark`.\n *\n * ```js\n * import { intervalTracker } from 'https://unpkg.com/ixfx/dist/data.js';\n *\n * const t = intervalTracker();\n *\n * // Call `mark` to record an interval\n * t.mark();\n * ...\n * t.mark();\n *\n * // Get average time in milliseconds between calls to `mark`\n * t.avg;\n *\n * // Longest and shortest times are available too...\n * t.min / t.max\n * ```\n *\n * Interval tracker can automatically reset after a given number of samples:\n *\n * ```\n * // Reset after 100 samples\n * const t = intervalTracker({ resetAfterSamples: 100} );\n * ```\n * @param opts Options for tracker\n * @returns New interval tracker\n */\nexport const intervalTracker = (opts?: TrackOpts) => new IntervalTracker(opts);\n","import { type NumberFunction } from './index.js';\nimport { number as guardNumber } from '../Guards.js';\n\n/**\n * Flips a percentage-scale number: `1 - v`.\n *\n * The utility of this function is that it sanity-checks\n * that `v` is in 0..1 scale.\n *\n * ```js\n * flip(1);   // 0\n * flip(0.5); // 0.5\n * flip(0);   // 1\n * ```\n * @param v\n * @returns\n */\nexport const flip = (v: number | NumberFunction) => {\n  if (typeof v === `function`) v = v();\n  guardNumber(v, `percentage`, `v`);\n  return 1 - v;\n};\n","import { number as guardNumber, integer as guardInteger } from '../Guards.js';\n\n/**\n * Wraps an integer number within a specified range, defaulting to degrees (0-360). Use {@link wrap} for floating-point wrapping.\n *\n * This is useful for calculations involving degree angles and hue, which wrap from 0-360.\n * Eg: to add 200 to 200, we don't want 400, but 40.\n *\n * ```js\n * const v = wrapInteger(200+200, 0, 360); // 40\n * ```\n *\n * Or if we minus 100 from 10, we don't want -90 but 270\n * ```js\n * const v = wrapInteger(10-100, 0, 360); // 270\n * ```\n *\n * `wrapInteger` uses 0-360 as a default range, so both of these\n * examples could just as well be:\n *\n * ```js\n * wrapInteger(200+200);  // 40\n * wrapInteger(10-100);  // 270\n * ```\n *\n * Non-zero starting points can be used. A range of 20-70:\n * ```js\n * const v = wrapInteger(-20, 20, 70); // 50\n * ```\n *\n * Note that the minimum value is inclusive, while the maximum is _exclusive_.\n * So with the default range of 0-360, 360 is never reached:\n *\n * ```js\n * wrapInteger(360); // 0\n * wrapInteger(361); // 1\n * ```\n *\n * If you just want to lock values to a range without wrapping, consider {@link clamp}.\n *\n * @param v Value to wrap\n * @param min Integer minimum of range (default: 0). Inclusive\n * @param max Integer maximum of range (default: 360). Exlusive\n * @returns\n */\nexport const wrapInteger = (v: number, min: number = 0, max: number = 360) => {\n  guardInteger(v, undefined, `v`);\n  guardInteger(min, undefined, `min`);\n  guardInteger(max, undefined, `max`);\n\n  if (v === min) return min;\n  if (v === max) return min; // Wraps\n  if (v > 0 && v < min) v += min;\n\n  v -= min;\n  max -= min;\n  v = v % max;\n\n  if (v < 0) v = max - Math.abs(v) + min;\n  return v + min;\n};\n\n/**\n * Wraps floating point numbers to be within a range (default: 0..1). Use {@link wrapInteger} if you want to wrap integer values.\n *\n * This logic makes sense for some things like rotation angle.\n *\n * If you just want to lock values to a range without wrapping, consider {@link clamp}.\n *\n * ```js\n * wrap(1.2);   // 0.2\n * wrap(2);     // 1.0\n * wrap(-0.2); // 0.8\n * ```\n *\n * A range can be provided too:\n * ```js\n * wrap(30, 20, 50);  \t // 30\n * wrap(60, 20, 50);    //  30\n * ```\n * @param v\n * @param min\n * @param max\n * @returns\n */\nexport const wrap = (v: number, min: number = 0, max: number = 1) => {\n  guardNumber(v, ``, `min`);\n  guardNumber(min, ``, `min`);\n  guardNumber(max, ``, `max`);\n\n  if (v === min) return min;\n  if (v === max) return min; // Wraps\n\n  while (v <= min || v >= max) {\n    if (v === max) break;\n    if (v === min) break;\n    if (v > max) {\n      v = min + (v - max);\n    } else if (v < min) {\n      v = max - (min - v);\n    }\n  }\n  return v;\n};\n\n/**\n * Performs a calculation within a wrapping number range. This is a lower-level function.\n * See also: {@link wrapInteger} for simple wrapping within a range.\n *\n * `min` and `max` define the start and end of the valid range, inclusive. Eg for hue degrees it'd be 0, 360.\n * `a` and `b` is the range you want to work in.\n *\n * For example, let's say you want to get the middle point between a hue of 30 and a hue of 330 (ie warmer colours):\n * ```js\n * wrapRange(0,360, (distance) => {\n *  // for a:0 and b:330, distance would be 90 from 30 degrees to 330 (via zero)\n *  return distance * 0.5; // eg return middle point\n * }, 30, 330);\n * ```\n *\n * The return value of the callback should be in the range of 0-distance. `wrapRange` will subsequently\n * conform it to the `min` and `max` range before it's returned to the caller.\n *\n * @param a Output start (eg. 60)\n * @param b Output end (eg 300)\n * @param min Range start (eg 0)\n * @param max Range end (eg 360)\n * @param fn Returns a computed value from 0 to `distance`.\n * @returns\n */\nexport const wrapRange = (\n  min: number,\n  max: number,\n  fn: (distance: number) => number,\n  a: number,\n  b: number\n) => {\n  //eslint-disable-next-line functional/no-let\n  let r = 0;\n  // No wrapping\n  const distF = Math.abs(b - a);\n  // When b is wrapped forwards\n  const distFwrap = Math.abs(max - a + b);\n  // When b is wrapped backwards (10, 300)\n  const distBWrap = Math.abs(a + (360 - b));\n\n  const distMin = Math.min(distF, distFwrap, distBWrap);\n  if (distMin === distBWrap) {\n    // (10, 300) = 70\n    r = a - fn(distMin);\n  } else if (distMin === distFwrap) {\n    // (300, 60) = 120\n    r = a + fn(distMin);\n  } else {\n    // Forwards or backwards without wrapping\n    if (a > b) {\n      // (240,120) -- backwards\n      r = a - fn(distMin);\n    } else {\n      // (120,240) -- forwards\n      r = a + fn(distMin);\n    }\n  }\n  return wrapInteger(r, min, max);\n};\n","/**\n * Returns the similarity of `a` and `b` to each other,\n * where higher similarity should be a higher number.\n * @param a\n * @param b\n */\nexport type Similarity<V> = (a: V, b: V) => number;\n\ntype Scored = {\n  readonly score: number;\n};\n\nconst orderScore = (a: Scored, b: Scored) => {\n  if (a.score > b.score) return -1;\n  else if (a.score < b.score) return 1;\n  return 0;\n};\n\n/**\n * Options for alignmnent\n */\nexport type AlignOpts = {\n  /**\n   * If the similarity score is above this threshold,\n   * consider them the same\n   */\n  readonly matchThreshold?: number;\n  /**\n   * If true, additional console messages are printed during\n   * execution.\n   */\n  readonly debug?: boolean;\n};\n\n/**\n * Some data with an id property.\n */\nexport type DataWithId<V> = V & {\n  readonly id: string;\n};\n\n/**\n * Attempts to align prior data with new data, based on a provided similarity function.\n *\n * See also `alignById` for a version which encloses parameters.\n *\n * ```js\n * // Compare data based on x,y distance\n * const fn = (a, b) => {\n *  return 1-Points.distance(a, b);\n * }\n * const lastData = [\n *  { id:`1`, x:100, y:200 }\n *  ...\n * ]\n * const newData = [\n *  { id:`2`, x:101, y:200 }\n * ]\n * const aligned = Correlate.align(fn, lastdata, newData, opts);\n *\n * // Result:\n * [\n *  { id:`1`, x:101, y:200 }\n * ]\n * ```\n * @param similarityFn\n * @param lastData\n * @param newData\n * @param opts\n * @returns\n */\n//eslint-disable-next-line functional/immutable-data\nexport const align = <V>(\n  similarityFn: Similarity<V>,\n  lastData: readonly DataWithId<V>[] | undefined,\n  newData: readonly DataWithId<V>[],\n  opts: AlignOpts = {}\n): readonly DataWithId<V>[] => {\n  const matchThreshold = opts.matchThreshold ?? 0;\n  const debug = opts.debug ?? false;\n  const results = new Map();\n  const newThings: DataWithId<V>[] = [];\n\n  const lastMap = new Map();\n  lastData?.forEach((d, index) => {\n    if (d === undefined) {\n      throw new Error(`'lastData' contains undefined (index: ${index})`);\n    }\n    lastMap.set(d.id, d);\n  });\n\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < newData.length; i++) {\n    const newD = newData[i];\n\n    if (!lastData || lastData.length === 0) {\n      // No last data to compare to\n      if (debug) console.debug(`Correlate.align() new id: ${newD.id}`);\n\n      //eslint-disable-next-line functional/immutable-data\n      newThings.push(newD);\n      continue;\n    }\n\n    // Which of the old data does the new data match up to best?\n    const scoredLastValues = Array.from(lastMap.values()).map((last) => ({\n      id: last.id,\n      score: last === null ? -1 : similarityFn(last, newD),\n      last,\n    }));\n\n    if (scoredLastValues.length === 0) {\n      if (debug) {\n        console.debug(`Correlate.align() no valid last values id: ${newD.id}`);\n      }\n      //eslint-disable-next-line functional/immutable-data\n      newThings.push(newD);\n      continue;\n    }\n    //eslint-disable-next-line functional/immutable-data\n    scoredLastValues.sort(orderScore);\n\n    // Top-ranked match is pretty low, must be something new\n    const top = scoredLastValues[0];\n    if (top.score < matchThreshold) {\n      if (debug) {\n        console.debug(\n          `Correlate.align() new item does not reach threshold. Top score: ${top.score} id: ${newD.id}`\n        );\n      }\n      //eslint-disable-next-line functional/immutable-data\n      newThings.push(newD);\n      continue;\n    }\n\n    // TODO: If there are close options to pick, need a pluggable\n    // function to determine which is the winner.\n\n    //    console.log(`updating prior ${top.score}. top: ${top.id} newD: ${newD.id}`);\n\n    // The new item is considered the same as top ranked\n    if (debug && top.id !== newD.id) {\n      console.log(\n        `Correlate.align() Remapped ${newD.id} -> ${top.id} (score: ${top.score})`\n      );\n    }\n    //eslint-disable-next-line functional/immutable-data\n    results.set(top.id, { ...newD, id: top.id });\n\n    // Remove that old one from the list\n    //eslint-disable-next-line functional/immutable-data\n    lastMap.delete(top.id);\n  }\n\n  //eslint-disable-next-line functional/immutable-data\n  newThings.forEach((t) => results.set(t.id, t));\n  return Array.from(results.values());\n};\n\n/**\n * Returns a function that attempts to align a series of data by its id.\n * See also {@link align} for a version with no internal storage.\n *\n * ```js\n * // Compare data based on x,y distance\n * const fn = (a, b) => {\n *  return 1-Points.distance(a, b);\n * }\n * const aligner = Correlate.alignById(fn, opts);\n *\n * const lastData = [\n *  { id:`1`, x:100, y:200 }\n *  ...\n * ]\n * const aligned = aligner(lastData);\n *\n * ```\n * @param fn\n * @param opts\n * @returns\n */\nexport const alignById = <V>(fn: Similarity<V>, opts: AlignOpts = {}) => {\n  //eslint-disable-next-line functional/no-let\n  let lastData: readonly DataWithId<V>[] = [];\n\n  //eslint-disable-next-line functional/prefer-immutable-types\n  const compute = (newData: DataWithId<V>[]) => {\n    lastData = align(fn, lastData, newData, opts);\n    return [...lastData];\n  };\n  return compute;\n};\n","import { SimpleEventEmitter } from '../Events.js';\nimport * as Debug from '../Debug.js';\n/**\n * Policy for when the pool is fully used\n */\nexport type FullPolicy = `error` | `evictOldestUser`;\n\n/**\n * Pool options\n */\nexport type Opts<V> = {\n  /**\n   * Maximum number of resources for this pool\n   */\n  readonly capacity?: number;\n  /**\n   * If above 0, users will be removed if there is no activity after this interval.\n   * Activity is marked whenever `use` us called with that user key\n   */\n  readonly userExpireAfterMs?: number;\n  /**\n   * If above 0, resources with no users will be automatically removed after this interval\n   */\n  readonly resourcesWithoutUserExpireAfterMs?: number;\n  /**\n   * Maximum number of users per resource. Defaults to 1\n   */\n  readonly capacityPerResource?: number;\n  /**\n   * What to do if pool is full and a new resource allocation is requested\n   */\n  readonly fullPolicy?: FullPolicy;\n  /**\n   * If true, additional logging will trace activity of pool\n   */\n  readonly debug?: boolean;\n  /**\n   * If specified, this function will generate new resources as needed.\n   */\n  readonly generate?: () => V;\n  /**\n   * If specified, this function will be called when a resource is disposed\n   */\n  readonly free?: (v: V) => void;\n};\n\n/**\n * Function that initialises a pool item\n */\n//export type InitPoolItem_ = <V>(id:string)=>V;\n\n/**\n * State of pool\n */\nexport type PoolState = `idle` | `active` | `disposed`;\n\nexport type PoolUserEventMap<V> = {\n  readonly disposed: { readonly data: V; readonly reason: string };\n  readonly released: { readonly data: V; readonly reason: string };\n};\n\n/**\n * A use of a pool resource\n *\n * Has two events, _disposed_ and _released_.\n */\nexport class PoolUser<V> extends SimpleEventEmitter<PoolUserEventMap<V>> {\n  private _lastUpdate: number;\n  private _pool: Pool<V>;\n  private _state: PoolState;\n  private _userExpireAfterMs: number;\n\n  /**\n   * Constructor\n   * @param key User key\n   * @param resource Resource being used\n   */\n  //eslint-disable-next-line functional/prefer-immutable-types\n  constructor(readonly key: string, readonly resource: Resource<V>) {\n    super();\n    this._lastUpdate = performance.now();\n    this._pool = resource.pool;\n    this._userExpireAfterMs = this._pool.userExpireAfterMs;\n    this._state = `idle`;\n    this._pool.log.log(`PoolUser ctor key: ${this.key}`);\n  }\n\n  /**\n   * Returns a human readable debug string\n   * @returns\n   */\n  toString() {\n    if (this.isDisposed) return `PoolUser. State: disposed`;\n\n    return `PoolUser. State: ${this._state} Elapsed: ${\n      performance.now() - this._lastUpdate\n    } Data: ${JSON.stringify(this.resource.data)}`;\n  }\n\n  /**\n   * Resets countdown for instance expiry.\n   * Throws an error if instance is disposed.\n   */\n  keepAlive() {\n    if (this._state === `disposed`) throw new Error(`PoolItem disposed`);\n    this._lastUpdate = performance.now();\n  }\n\n  /**\n   * @internal\n   * @param reason\n   * @returns\n   */\n  _dispose(reason: string) {\n    if (this._state === `disposed`) return;\n    const resource = this.resource;\n    const data = resource.data;\n    this._state = `disposed`;\n    resource._release(this);\n    this._pool.log.log(`PoolUser dispose key: ${this.key} reason: ${reason}`);\n    this.fireEvent(`disposed`, { data, reason });\n    super.clearEventListeners();\n  }\n\n  /**\n   * Release this instance\n   * @param reason\n   */\n  release(reason: string) {\n    if (this.isDisposed) throw new Error(`User disposed`);\n    const resource = this.resource;\n    const data = resource.data;\n    this._pool.log.log(`PoolUser release key: ${this.key} reason: ${reason}`);\n    this.fireEvent(`released`, { data, reason });\n    this._dispose(`release-${reason}`);\n  }\n\n  // #region Properties\n  get data(): V {\n    if (this.isDisposed) throw new Error(`User disposed`);\n    return this.resource.data;\n  }\n\n  /**\n   * Returns true if this instance has expired.\n   * Expiry counts if elapsed time is greater than `userExpireAfterMs`\n   */\n  get isExpired() {\n    if (this._userExpireAfterMs > 0) {\n      return performance.now() > this._lastUpdate + this._userExpireAfterMs;\n    }\n    return false;\n  }\n\n  /**\n   * Returns elapsed time since last 'update'\n   */\n  get elapsed() {\n    return performance.now() - this._lastUpdate;\n  }\n\n  /**\n   * Returns true if instance is disposed\n   */\n  get isDisposed() {\n    return this._state === `disposed`;\n  }\n\n  /**\n   * Returns true if instance is neither disposed nor expired\n   */\n  get isValid() {\n    if (this.isDisposed || this.isExpired) return false;\n    if (this.resource.isDisposed) return false;\n    return true;\n  }\n  // #endregion\n}\n\n/**\n * A resource allocated in the Pool\n */\nexport class Resource<V> {\n  private state: PoolState;\n  private readonly _data: V;\n  private users: PoolUser<V>[];\n  private readonly capacityPerResource;\n  private readonly resourcesWithoutUserExpireAfterMs;\n  private lastUsersChange: number;\n\n  /**\n   * Constructor.\n   * @param pool Pool\n   * @param data Data\n   */\n  //eslint-disable-next-line functional/prefer-immutable-types\n  constructor(readonly pool: Pool<V>, data: V) {\n    this._data = data;\n    this.lastUsersChange = 0;\n    this.resourcesWithoutUserExpireAfterMs =\n      pool.resourcesWithoutUserExpireAfterMs;\n    this.capacityPerResource = pool.capacityPerResource;\n    this.users = [];\n    this.state = `idle`;\n  }\n\n  /**\n   * Gets data associated with resource.\n   * Throws an error if disposed\n   */\n  get data() {\n    if (this.state === `disposed`) throw new Error(`Resource disposed`);\n    return this._data;\n  }\n\n  /**\n   * Returns a human-readable debug string for resource\n   * @returns\n   */\n  toString() {\n    return `Resource (expired: ${this.isExpiredFromUsers} users: ${\n      this.users.length\n    }, state: ${this.state}) data: ${JSON.stringify(this.data)}`;\n  }\n\n  /**\n   * Assigns a user to this resource.\n   * @internal\n   * @param user\n   */\n  //eslint-disable-next-line functional/prefer-immutable-types\n  _assign(user: PoolUser<V>) {\n    const existing = this.users.find((u) => u === user || u.key === user.key);\n    if (existing) throw new Error(`User instance already assigned to resource`);\n    this.users.push(user);\n    this.lastUsersChange = performance.now();\n  }\n\n  /**\n   * Releases a user from this resource\n   * @internal\n   * @param user\n   */\n  //eslint-disable-next-line functional/prefer-immutable-types\n  _release(user: PoolUser<V>) {\n    this.users = this.users.filter((u) => u !== user);\n    this.pool._release(user);\n    this.lastUsersChange = performance.now();\n  }\n\n  /**\n   * Returns true if resource can have additional users allocated\n   */\n  get hasUserCapacity() {\n    return this.usersCount < this.capacityPerResource;\n  }\n\n  /**\n   * Returns number of uses of the resource\n   */\n  get usersCount() {\n    return this.users.length;\n  }\n\n  /**\n   * Returns true if automatic expiry is enabled, and that interval\n   * has elapsed since the users list has changed for this resource\n   */\n  get isExpiredFromUsers() {\n    if (this.resourcesWithoutUserExpireAfterMs <= 0) return false;\n    if (this.users.length > 0) return false;\n    return (\n      performance.now() >\n      this.resourcesWithoutUserExpireAfterMs + this.lastUsersChange\n    );\n  }\n\n  /**\n   * Returns true if instance is disposed\n   */\n  get isDisposed() {\n    return this.state === `disposed`;\n  }\n\n  /**\n   * Disposes the resource.\n   * If it is already disposed, it does nothing.\n   * @param reason\n   * @returns\n   */\n  dispose(reason: string) {\n    if (this.state === `disposed`) return;\n    const data = this._data;\n    this.state = `disposed`;\n    this.pool.log.log(`Resource disposed (${reason})`);\n    for (const u of this.users) {\n      u._dispose(`resource-${reason}`);\n    }\n    this.users = [];\n    this.lastUsersChange = performance.now();\n    this.pool._releaseResource(this, reason);\n\n    if (this.pool.freeResource) this.pool.freeResource(data);\n  }\n}\n\n/**\n * Resource pool\n */\nexport class Pool<V> {\n  private _resources: Resource<V>[];\n  private _users: Map<string, PoolUser<V>>;\n\n  readonly capacity: number;\n  readonly userExpireAfterMs: number;\n  readonly resourcesWithoutUserExpireAfterMs: number;\n\n  readonly capacityPerResource: number;\n  readonly fullPolicy: FullPolicy;\n  private generateResource?: () => V;\n  readonly freeResource?: (v: V) => void;\n\n  readonly log: Debug.LogSet;\n\n  /**\n   * Constructor.\n   *\n   * By default, no capacity limit, one user per resource\n   * @param opts Pool options\n   */\n  constructor(opts: Opts<V> = {}) {\n    this.capacity = opts.capacity ?? -1;\n    this.fullPolicy = opts.fullPolicy ?? `error`;\n    this.capacityPerResource = opts.capacityPerResource ?? 1;\n    this.userExpireAfterMs = opts.userExpireAfterMs ?? -1;\n    this.resourcesWithoutUserExpireAfterMs =\n      opts.resourcesWithoutUserExpireAfterMs ?? -1;\n\n    this.generateResource = opts.generate;\n    this.freeResource = opts.free;\n\n    this._users = new Map();\n    this._resources = [];\n\n    this.log = Debug.logSet(`Pool`, opts.debug ?? false);\n\n    // If we have a time-based expiry, set an interval to\n    // automatically do the housekeeping\n    const timer = Math.max(\n      this.userExpireAfterMs,\n      this.resourcesWithoutUserExpireAfterMs\n    );\n    if (timer > 0) {\n      setInterval(() => {\n        this.maintain();\n      }, timer * 1.1);\n    }\n  }\n\n  /**\n   * Returns a debug string of Pool state\n   * @returns\n   */\n  dumpToString() {\n    //eslint-disable-next-line functional/no-let\n    let r = `Pool\n    capacity: ${this.capacity} userExpireAfterMs: ${this.userExpireAfterMs} capacityPerResource: ${this.capacityPerResource}\n    resources count: ${this._resources.length}`;\n\n    const res = this._resources.map((r) => r.toString()).join(`\\r\\n\\t`);\n    r += `\\r\\nResources:\\r\\n\\t` + res;\n\n    r += `\\r\\nUsers: \\r\\n`;\n    for (const [k, v] of this._users.entries()) {\n      r += `\\tk: ${k} v: ${v.toString()}\\r\\n`;\n    }\n    return r;\n  }\n\n  /**\n   * Sorts users by longest elapsed time since update\n   * @returns\n   */\n  getUsersByLongestElapsed() {\n    return [...this._users.values()].sort((a, b) => {\n      const aa = a.elapsed;\n      const bb = b.elapsed;\n      if (aa === bb) return 0;\n      if (aa < bb) return 1;\n      return -1;\n    });\n  }\n\n  /**\n   * Returns resources sorted with least used first\n   * @returns\n   */\n  getResourcesSortedByUse() {\n    return [...this._resources].sort((a, b) => {\n      if (a.usersCount === b.usersCount) return 0;\n      if (a.usersCount < b.usersCount) return -1;\n      return 1;\n    });\n  }\n\n  /**\n   * Adds a resource to the pool.\n   * Throws an error if the capacity limit is reached.\n   * @param resource\n   * @returns\n   */\n  addResource(resource: V) {\n    if (resource === undefined) {\n      throw new Error(`Cannot add undefined resource`);\n    }\n    if (resource === null) throw new Error(`Cannot add null resource`);\n\n    if (this.capacity > 0 && this._resources.length === this.capacity) {\n      throw new Error(\n        `Capacity limit (${this.capacity}) reached. Cannot add more.`\n      );\n    }\n\n    this.log.log(`Adding resource: ${JSON.stringify(resource)}`);\n    const pi = new Resource<V>(this, resource);\n    this._resources.push(pi);\n    return pi;\n  }\n\n  /**\n   * Performs maintenance, removing disposed/expired resources & users.\n   * This is called automatically when using a resource.\n   */\n  maintain() {\n    //eslint-disable-next-line functional/no-let\n    let changed = false;\n\n    // Find all disposed resources\n    const nuke: Resource<V>[] = [];\n    for (const p of this._resources) {\n      if (p.isDisposed) {\n        this.log.log(`Maintain, disposed resource: ${JSON.stringify(p.data)}`);\n        nuke.push(p);\n      } else if (p.isExpiredFromUsers) {\n        this.log.log(`Maintain, expired resource: ${JSON.stringify(p.data)}`);\n        nuke.push(p);\n      }\n    }\n\n    // Remove them\n    if (nuke.length > 0) {\n      for (const res of nuke) {\n        res.dispose(`diposed/expired`);\n      }\n      changed = true;\n    }\n\n    // Find 'users' to clean up\n    const userKeysToRemove: string[] = [];\n    for (const [key, user] of this._users.entries()) {\n      if (!user.isValid) {\n        this.log.log(\n          `Maintain. Invalid user: ${user.key} (Disposed: ${user.isDisposed} Expired: ${user.isExpired} Resource disposed: ${user.resource.isDisposed})`\n        );\n\n        userKeysToRemove.push(key);\n        user._dispose(`invalid`);\n      }\n    }\n\n    for (const userKey of userKeysToRemove) {\n      this._users.delete(userKey);\n      changed = true;\n    }\n\n    if (changed) {\n      this.log.log(\n        `End: resource len: ${this._resources.length} users: ${this.usersLength}`\n      );\n    }\n  }\n\n  /**\n   * Iterate over resources in the pool.\n   * To iterate over the data associated with each resource, use\n   * `values`.\n   */\n  *resources() {\n    const res = [...this._resources];\n    for (const r of res) {\n      yield r;\n    }\n  }\n\n  /**\n   * Iterate over resource values in the pool.\n   * to iterate over the resources, use `resources`.\n   *\n   * Note that values may be returned even though there is no\n   * active user.\n   */\n  *values() {\n    const res = [...this._resources];\n    for (const r of res) {\n      yield r.data;\n    }\n  }\n\n  /**\n   * Unassociate a key with a pool item\n   * @param userKey\n   */\n  release(userKey: string, reason?: string): void {\n    const pi = this._users.get(userKey);\n    if (!pi) return;\n    pi.release(reason ?? `Pool.release`);\n  }\n\n  /**\n   * @internal\n   * @param user\n   */\n  //eslint-disable-next-line functional/prefer-immutable-types\n  _release(user: PoolUser<V>) {\n    this._users.delete(user.key);\n  }\n\n  /**\n   * @internal\n   * @param resource\n   * @param _\n   */\n  //eslint-disable-next-line functional/prefer-immutable-types\n  _releaseResource(resource: Resource<V>, _: string) {\n    this._resources = this._resources.filter((v) => v !== resource);\n  }\n\n  /**\n   * Returns true if `v` has an associted resource in the pool\n   * @param res\n   * @returns\n   */\n  hasResource(res: V): boolean {\n    const found = this._resources.find((v) => v.data === res);\n    return found !== undefined;\n  }\n\n  /**\n   * Returns true if a given `userKey` is in use.\n   * @param userKey\n   * @returns\n   */\n  hasUser(userKey: string): boolean {\n    return this._users.has(userKey);\n  }\n\n  /**\n   * @internal\n   * @param key\n   * @param resource\n   * @returns\n   */\n  //eslint-disable-next-line functional/prefer-immutable-types\n  private _assign(key: string, resource: Resource<V>) {\n    const u = new PoolUser<V>(key, resource);\n    this._users.set(key, u);\n    resource._assign(u);\n    return u;\n  }\n\n  /**\n   * @internal\n   * @param userKey\n   * @returns\n   */\n  private _findUser(userKey: string): PoolUser<V> | undefined {\n    // Sort items by number of users per pool item\n    const sorted = this.getResourcesSortedByUse();\n    //eslint-disable-next-line functional/no-let\n    // for (let i=0;i<sorted.length;i++) {\n    //   console.log(i +`. users: ` + sorted[i].usersCount);\n    // }\n    if (sorted.length > 0 && sorted[0].hasUserCapacity) {\n      // No problem, resource has capacity\n      this.log.log(`resource has capacity: ${sorted[0].data}`);\n      const u = this._assign(userKey, sorted[0]);\n      return u;\n    }\n\n    // If resource count is below capacity, can we generate more?\n    if (\n      this.generateResource &&\n      (this.capacity < 0 || this._resources.length < this.capacity)\n    ) {\n      this.log.log(\n        `capacity: ${this.capacity} resources: ${this._resources.length}`\n      );\n      const newResource = this.addResource(this.generateResource());\n      const u = this._assign(userKey, newResource);\n      return u;\n    }\n  }\n\n  /**\n   * Return the number of users\n   */\n  get usersLength() {\n    return [...this._users.values()].length;\n  }\n\n  /**\n   * 'Uses' a resource, returning the value\n   * @param userKey\n   * @returns\n   */\n  useValue(userKey: string): V {\n    const res = this.use(userKey);\n    return res.resource.data;\n  }\n\n  /**\n   * Gets a pool item based on a user key.\n   * The same key should return the same pool item,\n   * for as long as it still exists.\n   * @param userKey\n   * @returns\n   */\n  use(userKey: string): PoolUser<V> {\n    const pi = this._users.get(userKey);\n    if (pi) {\n      pi.keepAlive();\n      return pi;\n    }\n\n    this.maintain();\n\n    const match = this._findUser(userKey);\n    if (match) return match;\n\n    // Throw an error if all items are being used\n    if (this.fullPolicy === `error`) {\n      console.log(this.dumpToString());\n      throw new Error(\n        `Pool is fully used (fullPolicy: ${this.fullPolicy}, capacity: ${this.capacity})`\n      );\n    }\n    // Evict oldest user\n    if (this.fullPolicy === `evictOldestUser`) {\n      const users = this.getUsersByLongestElapsed();\n      if (users.length > 0) {\n        this.release(users[0].key, `evictedOldestUser`);\n\n        const match2 = this._findUser(userKey);\n        if (match2) return match2;\n      }\n    }\n\n    // Evict newest user\n\n    // Evict from random pool item\n    throw new Error(`Pool is fully used (${this.fullPolicy})`);\n  }\n}\n\n/**\n * Creates an instance of a Pool\n * @param opts\n * @returns\n */\nexport const create = <V>(opts: Opts<V> = {}): Pool<V> => new Pool<V>(opts);\n","import { piPi } from './index.js';\nimport { wrap } from './Wrap.js';\n\n/**\n * Interpolates between `a` and `b` by `amount`. Aka `lerp`.\n *\n * [ixfx Guide](https://clinth.github.io/ixfx-docs/modulation/interpolate/)\n *\n * @example Get the halfway point between 30 and 60\n * ```js\n * import {interpolate} from 'https://unpkg.com/ixfx/dist/data.js';\n * interpolate(0.5, 30, 60);\n * ```\n *\n * Interpolation is often used for animation. In that case, `amount`\n * would start at 0 and you would keep interpolating up to `1`\n * @example\n * ```js\n * import { interpolate } from 'https://unpkg.com/ixfx/dist/data.js';\n * import { percentPingPong } from 'https://unpkg.com/ixfx/dist/modulation.js'\n *\n * // Go back and forth between 0 and 1 by 0.1\n * let pp = percentPingPong(0.1);\n * continuously(() => {\n *  // Get position in ping-pong\n *  const amt = pp.next().value;\n *  // interpolate between Math.PI and Math.PI*2\n *  const v = interpolate(amt, Math.PI, Math.PI*2);\n *  // do something with v...\n * }).start();\n * ```\n *\n * See also {@link Visual.Colour.interpolate | Visual.Colour.interpolate }, {@link Geometry.Points.interpolate | Geometry.Points.interpolate}.\n * @param amount Interpolation amount, between 0 and 1 inclusive\n * @param a Start (ie when `amt` is 0)\n * @param b End (ie. when `amt` is 1)\n * @returns Interpolated value which will be between `a` and `b`.\n */\nexport const interpolate = (amount: number, a: number, b: number): number => {\n  const v = (1 - amount) * a + amount * b;\n  return v;\n};\n\n/**\n * Interpolate between angles `a` and `b` by `amount`. Angles are in radians.\n *\n * ```js\n * import { interpolateAngle } from 'https://unpkg.com/ixfx/dist/data.js';\n * interpolateAngle(0.5, Math.PI, Math.PI/2);\n * ```\n * @param amount\n * @param aRadians\n * @param bRadians\n * @returns\n */\nexport const interpolateAngle = (\n  amount: number,\n  aRadians: number,\n  bRadians: number\n): number => {\n  const t = wrap(bRadians - aRadians, 0, piPi);\n  return interpolate(amount, aRadians, aRadians + (t > Math.PI ? t - piPi : t));\n};\n","import { slice } from '../IterableSync.js';\nimport { filterBetween } from './Arrays.js';\n\nexport type MinMaxAvgTotal = {\n  /**\n   * Smallest value in array\n   */\n  readonly min: number;\n  /**\n   * Total of all items\n   */\n  readonly total: number;\n  /**\n   * Largest value in array\n   */\n  readonly max: number;\n  /**\n   * Average value in array\n   */\n  readonly avg: number;\n};\n\nexport type MinMaxAvgOpts = {\n  /**\n   * Start index, inclusive\n   */\n  readonly startIndex?: number;\n  /**\n   * End index, exclusive\n   */\n  readonly endIndex?: number;\n};\n/**\n * Returns the min, max, avg and total of the array or iterable.\n * Any values that are invalid are silently skipped over.\n *\n * ```js\n * import { Arrays } from 'https://unpkg.com/ixfx/dist/collections.js';\n *\n * const v = [10, 2, 4.2, 99];\n * const mma = Arrays.minMaxAvg(v);\n * Yields: { min: 2, max: 99, total: 115.2, avg: 28.8 }\n * ```\n *\n * Use {@link average}, {@link max}, {@link min} or {@link total} if you only need one of these.\n *\n * A start and end range can be provided if the calculation should be restricted to a part\n * of the input array. By default the whole array is used.\n *\n * It's also possible to use an iterable as input.\n * ```js\n * Arrays.minMaxAvg(count(5,1)); // Averages 1,2,3,4,5\n * ```\n * @param data\n * @param opts Allows restriction of range that is examined\n * @returns `{min, max, avg, total}`\n */\nexport const minMaxAvg = (\n  //eslint-disable-next-line functional/prefer-readonly-type\n  data: readonly number[] | number[] | Iterable<number>,\n  opts: MinMaxAvgOpts = {}\n): MinMaxAvgTotal => {\n  if (data === undefined) throw new Error(`'data' is undefined`);\n  if (!Array.isArray(data)) {\n    if (`next` in data) {\n      if (opts.startIndex || opts.endIndex) {\n        data = slice(data, opts.startIndex, opts.endIndex);\n      }\n      //eslint-disable-next-line functional/no-let\n      let total = 0;\n      //eslint-disable-next-line functional/no-let\n      let min = Number.MAX_SAFE_INTEGER;\n      //eslint-disable-next-line functional/no-let\n      let max = Number.MIN_SAFE_INTEGER;\n      //eslint-disable-next-line functional/no-let\n      let samples = 0;\n      for (const v of data) {\n        if (typeof v !== `number`) {\n          throw new Error(`Generator should yield numbers. Got: ${typeof v}`);\n        }\n        total += v;\n        samples++;\n        min = Math.min(min, v);\n        max = Math.max(max, v);\n      }\n      return {\n        avg: total / samples,\n        total,\n        max,\n        min,\n      };\n    } else {\n      throw new Error(`'data' parameter is neither array or iterable`);\n    }\n  }\n\n  if (data.length === 0) {\n    return {\n      total: 0,\n      min: 0,\n      max: 0,\n      avg: 0,\n    };\n  }\n  const startIndex = opts.startIndex ?? 0;\n  const endIndex = opts.endIndex ?? data.length;\n\n  const validNumbers = filterBetween<number>(\n    data,\n    (d) => typeof d === `number` && !Number.isNaN(d),\n    startIndex,\n    endIndex\n  );\n  const total = validNumbers.reduce((acc, v) => acc + v, 0);\n  return {\n    total: total,\n    max: Math.max(...validNumbers),\n    min: Math.min(...validNumbers),\n    avg: total / validNumbers.length,\n  };\n};\n","import { zip } from './Arrays.js';\nimport { type EasingFn } from '../modulation/Easing.js';\nexport {\n  minMaxAvg,\n  type MinMaxAvgOpts,\n  type MinMaxAvgTotal,\n} from './MinMaxAvg.js';\n\n/**\n * Computes an average of an array with a set of weights applied.\n *\n * Weights can be provided as an array, expected to be on 0..1 scale, with indexes\n * matched up to input data. Ie. data at index 2 will be weighed by index 2 in the weightings array.\n *\n * ```js\n * import { Arrays } from 'https://unpkg.com/ixfx/dist/collections.js';\n * // All items weighted evenly\n * Arrays.averageWeighted([1,2,3], [1,1,1]); // 2\n *\n * // First item has full weight, second half, third quarter\n * Arrays.averageWeighted([1,2,3], [1, 0.5, 0.25]); // 1.57\n *\n * // With reversed weighting of [0.25,0.5,1] value is 2.42\n * ```\n *\n * A function can alternatively be provided to compute the weighting based on array index, via {@link weight}.\n *\n * ```js\n * Arrays.averageWeighted[1,2,3], Easings.gaussian()); // 2.0\n * ```\n *\n * This is the same as:\n *\n * ```js\n * import { Arrays } from 'https://unpkg.com/ixfx/dist/collections.js';\n * import { Easings } from 'https://unpkg.com/ixfx/dist/modulation.js';\n *\n * const data = [1,2,3];\n * const w = Arrays.weight(data, Easings.gaussian());\n * const avg = Arrays.averageWeighted(data, w); // 2.0\n * ```\n * @param data Data to average\n * @param weightings Array of weightings that match up to data array, or an easing function\n */\nexport const averageWeighted = (\n  data: readonly number[],\n  weightings: readonly number[] | EasingFn\n): number => {\n  if (typeof weightings === `function`) weightings = weight(data, weightings);\n\n  const ww = zip(data, weightings);\n  const [totalV, totalW] = ww.reduce(\n    (acc, v: readonly number[]) => [acc[0] + v[0] * v[1], acc[1] + v[1]],\n    [0, 0]\n  );\n  return totalV / totalW;\n};\n\n/**\n * Applies a function `fn` to the elements of an array, weighting them based on their relative position.\n *\n * ```js\n * import { Arrays } from 'https://unpkg.com/ixfx/dist/collections.js';\n *\n * // Six items\n * Arrays.weight([1,1,1,1,1,1], Easings.gaussian());\n *\n * // Yields:\n * // [0.02, 0.244, 0.85, 0.85, 0.244, 0.02]\n * ```\n *\n * `fn` is expected to map (0..1) => (0..1), such as an {@link Modulation.Easings.EasingFn}. The input to the\n * `fn` is the relative position of an element. Thus the first element will be 0, the middle 0.5 and so on.\n * The output of `fn` is then multiplied by the original value.\n *\n * In the below example (which is also the default if `fn` is not specified), the relative position is\n * how values are weighted:\n *\n * ```js\n * Arrays.weight([1,1,1,1,1,1], (relativePos) => relativePos);\n * // Yields:\n * // [0, 0.2, 0.4, 0.6, 0.8, 1]\n * ```\n *\n * Non-numbers in `data` will be silently ignored (this filtering happens first, so relative index values are sane still).\n *\n * @param data Array of numbers\n * @param fn Returns a weighting based on the given relative position. If unspecified, `(x) => x` is used.\n */\nexport const weight = (\n  data: readonly number[],\n  fn?: (relativePos: number) => number\n): readonly number[] => {\n  const f = fn === undefined ? (x: number) => x : fn;\n  return validNumbers(data).map(\n    (v: number, index: number) => v * f(index / (validNumbers.length - 1))\n  );\n};\n\n/**\n * Returns an array of all valid numbers from `data`\n *\n * @param data\n * @returns\n */\nexport const validNumbers = (data: readonly number[]) =>\n  data.filter((d) => typeof d === `number` && !Number.isNaN(d));\n\n/**\n * Returns the dot product of two arbitrary-sized arrays. Assumed they are of the same length.\n * @param a\n * @param b\n * @returns\n */\nexport const dotProduct = (\n  values: ReadonlyArray<readonly number[]>\n): number => {\n  //eslint-disable-next-line functional/no-let\n  let r = 0;\n  const len = values[0].length;\n\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < len; i++) {\n    //eslint-disable-next-line functional/no-let\n    let t = 0;\n    //eslint-disable-next-line functional/no-let\n    for (let p = 0; p < values.length; p++) {\n      if (p === 0) t = values[p][i];\n      else {\n        t *= values[p][i];\n      }\n    }\n    r += t;\n  }\n  return r;\n};\n\n/**\n * Calculates the average of all numbers in an array.\n * Array items which aren't a valid number are ignored and do not factor into averaging.\n *\n * Use {@link minMaxAvg} if you want min, max and total as well.\n *\n * @example\n * ```\n * import { Arrays } from 'https://unpkg.com/ixfx/dist/collections.js';\n *\n * // Average of a list\n * const avg = Arrays.average([1, 1.4, 0.9, 0.1]);\n *\n * // Average of a variable\n * let data = [100,200];\n * Arrays.average(data);\n * ```\n *\n * See also: [Numbers.average](Numbers.average.html) which takes a list of parameters\n * @param data Data to average.\n * @returns Average of array\n */\nexport const average = (data: readonly number[]): number => {\n  // ✔ UNIT TESTED\n  if (data === undefined) throw new Error(`data parameter is undefined`);\n  const valid = validNumbers(data);\n  const total = valid.reduce((acc, v) => acc + v, 0);\n  return total / valid.length;\n};\n\n/**\n * Returns the minimum number out of `data`.\n * Undefined and non-numbers are silently ignored.\n *\n * ```js\n * import { Arrays } from 'https://unpkg.com/ixfx/dist/collections.js';\n * Arrays.min([10, 20, 0]); // Yields 0\n * ```\n * @param data\n * @returns Minimum number\n */\nexport const min = (data: readonly number[]): number =>\n  Math.min(...validNumbers(data));\n\n/**\n * Returns the index of the largest value.\n * ```js\n * import { Arrays } from 'https://unpkg.com/ixfx/dist/collections.js';\n * const v = [ 10, 40, 5 ];\n * Arrays.maxIndex(v); // Yields 1\n * ```\n * @param data Array of numbers\n * @returns Index of largest value\n */\nexport const maxIndex = (data: readonly number[]): number =>\n  data.reduce(\n    (bestIndex, value, index, arr) =>\n      value > arr[bestIndex] ? index : bestIndex,\n    0\n  );\n\n/**\n * Returns the index of the smallest value.\n *\n * ```js\n * import { Arrays } from 'https://unpkg.com/ixfx/dist/collections.js';\n * const v = [ 10, 40, 5 ];\n * Arrays.minIndex(v); // Yields 2\n * ```\n * @param data Array of numbers\n * @returns Index of smallest value\n */\nexport const minIndex = (...data: readonly number[]): number =>\n  data.reduce(\n    (bestIndex, value, index, arr) =>\n      value < arr[bestIndex] ? index : bestIndex,\n    0\n  );\n\n/**\n * Returns the maximum number out of `data`.\n * Undefined and non-numbers are silently ignored.\n *\n * ```js\n * import { Arrays } from 'https://unpkg.com/ixfx/dist/collections.js';\n * Arrays.max(100, 200, 50); // 200\n * ```\n * @param data List of numbers\n * @returns Maximum number\n */\nexport const max = (data: readonly number[]): number =>\n  Math.max(...validNumbers(data));\n\n/**\n * Returns the total of `data`.\n * Undefined and non-numbers are silently ignored.\n *\n * ```js\n * import { Arrays } from 'https://unpkg.com/ixfx/dist/collections.js';\n * Arrays.total([1, 2, 3]); // 6\n * ```\n * @param data Array of numbers\n * @returns Total\n */\nexport const total = (data: readonly number[]): number =>\n  data.reduce((prev, curr) => {\n    if (typeof curr !== `number`) return prev;\n    if (Number.isNaN(curr)) return prev;\n    if (Number.isFinite(curr)) return prev;\n    return prev + curr;\n  }, 0);\n\n/**\n * Returns the maximum out of `data` without pre-filtering for speed.\n *\n * For most uses, {@link max} should suffice.\n *\n * ```js\n * import { Arrays } from 'https://unpkg.com/ixfx/dist/collections.js';\n * Arrays.maxFast([ 10, 0, 4 ]); // 10\n * ```\n * @param data\n * @returns Maximum\n */\n//eslint-disable-next-line functional/prefer-immutable-types\nexport const maxFast = (data: readonly number[] | Float32Array): number => {\n  //eslint-disable-next-line functional/no-let\n  let m = Number.MIN_SAFE_INTEGER;\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < data.length; i++) {\n    m = Math.max(m, data[i]);\n  }\n  return m;\n};\n\n/**\n * Returns the total of `data` without pre-filtering for speed.\n *\n * For most uses, {@link total} should suffice.\n *\n * ```js\n * import { Arrays } from 'https://unpkg.com/ixfx/dist/collections.js';\n * Arrays.totalFast([ 10, 0, 4 ]); // 14\n * ```\n * @param data\n * @returns Maximum\n */\n//eslint-disable-next-line functional/prefer-immutable-types\nexport const totalFast = (data: readonly number[] | Float32Array): number => {\n  //eslint-disable-next-line functional/no-let\n  let m = 0;\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < data.length; i++) {\n    m += data[i];\n  }\n  return m;\n};\n\n/**\n * Returns the maximum out of `data` without pre-filtering for speed.\n *\n * For most uses, {@link max} should suffice.\n *\n * ```js\n * import { Arrays } from 'https://unpkg.com/ixfx/dist/collections.js';\n * Arrays.minFast([ 10, 0, 100 ]); // 0\n * ```\n * @param data\n * @returns Maximum\n */\n//eslint-disable-next-line functional/prefer-immutable-types\nexport const minFast = (data: readonly number[] | Float32Array): number => {\n  //eslint-disable-next-line functional/no-let\n  let m = Number.MIN_SAFE_INTEGER;\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < data.length; i++) {\n    m = Math.min(m, data[i]);\n  }\n  return m;\n};\n","import { Points, Paths, Rects } from './index.js';\n\nexport type CompoundPath = Paths.Path & {\n  readonly segments:readonly Paths.Path[]\n  readonly kind:`compound`\n};\n\n/**\n * Returns a new compoundpath, replacing a path at a given index\n *\n * @param {CompoundPath} compoundPath Existing compoundpath\n * @param {number} index Index to replace at\n * @param {Paths.Path} path Path to substitute in\n * @returns {CompoundPath} New compoundpath\n */\nexport const setSegment = (compoundPath:CompoundPath, index:number, path:Paths.Path):CompoundPath => {\n  const existing = [...compoundPath.segments];\n  //eslint-disable-next-line functional/prefer-readonly-type,functional/immutable-data\n  existing[index] = path;\n  return fromPaths(...existing);\n};\n\n/**\n * Computes x,y point at a relative position along compoundpath\n *\n * @param {Paths.Path[]} paths Combined paths (assumes contiguous)\n * @param {number} t Position (given as a percentage from 0 to 1)\n * @param {boolean} [useWidth] If true, widths are used for calulcating. If false, lengths are used\n * @param {Dimensions} [dimensions] Precalculated dimensions of paths, will be computed if omitted\n * @returns\n */\nexport const interpolate = (paths:readonly Paths.Path[], t:number, useWidth?:boolean, dimensions?:Dimensions) => {\n  if (dimensions === undefined) {\n    dimensions = computeDimensions(paths);\n  }\n\n  // Expected value to land on\n  const expected = t * (useWidth ? dimensions.totalWidth : dimensions.totalLength);\n  //eslint-disable-next-line functional/no-let\n  let soFar = 0;\n\n  // Use widths or lengths?\n  const l = useWidth ? dimensions.widths : dimensions.lengths;\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < l.length; i++) {\n    if (soFar + l[i] >= expected) {\n      const relative = expected - soFar;\n      //eslint-disable-next-line functional/no-let\n      let amt = relative / l[i];\n      //eslint-disable-next-line functional/no-let\n      if (amt > 1) amt = 1;\n      return paths[i].interpolate(amt);\n    } else soFar += l[i];\n  }\n  return { x: 0, y: 0 };\n};\n\nexport type Dimensions = {\n  /**\n   * Width of each path (based on bounding box)\n   *\n   * @type {number[]}\n   */\n  readonly widths:readonly number[],\n  /**\n   * Length of each path\n   *\n   * @type {number[]}\n   */\n  readonly lengths:readonly number[],\n\n  /**\n   * Total length of all paths\n   *\n   * @type {number}\n   */\n  readonly totalLength:number,\n  /**\n   * Total width of all paths\n   *\n   * @type {number}\n   */\n  readonly totalWidth:number\n}\n/**\n * Computes the widths and lengths of all paths, adding them up as well\n *\n * @param {Paths.Path[]} paths\n * @returns {Dimensions}\n */\nexport const computeDimensions = (paths:readonly Paths.Path[]):Dimensions => {\n  const widths = paths.map(l => l.bbox().width);\n  const lengths = paths.map(l => l.length());\n  //eslint-disable-next-line functional/no-let\n  let totalLength = 0;\n  //eslint-disable-next-line functional/no-let\n  let totalWidth = 0;\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < lengths.length; i++) totalLength += lengths[i];\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < widths.length; i++) totalWidth += widths[i];\n\n  return { totalLength, totalWidth, widths, lengths };\n};\n\n/**\n * Computes the bounding box that encloses entire compoundpath\n *\n * @param {Paths.Path[]} paths\n * \n * @returns {Rects.Rect}\n */\nexport const bbox = (paths:readonly Paths.Path[]):Rects.RectPositioned => {\n  const boxes = paths.map(p => p.bbox());\n  const corners = boxes.map(b => Rects.corners(b)).flat();\n\n  return Points.bbox(...corners);\n};\n\n/**\n * Produce a human-friendly representation of paths\n *\n * @param {Paths.Path[]} paths\n * @returns {string}\n */\nexport const toString = (paths:readonly Paths.Path[]):string => paths.map(p => p.toString()).join(`, `);\n\n/**\n * Throws an error if paths are not connected together, in order\n *\n * @param {Paths.Path[]} paths\n */\nexport const guardContinuous = (paths:readonly Paths.Path[]) => {\n  //eslint-disable-next-line functional/no-let\n  let lastPos = Paths.getEnd(paths[0]);\n  //eslint-disable-next-line functional/no-let\n  for (let i = 1; i < paths.length; i++) {\n    const start = Paths.getStart(paths[i]);\n    if (!Points.isEqual(start, lastPos)) throw new Error(`Path index ` + i + ` does not start at prior path end. Start: ` + start.x + `,` + start.y + ` expected: ` + lastPos.x + `,` + lastPos.y + ``);\n    lastPos = Paths.getEnd(paths[i]);\n  }\n};\n\nexport const toSvgString = (paths:readonly Paths.Path[]):readonly string[] => paths.flatMap(p => p.toSvgString());\n\n/**\n * Create a compoundpath from an array of paths.\n * All this does is verify they are connected, and precomputes dimensions\n *\n * @param {...Paths.Path[]} paths\n * @returns {CompoundPath}\n */\nexport const fromPaths = (...paths:readonly Paths.Path[]):CompoundPath => {\n  guardContinuous(paths); // Throws an error if paths are not connected\n  const dims = computeDimensions(paths);\n\n  return Object.freeze({\n    segments: paths,\n    length: () => dims.totalLength,\n    nearest:(_:Points.Point) => { throw new Error(`not implemented`); },\n    interpolate: (t:number, useWidth = false) => interpolate(paths, t, useWidth, dims),\n    bbox: () => bbox(paths),\n    toString: () => toString(paths),\n    toSvgString: () => toSvgString(paths),\n    kind: `compound`\n  });\n};\n","import { toCartesian } from './Polar.js';\nimport { integer as guardInteger } from '../Guards.js';\nimport { Triangles, Points, Rects, Circles } from './index.js';\nimport type { CirclePositioned } from './Circle.js';\nimport type { RandomSource } from '../Random.js';\nimport type { RectPositioned } from './Rect.js';\n\nexport type ContainsResult = `none` | `contained`;\n\nexport type ShapePositioned = CirclePositioned | RectPositioned;\n\n/**\n * Returns the intersection result between a and b.\n * @param a\n * @param b\n */\nexport const isIntersecting = (\n  a: ShapePositioned,\n  b: ShapePositioned | Points.Point\n): boolean => {\n  if (Circles.isCirclePositioned(a)) {\n    return Circles.isIntersecting(a, b);\n  } else if (Rects.isRectPositioned(a)) {\n    return Rects.isIntersecting(a, b);\n  }\n  throw new Error(\n    `a or b are unknown shapes. a: ${JSON.stringify(a)} b: ${JSON.stringify(b)}`\n  );\n};\n\n// export enum Quadrant {\n//   Nw, Ne, Sw, Se\n// }\n\nexport type RandomPointOpts = {\n  readonly randomSource?: RandomSource;\n  readonly margin?: Points.Point;\n};\n\nexport const randomPoint = (\n  shape: ShapePositioned,\n  opts: RandomPointOpts = {}\n): Points.Point => {\n  if (Circles.isCirclePositioned(shape)) {\n    return Circles.randomPoint(shape, opts);\n  } else if (Rects.isRectPositioned(shape)) {\n    return Rects.randomPoint(shape, opts);\n  }\n  throw new Error(`Cannot create random point for unknown shape`);\n};\n\n// export type Shape = {\n//   intersects(x:Points.Point|Shape):ContainsResult\n//   readonly kind:`circular`\n\n// }\n\n/**\n * Returns the center of a shape\n * Shape can be: rectangle, triangle, circle\n * @param shape\n * @returns\n */\nexport const center = (\n  shape?: Rects.Rect | Triangles.Triangle | Circles.Circle\n): Points.Point => {\n  if (shape === undefined) {\n    return Object.freeze({ x: 0.5, y: 0.5 });\n  } else if (Rects.isRect(shape)) {\n    return Rects.center(shape as Rects.Rect);\n  } else if (Triangles.isTriangle(shape)) {\n    return Triangles.centroid(shape);\n  } else if (Circles.isCircle(shape)) {\n    return Circles.center(shape);\n  } else {\n    throw new Error(`Unknown shape: ${JSON.stringify(shape)}`);\n  }\n};\n\n/**\n * Generates a starburst shape, returning an array of points. By default, initial point is top and horizontally-centred.\n *\n * ```\n * // Generate a starburst with four spikes\n * const pts = starburst(4, 100, 200);\n * ```\n *\n * `points` of two produces a lozenge shape.\n * `points` of three produces a triangle shape.\n * `points` of five is the familiar 'star' shape.\n *\n * Note that the path will need to be closed back to the first point to enclose the shape.\n *\n * @example Create starburst and draw it. Note use of 'loop' flag to close the path\n * ```\n * const points = starburst(4, 100, 200);\n * Drawing.connectedPoints(ctx, pts, {loop: true, fillStyle: `orange`, strokeStyle: `red`});\n * ```\n *\n * Options:\n * * initialAngleRadian: angle offset to begin from. This overrides the `-Math.PI/2` default.\n *\n * @param points Number of points in the starburst. Defaults to five, which produces a typical star\n * @param innerRadius Inner radius. A proportionally smaller inner radius makes for sharper spikes. If unspecified, 50% of the outer radius is used.\n * @param outerRadius Outer radius. Maximum radius of a spike to origin\n * @param opts Options\n * @param origin Origin, or `{ x:0, y:0 }` by default.\n */\nexport const starburst = (\n  outerRadius: number,\n  points: number = 5,\n  innerRadius?: number,\n  origin: Points.Point = { x: 0, y: 0 },\n  opts?: { readonly initialAngleRadian?: number }\n): readonly Points.Point[] => {\n  guardInteger(points, `positive`, `points`);\n  const angle = (Math.PI * 2) / points;\n  const angleHalf = angle / 2;\n\n  const initialAngle = opts?.initialAngleRadian ?? -Math.PI / 2;\n  if (innerRadius === undefined) innerRadius = outerRadius / 2;\n\n  //eslint-disable-next-line functional/no-let\n  let a = initialAngle;\n  const pts = [];\n\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < points; i++) {\n    const peak = toCartesian(outerRadius, a, origin);\n    const left = toCartesian(innerRadius, a - angleHalf, origin);\n    const right = toCartesian(innerRadius, a + angleHalf, origin);\n\n    //eslint-disable-next-line functional/immutable-data\n    pts.push(left, peak);\n    //eslint-disable-next-line functional/immutable-data\n    if (i + 1 < points) pts.push(right);\n    a += angle;\n  }\n  return pts;\n};\n\nexport type ArrowOpts = {\n  readonly arrowSize?: number;\n  readonly tailLength?: number;\n  readonly tailThickness?: number;\n  readonly angleRadian?: number;\n};\n\n/**\n * Returns the points forming an arrow.\n *\n * @example Create an arrow anchored by its tip at 100,100\n * ```js\n * const opts = {\n *  tailLength: 10,\n *  arrowSize: 20,\n *  tailThickness: 5,\n *  angleRadian: degreeToRadian(45)\n * }\n * const arrow = Shapes.arrow({x:100, y:100}, `tip`, opts); // Yields an array of points\n *\n * // Eg: draw points\n * Drawing.connectedPoints(ctx, arrow, {strokeStyle: `red`, loop: true});\n * ```\n *\n * @param origin Origin of arrow\n * @param from Does origin describe the tip, tail or middle?\n * @param opts Options for arrow\n * @returns\n */\nexport const arrow = (\n  origin: Points.Point,\n  from: `tip` | `tail` | `middle`,\n  opts: ArrowOpts = {}\n): readonly Points.Point[] => {\n  const tailLength = opts.tailLength ?? 10;\n  const tailThickness = opts.tailThickness ?? Math.max(tailLength / 5, 5);\n  const angleRadian = opts.angleRadian ?? 0;\n  const arrowSize = opts.arrowSize ?? Math.max(tailLength / 5, 15);\n\n  const triAngle = Math.PI / 2;\n\n  //eslint-disable-next-line functional/no-let\n  let tri: Triangles.Triangle;\n  //eslint-disable-next-line functional/no-let\n  let tailPoints: readonly Points.Point[];\n\n  if (from === `tip`) {\n    tri = Triangles.equilateralFromVertex(origin, arrowSize, triAngle);\n    tailPoints = Rects.corners(\n      Rects.fromTopLeft(\n        { x: tri.a.x - tailLength, y: origin.y - tailThickness / 2 },\n        tailLength,\n        tailThickness\n      )\n    );\n  } else if (from === `middle`) {\n    const midX = tailLength + arrowSize / 2;\n    const midY = tailThickness / 2;\n    tri = Triangles.equilateralFromVertex(\n      {\n        x: origin.x + arrowSize * 1.2,\n        y: origin.y,\n      },\n      arrowSize,\n      triAngle\n    );\n\n    tailPoints = Rects.corners(\n      Rects.fromTopLeft(\n        { x: origin.x - midX, y: origin.y - midY },\n        tailLength + arrowSize,\n        tailThickness\n      )\n    );\n  } else {\n    //const midY = origin.y - tailThickness/2;\n    tailPoints = Rects.corners(\n      Rects.fromTopLeft(\n        { x: origin.x, y: origin.y - tailThickness / 2 },\n        tailLength,\n        tailThickness\n      )\n    );\n    tri = Triangles.equilateralFromVertex(\n      { x: origin.x + tailLength + arrowSize * 0.7, y: origin.y },\n      arrowSize,\n      triAngle\n    );\n  }\n\n  const arrow = Points.rotate(\n    [\n      tailPoints[0],\n      tailPoints[1],\n      tri.a,\n      tri.b,\n      tri.c,\n      tailPoints[2],\n      tailPoints[3],\n    ],\n    angleRadian,\n    origin\n  );\n\n  return arrow;\n};\n","import { degreeToRadian, radianToDegree } from './index.js';\nimport * as Points from './Point.js';\nimport { number as guardNumber } from '../Guards.js';\nconst _piPi = Math.PI * 2;\n\n//eslint-disable-next-line @typescript-eslint/naming-convention\nconst EmptyCartesian = Object.freeze({ x: 0, y: 0 });\n\n/**\n * Polar coordinate, made up of a distance and angle in radians.\n * Most computations involving Coords require an `origin` as well.\n */\nexport type Coord = {\n  readonly distance: number;\n  readonly angleRadian: number;\n};\n\n/**\n * Converts to Cartesian coordiantes\n */\ntype ToCartesian = {\n  (point: Coord, origin?: Points.Point): Points.Point;\n  (distance: number, angleRadians: number, origin?: Points.Point): Points.Point;\n};\n\n/**\n * Returns true if `p` seems to be a {@link Coord} (ie has both distance & angleRadian fields)\n * @param p\n * @returns True if `p` seems to be a Coord\n */\nexport const isCoord = (p: number | unknown): p is Coord => {\n  if ((p as Coord).distance === undefined) return false;\n  if ((p as Coord).angleRadian === undefined) return false;\n  return true;\n};\n\n/**\n * Converts a Cartesian coordinate to polar\n *\n * ```js\n * import { Polar } from 'https://unpkg.com/ixfx/dist/geometry.js';\n *\n * // Yields: { angleRadian, distance }\n * const polar = Polar.fromCartesian({x: 50, y: 50}, origin);\n * ```\n *\n * Any additional properties of `point` are copied to object.\n * @param point Point\n * @param origin Origin\n * @returns\n */\nexport const fromCartesian = (\n  point: Points.Point,\n  origin: Points.Point\n): Coord => {\n  point = Points.subtract(point, origin);\n  //eslint-disable-next-line functional/no-let\n  //let a =  Math.atan2(point.y, point.x);\n  //if (a < 0) a = Math.abs(a);\n  //else a = Math.PI + (Math.PI - a);\n\n  const angle = Math.atan2(point.y, point.x);\n  //if (point.x < 0 && point.y > 0) angle += 180;\n  //if (point.x > 0 && point.y < 0) angle += 360;\n  //if (point.x < 0 && point.y < 0) angle += 180;\n\n  return Object.freeze({\n    ...point,\n    angleRadian: angle,\n    distance: Math.sqrt(point.x * point.x + point.y * point.y),\n  });\n};\n\n/**\n * Converts to Cartesian coordinate from polar.\n *\n * ```js\n * import { Polar } from 'https://unpkg.com/ixfx/dist/geometry.js';\n *\n * const origin = { x: 50, y: 50}; // Polar origin\n * // Yields: { x, y }\n * const polar = Polar.toCartesian({ distance: 10, angleRadian: 0 }, origin);\n * ```\n *\n * Distance and angle can be provided as numbers intead:\n *\n * ```\n * // Yields: { x, y }\n * const polar = Polar.toCartesian(10, 0, origin);\n * ```\n *\n * @param a\n * @param b\n * @param c\n * @returns\n */\nexport const toCartesian: ToCartesian = (\n  a: Coord | number,\n  b?: Points.Point | number,\n  c?: Points.Point\n): Points.Point => {\n  if (isCoord(a)) {\n    if (b === undefined) b = Points.Empty;\n    if (Points.isPoint(b)) {\n      return polarToCartesian(a.distance, a.angleRadian, b);\n    }\n    throw new Error(\n      `Expecting (Coord, Point). Second parameter is not a point`\n    );\n  } else if (typeof a === `object`) {\n    throw new Error(\n      `First param is an object, but not a Coord: ${JSON.stringify(a)}`\n    );\n  } else {\n    if (typeof a === `number` && typeof b === `number`) {\n      if (c === undefined) c = Points.Empty;\n      if (!Points.isPoint(c)) {\n        throw new Error(\n          `Expecting (number, number, Point). Point param wrong type`\n        );\n      }\n      return polarToCartesian(a, b, c);\n    } else {\n      throw new Error(\n        `Expecting parameters of (number, number). Got: (${typeof a}, ${typeof b}, ${typeof c}). a: ${JSON.stringify(\n          a\n        )}`\n      );\n    }\n  }\n};\n\n/**\n * Produces an Archimedean spiral. It's a generator.\n *\n * ```js\n * const s = spiral(0.1, 1);\n * for (const coord of s) {\n *  // Use Polar coord...\n *  if (coord.step === 1000) break; // Stop after 1000 iterations\n * }\n * ```\n *\n * @param smoothness 0.1 pretty rounded, at around 5 it starts breaking down\n * @param zoom At smoothness 0.1, zoom starting at 1 is OK\n */\n//eslint-disable-next-line func-style\nexport function* spiral(\n  smoothness: number,\n  zoom: number\n): IterableIterator<Coord & { readonly step: number }> {\n  //eslint-disable-next-line functional/no-let\n  let step = 0;\n\n  while (true) {\n    //eslint-disable-next-line functional/no-let\n    const a = smoothness * step++;\n    yield {\n      distance: zoom * a,\n      angleRadian: a,\n      step: step,\n    };\n  }\n}\n\n/**\n * Returns a rotated coordiante\n * @param c Coordinate\n * @param amountRadian Amount to rotate, in radians\n * @returns\n */\nexport const rotate = (c: Coord, amountRadian: number): Coord =>\n  Object.freeze({\n    ...c,\n    angleRadian: c.angleRadian + amountRadian,\n  });\n\nexport const normalise = (c: Coord): Coord => {\n  //guard(v, `v`);\n  if (c.distance === 0) throw new Error(`Cannot normalise vector of length 0`);\n  return Object.freeze({\n    ...c,\n    distance: 1,\n  });\n};\n\n/**\n * Throws an error if Coord is invalid\n * @param p\n * @param name\n */\nexport const guard = (p: Coord, name = `Point`) => {\n  if (p === undefined) {\n    throw new Error(\n      `'${name}' is undefined. Expected {distance, angleRadian} got ${JSON.stringify(\n        p\n      )}`\n    );\n  }\n  if (p === null) {\n    throw new Error(\n      `'${name}' is null. Expected {distance, angleRadian} got ${JSON.stringify(\n        p\n      )}`\n    );\n  }\n  if (p.angleRadian === undefined) {\n    throw new Error(\n      `'${name}.angleRadian' is undefined. Expected {distance, angleRadian} got ${JSON.stringify(\n        p\n      )}`\n    );\n  }\n  if (p.distance === undefined) {\n    throw new Error(\n      `'${name}.distance' is undefined. Expected {distance, angleRadian} got ${JSON.stringify(\n        p\n      )}`\n    );\n  }\n  if (typeof p.angleRadian !== `number`) {\n    throw new Error(\n      `'${name}.angleRadian' must be a number. Got ${p.angleRadian}`\n    );\n  }\n  if (typeof p.distance !== `number`) {\n    throw new Error(`'${name}.distance' must be a number. Got ${p.distance}`);\n  }\n\n  if (p.angleRadian === null) throw new Error(`'${name}.angleRadian' is null`);\n  if (p.distance === null) throw new Error(`'${name}.distance' is null`);\n\n  if (Number.isNaN(p.angleRadian)) {\n    throw new Error(`'${name}.angleRadian' is NaN`);\n  }\n  if (Number.isNaN(p.distance)) throw new Error(`'${name}.distance' is NaN`);\n};\n/**\n * Calculate dot product of two Coords.\n *\n * Eg, power is the dot product of force and velocity\n *\n * Dot products are also useful for comparing similarity of\n *  angle between two unit Coord.\n * @param a\n * @param b\n * @returns\n */\nexport const dotProduct = (a: Coord, b: Coord): number => {\n  guard(a, `a`);\n  guard(b, `b`);\n  return a.distance * b.distance * Math.cos(b.angleRadian - a.angleRadian);\n};\n\n/**\n * Inverts the direction of coordinate. Ie if pointing north, will point south.\n * @param p\n * @returns\n */\nexport const invert = (p: Coord): Coord => {\n  guard(p, `c`);\n  return Object.freeze({\n    ...p,\n    angleRadian: p.angleRadian - Math.PI,\n  });\n};\n\n/**\n * Returns true if Coords have same magnitude but opposite direction\n * @param a\n * @param b\n * @returns\n */\nexport const isOpposite = (a: Coord, b: Coord): boolean => {\n  guard(a, `a`);\n  guard(b, `b`);\n  if (a.distance !== b.distance) return false;\n  return a.angleRadian === -b.angleRadian;\n};\n\n/**\n * Returns true if Coords have the same direction, regardless of magnitude\n * @param a\n * @param b\n * @returns\n */\nexport const isParallel = (a: Coord, b: Coord): boolean => {\n  guard(a, `a`);\n  guard(b, `b`);\n  return a.angleRadian === b.angleRadian;\n};\n\n/**\n * Returns true if coords are opposite direction, regardless of magnitude\n * @param a\n * @param b\n * @returns\n */\nexport const isAntiParallel = (a: Coord, b: Coord): boolean => {\n  guard(a, `a`);\n  guard(b, `b`);\n  return a.angleRadian === -b.angleRadian;\n};\n\n/**\n * Returns a rotated coordinate\n * @param c Coordinate\n * @param amountDeg Amount to rotate, in degrees\n * @returns\n */\nexport const rotateDegrees = (c: Coord, amountDeg: number): Coord =>\n  Object.freeze({\n    ...c,\n    angleRadian: c.angleRadian + degreeToRadian(amountDeg),\n  });\n\n/**\n * Produces an Archimedian spiral with manual stepping.\n * @param step Step number. Typically 0, 1, 2 ...\n * @param smoothness 0.1 pretty rounded, at around 5 it starts breaking down\n * @param zoom At smoothness 0.1, zoom starting at 1 is OK\n * @returns\n */\nexport const spiralRaw = (\n  step: number,\n  smoothness: number,\n  zoom: number\n): Coord => {\n  const a = smoothness * step;\n  return Object.freeze({\n    distance: zoom * a,\n    angleRadian: a,\n  });\n};\n\n/**\n * Multiplies the magnitude of a coord by `amt`.\n * Direction is unchanged.\n * @param v\n * @param amt\n * @returns\n */\nexport const multiply = (v: Coord, amt: number): Coord => {\n  guard(v);\n  guardNumber(amt, ``, `amt`);\n  return Object.freeze({\n    ...v,\n    distance: v.distance * amt,\n  });\n};\n\n/**\n * Divides the magnitude of a coord by `amt`.\n * Direction is unchanged.\n * @param v\n * @param amt\n * @returns\n */\nexport const divide = (v: Coord, amt: number): Coord => {\n  guard(v);\n  guardNumber(amt, ``, `amt`);\n  return Object.freeze({\n    ...v,\n    distance: v.distance / amt,\n  });\n};\n\n/**\n * Clamps the magnitude of a vector\n * @param v\n * @param max\n * @param min\n * @returns\n */\nexport const clampMagnitude = (v: Coord, max = 1, min = 0): Coord => {\n  //eslint-disable-next-line functional/no-let\n  let mag = v.distance;\n  if (mag > max) mag = max;\n  if (mag < min) mag = min;\n  return Object.freeze({\n    ...v,\n    distance: mag,\n  });\n};\n\n/**\n * Converts a polar coordiante to Cartesian\n * @param distance Distance\n * @param angleRadians Angle in radians\n * @param origin Origin, or 0,0 by default.\n * @returns\n */\nconst polarToCartesian = (\n  distance: number,\n  angleRadians: number,\n  origin: Points.Point = Points.Empty\n): Points.Point => {\n  Points.guard(origin);\n  return Object.freeze({\n    x: origin.x + distance * Math.cos(angleRadians),\n    y: origin.y + distance * Math.sin(angleRadians),\n  });\n};\n\n/**\n * Returns a human-friendly string representation `(distance, angleDeg)`.\n * If `precision` is supplied, this will be the number of significant digits.\n * @param p\n * @returns\n */\nexport const toString = (p: Coord, digits?: number): string => {\n  if (p === undefined) return `(undefined)`;\n  if (p === null) return `(null)`;\n\n  const angleDeg = radianToDegree(p.angleRadian);\n  const d = digits ? p.distance.toFixed(digits) : p.distance;\n  const a = digits ? angleDeg.toFixed(digits) : angleDeg;\n  return `(${d},${a})`;\n};\n\nexport const toPoint = (v: Coord, origin = EmptyCartesian): Points.Point => {\n  guard(v, `v`);\n  return Object.freeze({\n    x: origin.x + v.distance * Math.cos(v.angleRadian),\n    y: origin.y + v.distance * Math.sin(v.angleRadian),\n  });\n};\n","import { Polar } from './index.js';\nimport * as Lines from './Line.js';\nimport * as Points from './Point.js';\n\n//eslint-disable-next-line @typescript-eslint/naming-convention\nconst EmptyCartesian = Object.freeze({ x: 0, y: 0 });\n\nconst piPi = Math.PI * 2;\nconst pi = Math.PI;\n\n// const Q1 = Math.PI / 2;\n// const Q2 = Math.PI;\n// const Q3 = Q1 + Q2;\n// const Q4 = Math.PI * 2;\n\nexport type Vector = Points.Point | Polar.Coord;\n\n/**\n * Create a vector from a point\n *\n * If `unipolar` normalisation is used, direction will be fixed to 0..2π\n * if `bipolar` normalisation is used, direction will be fixed to -π...π\n * @param pt Point\n * @param angleNormalisation Technique to normalise angle\n * @param origin Origin to calculate vector from or 0,0 if left empty\n * @returns\n */\nexport const fromPointPolar = (\n  pt: Points.Point,\n  angleNormalisation: `` | `unipolar` | `bipolar` = ``,\n  origin: Points.Point = EmptyCartesian\n): Polar.Coord => {\n  pt = Points.subtract(pt, origin);\n\n  //eslint-disable-next-line functional/no-let\n  let dir = Math.atan2(pt.y, pt.x);\n  if (angleNormalisation === `unipolar` && dir < 0) dir += piPi;\n  else if (angleNormalisation === `bipolar`) {\n    if (dir > pi) dir -= piPi;\n    else if (dir <= -pi) dir += piPi;\n  }\n\n  return Object.freeze({\n    distance: Points.distance(pt),\n    angleRadian: dir,\n  });\n};\n\n/**\n * Returns a Cartesian-coordiante vector from a line a -> b\n * @param line\n * @returns\n */\nexport const fromLineCartesian = (line: Lines.Line): Points.Point =>\n  Points.subtract(line.b, line.a);\n\n/**\n * Returns a polar-coordinate vector from a line a -> b\n * @param line\n * @returns\n */\nexport const fromLinePolar = (line: Lines.Line): Polar.Coord => {\n  Lines.guard(line, `line`);\n  const pt = Points.subtract(line.b, line.a);\n  return fromPointPolar(pt);\n};\n\nconst isPolar = (v: Vector): v is Polar.Coord => {\n  if (Polar.isCoord(v)) return true;\n  return false;\n};\n\nconst isCartesian = (v: Vector): v is Points.Point => {\n  if (Points.isPoint(v)) return true;\n  return false;\n};\n\n/**\n * Returns the normalised vector (aka unit vector). This is where\n * direction is kept, but magnitude set to 1. This then just\n * suggests direction.\n * @param v\n * @returns\n */\nexport const normalise = (v: Vector): Vector => {\n  if (isPolar(v)) {\n    return Polar.normalise(v);\n  } else if (isCartesian(v)) {\n    return Points.normalise(v);\n  }\n  throw new Error(`Expected polar/cartesian vector. Got: ${v}`);\n};\n\nexport const quadrantOffsetAngle = (p: Points.Point): number => {\n  if (p.x >= 0 && p.y >= 0) return 0; // Q1\n  if (p.x < 0 && p.y >= 0) return pi; // Q2\n  if (p.x < 0 && p.y < 0) return pi; // Q3\n  return piPi; // Q4\n};\n\n/**\n * Converts a vector to a polar coordinate. If the provided\n * value is already Polar, it is returned.\n * @param v\n * @param origin\n * @returns Polar vector\n */\nexport const toPolar = (v: Vector, origin = Points.Empty): Polar.Coord => {\n  if (isPolar(v)) {\n    return v;\n  } else if (isCartesian(v)) {\n    return Polar.fromCartesian(v, origin);\n  }\n  throw new Error(`Expected polar/cartesian vector. Got: ${v}`);\n};\n\n/**\n * Converts a Vector to a Cartesian coordinate. If the provided\n * value is already Cartesian, it is returned.\n * @param v\n * @returns Cartestian vector\n */\nexport const toCartesian = (v: Vector): Points.Point => {\n  if (isPolar(v)) {\n    return Polar.toPoint(v);\n  } else if (isCartesian(v)) {\n    return v;\n  }\n  throw new Error(`Expected polar/cartesian vector. Got: ${v}`);\n};\n\n/**\n * Return a human-friendly representation of vector\n * @param v\n * @param digits\n * @returns\n */\nexport const toString = (v: Vector, digits?: number) => {\n  if (isPolar(v)) {\n    return Polar.toString(v, digits);\n  } else if (isCartesian(v)) {\n    return Points.toString(v, digits);\n  }\n  throw new Error(`Expected polar/cartesian vector. Got: ${v}`);\n};\n\n/**\n * Calculate dot product of a vector\n * @param a\n * @param b\n * @returns\n */\nexport const dotProduct = (a: Vector, b: Vector) => {\n  if (isPolar(a) && isPolar(b)) {\n    return Polar.dotProduct(a, b);\n  } else if (isCartesian(a) && isCartesian(b)) {\n    return Points.dotProduct(a, b);\n  }\n  throw new Error(`Expected two polar/Cartesian vectors.`);\n};\n\n/**\n * Clamps the magnitude of a vector\n * @param v Vector to clamp\n * @param max Maximum magnitude\n * @param min Minium magnitude\n * @returns\n */\nexport const clampMagnitude = (v: Vector, max = 1, min = 0) => {\n  if (isPolar(v)) {\n    return Polar.clampMagnitude(v, max, min);\n  } else if (isCartesian(v)) {\n    return Points.clampMagnitude(v, max, min);\n  }\n  throw new Error(`Expected either polar or Cartesian vector`);\n};\n\n/**\n * Returns `a + b`.\n *\n * Vector is returned in the same type as `a`.\n * @param a\n * @param b\n * @returns\n */\nexport const sum = (a: Vector, b: Vector) => {\n  const polar = isPolar(a);\n  a = toCartesian(a);\n  b = toCartesian(b);\n  const c = Points.sum(a, b);\n  return polar ? toPolar(c) : c;\n};\n\n/**\n * Returns `a - b`.\n *\n * Vector is returned in the same type as `a`\n * @param a\n * @param b\n */\nexport const subtract = (a: Vector, b: Vector) => {\n  const polar = isPolar(a);\n  a = toCartesian(a);\n  b = toCartesian(b);\n  const c = Points.subtract(a, b);\n  return polar ? toPolar(c) : c;\n};\n\n/**\n * Returns `a * b`.\n *\n * Vector is returned in the same type `a`.\n * @param a\n * @param b\n */\nexport const multiply = (a: Vector, b: Vector) => {\n  const polar = isPolar(a);\n  a = toCartesian(a);\n  b = toCartesian(b);\n  const c = Points.multiply(a, b);\n  return polar ? toPolar(c) : c;\n};\n\n/**\n * Returns `a / b`.\n *\n * Vector is returned in the same type `a`.\n * @param a\n * @param b\n */\nexport const divide = (a: Vector, b: Vector) => {\n  const polar = isPolar(a);\n  a = toCartesian(a);\n  b = toCartesian(b);\n  const c = Points.divide(a, b);\n  return polar ? toPolar(c) : c;\n};\n","import * as Lines from './Line.js';\nimport * as Points from './Point.js';\nimport { type CirclePositioned } from './Circle.js';\nimport { Arrays } from '../collections/index.js';\nimport { type Path } from './Path.js';\n\nexport type Waypoint = CirclePositioned;\n\nexport type Opts = {\n  readonly maxDistanceFromLine?: number;\n  readonly enforceOrder?: boolean;\n};\n\nexport const fromPoints = (\n  waypoints: readonly Points.Point[],\n  opts: Opts = {}\n) => {\n  const lines = Lines.joinPointsToLines(...waypoints);\n  return init(\n    lines.map((l) => Lines.toPath(l)),\n    opts\n  );\n};\n\nexport const init = (paths: readonly Path[], opts: Opts = {}) => {\n  //const enforceOrder = opts.enforceOrder ?? true;\n  const maxDistanceFromLine = opts.maxDistanceFromLine ?? 0.1;\n\n  const checkUnordered = (pt: Points.Point) => {\n    const results = paths.map((p, index) => {\n      const nearest = p.nearest(pt);\n      const distance = Points.distance(pt, nearest);\n      return { path: p, index, nearest, distance };\n    });\n\n    const filtered = results.filter((v) => v.distance <= maxDistanceFromLine);\n    const sorted = Arrays.sortByNumericProperty(filtered, `distance`);\n\n    return sorted;\n  };\n\n  // const checkUnordered = (p:Points.Point) => {\n  //   // Calculate progress of pointer between all the waypoint lines\n  //   const progresses = lines.map((line, index) => (\n  //     {\n  //       index,\n  //       score: Points.progressBetween(p, line.a, line.b)\n  //     }));\n\n  //   // Sort by closest\n  //   const sorted = Arrays.sortByNumericProperty(progresses, `score`);\n\n  // };\n  return checkUnordered;\n};\n","import * as Points from './Point.js';\n\nexport type Sphere = Points.Point3d & {\n  readonly radius: number;\n};\n","export * as CirclePacking from './CirclePacking.js';","import {sortByNumericProperty} from \"../collections/Arrays.js\";\nimport * as Circles from \"./Circle.js\";\nimport * as Shapes from \"./Shape.js\";\nimport * as Points from './Point.js';\nimport type {RandomSource} from \"../Random.js\";\n\nexport type RandomOpts = {\n  readonly attempts?: number\n  readonly randomSource?: RandomSource\n}\n/**\n * Naive randomised circle packing.\n * [Algorithm by Taylor Hobbs](https://tylerxhobbs.com/essays/2016/a-randomized-approach-to-cicle-packing)\n */\nexport const random = (circles: readonly Circles.Circle[], container: Shapes.ShapePositioned, opts: RandomOpts = {}) => {\n  const attempts = opts.attempts ?? 2000;\n\n  const sorted = sortByNumericProperty(circles, `radius`);\n  const positionedCircles: Circles.CirclePositioned[] = [];\n\n  const willHit = (b: Points.Point, radius: number) => positionedCircles.some(v => Circles.isIntersecting(v, b, radius));\n\n  while (sorted.length) {\n    //eslint-disable-next-line functional/immutable-data\n    const circle = sorted.pop();\n    if (!circle) break;\n\n    const randomPointOpts = {...opts, margin: {x: circle.radius, y: circle.radius}};\n\n    //eslint-disable-next-line functional/no-let\n    for (let i = 0; i < attempts; i++) {\n      const position = Shapes.randomPoint(container, randomPointOpts);\n      if (!willHit(position, circle.radius)) {\n        //eslint-disable-next-line functional/immutable-data\n        positionedCircles.push(Object.freeze({...circle, ...position}));\n        break;\n      }\n    }\n  }\n\n  return positionedCircles;\n};","import { type Point, isPoint } from './Point.js';\nimport { type Rect, isRect, placeholder as PlaceholderRect } from './Rect.js';\n\n/**\n * A scale function that takes an input value to scale.\n * Input can be in the form of `{ x, y }` or two number parameters.\n *\n * ```js\n * scale(10, 20);\n * scale({ x:10, y:20 });\n * ```\n *\n * Output range can be specified as a `{ width, height }` or two number parameters.\n * If omitted, the default range\n * is used.\n *\n * ```js\n * // Scale 10,20 with range w:800 h:600\n * scale(10, 20, 800, 600);\n * scale({x:10, y:20}, 800, 600);\n * scale({x:10, y:20}, {width: 800, height: 600});\n * ```\n */\nexport type ScaleFn = (\n  a: number | Point,\n  b?: number | Rect,\n  c?: number | Rect,\n  d?: number\n) => Point;\n\n/**\n * A scaler than can convert to a from an output range\n */\nexport type Scaler = {\n  /**\n   * Relative to absolute coordinates\n   */\n  readonly abs: ScaleFn;\n  /**\n   * Absolute to relative coordintes\n   */\n  readonly rel: ScaleFn;\n};\n\n/**\n * Returns a set of scaler functions, to convert to and from ranges.\n *\n * ```js\n * const scaler = Scaler.scaler(`both`, window.innerWidth, window.innerHeight);\n * // Assuming screen of 800x400...\n * scaler.abs(400,200);          // Yields { x:0.5, y:0.5 }\n * scaler.abs({ x:400, y:200 }); // Yields { x:0.5, y:0.5 }\n *\n * scaler.rel(0.5, 0.5);         // Yields: { x:400, y:200 }\n * scaler.rel({ x:0.5, y:0.5 }); // Yields: { x:400, y:200 }\n * ```\n *\n * If no default range is provided, it must be given each time the scale function is used.\n *\n * ```js\n * const scaler = Scaler.scaler(`both`);\n *\n * scaler.abs(400, 200, 800, 400);\n * scaler.abs(400, 200, { width: 800, height: 400 });\n * scaler.abs({ x:400, y: 200}, { width: 800, height: 400 });\n * scaler.abs({ x:400, y: 200}, 800, 400);\n * // All are the same, yielding { x:0.5, y:0.5 }\n *\n * scaler.abs(400, 200); // Throws an exception because there is no scale\n * ```\n * @param scaleBy Dimension to scale by\n * @param defaultRect Default range\n * @returns\n */\nexport const scaler = (\n  scaleBy: `both` | `min` | `max` | `width` | `height` = `both`,\n  defaultRect?: Rect\n): Scaler => {\n  const defaultBounds = defaultRect ?? PlaceholderRect;\n\n  //eslint-disable-next-line functional/no-let\n  let sw = 1;\n  //eslint-disable-next-line functional/no-let\n  let sh = 1;\n  //eslint-disable-next-line functional/no-let\n  let s = { x: 1, y: 1 };\n\n  const computeScale = () => {\n    switch (scaleBy) {\n      case `height`:\n        return { x: sh, y: sh };\n      case `width`:\n        return { x: sw, y: sw };\n      case `min`:\n        return { x: Math.min(sw, sh), y: Math.min(sw, sh) };\n      case `max`:\n        return { x: Math.max(sw, sh), y: Math.max(sw, sh) };\n      default:\n        return { x: sw, y: sh };\n    }\n  };\n\n  const normalise = (\n    a: number | Point,\n    b?: number | Rect,\n    c?: number | Rect,\n    d?: number\n  ): [x: number, y: number, w: number, h: number] => {\n    //eslint-disable-next-line functional/no-let\n    let inX = Number.NaN;\n    //eslint-disable-next-line functional/no-let\n    let inY = Number.NaN;\n    //eslint-disable-next-line functional/no-let\n    let outW = defaultBounds.width;\n    //eslint-disable-next-line functional/no-let\n    let outH = defaultBounds.height;\n\n    if (typeof a === `number`) {\n      inX = a;\n      if (typeof b === `number`) {\n        inY = b;\n        if (c === undefined) return [inX, inY, outW, outH];\n        if (isRect(c)) {\n          outW = c.width;\n          outH = c.height;\n        } else if (typeof c === `number`) {\n          outW = c;\n          if (typeof d === `number`) {\n            outH = d;\n          } else {\n            throw new Error(`Missing final height value`);\n          }\n        } else throw new Error(`Missing valid output range`);\n      } else if (isRect(b)) {\n        outW = b.width;\n        outH = b.height;\n      } else {\n        throw new Error(\n          `Expected input y or output Rect to follow first number parameter`\n        );\n      }\n    } else if (isPoint(a)) {\n      inX = a.x;\n      inY = a.y;\n      if (b === undefined) return [inX, inY, outW, outH];\n      if (isRect(b)) {\n        outW = b.width;\n        outH = b.height;\n      } else if (typeof b === `number`) {\n        outW = b;\n        if (typeof c === `number`) {\n          outH = c;\n        } else {\n          throw new Error(\n            `Expected height as third parameter after Point and output width`\n          );\n        }\n      } else {\n        throw new Error(\n          `Expected Rect or width as second parameter when first parameter is a Point`\n        );\n      }\n    } else {\n      throw new Error(`Expected input Point or x value as first parameter`);\n    }\n    return [inX, inY, outW, outH];\n  };\n\n  const scaleAbs = (\n    a: number | Point,\n    b?: number | Rect,\n    c?: number | Rect,\n    d?: number\n  ): Point => {\n    const n = normalise(a, b, c, d);\n    return scaleNormalised(true, ...n);\n  };\n\n  const scaleRel = (\n    a: number | Point,\n    b?: number | Rect,\n    c?: number | Rect,\n    d?: number\n  ): Point => {\n    const n = normalise(a, b, c, d);\n    return scaleNormalised(false, ...n);\n  };\n\n  const scaleNormalised = (\n    abs: boolean,\n    x: number,\n    y: number,\n    w: number,\n    h: number\n  ): Point => {\n    if (Number.isNaN(w)) throw new Error(`Output width range missing`);\n    if (Number.isNaN(h)) throw new Error(`Output height range missing`);\n\n    // If output dimensions has changed since last, create a new scale\n    if (w !== sw || h !== sh) {\n      sw = w;\n      sh = h;\n      s = computeScale();\n    }\n\n    if (abs) {\n      return {\n        x: x * s.x,\n        y: y * s.y,\n      };\n    } else {\n      return {\n        x: x / s.x,\n        y: y / s.y,\n      };\n    }\n  };\n\n  return {\n    rel: scaleRel,\n    abs: scaleAbs,\n  };\n};\n","import {type Rgb} from '../visual/Colour.js';\nimport {ImageDataGrid} from '../visual/index.js';\nimport * as Grids from './Grid.js';\n\nexport type Kernel = readonly (readonly number[])[];\nexport type CellWithValue<V> = readonly [cell: Grids.Cell, value: V | undefined];\nexport type ScalarAndValue<V> = readonly [scalar: number, v: V | undefined];\nexport type KernelCompute = <V>(offset: Grids.Cell, value: V) => V;\nexport type KernelReduce<V> = (values: readonly ScalarAndValue<V>[]) => V | undefined;\n\n/**\n * Multiply every element of kernel by the same `scalar` value.\n * Returns new result, input is unmodified\n * @param kernel \n * @param scalar \n * @returns \n */\nexport const multiply = (kernel: Kernel, scalar: number): Kernel => {\n  const rows = kernel.length;\n  const cols = kernel[0].length;\n  const copy: number[][] = [];\n  //eslint-disable-next-line functional/no-let\n  for (let row = 0; row < rows; row++) {\n    //eslint-disable-next-line functional/immutable-data\n    copy[row] = [];\n    //eslint-disable-next-line functional/no-let\n    for (let col = 0; col < cols; col++) {\n      //eslint-disable-next-line functional/immutable-data\n      copy[row][col] = kernel[row][col] * scalar;\n    }\n  }\n  return copy;\n};\n\n\nexport function convolveCell<V>(c: Grids.Cell, kernel: Kernel2dArray, source: Grids.Grid, access: Grids.CellAccessor<V>, reduce: KernelReduce<V>): V | undefined {\n  const valuesAtKernelPos: ScalarAndValue<V>[] = kernel.map(o => {\n    const pos = Grids.offset(source, c, o[0], `stop`); // `stop` avoids fringing at extents of image\n    if (!pos) return [o[1], undefined];\n    return [o[1], access(pos, `undefined`)];\n  });\n  return reduce(valuesAtKernelPos);\n}\n\n/**\n * Performs kernel-based convolution over `image`.\n * @param kernel \n * @param image \n */\nexport function* convolveImage(kernel: Kernel, image: ImageData) {\n  const grid = {rows: image.width, cols: image.height};\n  const imageDataAsGrid = ImageDataGrid.accessor(image);\n\n  yield* convolve(kernel, grid, imageDataAsGrid, Grids.cells(grid), rgbReducer);\n}\n\nexport function* convolve<V>(kernel: Kernel, source: Grids.Grid, access: Grids.CellAccessor<V>, visitor: Grids.VisitGenerator, reduce: KernelReduce<V>, origin?: Grids.Cell): IterableIterator<CellWithValue<V>> {\n\n  //const wrap:Grids.BoundsLogic = `undefined`;\n  // Use middle, eg 3x3 = 1,1\n  if (!origin) {\n    const kernelRows = kernel.length;\n    const kernelCols = kernel[0].length;\n    origin = {x: Math.floor(kernelRows / 2), y: Math.floor(kernelCols / 2)};\n  }\n\n  const asArray = kernel2dToArray(kernel, origin);\n  for (const c of visitor) {\n    const v = convolveCell<V>(c, asArray, source, access, reduce);\n    yield [c, v];\n  }\n}\n\nexport type Kernel2dArray = ReadonlyArray<readonly [cell: Grids.Cell, value: number]>;\n\n/**\n * For a given kernel, returns an array of offsets. These\n * consist of a cell offset (eg `{x:-1,y:-1}`) and the value at that kernel position.\n * @param kernel \n * @param origin \n * @returns \n */\nexport const kernel2dToArray = (kernel: Kernel, origin?: Grids.Cell): Kernel2dArray => {\n  const offsets: Kernel2dArray = [];\n  const rows = kernel.length;\n  const cols = kernel[0].length;\n  if (!origin) origin = {x: Math.floor(rows / 2), y: Math.floor(cols / 2)};\n\n  //eslint-disable-next-line functional/no-let\n  for (let xx = 0; xx < rows; xx++) {\n    //eslint-disable-next-line functional/no-let\n    for (let yy = 0; yy < cols; yy++) {\n      //eslint-disable-next-line functional/immutable-data\n      // @ts-ignore\n      offsets.push([{x: xx - origin.x, y: yy - origin.y}, kernel[xx][yy]]);\n    }\n  }\n  return offsets;\n};\n\nexport const rgbReducer: KernelReduce<Rgb> = (values: readonly ScalarAndValue<Rgb>[]) => {\n  //eslint-disable-next-line functional/no-let\n  let r = 0;\n  //eslint-disable-next-line functional/no-let\n  let g = 0;\n  //eslint-disable-next-line functional/no-let\n  let b = 0;\n  //eslint-disable-next-line functional/no-let\n  const opacity = 0;\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < values.length; i++) {\n    const rgb = values[i][1];\n    const scale = values[i][0];\n    if (rgb === undefined) continue;\n    if (rgb.opacity === 0) continue;\n    if (scale === 0) continue;\n    r += (rgb.r * scale);\n    g += (rgb.g * scale);\n    b += (rgb.b * scale);\n    //opacity += ((rgb.opacity ?? 1) * scale);\n  }\n\n  const result = {\n    r: r,\n    g: g,\n    b: b,\n    opacity: 255\n  };\n  return result;\n};\nexport const identityKernel = [\n  [0, 0, 0],\n  [0, 1, 0],\n  [0, 0, 0]\n];\n\n\nexport const edgeDetectionKernel = [\n  [0, -1, 0],\n  [-1, 4, -1],\n  [0, -1, 0]\n];\n\nexport const sharpenKernel = [\n  [0, -1, 0],\n  [-1, 5, -1],\n  [0, -1, 0]\n];\n\nexport const boxBlurKernel = multiply([\n  [1, 1, 1],\n  [1, 1, 1],\n  [1, 1, 1]\n], 1 / 9);\n\nexport const gaussianBlur3Kernel = multiply([\n  [1, 2, 1],\n  [2, 4, 2],\n  [1, 2, 1]\n], 1 / 16);\n\nexport const gaussianBlur5Kernel = multiply([\n  [1, 4, 6, 4, 1],\n  [4, 16, 24, 16, 4],\n  [6, 24, 36, 24, 6],\n  [4, 16, 24, 16, 4],\n  [1, 4, 6, 4, 1],\n], 1 / 256);\n\nexport const unsharpMasking5Kernel = multiply([\n  [1, 4, 6, 4, 1],\n  [4, 16, 24, 16, 4],\n  [6, 24, -476, 24, 6],\n  [4, 16, 24, 16, 4],\n  [1, 4, 6, 4, 1],\n], -1 / 256);","import { type Sphere } from './Sphere.js';\nimport * as Points from './Point.js';\nimport {\n  type Circle,\n  type CirclePositioned,\n  toPositioned as circleToPositioned,\n} from './Circle.js';\nimport { scale } from '../data/Scale.js';\nimport { linearSpace } from '../Numbers.js';\n\nconst cos = Math.cos;\nconst sin = Math.sin;\nconst asin = Math.asin;\nconst sqrt = Math.sqrt;\nconst pow = Math.pow;\nconst pi = Math.PI;\nconst piPi = Math.PI * 2;\nconst goldenAngle = pi * (3 - sqrt(5));\nconst goldenSection = (1 + sqrt(5)) / 2;\n\n/**\n * Options for a Vogel spiral\n */\nexport type VogelSpiralOpts = {\n  /**\n   * Upper limit of points to produce.\n   * By default, 5000.\n   */\n  readonly maxPoints?: number;\n  /**\n   * Density value (0..1) which determines spacing of points.\n   * This is useful because it scales with whatever circle radius is given\n   * Use this parameter OR the `spacing` parameter.\n   */\n  readonly density?: number;\n  /**\n   * Spacing between points.\n   * Use this option OR the density value.\n   */\n  readonly spacing?: number;\n  /**\n   * Rotation offset to apply, in radians. 0 by default\n   */\n  readonly rotation?: number;\n};\n\n/**\n * Generates points on a Vogel spiral - a sunflower-like arrangement of points.\n *\n * @example With no arguments, assumes a unit circle\n * ```js\n * for (const pt of circleVogelSpiral()) {\n *  // Generate points on a unit circle, with 95% density\n * }\n * ```\n *\n *\n * @example Specifying a circle and options\n * ```js\n * const circle = { radius: 100, x: 100, y: 100 };\n * const opts = {\n *  maxPoints: 50,\n *  density: 0.99\n * };\n * for (const pt of circleVogelSpiral(circle, opts)) {\n *  // Do something with point...\n * }\n * ```\n *\n * @example Array format\n * ```js\n * const ptsArray = [...circleVogelSpiral(circle, opts)];\n * ```\n * @param circle\n * @param opts\n */\nexport function* circleVogelSpiral(\n  circle?: Circle,\n  opts: VogelSpiralOpts = {}\n): IterableIterator<Points.Point> {\n  const maxPoints = opts.maxPoints ?? 5000;\n  const density = opts.density ?? 0.95;\n  const rotationOffset = opts.rotation ?? 0;\n\n  const c = circleToPositioned(circle ?? { radius: 1, x: 0, y: 0 });\n  const max = c.radius;\n  //eslint-disable-next-line functional/no-let\n  let spacing = c.radius * scale(density, 0, 1, 0.3, 0.01);\n  if (opts.spacing) spacing = opts.spacing;\n\n  //eslint-disable-next-line functional/no-let\n  let radius = 0;\n  //eslint-disable-next-line functional/no-let\n  let count = 0;\n  //eslint-disable-next-line functional/no-let\n  let angle = 0;\n  while (count < maxPoints && radius < max) {\n    radius = spacing * count ** 0.5;\n    angle = rotationOffset + (count * 2 * pi) / goldenSection;\n    yield Object.freeze({\n      x: c.x + radius * cos(angle),\n      y: c.y + radius * sin(angle),\n    });\n    count++;\n  }\n}\n\nexport type CircleRingsOpts = {\n  readonly rings?: number;\n  /**\n   * Rotation offset, in radians\n   */\n  readonly rotation?: number;\n};\n/**\n * Generates points spaced out on the given number of rings.\n *\n * Get points as array\n * ```js\n * const circle = { radius: 5, x: 100, y: 100 };\n * const opts = { rings: 5 };\n * const points = [...circleRings(circle, rings)];\n * ```\n *\n * Or iterate over them\n * ```js\n * for (const point of circleRings(circle, opts)) {\n * }\n * ```\n * Source: http://www.holoborodko.com/pavel/2015/07/23/generating-equidistant-points-on-unit-disk/#more-3453\n * @param circle\n */\nexport function* circleRings(\n  circle?: Circle | CirclePositioned,\n  opts: CircleRingsOpts = {}\n): IterableIterator<Points.Point> {\n  const rings = opts.rings ?? 5;\n  const c = circleToPositioned(circle ?? { radius: 1, x: 0, y: 0 });\n  const ringR = 1 / rings;\n  const rotationOffset = opts.rotation ?? 0;\n\n  //eslint-disable-next-line functional/no-let\n  let ringCount = 1;\n\n  // Origin\n  yield Object.freeze({ x: c.x, y: c.y });\n\n  //eslint-disable-next-line functional/no-let\n  for (let r = ringR; r <= 1; r += ringR) {\n    const n = Math.round(pi / asin(1 / (2 * ringCount)));\n    for (const theta of linearSpace(0, piPi, n + 1)) {\n      yield Object.freeze({\n        x: c.x + r * cos(theta + rotationOffset) * c.radius,\n        y: c.y + r * sin(theta + rotationOffset) * c.radius,\n      });\n    }\n    ringCount++;\n  }\n}\n/**\n * Fibonacci sphere algorithm. Generates points\n * distributed on a sphere.\n *\n * @example Generate points of a unit sphere\n * ```js\n * for (const pt of sphereFibonacci(100)) {\n *  // pt.x, pt.y, pt.z\n * }\n * ```\n *\n * @example Generate points into an array\n * ```js\n * const sphere = { radius: 10, x: 10, y: 200 }\n * const pts = [...sphereFibonacci(100, 0, sphere)];\n * ```\n *\n * Source: https://codepen.io/elchininet/pen/vXeRyL\n *\n * @param samples\n * @returns\n */\nexport function* sphereFibonacci(\n  samples: number = 100,\n  rotationRadians: number = 0,\n  sphere?: Sphere\n): IterableIterator<Points.Point3d> {\n  const offset = 2 / samples;\n  const s = sphere ?? { x: 0, y: 0, z: 0, radius: 1 };\n\n  //eslint-disable-next-line functional/no-let\n  for (let i = 0; i < samples; i++) {\n    const y = i * offset - 1 + offset / 2;\n    const r = sqrt(1 - pow(y, 2));\n    const a = ((i + 1) % samples) * goldenAngle + rotationRadians;\n    const x = cos(a) * r;\n    const z = sin(a) * r;\n    //eslint-disable-next-line functional/immutable-data\n    yield Object.freeze({\n      x: s.x + x * s.radius,\n      y: s.y + y * s.radius,\n      z: s.z + z * s.radius,\n    });\n  }\n}\n","// #region Import\nimport { afterMatch } from '../Text.js';\nimport { type QuadTreeItem } from '../geometry/QuadTree.js';\nimport { without } from './Arrays.js';\nimport * as Trees from './Trees.js';\nimport { couldAddChild, directChildren } from './Trees.js';\n// #endregion\n\n/**\n * Basic tree node implementation\n */\nexport class TreeNodeMutable<V> implements Trees.TreeNode {\n  value: V;\n  readonly label: string;\n  #children: readonly TreeNodeMutable<V>[];\n  #parent: TreeNodeMutable<V> | undefined;\n\n  /**\n   * Constructor\n   * @param value Value associated with node\n   * @param label Label\n   */\n  constructor(value: V, label: string) {\n    this.value = value;\n    this.label = label;\n    this.#children = [];\n  }\n\n  getLengthChildren(): number {\n    return this.#children.length;\n  }\n\n  hasChild = (possibleChild: TreeNodeMutable<V>) =>\n    Trees.hasChild(this, possibleChild);\n  hasAnyChild = (possibleChild: TreeNodeMutable<V>) =>\n    Trees.hasAnyChild(this, possibleChild);\n\n  hasParent = (possibleParent: TreeNodeMutable<V>) =>\n    Trees.hasParent(this, possibleParent);\n  hasAnyParent = (possibleParent: TreeNodeMutable<V>) =>\n    Trees.hasAnyParent(this, possibleParent);\n  getByPath = (\n    path: string,\n    opts: Trees.PathOpts = {}\n  ): TreeNodeMutable<V> | undefined => {\n    const e = Trees.getByPath(path, this, opts);\n    if (!e[1]) return;\n    return e[1] as TreeNodeMutable<V>;\n  };\n\n  /**\n   * Adds a value by a string path.\n   * Automatically generates intermediate nodes.\n   *\n   * ```js\n   * const rootValue = {}\n   * const root = treeNodeMutable(rootValue, 'pc');\n   * root.addValueByPath({x:'c'},  'c');\n   * root.addValueByPath({x:'admin'}, 'c.users.admin');\n   * ```\n   *\n   * Creates the structure:\n   * ```\n   * pc         {}\n   * + c        {x: 'c' }\n   *  + users   undefined\n   *   + admin  {x: 'admin'}\n   * ```\n   * @param value\n   * @param path\n   * @param pathOpts\n   */\n  addValueByPath(value: V, path: string, pathOpts: Trees.PathOpts = {}) {\n    const sep = pathOpts.separator ?? '.';\n    const split = path.split(sep);\n    const label = split.at(-1); //afterMatch(path, sep, { fromEnd: true });\n    let node: TreeNodeMutable<any> = this;\n\n    for (const p of split) {\n      const found = node?.findChild(p);\n      if (!found && node) {\n        const n = new TreeNodeMutable<V | undefined>(undefined, p);\n        node.add(n);\n        node = n;\n      } else if (found) {\n        node = found;\n      }\n    }\n    if (node) node.value = value;\n  }\n\n  /**\n   * Adds a child\n   * Throws an error if child cannot be added due to logical inconsistency (eg adding a child to self)\n   * @param child\n   */\n  add(child: TreeNodeMutable<V>) {\n    Trees.couldAddChild(this, child);\n    this.#children = [...this.#children, child];\n    if (child.#parent) {\n      child.#parent.remove(child);\n    }\n    child.#parent = this;\n  }\n\n  /**\n   * Removes a child node.\n   * Throws an exception if child was not found\n   * @param child\n   */\n  remove(child: TreeNodeMutable<V>) {\n    if (child.#parent !== this) throw new Error(`child.parent doesn't match`);\n    const w = without(this.#children, child);\n    if (w.length === this.#children.length)\n      throw new Error(`child not found in descendants`);\n    this.#children = w;\n  }\n\n  /**\n   * Sets the descendents of the node\n   * 'Unparents' existing children nodes. Checks each new node that it can\n   * be logically added\n   * @param d\n   */\n  setDescendants(d: TreeNodeMutable<V>[]) {\n    // Unset existing\n    for (const d of this.#children) {\n      d.#parent = undefined;\n    }\n\n    for (const dd of d) {\n      couldAddChild(this, dd);\n      dd.#parent = this;\n    }\n    this.#children = d;\n  }\n\n  /**\n   * Returns a string representation of tree\n   * @param indent\n   * @returns\n   */\n  prettyPrint(indent = 0): string {\n    const t = `${'  '.repeat(indent)} + label: ${this.label} value: ${\n      this.value ? JSON.stringify(this.value) : '-'\n    }`;\n    if (this.#children.length) {\n      return (\n        t +\n        '\\n' +\n        this.#children.map((d) => d.prettyPrint(indent + 1)).join('\\n')\n      );\n    } else {\n      return t;\n    }\n  }\n\n  /**\n   * Iterates all parents up to its root.\n   * First result is the immediate parent.\n   */\n  *parents(): IterableIterator<TreeNodeMutable<V>> {\n    let n: TreeNodeMutable<V> | undefined = this;\n    while (n.#parent !== undefined) {\n      yield n.#parent;\n      n = n.#parent;\n    }\n  }\n\n  /**\n   * Iterates over the direct descendents of node\n   */\n  *children(): IterableIterator<TreeNodeMutable<V>> {\n    for (const c of this.#children) {\n      yield c;\n    }\n  }\n\n  /**\n   * Searches direct children, returning the node that has the given `label`\n   * @param label\n   * @returns\n   */\n  findChild(label: string): TreeNodeMutable<V> | undefined {\n    if (label === undefined) throw new Error(`label param cannot be undefined`);\n    for (const c of this.#children) {\n      if (c.label === label) return c;\n    }\n  }\n\n  /**\n   * Returns _true_ if this node is root,\n   * ie. does not have a parent\n   */\n  get isRoot(): boolean {\n    return this.#parent === undefined;\n  }\n\n  /**\n   * Returns _true_ if this node has no children\n   */\n  get isEmpty(): boolean {\n    return this.#children.length === 0;\n  }\n}\n\n/**\n * Creates a tree node from an object\n * @param obj\n * @param label\n * @param parent\n * @returns\n */\nexport const fromObject = (\n  obj: object,\n  label = `root`,\n  parent?: TreeNodeMutable<any>\n): TreeNodeMutable<any> => {\n  const root = new TreeNodeMutable(obj, label);\n  if (parent) parent.add(root);\n  const children = [...directChildren(obj, label)];\n  const childNodes = children.map((c) => fromObject(c[1], c[0], root));\n  root.setDescendants(childNodes);\n  return root;\n};\n\n/**\n * Create a root tree node\n * @param value Value associated with node\n * @param label Label for node\n * @returns New TreeNodeMutable instance\n */\nexport const treeNodeMutable = <V>(value: V, label: string) =>\n  new TreeNodeMutable<V>(value, label);\n","export type { IStack } from './IStack.js';\nexport type { IStackMutable } from './IStackMutable.js';\nexport type { IStackImmutable } from './IStackImmutable.js';\n\n// ✔ Unit tested!\nexport type StackDiscardPolicy = `older` | `newer` | `additions`;\n\nexport type StackOpts = {\n  readonly debug?: boolean;\n  readonly capacity?: number;\n  readonly discardPolicy?: StackDiscardPolicy;\n};\n\nexport { immutable } from './StackImmutable.js';\nexport { mutable } from './StackMutable.js';\n","import type { ArrayKeys, EitherKey, ObjKeys } from '../index.js';\n\n/**\n * Adds an array o [k,v] to the map, returning a new instance\n * @param map Initial data\n * @param data Data to add\n * @returns New map with data added\n */\nconst addArray = <K, V>(\n  map: ReadonlyMap<K, V>,\n  data: ArrayKeys<K, V>\n): ReadonlyMap<K, V> => {\n  const x = new Map<K, V>(map.entries());\n  data.forEach((d) => {\n    if (d[0] === undefined) throw new Error(`key cannot be undefined`);\n    if (d[1] === undefined) throw new Error(`value cannot be undefined`);\n    x.set(d[0], d[1]);\n  });\n  return x;\n};\n\n/**\n * Adds objects to the map, returning a new instance\n * @param map Initial data\n * @param data Data to add\n * @returns A new map with data added\n */\nconst addObjects = <K, V>(\n  map: ReadonlyMap<K, V>,\n  data: ObjKeys<K, V>\n): ReadonlyMap<K, V> => {\n  const x = new Map<K, V>(map.entries());\n  data.forEach((d) => {\n    if (d.key === undefined) throw new Error(`key cannot be undefined`);\n    if (d.value === undefined) throw new Error(`value cannot be undefined`);\n\n    x.set(d.key, d.value);\n  });\n  return x;\n};\n\n/**\n * Returns true if map contains key\n *\n * @example\n * ```js\n * if (has(map, `London`)) ...\n * ```\n * @param map Map to search\n * @param key Key to find\n * @returns True if map contains key\n */\nexport const has = <K, V>(map: ReadonlyMap<K, V>, key: K): boolean =>\n  map.has(key);\n\n/**\n * Adds data to a map, returning the new map.\n *\n * Can add items in the form of [key,value] or {key, value}.\n * @example These all produce the same result\n * ```js\n * map.set(`hello`, `samantha`);\n * map.add([`hello`, `samantha`]);\n * map.add({key: `hello`, value: `samantha`})\n * ```\n * @param map Initial data\n * @param data One or more data to add in the form of [key,value] or {key, value}\n * @returns New map with data added\n */\nexport const add = <K, V>(\n  map: ReadonlyMap<K, V>,\n  ...data: EitherKey<K, V>\n): ReadonlyMap<K, V> => {\n  if (map === undefined) throw new Error(`map parameter is undefined`);\n  if (data === undefined) throw new Error(`data parameter i.s undefined`);\n  if (data.length === 0) return map;\n\n  const firstRecord = data[0];\n  const isObj =\n    typeof (firstRecord as { readonly key: K; readonly value: V }).key !==\n      `undefined` &&\n    typeof (firstRecord as { readonly key: K; readonly value: V }).value !==\n      `undefined`; //(typeof (data[0] as {readonly key:K}).key !== undefined && typeof (data[0] as {readonly value:V}).value !== undefined);\n  return isObj\n    ? addObjects(map, data as ObjKeys<K, V>)\n    : addArray(map, data as ArrayKeys<K, V>);\n};\n\n/**\n * Sets data in a copy of the initial map\n * @param map Initial map\n * @param key Key\n * @param value Value to  set\n * @returns New map with data set\n */\nexport const set = <K, V>(map: ReadonlyMap<K, V>, key: K, value: V) => {\n  const x = new Map<K, V>(map.entries());\n  x.set(key, value);\n  return x;\n};\n\n/**\n * Delete a key from the map, returning a new map\n * @param map Initial data\n * @param key\n * @returns New map with data deleted\n */\nexport const del = <K, V>(\n  map: ReadonlyMap<K, V>,\n  key: K\n): ReadonlyMap<K, V> => {\n  const x = new Map<K, V>(map.entries());\n  x.delete(key);\n  return x;\n};\n","import { type EitherKey } from '../index.js';\nimport { add, del } from './MapImmutableFns.js';\n\n/**\n * An immutable map. Rather than changing the map, functions like `add` and `delete`\n * return a new map reference which must be captured.\n *\n * Immutable data is useful because as it gets passed around your code, it never\n * changes from underneath you. You have what you have.\n *\n * @example\n * ```js\n * let m = map(); // Create\n * let m2 = m.set(`hello`, `samantha`);\n * // m is still empty, only m2 contains a value.\n * ```\n *\n * @template K Type of map keys. Typically `string`\n * @template V Type of stored values\n */\nexport interface IMapImmutable<K, V> {\n  /**\n   * Adds one or more items, returning the changed map.\n   *\n   * Can add items in the form of `[key,value]` or `{key, value}`.\n   * @example These all produce the same result\n   * ```js\n   * map.set(`hello`, `samantha`);\n   * map.add([`hello`, `samantha`]);\n   * map.add({key: `hello`, value: `samantha`})\n   * ```\n   * @param itemsToAdd\n   */\n  add(...itemsToAdd: EitherKey<K, V>): IMapImmutable<K, V>;\n  /**\n   * Deletes an item by key, returning the changed map\n   * @param key\n   */\n  delete(key: K): IMapImmutable<K, V>;\n  /**\n   * Returns an empty map\n   */\n  clear(): IMapImmutable<K, V>;\n  /**\n   * Returns an item by key, or _undefined_ if not found\n   * @example\n   * ```js\n   * const item = map.get(`hello`);\n   * ```\n   * @param key\n   */\n  get(key: K): V | undefined;\n  /**\n   * Returns _true_ if map contains `key`\n   * @example\n   * ```js\n   * if (map.has(`hello`)) ...\n   * ```\n   * @param key\n   */\n  has(key: K): boolean;\n  /**\n   * Returns _true_ if map is empty\n   */\n  isEmpty(): boolean;\n  /**\n   * Iterates over entries (in the form of [key,value])\n   *\n   * @example\n   * ```js\n   * for (const [key, value] of map.entries()) {\n   *  // Use key, value...\n   * }\n   * ```\n   */\n  entries(): IterableIterator<readonly [K, V]>;\n}\n\n/**\n * Returns an {@link IMapImmutable}.\n * Use {@link Maps.mutable} as a mutable alternatve.\n *\n * @example Basic usage\n * ```js\n * // Creating\n * let m = map();\n * // Add\n * m = m.add([\"name\", \"sally\"]);\n * // Recall\n * m.get(\"name\");\n * ```\n *\n * @example Enumerating\n * ```js\n * for (const [key, value] of map.entries()) {\n *  console.log(`${key} = ${value}`);\n * }\n * ```\n *\n * @example Overview\n * ```js\n * // Create\n * let m = map();\n * // Add\n * m = m.add([\"name\" , \"sally\"]);\n * m.get(\"name\");   // \"sally\";\n * m.has(\"age\");    // false\n * m.has(\"name\");   // true\n * m.isEmpty;       // false\n * m = m.delete(\"name\");\n * m.entries();     // Iterator of key value pairs\n * ```\n *\n * Since it is immutable, `add()`, `delete()` and `clear()` return a new version with change.\n *\n * @param dataOrMap Optional initial data in the form of an array of `{ key: value }` or `[ key, value ]`\n */\nexport const immutable = <K, V>(\n  dataOrMap?: ReadonlyMap<K, V> | EitherKey<K, V>\n): IMapImmutable<K, V> => {\n  if (dataOrMap === undefined) return immutable([]);\n  if (Array.isArray(dataOrMap)) return immutable(add(new Map(), ...dataOrMap));\n  const data = dataOrMap as ReadonlyMap<K, V>;\n  return {\n    add: (...itemsToAdd: EitherKey<K, V>) => {\n      const s = add(data, ...itemsToAdd);\n      return immutable(s);\n    },\n    get: (key: K) => data.get(key),\n    delete: (key: K) => immutable(del(data, key)),\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    clear: () => immutable(),\n    has: (key: K) => data.has(key),\n    entries: () => data.entries(),\n    isEmpty: () => data.size === 0,\n  };\n};\n","import { type EitherKey } from '../index.js';\nimport { add, del, set, has } from './MapImmutableFns.js';\n\n/**\n * A mutable map.\n *\n * It is a wrapper around the in-built Map type, but adds roughly the same API as {@link IMapImmutable}.\n *\n * @template K Type of map keys. Typically `string`\n * @template V Type of stored values\n */\nexport interface IMapMutable<K, V> {\n  /**\n   * Adds one or more items to map\n   *\n   * Can add items in the form of [key,value] or `{key, value}`.\n   * @example These all produce the same result\n   * ```js\n   * map.set(`hello`, `samantha`);\n   * map.add([`hello`, `samantha`]);\n   * map.add({key: `hello`, value: `samantha`})\n   * ```\n   * @param itemsToAdd\n   * @param itemsToAdd\n   */\n  add(...itemsToAdd: EitherKey<K, V>): void;\n  /**\n   * Sets a value to a specified key\n   * @param key\n   * @param value\n   */\n  set(key: K, value: V): void;\n  /**\n   * Deletes an item by key\n   * @param key\n   */\n  delete(key: K): void;\n  /**\n   * Clears map\n   */\n  clear(): void;\n  /**\n   * Gets an item by key\n   * @example\n   * ```js\n   * const item = map.get(`hello`);\n   * ```\n   * @param key\n   */\n  get(key: K): V | undefined;\n  /**\n   * Returns _true_ if map contains key\n   * @example\n   * ```js\n   * if (map.has(`hello`)) ...\n   * ```\n   * @param key\n   */\n  has(key: K): boolean;\n  /**\n   * Returns _true_ if map is empty\n   */\n  isEmpty(): boolean;\n  /**\n   * Iterates over entries (consisting of [key,value])\n   * @example\n   * ```js\n   * for (const [key, value] of map.entries()) {\n   *  // Use key, value...\n   * }\n   * ```\n   */\n  entries(): IterableIterator<readonly [K, V]>;\n}\n\n/**\n * Returns a {@link IMapMutable} (which just wraps the in-built Map)\n * Use {@link Maps.immutable} for the immutable alternative.\n *\n * @example Basic usage\n * ```js\n * const m = mapMutable();\n * // Add one or more entries\n * m.add([\"name\", \"sally\"]);\n * // Alternatively:\n * m.set(\"name\", \"sally\");\n * // Recall\n * m.get(\"name\");           // \"sally\"\n * m.delete(\"name\");\n * m.isEmpty; // True\n * m.clear();\n * ```\n * @param data Optional initial data in the form of an array of `{ key: value }` or `[ key, value ]`\n */\nexport const mutable = <K, V>(...data: EitherKey<K, V>): IMapMutable<K, V> => {\n  // eslint-disable-next-line functional/no-let\n  let m = add(new Map<K, V>(), ...data);\n  return {\n    add: (...data: EitherKey<K, V>) => {\n      m = add(m, ...data);\n    },\n    delete: (key: K) => {\n      m = del(m, key);\n    },\n    clear: () => {\n      m = add(new Map<K, V>());\n    },\n    set: (key: K, value: V): void => {\n      m = set(m, key, value);\n    },\n    get: (key: K): V | undefined => m.get(key),\n    entries: () => m.entries(),\n    isEmpty: () => m.size === 0,\n    has: (key: K) => has(m, key),\n  };\n};\n","import {\n  type IsEqual,\n  type ToString,\n  isEqualDefault,\n  toStringDefault,\n} from '../../Util.js';\nimport type {\n  MapArrayEvents,\n  IMapOfMutableExtended,\n} from './IMapOfMutableExtended.js';\nimport type { MapMultiOpts, MultiValue } from './MapMulti.js';\nimport { SimpleEventEmitter } from '../../Events.js';\nimport type { IMapOf } from './IMapOf.js';\n\n/**\n * @internal\n */\nexport class MapOfMutableImpl<V, M>\n  extends SimpleEventEmitter<MapArrayEvents<V>>\n  implements IMapOfMutableExtended<V, M>\n{\n  /* eslint-disable-next-line functional/prefer-readonly-type */\n  readonly #map: Map<string, M> = new Map();\n  readonly groupBy: ToString<V>;\n  readonly type: MultiValue<V, M>;\n\n  constructor(type: MultiValue<V, M>, opts: MapMultiOpts<V> = {}) {\n    super();\n    this.type = type;\n    this.groupBy = opts.groupBy ?? toStringDefault;\n  }\n\n  /**\n   * Returns the type name. For in-built implementations, it will be one of: array, set or circular\n   */\n  get typeName() {\n    return this.type.name;\n  }\n\n  /**\n   * Returns the length of the longest child list\n   */\n  get lengthMax() {\n    //eslint-disable-next-line functional/no-let\n    let m = 0;\n    for (const v of this.#map.values()) {\n      m = Math.max(m, this.type.count(v));\n    }\n    return m;\n  }\n\n  debugString(): string {\n    const keys = Array.from(this.#map.keys());\n    // eslint-disable-next-line functional/no-let\n    let r = `Keys: ${keys.join(`, `)}\\r\\n`;\n    keys.forEach((k) => {\n      const v = this.#map.get(k);\n      if (v !== undefined) {\n        const asArray = this.type.toArray(v);\n        if (asArray !== undefined) {\n          r += ` - ${k} (${this.type.count(v)}) = ${JSON.stringify(\n            asArray\n          )}\\r\\n`;\n        }\n      } else r += ` - ${k} (undefined)\\r\\n`;\n    });\n    return r;\n  }\n\n  get isEmpty(): boolean {\n    return this.#map.size === 0;\n  }\n\n  clear() {\n    this.#map.clear();\n    super.fireEvent(`clear`, true);\n  }\n\n  //eslint-disable-next-line functional/prefer-immutable-types\n  addKeyedValues(key: string, ...values: V[]) {\n    const set = this.#map.get(key);\n    //console.log(`addKeyedValues: key: ${key} values: ${JSON.stringify(values)}`);\n    if (set === undefined) {\n      this.#map.set(key, this.type.add(undefined, values));\n      super.fireEvent(`addedKey`, { key: key });\n      super.fireEvent(`addedValues`, { values: values });\n    } else {\n      // eslint-disable-next-line functional/immutable-data\n      this.#map.set(key, this.type.add(set, values));\n      super.fireEvent(`addedValues`, { values: values });\n    }\n  }\n  //eslint-disable-next-line functional/prefer-immutable-types\n  set(key: string, values: V[]) {\n    this.addKeyedValues(key, ...values);\n    return this;\n  }\n\n  addValue(...values: ReadonlyArray<V>) {\n    values.forEach((v) => this.addKeyedValues(this.groupBy(v), v));\n  }\n\n  hasKeyValue(key: string, value: V, eq: IsEqual<V>): boolean {\n    const m = this.#map.get(key);\n    if (m === undefined) return false;\n    return this.type.has(m, value, eq);\n  }\n\n  //eslint-disable-next-line functional/prefer-tacit\n  has(key: string): boolean {\n    return this.#map.has(key);\n  }\n\n  deleteKeyValue(key: string, value: V): boolean {\n    const a = this.#map.get(key);\n    if (a === undefined) return false;\n    return this.deleteKeyValueFromMap(a, key, value);\n  }\n\n  private deleteKeyValueFromMap(map: M, key: string, value: V): boolean {\n    const preCount = this.type.count(map);\n    const filtered = this.type.without(map, value);\n    const postCount = filtered.length;\n    this.#map.set(key, this.type.add(undefined, filtered));\n    return preCount > postCount;\n  }\n\n  deleteByValue(value: V): boolean {\n    //eslint-disable-next-line functional/no-let\n    let something = false;\n    Array.from(this.#map.keys()).filter((key) => {\n      const a = this.#map.get(key);\n      if (!a) throw Error(`Bug: map could not be accessed`);\n      if (this.deleteKeyValueFromMap(a, key, value)) {\n        something = true; // note that something was deleted\n\n        // If key is empty, delete it\n        if (this.count(key) === 0) this.delete(key);\n      }\n    });\n    return something;\n  }\n\n  delete(key: string): boolean {\n    const a = this.#map.get(key);\n    if (a === undefined) return false;\n    this.#map.delete(key);\n    this.fireEvent(`deleteKey`, { key: key });\n    return true;\n  }\n\n  firstKeyByValue(\n    value: V,\n    eq: IsEqual<V> = isEqualDefault\n  ): string | undefined {\n    const keys = Array.from(this.#map.keys());\n    const found = keys.find((key) => {\n      const a = this.#map.get(key);\n      if (a === undefined) throw Error(`Bug: map could not be accessed`);\n      return this.type.has(a, value, eq);\n    });\n    return found;\n  }\n\n  count(key: string): number {\n    const e = this.#map.get(key);\n    if (e === undefined) return 0;\n    return this.type.count(e);\n  }\n\n  /**\n   * Iterates over values stored under `key`\n   * An empty array is returned if there are no values\n   */\n  *get(key: string): IterableIterator<V> {\n    const m = this.#map.get(key);\n    if (m === undefined) return;\n    yield* this.type.iterable(m);\n  }\n\n  /**\n   * Iterate over the values stored under `key`.\n   * If key does not exist, iteration is essentially a no-op\n   * @param key\n   * @returns\n   */\n  *valuesFor(key: string) {\n    const m = this.#map.get(key);\n    if (m === undefined) return;\n    yield* this.type.iterable(m);\n  }\n\n  //eslint-disable-next-line functional/prefer-tacit\n  getSource(key: string): M | undefined {\n    return this.#map.get(key);\n  }\n\n  /* eslint-disable-next-line functional/prefer-readonly-type */\n  *keys(): IterableIterator<string> {\n    yield* this.#map.keys();\n    //return Array.from(this.#map.keys());\n  }\n\n  *entriesFlat(): IterableIterator<[key: string, value: V]> {\n    for (const e of this.#map.entries()) {\n      for (const v of this.type.iterable(e[1])) {\n        yield [e[0], v];\n      }\n    }\n  }\n\n  *valuesFlat(): IterableIterator<V> {\n    for (const e of this.#map.entries()) {\n      yield* this.type.iterable(e[1]);\n    }\n  }\n\n  *entries(): IterableIterator<[key: string, value: V[]]> {\n    //yield* this.#map.entries();\n    for (const [k, v] of this.#map.entries()) {\n      const tmp = [...this.type.iterable(v)];\n      yield [k, tmp];\n    }\n  }\n\n  /* eslint-disable-next-line functional/prefer-readonly-type */\n  *keysAndCounts(): IterableIterator<[string, number]> {\n    //const keys = this.keys();\n    /* eslint-disable-next-line functional/prefer-readonly-type */\n    //const r = keys.map(k => [k, this.count(k)]) as Array<[string, number]>;\n    //return r;\n\n    for (const key of this.keys()) {\n      yield [key, this.count(key)];\n    }\n  }\n\n  merge(other: IMapOf<V>) {\n    // const keys = other.keys();\n    // keys.forEach(key => {\n    //   const data = other.get(key);\n    //   if (data !== undefined) this.addKeyedValues(key, ...data);\n    // });\n    for (const key of other.keys()) {\n      const data = other.get(key);\n      this.addKeyedValues(key, ...data);\n    }\n  }\n\n  get size() {\n    return this.#map.size;\n  }\n\n  forEach(\n    fn: (\n      value: readonly V[],\n      key: string,\n      //eslint-disable-next-line functional/prefer-immutable-types\n      map: Map<string, readonly V[]>\n    ) => void,\n    _thisArg?: any\n  ) {\n    // @ts-ignore\n    this.#map.forEach(fn);\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.#map[Symbol.toStringTag];\n  }\n\n  // [Symbol.iterator]() {\n  //   return this.type[Symbol.iterator]();\n  // }\n}\n","import { toStringDefault } from '../../Util.js';\nimport { without } from '../Arrays.js';\nimport type { MapSetOpts, MultiValue } from './MapMulti.js';\nimport { MapOfMutableImpl } from './MapOfMultiImpl.js';\nimport {\n  hasAnyValue as mapHasAnyValue,\n  toArray as mapToArray,\n  find as mapFind,\n  filter as mapFilter,\n  addKeepingExisting,\n} from './MapFns.js';\nimport type { IMapOfMutableExtended } from './IMapOfMutableExtended.js';\n\n/**\n * Returns a {@link IMapOfMutableExtended} that uses a set to hold values.\n * This means that only unique values are stored under each key. By default it\n * uses the JSON representation to compare items.\n *\n * Options: `{ hash: toStringFn } }`\n *\n * `hash` is a {@link Util.ToString} function: `(object) => string`. By default it uses\n * `JSON.stringify`.\n *\n * @example Only storing the newest three items per key\n * ```js\n * const map = mapOfSetMutable();\n * map.add(`hello`, [1, 2, 3, 1, 2, 3]);\n * const hello = map.get(`hello`); // [1, 2, 3]\n * ```\n *\n * @example\n * ```js\n * const hash = (v) => v.name; // Use name as the key\n * const map = mapOfSetMutable(hash);\n * map.add(`hello`, {age:40, name: `Mary`});\n * map.add(`hello`, {age:29, name: `Mary`}); // Value ignored as same name exists\n * ```\n * @param opts\n * @returns\n */\nexport const ofSetMutable = <V>(\n  opts?: MapSetOpts<V>\n): IMapOfMutableExtended<V, ReadonlyMap<string, V>> => {\n  const hash = opts?.hash ?? toStringDefault;\n  const comparer = (a: V, b: V) => hash(a) === hash(b);\n\n  const t: MultiValue<V, ReadonlyMap<string, V>> = {\n    get name() {\n      return `set`;\n    },\n    iterable: (source) => source.values(),\n    add: (dest, values) => addKeepingExisting(dest, hash, ...values),\n    count: (source) => source.size,\n    find: (source, predicate) => mapFind(source, predicate),\n    filter: (source, predicate) => mapFilter(source, predicate),\n    toArray: (source) => mapToArray(source),\n    has: (source, value) => mapHasAnyValue(source, value, comparer),\n    without: (source, value) => without(mapToArray(source), value, comparer),\n  };\n  const m = new MapOfMutableImpl<V, ReadonlyMap<string, V>>(t, opts);\n  return m;\n};\n","import { isEqualDefault } from '../../Util.js';\nimport { type ICircularArray, circularArray } from '../CircularArray.js';\nimport type { MapMultiOpts, MultiValue } from './MapMulti.js';\nimport { MapOfMutableImpl } from './MapOfMultiImpl.js';\nimport type { IMapOfMutableExtended } from './IMapOfMutableExtended.js';\n\nexport type MapCircularOpts<V> = MapMultiOpts<V> & {\n  readonly capacity: number;\n};\n\n/**\n * Returns a {@link IMapOfMutableExtended} that uses a {@link ICircularArray} to hold values. Mutable.\n * This means that the number of values stored under each key will be limited to the defined\n * capacity.\n *\n * Required option:\n * * `capacity`: how many items to hold\n *\n * @example Only store the most recent three items per key\n * ```js\n * const map = ofCircularMutable({capacity: 3});\n * map.add(`hello`, [1, 2, 3, 4, 5]);\n * const hello = map.get(`hello`); // [3, 4, 5]\n * ```\n *\n *\n * @param opts\n * @returns\n */\nexport const ofCircularMutable = <V>(\n  opts: MapCircularOpts<V>\n): IMapOfMutableExtended<V, ICircularArray<V>> => {\n  const comparer = isEqualDefault;\n\n  const t: MultiValue<V, ICircularArray<V>> = {\n    get name() {\n      return `circular`;\n    },\n    add: (dest, values) => {\n      if (dest === undefined) dest = circularArray<V>(opts.capacity);\n      for (const v of values) {\n        //values.forEach(v => dest = dest?.add(v));\n        dest = dest.add(v);\n      }\n      return dest;\n    },\n    count: (source) => source.length,\n    find: (source, predicate) => source.find(predicate),\n    filter: (source, predicate) => source.filter(predicate),\n    toArray: (source) => source,\n    iterable: (source) => source.values(),\n    has: (source, value) =>\n      source.find((v) => comparer(v, value)) !== undefined,\n    without: (source, value) => source.filter((v) => !comparer(v, value)),\n  };\n  return new MapOfMutableImpl<V, ICircularArray<V>>(t, opts);\n};\n","import { type IsEqual, type ToString, isEqualDefault } from '../../Util.js';\nimport { type IMapOfMutableExtended } from './IMapOfMutableExtended.js';\nimport { type MapMultiOpts, type MultiValue } from './MapMulti.js';\nimport { MapOfMutableImpl } from './MapOfMultiImpl.js';\n\n/**\n * Map of array options\n */\nexport type MapArrayOpts<V> = MapMultiOpts<V> & {\n  /**\n   * Comparer to use\n   */\n  readonly comparer?: IsEqual<V>;\n  /**\n   * Key function\n   */\n  readonly toString?: ToString<V>;\n};\n\n/**\n * Returns a {@link IMapOfMutableExtended} to allow storing multiple values under a key, unlike a regular Map.\n * @example\n * ```js\n * const map = ofArrayMutable();\n * map.addKeyedValues(`hello`, [1,2,3,4]); // Adds series of numbers under key `hello`\n *\n * const hello = map.get(`hello`); // Get back values\n * ```\n *\n * Takes options:\n * * `comparer`: {@link Util.IsEqual}\n * * `toString`: {@link Util.ToString}\n *\n * A custom {@link Util.ToString} function can be provided which is used when checking value equality (`has`, `without`)\n * ```js\n * const map = ofArrayMutable({toString:(v) => v.name}); // Compare values based on their `name` field;\n * ```\n *\n * Alternatively, a {@link Util.IsEqual} function can be used:\n * ```js\n * const map = ofArrayMutable({comparer: (a, b) => a.name === b.name });\n * ```\n * @param opts\n * @template V Data type of items\n * @returns {@link IMapOfMutableExtended}\n */\nexport const ofArrayMutable = <V>(\n  opts: MapArrayOpts<V> = {}\n): IMapOfMutableExtended<V, ReadonlyArray<V>> => {\n  const comparer =\n    opts.comparer === undefined\n      ? opts.toString === undefined\n        ? (a: V, b: V) => opts.toString(a) === opts.toString(b)\n        : isEqualDefault\n      : opts.comparer;\n\n  const t: MultiValue<V, ReadonlyArray<V>> = {\n    get name() {\n      return `array`;\n    },\n    add: (dest, values) => {\n      if (dest === undefined) return [...values];\n      return [...dest, ...values];\n    },\n    iterable: (source) => source.values(),\n    count: (source) => source.length,\n    find: (source, predicate) => source.find(predicate),\n    filter: (source, predicate) => source.filter(predicate),\n    toArray: (source) => source,\n    has: (source, value) =>\n      source.find((v) => comparer(v, value)) !== undefined,\n    without: (source, value) => source.filter((v) => !comparer(v, value)),\n    //[Symbol.iterator]: (source) => source[Symbol.iterator]()\n  };\n  const m = new MapOfMutableImpl<V, ReadonlyArray<V>>(t, opts);\n  return m;\n};\n",null,"export type QueueDiscardPolicy = `older` | `newer` | `additions`;\n\n/**\n * Queue options.\n *\n * @example Cap size to 5 items, throwing away newest items already in queue.\n * ```js\n * const q = Queues.mutable({capacity: 5, discardPolicy: `newer`});\n * ```\n */\nexport type QueueOpts = {\n  /**\n   * @private\n   */\n  readonly debug?: boolean;\n  /**\n   * Capcity limit\n   */\n  readonly capacity?: number;\n  /**\n   * Default is `additions`, meaning new items are discarded.\n   *\n   * `older`: Removes items front of the queue (ie older items are discarded)\n   *\n   * `newer`: Remove from rear of queue to make space for new items (ie newer items are discarded)\n   *\n   * `additions`: Only adds new items that there are room for (ie. brand new items are discarded)\n   *\n   */\n  readonly discardPolicy?: QueueDiscardPolicy;\n};\n\nexport { type IQueueMutable } from './IQueueMutable.js';\nexport { type IQueueImmutable } from './IQueueImmutable.js';\nexport { immutable } from './QueueImmutable.js';\nexport { mutable } from './QueueMutable.js';\n","import type { QueueOpts } from './index.js';\n\nexport const debug = (opts: QueueOpts, msg: string): void => {\n  /* eslint-disable-next-line functional/no-expression-statements */\n  opts.debug ? console.log(`queue:${msg}`) : null;\n};\n\nexport const trimQueue = <V>(\n  opts: QueueOpts,\n  queue: ReadonlyArray<V>,\n  toAdd: ReadonlyArray<V>\n): ReadonlyArray<V> => {\n  const potentialLength = queue.length + toAdd.length;\n  const capacity = opts.capacity ?? potentialLength;\n  const toRemove = potentialLength - capacity;\n  const policy = opts.discardPolicy ?? `additions`;\n  // debug(\n  //   opts,\n  //   `queueLen: ${queue.length} potentialLen: ${potentialLength} toRemove: ${toRemove} policy: ${policy} toAdd.length: ${toAdd.length} capacity: ${capacity}`\n  // );\n  // debug(opts, `to add: ${JSON.stringify(toAdd)}`);\n\n  switch (policy) {\n    // Only add what we can from toAdd\n    case `additions`:\n      // debug(\n      //   opts,\n      //   `trimQueue:DiscardAdditions: queueLen: ${queue.length} slice: ${\n      //     potentialLength - capacity\n      //   } toAddLen: ${toAdd.length} nowFull: ${queue.length === opts.capacity}`\n      // );\n      if (queue.length === 0) return toAdd.slice(0, toAdd.length - toRemove);\n      if (queue.length === opts.capacity) {\n        return queue; // Completely full\n      } else {\n        // Only add some from the new array (from the front)\n        return [...queue, ...toAdd.slice(0, toRemove - 1)];\n      }\n    // Remove from rear of queue (last index) before adding new things\n    case `newer`:\n      if (toRemove >= queue.length) {\n        // New items will completely flush out old\n        //debug(opts, `slice start: ${toAdd.length - capacity}`);\n        if (queue.length === 0) {\n          // Special case when queue starts off empty\n          return [...toAdd.slice(0, capacity - 1), toAdd[toAdd.length - 1]];\n        }\n        const tmp = toAdd.slice(\n          Math.max(0, toAdd.length - capacity),\n          Math.min(toAdd.length, capacity) + 1\n        );\n        //debug(opts, `Final value: ${JSON.stringify(tmp)}`);\n        return tmp;\n      } else {\n        // Keep some of the old\n        // const toAddFinal = toAdd.slice(\n        //   0,\n        //   Math.min(toAdd.length, capacity - toRemove + 1)\n        // );\n        // Cap 5, queue 5, toAdd: 10.\n        const countToAdd = Math.max(1, toAdd.length - queue.length);\n        const toAddFinal = toAdd.slice(toAdd.length - countToAdd, toAdd.length);\n        const toKeep = queue.slice(0, Math.min(queue.length, capacity - 1)); //toRemove);\n        // debug(\n        //   opts,\n        //   `trimQueue: countToAdd: ${countToAdd} qLen: ${\n        //     queue.length\n        //   } capacity: ${capacity} toRemove: ${toRemove} keeping: ${JSON.stringify(\n        //     toKeep\n        //   )} from orig: ${JSON.stringify(queue)} toAddFinal: ${JSON.stringify(\n        //     toAddFinal\n        //   )}`\n        // );\n        const t = [...toKeep, ...toAddFinal];\n        //debug(opts, `final: ${JSON.stringify(t)}`);\n        return t;\n      }\n    // Remove from the front of the queue (0 index). ie. older items are discarded\n    case `older`:\n      // If queue is A, B and toAdd is C, D this yields A, B, C, D\n      return [...queue, ...toAdd].slice(toRemove);\n    default:\n      throw new Error(`Unknown overflow policy ${policy}`);\n  }\n};\n\n/**\n * Adds to the back of the queue (last array index)\n * Last item of `toAdd` will potentially be the new end of the queue (depending on capacity limit and overflow policy)\n * @template V\n * @param {QueueOpts} opts\n * @param {V[]} queue\n * @param {...V[]} toAdd\n * @returns {V[]}\n */\nexport const enqueue = <V>(\n  opts: QueueOpts,\n  queue: ReadonlyArray<V>,\n  ...toAdd: ReadonlyArray<V>\n): ReadonlyArray<V> => {\n  if (opts === undefined) throw new Error(`opts parameter undefined`);\n\n  const potentialLength = queue.length + toAdd.length;\n  const overSize = opts.capacity && potentialLength > opts.capacity;\n\n  const toReturn = overSize\n    ? trimQueue(opts, queue, toAdd)\n    : [...queue, ...toAdd];\n  if (opts.capacity && toReturn.length !== opts.capacity && overSize) {\n    throw new Error(\n      `Bug! Expected return to be at capacity. Return len: ${\n        toReturn.length\n      } capacity: ${opts.capacity} opts: ${JSON.stringify(opts)}`\n    );\n  }\n  if (!opts.capacity && toReturn.length !== potentialLength) {\n    throw new Error(\n      `Bug! Return length not expected. Return len: ${\n        toReturn.length\n      } expected: ${potentialLength} opts: ${JSON.stringify(opts)}`\n    );\n  }\n  return toReturn;\n};\n\n// Remove from front of queue (0 index)\nexport const dequeue = <V>(\n  opts: QueueOpts,\n  queue: ReadonlyArray<V>\n): ReadonlyArray<V> => {\n  if (queue.length === 0) throw new Error(`Queue is empty`);\n  return queue.slice(1);\n};\n\n/**\n * Returns front of queue (oldest item), or undefined if queue is empty\n *\n * @template V\n * @param {QueueOpts} opts\n * @param {V[]} queue\n * @returns {(V | undefined)}\n */\nexport const peek = <V>(\n  opts: QueueOpts,\n  queue: ReadonlyArray<V>\n): V | undefined => queue[0];\n\nexport const isEmpty = <V>(opts: QueueOpts, queue: ReadonlyArray<V>): boolean =>\n  queue.length === 0;\n\nexport const isFull = <V>(\n  opts: QueueOpts,\n  queue: ReadonlyArray<V>\n): boolean => {\n  if (opts.capacity) {\n    return queue.length >= opts.capacity;\n  }\n  return false;\n};\n","import type { IQueueImmutable } from './IQueueImmutable.js';\nimport { peek, isFull, isEmpty, enqueue, dequeue } from './QueueFns.js';\nimport { type QueueOpts } from './index.js';\n\n// -------------------------------\n// Immutable\n// -------------------------------\nexport class QueueImmutable<V> implements IQueueImmutable<V> {\n  readonly opts: QueueOpts;\n  readonly data: ReadonlyArray<V>;\n\n  /**\n   * Creates an instance of Queue.\n   * @param {QueueOpts} opts Options foor queue\n   * @param {V[]} data Initial data. Index 0 is front of queue\n   * @memberof Queue\n   */\n  constructor(opts: QueueOpts = {}, data: ReadonlyArray<V> = []) {\n    if (opts === undefined) throw new Error(`opts parameter undefined`);\n\n    this.opts = opts;\n    this.data = data;\n  }\n\n  forEach(fn: (v: V) => void) {\n    //eslint-disable-next-line functional/no-let\n    for (let i = this.data.length - 1; i >= 0; i--) {\n      fn(this.data[i]);\n    }\n  }\n\n  forEachFromFront(fn: (v: V) => void) {\n    // From front of queue\n    this.data.forEach(fn); //(vv) => fn(vv));\n  }\n\n  enqueue(...toAdd: ReadonlyArray<V>): QueueImmutable<V> {\n    return new QueueImmutable<V>(\n      this.opts,\n      enqueue(this.opts, this.data, ...toAdd)\n    );\n  }\n\n  dequeue(): QueueImmutable<V> {\n    return new QueueImmutable<V>(this.opts, dequeue(this.opts, this.data));\n  }\n\n  get isEmpty(): boolean {\n    return isEmpty(this.opts, this.data);\n  }\n\n  get isFull(): boolean {\n    return isFull(this.opts, this.data);\n  }\n\n  get length(): number {\n    return this.data.length;\n  }\n\n  get peek(): V | undefined {\n    return peek(this.opts, this.data);\n  }\n}\n\n/**\n * Returns an immutable queue. Queues are useful if you want to treat 'older' or 'newer'\n * items differently. _Enqueing_ adds items at the back of the queue, while\n * _dequeing_ removes items from the front (ie. the oldest).\n *\n * ```js\n * let q = Queues.immutable();           // Create\n * q = q.enqueue(`a`, `b`);   // Add two strings\n * const front = q.peek();    // `a` is at the front of queue (oldest)\n * q = q.dequeue();           // q now just consists of `b`\n * ```\n * @example Cap size to 5 items, throwing away newest items already in queue.\n * ```js\n * const q = Queues.immutable({capacity: 5, discardPolicy: `newer`});\n * ```\n *\n * @template V Data type of items\n * @param opts\n * @param startingItems Index 0 is the front of the queue\n * @returns A new queue\n */\nexport const immutable = <V>(\n  opts: QueueOpts = {},\n  ...startingItems: ReadonlyArray<V>\n): IQueueImmutable<V> => {\n  opts = { ...opts }; // Make a copy of options\n  return new QueueImmutable(opts, [...startingItems]); // Make a copy of array so it can't be modified\n};\n","import { type IQueueMutable } from './IQueueMutable.js';\nimport { enqueue, peek, dequeue, isEmpty, isFull } from './QueueFns.js';\nimport { type QueueOpts } from './index.js';\n\n/**\n * Returns a mutable queue. Queues are useful if you want to treat 'older' or 'newer'\n * items differently. _Enqueing_ adds items at the back of the queue, while\n * _dequeing_ removes items from the front (ie. the oldest).\n *\n * ```js\n * const q = Queues.mutable();       // Create\n * q.enqueue(`a`, `b`);     // Add two strings\n * const front = q.dequeue();  // `a` is at the front of queue (oldest)\n * ```\n *\n * @example Cap size to 5 items, throwing away newest items already in queue.\n * ```js\n * const q = Queues.mutable({capacity: 5, discardPolicy: `newer`});\n * ```\n *\n * @template V Data type of items\n * @param opts\n * @param startingItems Items are added in array order. So first item will be at the front of the queue.\n */\nexport class QueueMutable<V> implements IQueueMutable<V> {\n  readonly opts: QueueOpts;\n  // eslint-disable-next-line functional/prefer-readonly-type\n  data: ReadonlyArray<V>;\n\n  constructor(opts: QueueOpts = {}, data: ReadonlyArray<V> = []) {\n    if (opts === undefined) throw new Error(`opts parameter undefined`);\n    this.opts = opts;\n    this.data = data;\n  }\n\n  enqueue(...toAdd: ReadonlyArray<V>): number {\n    /* eslint-disable-next-line functional/immutable-data */\n    this.data = enqueue(this.opts, this.data, ...toAdd);\n    return this.data.length;\n  }\n\n  dequeue(): V | undefined {\n    const v = peek(this.opts, this.data);\n    /* eslint-disable-next-line functional/immutable-data */\n    this.data = dequeue(this.opts, this.data);\n    return v;\n  }\n\n  get isEmpty(): boolean {\n    return isEmpty(this.opts, this.data);\n  }\n\n  get isFull(): boolean {\n    return isFull(this.opts, this.data);\n  }\n\n  get length(): number {\n    return this.data.length;\n  }\n\n  get peek(): V | undefined {\n    return peek(this.opts, this.data);\n  }\n}\n\nexport function mutable<V>(\n  opts: QueueOpts = {},\n  ...startingItems: ReadonlyArray<V>\n): IQueueMutable<V> {\n  return new QueueMutable({ ...opts }, [...startingItems]);\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["__spreadArray","to","from","B","S","apply","identity","flip","t","pipe","first","self","some","A","bind","map","equals","E","contramap","empty","compare","min","max","clamp","between","last","_","init","a","concat","rotate","range","start","y","group","groupBy","sort","zip","bs","abs","next","extend","reduce","b","filter","tail","left","right","C","guard","N","isEmpty","as","input","second","intersection","ys","zero","e","toArray","every","slice","module","document","key","isFunction","toString","length","c","source","exports","pos","codePointAt","fromCodePoint","line","parse","text","peek","token","string","buffer","count","push","pop","stringify","stack","value","i","list","JSON5","afterMatch","gaussian","integer","chunks","flatten","mergeByKey","remove","unique","iterator","done","find","firstEntryByIterableValue","immutable","mutable","isEqual","without","del","offset","set","time","existing","bbox","distanceCenter","fromDegrees","interpolate","isPositioned","point","toPath","toSvg","Empty","Placeholder","centroid","divide","dotProduct","fromNumbers","isNaN","isPlaceholder","multiply","multiplyScalar","normaliseByRect","quantiseEvery","random","subtract","sum","withinRange","wrap","distance","fromFlatArray","fromPoints","nearest","toFlatArray","TrackerBase","piPi","array","minMaxAvg","reverseOrd","average","averageWeighted","total","forEach","run","interval","reset","timeout","log","path","t2","dot","bbox2","intersections","d","v1","q","t1","arc","cos","sin","acos","sqrt","pi","angle","ls","le","segments","tlen","alen","cubic","cubic2","quadraticBezier","quadratic","area","center","distanceFromExterior","isIntersecting","randomPoint","circle","angleRadian","rect","height","guardPositioned","mass","pipeline","v","config","rx","AudioAnalyser","freq","hue","button","stream","startWithVideoEl","capture","dropWhile","fill","takeWhile","triangle","corners","edges","intersectsPoint","lengths","perimeter","fromCenter","circumcircle","incircle","fromA","fromB","fromC","medians","angles","gamma","scale","opacity","t3","color","rgb","hsl","lab","hcl","cubehelix","Subscription","Subscriber","ConsumerObserver","SafeSubscriber","Observable","observable","OperatorSubscriber","err","Action","delay","AsyncAction","Scheduler","AsyncScheduler","fromIterable","repeat","project","add","scaler","data","rows","draw","applyOpts","clear","makeHelper","plot","canvasSize","series","sample","paths","create","grid","cells","cardinal","visitor","defaultErrorHandler","timestamp","opts","tracker","el","r","pow","validNumbers","toSvgFull","toSvgString","clampMagnitude","invert","normalise","arrow","toCartesian","EmptyCartesian","Direction","o"],"version":3,"file":"index.9660f304.js.map","sourceRoot":"/__parcel_source_root/"}