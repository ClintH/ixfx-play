import"../../modulepreload-polyfill-B5Qt9EMX.js";import{c as colour_exports,C as CanvasHelper}from"../../visual-DuJQoaeN.js";import{r as repeatSync,d as debounce}from"../../flow-C8Zlxj7K.js";import{i as polar_exports,p as point_exports}from"../../geometry-CqFA_olX.js";import{p as pingPongPercent}from"../../modulation-ByqWP4OU.js";import"../../src-2eX6lIN8-VI_Nykma.js";import"../../records-Cei7yF1D-C5ys4Q3F.js";import"../../src-CURfSkGx-Bgs9tt00.js";import"../../src-CtUbQWIP-Vt_fnXRn.js";import"../../dist-DE4H3J9W-C3hFOwYK.js";import"../../src-3nHXiifJ-B3Cja0hK.js";const calculateNonZero=(e=Math.random)=>{let t=0;for(;t===0;)t=e();return t},gaussian=(e=1)=>gaussianSource(e)(),gaussianSource=(e=1)=>{const o=()=>{const r=calculateNonZero(),c=calculateNonZero();let a=Math.sqrt(-2*Math.log(r))*Math.cos(2*Math.PI*c);return a=a/10+.5,a>1||a<0?a=o():(a=Math.pow(a,e),a*=1,a+=0),a};return o},weightedSource=e=>{const t=e.source??Math.random;if(typeof e.easing<"u")throw new Error("Param 'easingName' unavailable. Use @ixfx/modulation.weighted instead.");if(typeof e.easingFunction>"u")throw new Error("Param 'easingFunction' is undefined");return()=>e.easingFunction(t())},settings=Object.freeze({canvas:new CanvasHelper("#canvas",{resizeLogic:"min",onResized(e,t,n){onCodeUpdated()}}),piPi:Math.PI*2,pointSize:.005,pointColour:colour_exports.toCssColour("--point-fill"),radius:.5,origin:{x:.5,y:.5},pingPong:pingPongPercent(.001)});let state={randomSource:Math.random,numberOfPoints:500,startPoints:[],endPoints:[],startExpression:"r()",endExpression:"1 - r()",animationPoint:0};const evaluateExpression=(txt,contextLabel)=>{try{window.r=state.randomSource;let result=eval(txt);return clearError(),result}catch(e){handleError(e,contextLabel)}},onCodeUpdated=()=>{const{canvas:e,radius:t,piPi:n,origin:o}=settings,{numberOfPoints:r}=state,c=()=>evaluateExpression(state.startExpression,"start expression"),a=()=>evaluateExpression(state.endExpression,"end expression"),i=[...repeatSync(c,{count:r})];if(i.length<r)return;let u=[...repeatSync(a,{count:r})];u.length<r&&(u=[...i]);const d=[...repeatSync(()=>Math.random()*n,{count:r})],p=e.toAbsolute(o),s=(g,f)=>polar_exports.toCartesian(g*t*e.dimensionMin,d[f],p),l=i.map(s),m=u.map(s);updateState({startPoints:l,endPoints:m}),drawState()},computeState=()=>{const{pingPong:e}=settings,t=e.next().value;updateState({animationPoint:t})},drawState=()=>{const{canvas:e,pointColour:t,pointSize:n}=settings,{animationPoint:o,startPoints:r,endPoints:c,numberOfPoints:a}=state,{ctx:i,width:u,height:d}=e;if(r.length===0||r.length===0)return;i.clearRect(0,0,u,d);const p=n*e.dimensionMin;for(let s=0;s<a;s++){const l=point_exports.interpolate(o,r[s],c[s],!0);drawPoint(i,l,t,p)}},setup=()=>{const e=()=>{computeState(),drawState(),window.requestAnimationFrame(e)};e();const t=document.querySelector("#numberParticles");t?.addEventListener("change",()=>{updateState({numberOfPoints:Number.parseInt(t.value)})}),inputChangeDebounce("startExpr",o=>{updateState({startExpression:o})}),inputChangeDebounce("endExpr",o=>{updateState({endExpression:o})});const n=document.querySelector("#source");n?.addEventListener("change",()=>{const o=n.value;if(o==="Gaussian")updateState({randomSource:gaussian});else if(o.startsWith("Weighted (")){const r=o.slice(10,-1);updateState({randomSource:weightedSource(r)})}else updateState({randomSource:Math.random})}),onCodeUpdated()};setup();function updateState(e){state=Object.freeze({...state,...e}),("numberOfPoints"in e||"randomSource"in e||"startExpression"in e||"endExpression"in e)&&onCodeUpdated()}function drawPoint(e,t,n="black",o=1){e.fillStyle=n,e.beginPath(),e.arc(t.x,t.y,o,0,settings.piPi),e.fill()}function inputChangeDebounce(e,t){const n=document.querySelector(`#${e}`);if(!n)throw new Error(`${e} not found`);const o=debounce(r=>{t(n.value)},500);n?.addEventListener("input",r=>{o(r)})}function handleError(e,t){const n=document.querySelector("#error");n&&(n.classList.remove("hidden"),n.innerHTML=`<h1>Error with ${t}</h1><p>${e}</p>`)}function clearError(){const e=document.querySelector("#error");e&&(e.classList.contains("hidden")||(e.innerHTML="",e.classList.add("hidden")))}
