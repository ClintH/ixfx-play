import{r as E,b as v,c as y}from"./result-aflA1LW7.js";import{i as m}from"./interval-type-CIaujdcR.js";import{i as d}from"./numbers-SvRH5ijj.js";const Z={x:0,y:0},A=(s,o)=>{if(s===void 0)throw new Error("callback parameter is undefined");const T=m(o);E(d(T,"aboveZero","interval"));let n,e=0,a=0,i=0,t="idle";const r=()=>{e=0,globalThis.clearTimeout(n),t="idle"},p=async(f=o,g)=>new Promise((h,w)=>{e=performance.now();const u=m(f),c=d(u,"aboveZero","altTimeoutMs");if(v(c)){w(y(c));return}switch(t){case"scheduled":{l();break}}t="scheduled",n=globalThis.setTimeout(async()=>{if(t!=="scheduled"){console.warn("Timeout skipping execution since state is not 'scheduled'"),r();return}const b=g??[];a++,i++,t="running",await s(performance.now()-e,...b),t="idle",r(),h()},u)}),l=()=>{t!=="idle"&&r()};return{start:p,cancel:l,get runState(){return t},get startCount(){return a},get startCountTotal(){return i}}};export{Z as E,A as t};
