import{a as i,i as s,g as y}from"./guard-RzpFIjKH.js";const h=Object.freeze({x:Number.NaN,y:Number.NaN});function p(e,r,f,c,x,u){if(s(e)&&s(r))return[e,r];if(i(e)&&i(r))return[e,r];if(s(e)){const o={x:r,y:f,z:c};if(!s(o))throw new Error("Expected x, y & z parameters");return[e,o]}if(i(e)){const o={x:r,y:f};if(!i(o))throw new Error("Expected x & y parameters");return[e,o]}const t={x:e,y:r},n={x:f,y:c};if(!i(t))throw new Error("Expected x,y for first point");if(!i(n))throw new Error("Expected x,y for second point");return[t,n]}function w(e,r,f){if(e===void 0)return{x:0,y:0};if(Array.isArray(e)){if(e.length===0)return Object.freeze({x:0,y:0});if(e.length===1)return Object.freeze({x:e[0],y:0});if(e.length===2)return Object.freeze({x:e[0],y:e[1]});if(e.length===3)return Object.freeze({x:e[0],y:e[1],z:e[2]});throw new Error(`Expected array to be 1-3 elements in length. Got ${e.length}.`)}if(i(e))return e;if(typeof e!="number"||typeof r!="number")throw new TypeError(`Expected point or x,y as parameters. Got: a: ${JSON.stringify(e)} b: ${JSON.stringify(r)}`);return Object.freeze({x:e,y:r})}function z(e,r,f,c,x,u){const[t,n]=p(e,r,f,c);y(t,"a"),y(n,"b");const o={x:t.x-n.x,y:t.y-n.y};return(s(t)||s(n))&&(o.z=(t.z??0)-(n.z??0)),Object.freeze(o)}export{h as P,w as g,z as s};
