import"../../modulepreload-polyfill-B5Qt9EMX.js";import{p as V}from"../../visual-BioANKiq.js";import{f as r,c as F}from"../../rx-Dsu-18JX.js";import{b as g,p as $}from"../../geometry-v_W7ixAL.js";import{a as A}from"../../dom-DCcQsJJW.js";import{r as y}from"../../ui-DXRN7ELC.js";import"../../src-BeVDUOoq-B6OoJ3p3.js";import"../../records-Cei7yF1D-Dejnhz0L.js";import"../../src-C7XtfIer-DYL4nwfS.js";import"../../src-sHR31-XU-C1xj0KeO.js";import"../../dist-DE4H3J9W-BscYlIcj.js";import"../../src-DtTSywET-tUv0MHeI.js";import"../../is-integer-BmMnD0ra-CbN5m7X_.js";window.location.hash.includes("hide-panel")&&(document.querySelector("#right").style.display="none");const E=document.querySelector("#snippet"),a=(t,o)=>{const i=document.querySelector(`#${t}-x`);i.value=o.x.toString();const e=document.querySelector(`#${t}-y`);e.value=o.y.toString()},l=r.object({x:0,y:0});l.onValue(t=>{a("a",t),c()});const p=r.object({x:1,y:1});p.onValue(t=>{a("b",t),c()});const u=r.object({x:1,y:0});u.onValue(t=>{a("cubic1",t),c()});const d=r.object({x:0,y:1});d.onValue(t=>{a("cubic2",t),c()});const n=V.insert({canvasResizeTo:"viewport",region:{match:"#target",marginPx:50}},{grid:{increments:.1},clear:"canvas",range:{min:{x:0,y:0},max:{x:1,y:1}},connectStyle:"line",valueStyle:"dot",textStyle:{size:"8px",colour:"gray"},axisStyle:{colour:"hsl(0,0%,20%)"},show:{grid:!1,axes:!0,axisValues:!0,whiskers:!0},whiskerLength:10});n.setMeta("default",{colour:"hsl(50,100%,50%)",lineWidth:10});y.windowResize(200).onValue(t=>{n.positionElementAt(l.last(),"#point-a","middle"),n.positionElementAt(p.last(),"#point-b","middle"),n.positionElementAt(u.last(),"#point-cubic1","middle"),n.positionElementAt(d.last(),"#point-cubic2","middle")});function m(t,o){A.draggable(`#point-${t}`,{progress:i=>{let e=n.pointToValue(i.viewport,"screen");return(t==="a"||t==="b")&&(e=$.clamp(e)),o.set(e),{viewport:n.valueToScreenSpace(e)}},abort:(i,e)=>{console.log(`abort: ${i} - ${e}`)},success:i=>{let e=n.pointToValue(i.viewport,"screen");(t==="a"||t==="b")&&(e=$.clamp(e)),o.set(e)}},{autoTranslate:!0,quickDrag:!0}),n.positionElementAt(o.last(),`#point-${t}`,"middle"),a(t,o.last()),T(t,o)}function c(){const t=n.dataSet;t.clear();const o=l.last(),i=p.last(),e=u.last(),s=d.last(),h=g.cubic(o,i,e,s),x=g.interpolator(h);let w=.03;for(let b=0;b<1;b+=w){const S=x(b);t.add(S)}t.add(x(1)),n.overlayLines=[{a:o,b:e,colour:"white",width:4},{a:i,b:s,colour:"white",width:4}];const v=[`const a = { x: ${o.x.toFixed(3)}, y: ${o.y.toFixed(3)} };`,`const b = { x: ${i.x.toFixed(3)}, y: ${i.y.toFixed(3)} };`,`const cubic1 = { x: ${e.x.toFixed(3)}, y: ${e.y.toFixed(3)} };`,`const cubic2 = { x: ${s.x.toFixed(3)}, y: ${s.y.toFixed(3)} };`,"Beziers.cubic(a, b, cubic1, cubic2);"];E.innerHTML=v.join("<br>"),n.draw()}function T(t,o){F({x:y.domNumberInputValue(`#${t}-x`),y:y.domNumberInputValue(`#${t}-y`,{emitInitialValue:!0})}).onValue(e=>{o.set(e),c(),n.positionElementAt(o.last(),`#point-${t}`,"middle")})}m("a",l);m("b",p);m("cubic1",u);m("cubic2",d);c();
