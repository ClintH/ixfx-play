import{g as w,i as R,s as W,b as g,o as b}from"./error-message-BtgnhF27.js";import{e as M,p as S,d as G,i as F,a as I}from"./queue-fns-Cpl8E1uR.js";import{S as y}from"./simple-event-emitter-BaCTAiR9.js";import{a as P,c as V}from"./state-machine-ROMMoZIR.js";import{e as N}from"./interval-type-CIaujdcR.js";import{s as B}from"./sleep-DwDBk_RX.js";import{r as J}from"./result-aflA1LW7.js";import{n as p,i as H}from"./numbers-SvRH5ijj.js";import{S as T}from"./with-events-BRQckvzl.js";const O=(a=5)=>{const e=typeof a=="number"?{length:a}:a,t=e.source??Math.random,s=e.length??5;let r="";for(;r.length<s;)r+=t().toString(36).slice(2);return r.substring(0,s)},U=(a,e={})=>{if(a===void 0||typeof a=="boolean"&&!a)return r=>{};const t=e.category??"",s=e.kind??void 0;return typeof a=="boolean"?r=>{const i=typeof r=="string"?{msg:r}:r,n=i.kind??s,o=i.category??t;let c=i.msg;switch(o&&(c=`[${o}] ${c}`),n){case"error":{console.error(c);break}case"warn":{console.warn(c);break}case"info":{console.info(c);break}default:console.log(c)}}:a};function*j(a={}){const e=a.startAt??1;let t=a.limitAttempts??Number.MAX_SAFE_INTEGER;const s=a.limitValue,r=a.power??1.1;let i=e;for(J(H(t,"aboveZero","limitAttempts"),p(e,"","startAt"),p(t,"","limitAttempts"),()=>s!==void 0?p(s,"","limitValue"):void 0,p(r,"","power"));t>0;){if(s&&i>=s)return;t--,yield i,i+=Math.pow(i,r)}}const A=(a,e={})=>X({async probe(){try{const s=await a();return s===void 0?{value:e.taskValueFallback,error:"Fallback",success:!1}:{value:s,success:!0}}catch(s){return{success:!1,error:s}}}},e),X=async(a,e={})=>{const t=e.abort,s=U(e.log),r=e.predelayMs??0,i=P();let n=0;const o=e.startAt??1e3,c=e.limitAttempts??Number.MAX_SAFE_INTEGER,v=j({...e,startAt:o,limitAttempts:c});if(o<=0)throw new Error("Param 'initialValue' must be above zero");if(r>0)try{await B({millis:r,signal:t})}catch(u){return{success:!1,attempts:n,value:e.taskValueFallback,elapsed:i(),message:w(u)}}for(const u of v){n++;const d=await a.probe(n);if(d.success)return{success:d.success,value:d.value,attempts:n,elapsed:i()};if(s({msg:`retry attempts: ${n.toString()} t: ${N(u)}`}),n>=c)break;try{await B({millis:u,signal:t})}catch(m){return{success:!1,attempts:n,value:e.taskValueFallback,message:w(m),elapsed:i()}}}return{message:`Giving up after ${n.toString()} attempts.`,success:!1,attempts:n,value:e.taskValueFallback,elapsed:i()}};class k extends y{options;data;eq;constructor(e={},t=[]){if(super(),e===void 0)throw new Error("opts parameter undefined");this.options=e,this.data=t,this.eq=e.eq??R}clear(){const e=[...this.data];this.data=[],this.fireEvent("removed",{finalData:this.data,removed:e}),this.onClear()}onClear(){}at(e){if(e>=this.data.length)throw new Error("Index outside bounds of queue");const t=this.data.at(e);if(t===void 0)throw new Error("Index appears to be outside range of queue");return t}enqueue(...e){this.data=M(this.options,this.data,...e);const t=this.data.length;return this.onEnqueue(this.data,e),t}onEnqueue(e,t){this.fireEvent("enqueue",{added:t,finalData:e})}dequeue(){const e=S(this.options,this.data);if(e!==void 0)return this.data=G(this.options,this.data),this.fireEvent("dequeue",{removed:e,finalData:this.data}),this.onRemoved([e],this.data),e}onRemoved(e,t){this.fireEvent("removed",{removed:e,finalData:t})}removeWhere(e){const t=this.data.length,s=this.data.filter(r=>e(r));return s.length===0?0:(this.data=this.data.filter(r=>!e(r)),this.onRemoved(s,this.data),t-this.data.length)}toArray(){return[...this.data]}get isEmpty(){return F(this.options,this.data)}get isFull(){return I(this.options,this.data)}get length(){return this.data.length}get peek(){return S(this.options,this.data)}}const K=(a,e,t)=>{let s,r=!1;const i=n=>{s!==void 0&&(window.clearTimeout(s),s=void 0),n?e(n):r=!0,t!==void 0&&t(r)};return s=globalThis.setTimeout(()=>{s=void 0;try{e(`Timeout after ${a}ms`)}finally{t!==void 0&&t(r)}},a),i};class C{enc=new TextEncoder;dec=new TextDecoder("utf-8");toBuffer(e){return this.enc.encode(e)}fromBuffer(e){return this.dec.decode(e)}}class ${onData;separator;buffer="";stream;constructor(e,t=`
`){this.onData=e,this.separator=t}async close(){const e=this.stream;e&&(await e.abort(),await e.close())}clear(){this.buffer=""}writable(){return this.stream===void 0&&(this.stream=this.createWritable()),this.stream}createWritable(){const e=this;return new WritableStream({write(t){e.add(t)},close(){e.clear()}})}addImpl(e){const t=e.indexOf(this.separator);if(t<0)return this.buffer+=e,"";const s=e.substring(0,t);try{this.onData(this.buffer+s),e=e.substring(s.length+this.separator.length)}catch(r){console.warn(r)}return this.buffer="",e}add(e){for(;e.length>0;)e=this.addImpl(e)}}class q{dataHandler;paused=!1;queue=new k;writer;stream;closed=!1;chunkSize;constructor(e,t={}){this.dataHandler=e,this.chunkSize=t.chunkSize??-1,this.writer=V(async()=>{await this.onWrite()},t.interval??10)}async close(){if(this.closed)return;const e=this.stream?.getWriter();e?.releaseLock(),await e?.close(),this.closed=!0}clear(){if(this.closed)throw new Error("Buffer closed");this.queue=new k}writable(){if(this.closed)throw new Error("Buffer closed");return this.stream===void 0&&(this.stream=this.createWritable()),this.stream}createWritable(){const e=this;return new WritableStream({write(t){e.add(t)},close(){e.clear()}})}async onWrite(){if(this.queue.isEmpty)return!1;if(this.paused)return console.warn("WriteBuffer.onWrite: paused..."),!0;const e=this.queue.dequeue();return e===void 0?!1:(await this.dataHandler(e),!0)}get isClosed(){return this.closed}add(e){if(this.closed)throw new Error("Buffer closed");this.chunkSize>0?this.queue.enqueue(...W(e,this.chunkSize)):this.queue.enqueue(e),this.writer.start()}}const D=Object.freeze({ready:"connecting",connecting:["connected","closed"],connected:["closed"],closed:"connecting"});class Z extends y{device;config;states;codec;rx;tx;gatt;verboseLogging=!1;rxBuffer;txBuffer;constructor(e,t){super(),this.device=e,this.config=t,this.verboseLogging=t.debug,this.txBuffer=new q(async s=>{await this.writeInternal(s)},t),this.rxBuffer=new $(s=>{this.fireEvent("data",{data:s})}),this.codec=new C,this.states=new T(D,{initial:"ready"}),this.states.addEventListener("change",s=>{this.fireEvent("change",s),this.verbose(`${s.priorState} -> ${s.newState}`),s.priorState==="connected"&&(this.rxBuffer.clear(),this.txBuffer.clear())}),e.addEventListener("gattserverdisconnected",()=>{this.isClosed||(this.verbose("GATT server disconnected"),this.states.state="closed")}),this.verbose(`ctor ${e.name} ${e.id}`)}get isConnected(){return this.states.state==="connected"}get isClosed(){return this.states.state==="closed"}write(e){if(this.states.state!=="connected")throw new Error(`Cannot write while state is ${this.states.state}`);this.txBuffer.add(e)}async writeInternal(e){this.verbose(`writeInternal ${e}`);const t=this.tx;if(t===void 0)throw new Error("Unexpectedly without tx characteristic");try{await t.writeValue(this.codec.toBuffer(e))}catch(s){this.warn(s)}}disconnect(){this.states.state==="connected"&&this.gatt?.disconnect()}async connect(){const e=this.config.connectAttempts??3;this.states.state="connecting",this.verbose("connect");const t=this.device.gatt;if(t===void 0)throw new Error("Gatt not available on device");await A(async()=>{this.verbose("connect.retry");const s=await t.connect();this.verbose("Getting primary service");const r=await s.getPrimaryService(this.config.service);this.verbose("Getting characteristics");const i=await r.getCharacteristic(this.config.rxGattCharacteristic),n=await r.getCharacteristic(this.config.txGattCharacteristic);return i.addEventListener("characteristicvaluechanged",o=>{this.onRx(o)}),this.rx=i,this.tx=n,this.gatt=t,this.states.state="connected",await i.startNotifications(),!0},{limitAttempts:e,startAt:200})}onRx(e){if(this.rx===void 0)return;const s=e.target.value;if(s===void 0)return;let r=this.codec.fromBuffer(s.buffer);const i=g(r,19),n=g(r,17);n&&i<n&&(this.verbose("Tx plz start"),r=b(r,n,1),this.txBuffer.paused=!1),i&&i>n&&(this.verbose("Tx plz stop"),r=b(r,i,1),this.txBuffer.paused=!0),this.rxBuffer.add(r)}verbose(e){this.verboseLogging&&console.info(this.config.name,e)}log(e){console.log(this.config.name,e)}warn(e){console.warn(this.config.name,e)}}const z={chunkSize:20,service:"6e400001-b5a3-f393-e0a9-e50e24dcca9e",txGattCharacteristic:"6e400002-b5a3-f393-e0a9-e50e24dcca9e",rxGattCharacteristic:"6e400003-b5a3-f393-e0a9-e50e24dcca9e",name:"NordicDevice",connectAttempts:5,debug:!1};class _ extends Z{constructor(e,t={}){super(e,{...z,...t})}}class Q extends _{evalTimeoutMs;evalReplyBluetooth=!0;constructor(e,t={}){super(e,t),this.evalTimeoutMs=t.evalTimeoutMs??5*1e3}async writeScript(e){this.write(`reset();
`),this.write(`${e}
`)}async eval(e,t={},s){const r=t.debug??!1;return L(e,t,this,"Bluetooth.println",r,s??(n=>{this.warn(n)}))}}class Y extends y{states;codec;verboseLogging=!1;name;connectAttempts;chunkSize;rxBuffer;txBuffer;constructor(e={}){super(),this.verboseLogging=e.debug??!1,this.chunkSize=e.chunkSize??1024,this.connectAttempts=e.connectAttempts??3,this.name=e.name??"JsonDevice",this.txBuffer=new q(async t=>{await this.writeInternal(t)},e),this.rxBuffer=new $(t=>{this.fireEvent("data",{data:t})}),this.codec=new C,this.states=new T(D,{initial:"ready"}),this.states.addEventListener("change",t=>{this.fireEvent("change",t),this.verbose(`${t.priorState} -> ${t.newState}`),t.priorState==="connected"&&(this.rxBuffer.clear(),this.txBuffer.clear())})}get isConnected(){return this.states.state==="connected"}get isClosed(){return this.states.state==="closed"}write(e){if(this.states.state!=="connected")throw new Error(`Cannot write while state is ${this.states.state}`);this.txBuffer.add(e)}async close(){this.states.state==="connected"&&this.onClosed()}async connect(){const e=this.connectAttempts;this.states.state="connecting",await this.onPreConnect(),await A(async()=>(await this.onConnectAttempt(),this.states.state="connected",!0),{limitAttempts:e,startAt:200})}onRx(e){const t=e.target.value;if(t===void 0)return;let s=this.codec.fromBuffer(t.buffer);const r=g(s,19),i=g(s,17);i&&r<i&&(this.verbose("Tx plz start"),s=b(s,i,1),this.txBuffer.paused=!1),r&&r>i&&(this.verbose("Tx plz stop"),s=b(s,r,1),this.txBuffer.paused=!0),this.rxBuffer.add(s)}verbose(e){this.verboseLogging&&console.info(this.name,e)}log(e){console.log(this.name,e)}warn(e){console.warn(this.name,e)}}class ee extends Y{config;port;tx;abort;baudRate;constructor(e={}){super(e),this.config=e,this.abort=new AbortController;const t=e.eol??`\r
`;this.baudRate=e.baudRate??9600,e.name===void 0&&(this.name="Serial.Device"),this.rxBuffer.separator=t}async writeInternal(e){if(this.tx===void 0)throw new Error("tx not ready");try{this.tx.write(e)}catch(t){this.warn(t)}}onClosed(){this.tx?.releaseLock(),this.abort.abort("closing port"),this.states.state="closed"}onPreConnect(){return Promise.resolve()}async onConnectAttempt(){let e={filters:[]};const t={baudRate:this.baudRate};this.config.filters&&(e={filters:[...this.config.filters]}),this.port=await navigator.serial.requestPort(e),this.port.addEventListener("disconnect",o=>{this.close()}),await this.port.open(t);const s=this.port.writable,r=new TextEncoderStream;s!==null&&(r.readable.pipeTo(s,{signal:this.abort.signal}).catch(o=>{console.log("Serial.onConnectAttempt txText pipe:"),console.log(o)}),this.tx=r.writable.getWriter());const i=this.port.readable,n=new TextDecoderStream;i!==null&&(i.pipeTo(n.writable,{signal:this.abort.signal}).catch(o=>{console.log("Serial.onConnectAttempt rxR pipe:"),console.log(o)}),n.readable.pipeTo(this.rxBuffer.writable(),{signal:this.abort.signal}).catch(o=>{console.log("Serial.onConnectAttempt rxText pipe:"),console.log(o);try{this.port?.close()}catch(c){console.log(c)}}))}}class te extends ee{evalTimeoutMs;evalReplyBluetooth=!1;constructor(e){super(e),e===void 0&&(e={}),this.evalTimeoutMs=e.evalTimeoutMs??5*1e3}async disconnect(){return super.close()}writeScript(e){this.write(`reset();
`),this.write(`${e}
`)}async eval(e,t={},s){const r=t.debug??!1;return L(e,t,this,"USB.println",r,s??(n=>{this.warn(n)}))}}const de=async(a={})=>{const e=new te(a);return await e.connect(),e},se=(a,e)=>{const t=[];return a.filters?t.push(...a.filters):a.name?(t.push({name:a.name}),console.info(`Filtering Bluetooth devices by name '${a.name}'`)):t.push({namePrefix:e}),t},fe=async(a={})=>{const e=await navigator.bluetooth.requestDevice({filters:se(a,"Puck.js"),optionalServices:[z.service]}),t=new Q(e,{name:"Espruino",...a});return await t.connect(),t},L=async(a,e={},t,s,r,i)=>{const n=e.timeoutMs??t.evalTimeoutMs,o=e.assumeExclusive??!0;if(typeof a!="string")throw new TypeError(`Param 'code' should be a string. Got: ${typeof a}`);return new Promise((c,v)=>{const u=O(5),d=l=>{try{let h=l.data.trim();h.startsWith(">{")&&h.endsWith("}")&&(h=h.slice(1));const f=JSON.parse(h);"reply"in f?f.reply===u?(x(),"result"in f&&c(f.result)):i(`Expected reply ${u}, got ${f.reply}`):i(`Expected packet, missing 'reply' field. Got: ${l.data}`)}catch(h){o?x(`Unexpected reply: ${l.data}. Error: ${w(h)}`):i(w(h))}},m=l=>{l.newState!=="connected"&&x(`State changed to '${l.newState}', aborting`)};t.addEventListener("data",d),t.addEventListener("change",m);const x=K(n,l=>{v(new Error(l))},l=>{t.removeEventListener("data",d),t.removeEventListener("change",m)}),E=`${s}(JSON.stringify({reply:"${u}", result:JSON.stringify(${a})}))
`;r&&i(E),t.write(E)})};export{fe as c,de as s};
