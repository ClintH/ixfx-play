import{t as K,_ as R,c as E,p}from"./src-BeVDUOoq-B6OoJ3p3.js";import{aX as S,ai as P,k as h}from"./src-C7XtfIer-DYL4nwfS.js";const w=(e,n)=>{const r={};for(const t of Object.entries(e)){const o=n(t[0]);r[o]=t[1]}return r},_=(e,n)=>S(Object.keys(e),Object.keys(n)),x=(e,n)=>{const r=b(e,n,!0);if(Object.entries(r.added).length>0)throw new Error("Shape of data has changed");if(Object.entries(r.removed).length>0)throw new Error("Shape of data has changed");return N(r,n)},N=(e,n)=>{const r={};if(e.isArray)return n;for(const t of Object.entries(e.changed))r[t[0]]=t[1];for(const t of Object.entries(e.added))r[t[0]]=t[1];for(const t of Object.entries(e.children)){const o=t[1];o.hasChanged&&(r[t[0]]=N(o,n[t[0]]))}return r},F=(e,n,r=P)=>{if(!Array.isArray(e))throw new Error("Param 'a' is not an array");if(!Array.isArray(n))throw new Error("Param 'b' is not an array");const t=b(e,n,!1,r);if(!t.isArray)throw new Error("Change set does not have arrays as parameters");const o=s=>{if(s.startsWith("_"))return Number.parseInt(s.slice(1));throw new Error(`Unexpected key '${s}'`)};return{...t,added:w(t.added,o),changed:w(t.changed,o),removed:t.removed.map(s=>o(s)),summary:t.summary.map(s=>[s[0],o(s[1]),s[2]])}},b=(e,n,r=!1,t=P)=>{e??={},n??={};const o=Object.entries(e),a=Object.entries(n),s=new Set,c={},V={},A={},v=[],d=Array.isArray(e),l=new Array;let y=!1;for(const i of o){const u=d?`_${i[0]}`:i[0],m=i[1],f=n[i[0]];if(s.add(i[0]),f===void 0){y=!0,r&&!d?(c[u]=f,l.push(["mutate",u,f])):(v.push(u),l.push(["del",u,m]));continue}if(typeof m=="object"){const O=b(m,f,r,t);O.hasChanged&&(y=!0),A[u]=O;const D=O.summary.map(g=>[g[0],u+"."+g[1],g[2]]);l.push(...D)}else t(m,f)||(c[u]=f,y=!0,l.push(["mutate",u,f]))}if(!r||d)for(const i of a){const u=d?`_${i[0]}`:i[0];s.has(i[0])||(V[u]=i[1],y=!0,l.push(["add",u,i[1]]))}return{changed:c,added:V,removed:v,children:A,hasChanged:y,isArray:d,summary:l}},T=e=>{const n=[];for(const r in e){const t=e[r];K(t)&&n.push([r,t])}return Object.fromEntries(n)},I=(e,n)=>{const t=Object.entries(e).map(([o,a],s)=>[o,n({value:a,field:o,index:s,path:o})]);return Object.fromEntries(t)};function k(e,n){const r=Object.entries(e);for(const t of r)if(t[0]in n){const o=n[t[0]];t[1]=typeof o=="object"?k(t[1],o):o(t[1],e)}return Object.fromEntries(r)}function J(e){if(e.length===0)return"(empty)";let n="";for(const[r,t]of e.entries())n+="  ".repeat(r),n+=t.name+" = "+JSON.stringify(t.nodeValue)+`
`;return n}const B=(e,n=0,r={})=>{E(p(e,"node"));const t=r.name??"node",o=X(e,t),a=`${"  ".repeat(n)} + name: ${o.name} value: ${JSON.stringify(o.nodeValue)}`,s=[...j(e,r)];return s.length>0?a+`
`+s.map(c=>B(c.nodeValue,n+1,{...r,name:c.name})).join(`
`):a};function*j(e,n={}){E(p(e,"node"));const r=n.filter??"none",t=o=>r==="none"?[!0,h(o)]:r==="leaves"&&h(o)?[!0,!0]:r==="branches"&&!h(o)?[!0,!1]:[!1,h(o)];if(Array.isArray(e))for(const[o,a]of e.entries()){const s=t(a);s[0]&&(yield{name:o.toString(),sourceValue:a,nodeValue:s[1]?a:void 0})}else if(typeof e=="object"){const o="entries"in e?e.entries():Object.entries(e);for(const[a,s]of o){const c=t(s);c[0]&&(yield{name:a,sourceValue:s,nodeValue:c[1]?s:void 0})}}}function*C(e,n={},r=[]){for(const t of j(e,n))yield{...t,ancestors:[...r]},yield*C(t.sourceValue,n,[...r,t.name])}function U(e,n){for(const r of j(n))if(r.name===e)return r}function W(e,n,r={}){const t=[...$(e,n,r)];if(t.length===0)throw new Error(`Could not trace path: ${e} `);return t.at(-1)}function*$(e,n,r={}){E(p(e,"path"),p(n,"node"));const t=r.separator??".",o=e.split(t),a=[];for(const s of o){const c=U(s,n);if(!c){yield{name:s,sourceValue:void 0,nodeValue:void 0,ancestors:a};return}n=c.sourceValue,yield{...c,ancestors:[...a]},a.push(s)}}function X(e,n=""){return"name"in e&&"nodeValue"in e&&"sourceValue"in e?e:"name"in e?{name:e.name,nodeValue:e,sourceValue:e}:{name:n,nodeValue:e,sourceValue:e}}function q(...e){return Object.assign({},...e)}const z=(e,n="throw")=>{const r={};for(const t of Object.entries(e)){const o=Number.parseInt(t[0]);if(Number.isNaN(o))switch(n){case"throw":throw new TypeError(`Cannot convert key '${t[0]}' to an integer`);case"ignore":continue;case"keep":{r[t[0]]=t[1];continue}default:throw new Error("Param 'onInvalidKey' should be: 'throw', 'ignore' or 'keep'.")}r[o]=t[1]}return r};var G={};R(G,{changedObjectDataFields:()=>x,cloneFromFields:()=>T,compareArrays:()=>F,compareObjectData:()=>b,compareObjectKeys:()=>_,getRecordEntryByPath:()=>W,keysToNumbers:()=>z,mapObjectByObject:()=>k,mapObjectKeys:()=>w,mapObjectShallow:()=>I,mergeObjects:()=>q,prettyPrintEntries:()=>J,recordChildren:()=>j,recordEntriesDepthFirst:()=>C,recordEntryPrettyPrint:()=>B,traceRecordEntryByPath:()=>$});export{_ as a,T as b,F as c,I as m,C as r};
